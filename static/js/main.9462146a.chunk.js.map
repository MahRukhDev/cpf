{"version":3,"sources":["config/constants/types.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/mint/actions.ts","components/Layout/Row.tsx","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/tokens.ts","components/Layout/Column.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","utils/index.ts","config/index.ts","config/constants/index.ts","state/user/actions.ts","utils/contractHelpers.ts","components/Balance.tsx","hooks/useContract.ts","state/user/hooks/index.tsx","state/types.ts","utils/multicall.ts","utils/wrappedCurrency.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/predictions/helpers.ts","state/predictions/queries.ts","state/user/hooks/helpers.ts","state/multicall/hooks.ts","config/constants/campaigns.ts","state/achievements/index.ts","state/collectibles/index.ts","state/voting/helpers.ts","state/voting/index.tsx","config/constants/lottery.ts","state/lottery/helpers.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","state/info/actions.ts","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/constants/lists.ts","state/lists/hooks.ts","utils/apr.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/QuestionHelper/index.tsx","state/lists/actions.ts","utils/prices.ts","state/multicall/actions.ts","hooks/useTheme.ts","config/constants/pools.ts","hooks/useToast.ts","utils/providers.ts","config/constants/endpoints.ts","state/farms/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/block/hooks.ts","state/wallet/hooks.ts","hooks/usePairs.ts","components/ConnectWalletButton.tsx","state/predictions/config.ts","state/transactions/hooks.tsx","state/transactions/actions.ts","components/Card/index.tsx","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","state/profile/helpers.ts","state/profile/index.tsx","utils/farmHelpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/swap/hooks.ts","hooks/useParsedQueryString.ts","hooks/useRefresh.ts","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","utils/getTokenLogoURL.ts","components/Logo/CurrencyLogo.tsx","config/constants/farms.ts","utils/isZero.ts","contexts/Localization/helpers.ts","utils/truncateHash.ts","hooks/useAuth.ts","hooks/useDebounce.ts","utils/wallet.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/nfts/collections.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","config/constants/meta.ts","components/Layout/Page.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","components/Loader/CircleLoader.tsx","utils/calls/farms.ts","utils/getRpcUrl.ts","config/constants/nfts/types.ts","utils/ENS/parseENSAddress.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","utils/web3React.ts","components/Loader/Dots.tsx","hooks/useTotalSupply.ts","state/teams/helpers.ts","config/constants/teams.ts","state/user/hooks/useUserAddedTokens.ts","config/constants/nfts/pancakeBunnies.ts","config/constants/nfts/index.ts","utils/collectibles.ts","components/Layout/Container.tsx","components/Menu/Footer.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","routerHistory.ts","config/constants/ifo.ts","hooks/useIsWindowVisible.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","state/pools/helpers.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/GasSettings.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","hooks/useBUSDPrice.ts","components/PositionCard/index.tsx","components/Loader/PageLoader.tsx","utils/getTimePeriods.ts","components/Select/Select.tsx","components/Loading.tsx","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/PageHeader/PageHeader.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/Menu/UserMenu/ProfileUserMenutItem.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","hooks/useIntersectionObserver.ts","state/pools/hooks.ts","utils/latinise.ts","components/Layout/Flex.tsx","components/SearchInput/SearchInput.tsx","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","components/Tags.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","components/TokenImage/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","hooks/useDelayedUnmount.ts","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["PoolIds","PoolCategory","LotteryStatus","AuctionStatus","initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","Field","typeInput","createAction","resetMintState","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","decimals","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","formatLocalisedCompactNumber","Intl","NumberFormat","notation","compactDisplay","maximumSignificantDigits","format","MAINNET","ChainId","TESTNET","mainnetTokens","wbnb","Token","bnb","cake","tlos","stephero","qbt","cvp","bscdefi","busd","dai","usdt","btcb","ust","eth","usdc","kalm","hotcross","belt","watch","bry","wsote","helmet","ten","ditto","blink","syrup","pha","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","ltc","ada","band","dot","eos","link","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","pots","gnt","rusd","bp","sfund","naos","testnetTokens","tokens","reduce","accum","serializeTokens","unserializedTokens","serializeToken","Column","ColumnCenter","AutoColumn","getAddress","address","getMasterChefAddress","addresses","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","config","EXPONENTIAL_AT","DECIMAL_PLACES","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","IPFS_GATEWAY","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","suffix","duration","separator","useERC20","useMemo","useCake","useMasterchef","useSousChef","useTradingCompetitionContract","useCakeVaultContract","usePredictionsContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","useAudioModeManager","dispatch","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserPoolStakedOnly","userPoolStakedOnly","stakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserPredictionAcceptedRisk","userPredictionAcceptedRisk","acceptedRisk","userAcceptedRisk","useUserPredictionChartDisclaimerShow","userPredictionChartDisclaimerShow","showDisclaimer","userShowDisclaimer","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","useGasPriceManager","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","map","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","memo","sorted","sortsBefore","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","multicall","calls","multi","itf","utils","Interface","calldata","call","toLowerCase","encodeFunctionData","name","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","Math","max","blocksRemaining","hasPoolStarted","blocksToDisplay","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","StyledListLogo","Logo","ListLogo","logoURI","alt","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","currencyId","isBNB","toUpperCase","Result","numberOrNull","valueNum","Number","isNaN","transformBetResponse","betResponse","bet","hash","block","parseFloat","position","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getFilteredBets","COLLECTED","UNCOLLECTED","ALL","getBetHistory","where","first","skip","request","GRAPH_API_PREDICTION","gql","response","getLedgerData","epochs","ledgerCalls","LEADERBOARD_RESULTS_PER_PAGE","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","index","claimable","getPredictionData","staticCalls","method","intervalSeconds","minBetAmount","paused","bufferSeconds","status","PAUSED","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","parseBigNumberObj","fetchUsersRoundsLength","contract","getUserRoundsLength","fetchUserRounds","cursor","ROUNDS_PER_PAGE","getUserRounds","GAS_PRICE","projectLink","default","parseUnits","fast","instant","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","blocksPerFetch","Infinity","useCallsData","callResults","serializedCallKeys","JSON","stringify","c","toCallKey","sort","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","debug","useSingleContractMultipleData","methodName","callInputs","getFunction","results","inputs","callData","useBlock","useMultipleContractSingleData","campaigns","title","badge","description","campaignMap","campaign","achievementSlice","createSlice","reducers","addAchievement","action","push","payload","addAchievements","setAchievements","clearAchievements","actions","fetchWalletNfts","createAsyncThunk","nftSourcePromises","collections","nftSourceType","addressObj","balanceOf","balanceOfResponse","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","tokenId","getNftByTokenId","walletNft","identifier","nftDataFetchPromises","Promise","all","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","isLoading","extraReducers","builder","addCase","pending","fulfilled","association","getProposals","ACTIVE","SNAPSHOT_API","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","getBlockNumber","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","fetch","SNAPSHOT_VOTING_API","headers","body","ok","statusText","json","isValid","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","INITIAL","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","getState","proposalVotes","voting","votingSlice","_inValid","LOADING","merge","IDLE","TICKET_LIMIT_PER_REQUEST","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","PENDING","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","roundId","hasRoundBeenClaimed","tickets","ticket","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","ticketPrice","totalTickets","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","slice","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","getGraphLotteries","GRAPH_API_LOTTERY","lotteries","getLotteriesData","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","fetchUserTicketsForMultipleRounds","idsToCheck","ticketsForMultipleRounds","ticketsForRound","userTickets","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","ticketDataForRound","roundTickets","userNodeRound","userGraphRound","getGraphLotteryUser","blankUser","totalCake","userRes","lottery","getUserLotteryData","idsForTicketsNodeCall","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","updateProtocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTokenData","addTokenKeys","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","protocol","overview","chartData","transactions","pools","byAddress","createReducer","protocolData","poolData","poolAddresses","poolAddress","tokenData","tokenAddresses","priceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","userFarmStakedOnly","ON_FINISHED","TABLE","userFarmsViewMode","userUsernameVisibility","watchlistTokens","watchlistPools","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","tokenWatchlist","newTokens","poolsWatchlist","newPools","now","addTransaction","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","rejected","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","blockReducer","farms","farmsReducer","poolsReducer","predictions","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","votingReducer","lotteryReducer","info","infoReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","estimatedGas","gasLimit","then","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","getPoolApr","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","lastDepositedTime","lastUserActionTime","userDataLoaded","cakeVault","fees","userData","fetchPoolsPublicDataAsync","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","findIndex","QuestionWrapper","QuestionHelper","text","placement","useTooltip","trigger","targetRef","tooltip","tooltipVisible","ref","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","multiplyPriceByAmount","price","significantDigits","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","useTheme","theme","StyledThemeContext","serializedTokens","CORE","harvest","sortOrder","enableEmergencyWithdraw","COMMUNITY","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","GRAPH_API_PROFILE","SNAPSHOT_BASE_URL","GRAPH_API_PREDICTION_V1","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceBusd","tokenPriceBusd","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollCoreFarmData","fastRefresh","useFarmFromPid","f","usePriceCakeBusd","cakePriceBusdAsString","types","SUCCESS","DANGER","WARNING","INFO","alertTypeMap","alertVariants","StyledToast","mediaQueries","sm","Toast","toast","onRemove","ttl","timer","removeHandler","handleRemove","clearTimeout","window","setTimeout","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","variant","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","zIndex","top","DescriptionWithTx","txHash","as","external","href","truncateHash","usePollBlockNumber","isWindowVisible","useIsWindowVisible","setInterval","setBlock","clearInterval","useInitialBlock","initialBlock","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","REWARD_RATE","ROUND_BUFFER","PAST_ROUND_COUNT","FUTURE_ROUND_COUNT","LEADERBOARD_MIN_ROUNDS_PLAYED","useAllTransactions","isTransactionRecent","allTransactions","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","isActive","points","profileContract","getUsername","username","getProfileAvatar","hasRegistered","getUserProfile","nft","getProfile","getTeam","team","Cookies","avatar","images","domain","secure","expires","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","fetchProfile","isArchivedPid","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","bnbBusdFarm","farmsWithPrices","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onUserInput","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","to","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","useLocation","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","RefreshContext","slow","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","NOT_FETCHED","FAILED","fetchStatus","balanceState","setBalanceState","prev","fetchBalance","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useBurnedBalance","setBalance","useGetBnbBalance","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","refresh","getTokenLogoURL","StyledLogo","uriLocations","isZero","hexNumberString","getItem","startLength","endLength","substring","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","useDebounce","delay","debouncedValue","setDebouncedValue","handler","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","CollectionKey","PANCAKE","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","fontSize","bold","small","textAlign","TransactionSubmittedContent","onDismiss","currencyToAdd","strokeWidth","isMetaMask","mt","asset","ml","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","justifyContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","useProfile","hasProfile","useGetProfileAvatar","DEFAULT_META","StyledPage","Container","lg","PageMeta","pathname","cakePriceUsd","useCakeBusdPrice","cakePriceUsdDisplay","pageMeta","startsWith","getCustomMeta","pageTitle","join","property","Page","TransactionState","primary","IconWrapper","failure","Transaction","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","mb","scale","Transactions","useModal","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","mr","Link","show","GlobalSettings","BodyWrapper","AppBody","blockSlice","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeLinecap","strokeLinejoin","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getNodeUrl","sample","parseENSAddress","ensAddress","ensPath","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","StyledInput","input","textSubtle","inputRegex","Input","React","placeholder","onChange","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","className","val","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","Dots","span","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","getTeams","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","md","ipfs","textColor","serializedTokensMap","Nfts","video","webm","mp4","blur","nfts","pancakeBunnies","getTokenUrl","tokenUri","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","tokenURI","pancake","px","maxWidth","BubbleWrapper","Footer","flexGrow","StyledNav","nav","Nav","location","activeIndex","gradients","bubblegum","xs","SubNav","setStateLastUpdated","previousLastUpdated","usePreviousValue","history","createBrowserHistory","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","VISIBILITY_STATE_SUPPORTED","document","visibilityState","isVisible","setIsVisible","handleVisibilityChange","addEventListener","removeEventListener","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","transformUserData","transformPool","quoteTokenAddress","toLocaleLowerCase","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","useIsBrowserTabActive","interval","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","outline","startIcon","checked","userSelect","disabled","maxAmountSpend","greaterThan","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","e","isWarning","isSuccess","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","onBack","prompt","GasSettings","setGasPrice","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","setSingleHopOnly","overflowY","pb","textTransform","borderTop","TransactionSettings","onPresentSettingsModal","height","ens","resolvedContentHash","useENSContentHash","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","lastOraclePrice","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","page","userRoundsLength","emptyResult","maxPages","lte","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","predictionsSlice","setLeaderboardFilter","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","newestRound","maxBy","futureRound","futureRounds","BUSD_MAINNET","WBNB","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","busdPairState","busdPair","busdEthPairState","busdEthPair","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","ethBusdPrice","currencyEthPrice","busdPrice","useBNBBusdPrice","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","floor","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","onOptionChange","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","toggling","stopPropagation","handleClickOutside","option","selectedIndex","Loading","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","Outer","Inner","PageHeader","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","GlobalStyle","createGlobalStyle","icon","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","cakeBalance","cakeFetchStatus","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","spin","TransactionRow","WalletTransactions","sortedTransactions","minHeight","EditingCurrency","CalculatorMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","Dot","ProfileUserMenuItem","handleClick","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","globalMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","IntersectionObserver","rootMargin","threshold","observe","disconnect","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","Latinise","latin_map","τ","Τ","latinise","FlexLayout","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","BulletList","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","tooltipOffset","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","expanded","gridTemplateColumns","gridRowGap","compoundTimes","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","useReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","radii","RoiCardInner","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","RoiCard","earningTokenSymbol","calculatorState","onEnterEditing","currentTarget","ArrowContainer","AnimatedArrow","setKey","prevKey","prevId","StyledModal","Modal","ScrollableContainer","FullWidthButtonMenu","RoiCalculatorModal","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","currencyValue","innerRef","switchEditingUnits","onFocus","toLocaleUpperCase","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","StyledCard","ManualPoolTag","CompoundingPoolTag","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","endIcon","StyledLink","NotEnoughTokensModal","cardHeader","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseCell","CellContent","StyledCell","NameCell","isMobile","useMatchBreakpoints","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isXs","isSm","isMd","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLg","isXl","isXxl","isTablet","isDesktop","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","useFetchUserPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","NaN","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","estimatedText","transactionRevertText","truncatedRecipient","recipientSentToText","postSentToText","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmWord","word","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","entries","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","NotFound","TradingCompetition","Predictions","PredictionsLeaderboard","Liquidity","PoolFinder","RemoveLiquidity","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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,6CACA,GACA,MACA,oBACA,2BAEFkB,IAAK,IAAIb,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFmB,KAAM,IAAId,IACRL,EACA,6CACA,GACA,OACA,uBACA,8BAEFoB,KAAM,IAAIf,IACRL,EACA,6CACA,GACA,OACA,eACA,sBAEFqB,SAAU,IAAIhB,IACZL,EACA,6CACA,GACA,WACA,iBACA,6BAEFsB,KAAM,IAAIjB,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFuB,MAAO,IAAIlB,IACTL,EACA,6CACA,GACA,QACA,mBACA,2BAEFwB,IAAK,IAAInB,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEFyB,MAAO,IAAIpB,IACTL,EACA,6CACA,GACA,QACA,gBACA,4BAEF0B,OAAQ,IAAIrB,IACVL,EACA,6CACA,GACA,SACA,eACA,8BAEF2B,IAAK,IAAItB,IACPL,EACA,6CACA,GACA,MACA,cACA,2BAEF4B,MAAO,IAAIvB,IACTL,EACA,6CACA,EACA,QACA,cACA,wBAEF6B,MAAO,IAAIxB,IACTL,EACA,6CACA,EACA,QACA,cACA,0BAEF8B,MAAO,IAAIzB,IACTL,EACA,6CACA,GACA,QACA,iBACA,gCAEF+B,IAAK,IAAI1B,IACPL,EACA,6CACA,GACA,MACA,cACA,yBAEFgC,SAAU,IAAI3B,IACZL,EACA,6CACA,GACA,WACA,kBACA,yBAEFiC,KAAM,IAAI5B,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFkC,KAAM,IAAI7B,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFmC,IAAK,IAAI9B,IACPL,EACA,6CACA,GACA,MACA,0BACA,mBAEFoC,KAAM,IAAI/B,IACRL,EACA,6CACA,GACA,OACA,oBACA,oCAEFqC,KAAM,IAAIhC,IACRL,EACA,6CACA,GACA,OACA,aACA,+BAEFsC,MAAO,IAAIjC,IACTL,EACA,6CACA,GACA,QACA,qBACA,gCAEFuC,GAAI,IAAIlC,IACNL,EACA,6CACA,GACA,KACA,2BACA,+BAEFwC,IAAK,IAAInC,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEFyC,MAAO,IAAIpC,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEF0C,MAAO,IAAIrC,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEF2C,QAAS,IAAItC,IACXL,EACA,6CACA,GACA,MACA,oBACA,4BAEF4C,KAAM,IAAIvC,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjG6C,IAAK,IAAIxC,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEF8C,IAAK,IAAIzC,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEF+C,OAAQ,IAAI1C,IACVL,EACA,6CACA,GACA,SACA,eACA,uBAEFgD,OAAQ,IAAI3C,IACVL,EACA,6CACA,GACA,SACA,uBACA,iCAEFiD,KAAM,IAAI5C,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFkD,IAAK,IAAI7C,IAAML,EAAS,6CAA8C,GAAI,MAAO,aAAc,qBAC/FmD,KAAM,IAAI9C,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFoD,IAAK,IAAI/C,IACPL,EACA,6CACA,GACA,MACA,kBACA,6BAEFqD,MAAO,IAAIhD,IACTL,EACA,6CACA,GACA,QACA,qBACA,iCAEFsD,MAAO,IAAIjD,IACTL,EACA,6CACA,EACA,QACA,0BACA,oCAEFuD,IAAK,IAAIlD,IACPL,EACA,6CACA,GACA,MACA,gBACA,6BAEFwD,IAAK,IAAInD,IACPL,EACA,6CACA,GACA,MACA,mBACA,kCAEFyD,KAAM,IAAIpD,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF0D,KAAM,IAAIrD,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEF2D,IAAK,IAAItD,IACPL,EACA,6CACA,GACA,MACA,iBACA,qBAEF4D,KAAM,IAAIvD,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEF6D,IAAK,IAAIxD,IACPL,EACA,6CACA,GACA,MACA,uBACA,qBAEF8D,IAAK,IAAIzD,IACPL,EACA,6CACA,EACA,MACA,oBACA,gCAEF+D,MAAO,IAAI1D,IACTL,EACA,6CACA,EACA,QACA,2BACA,sCAEFgE,KAAM,IAAI3D,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEFiE,KAAM,IAAI5D,IACRL,EACA,6CACA,GACA,OACA,kCACA,qBAEFkE,IAAK,IAAI7D,IACPL,EACA,6CACA,GACA,MACA,kBACA,8BAEFmE,MAAO,IAAI9D,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEFoE,KAAM,IAAI/D,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFqE,QAAS,IAAIhE,IACXL,EACA,6CACA,GACA,UACA,wBACA,4BAEFsE,IAAK,IAAIjE,IACPL,EACA,6CACA,GACA,MACA,iBACA,wBAEFuE,KAAM,IAAIlE,IACRL,EACA,6CACA,GACA,OACA,aACA,0BAEFwE,IAAK,IAAInE,IACPL,EACA,6CACA,GACA,MACA,YACA,0BAEFyE,IAAK,IAAIpE,IACPL,EACA,6CACA,GACA,MACA,gBACA,2BAEF0E,KAAM,IAAIrE,IACRL,EACA,6CACA,GACA,OACA,uBACA,2BAEF2E,IAAK,IAAItE,IACPL,EACA,6CACA,GACA,MACA,iBACA,6BAEF4E,KAAM,IAAIvE,IACRL,EACA,6CACA,EACA,OACA,eACA,2BAEF6E,IAAK,IAAIxE,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEF8E,KAAM,IAAIzE,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEF+E,MAAO,IAAI1E,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFgF,MAAO,IAAI3E,IACTL,EACA,6CACA,GACA,QACA,4BACA,uBAEFiF,KAAM,IAAI5E,IACRL,EACA,6CACA,GACA,OACA,aACA,sBAEFkF,MAAO,IAAI7E,IACTL,EACA,6CACA,GACA,QACA,sBACA,6BAEFmF,IAAK,IAAI9E,IACPL,EACA,6CACA,EACA,MACA,gBACA,0BAEFoF,IAAK,IAAI/E,IACPL,EACA,6CACA,EACA,MACA,yBACA,0BAEFqF,GAAI,IAAIhF,IACNL,EACA,6CACA,EACA,KACA,gBACA,0BAEFsF,KAAM,IAAIjF,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFuF,IAAK,IAAIlF,IACPL,EACA,6CACA,EACA,MACA,iBACA,0BAEFwF,IAAK,IAAInF,IACPL,EACA,6CACA,EACA,MACA,4BACA,0BAEFyF,IAAK,IAAIpF,IACPL,EACA,6CACA,GACA,MACA,iBACA,8CAEF0F,KAAM,IAAIrF,IACRL,EACA,6CACA,GACA,OACA,aACA,6BAEF2F,IAAK,IAAItF,IACPL,EACA,6CACA,GACA,MACA,qBACA,4BAEF4F,KAAM,IAAIvF,IACRL,EACA,6CACA,EACA,OACA,aACA,wBAEF6F,QAAS,IAAIxF,IACXL,EACA,6CACA,GACA,UACA,eACA,sBAEF8F,KAAM,IAAIzF,IACRL,EACA,6CACA,GACA,OACA,gBACA,4BAEF+F,IAAK,IAAI1F,IACPL,EACA,6CACA,GACA,MACA,oBACA,4BAEFgG,IAAK,IAAI3F,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFiG,IAAK,IAAI5F,IACPL,EACA,6CACA,EACA,MACA,eACA,kCAEFkG,IAAK,IAAI7F,IACPL,EACA,6CACA,GACA,MACA,2BACA,kCAEFmG,IAAK,IAAI9F,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGoG,MAAO,IAAI/F,IACTL,EACA,6CACA,GACA,QACA,sBACA,4BAEFqG,IAAK,IAAIhG,IAAML,EAAS,6CAA8C,GAAI,MAAO,cAAe,qBAChGsG,MAAO,IAAIjG,IACTL,EACA,6CACA,GACA,QACA,yBACA,sBAEFuG,KAAM,IAAIlG,IACRL,EACA,6CACA,GACA,OACA,yBACA,6BAEFwG,KAAM,IAAInG,IACRL,EACA,6CACA,GACA,OACA,sBACA,0BAEFyG,KAAM,IAAIpG,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEF0G,KAAM,IAAIrG,IACRL,EACA,6CACA,GACA,OACA,qBACA,8CAEF2G,MAAO,IAAItG,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF4G,OAAQ,IAAIvG,IACVL,EACA,6CACA,GACA,SACA,6BACA,2BAEF6G,MAAO,IAAIxG,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF8G,MAAO,IAAIzG,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEF+G,IAAK,IAAI1G,IACPL,EACA,6CACA,GACA,MACA,6BACA,yBAEFgH,IAAK,IAAI3G,IACPL,EACA,6CACA,GACA,MACA,6BACA,4BAEFiH,KAAM,IAAI5G,IACRL,EACA,6CACA,GACA,OACA,kCACA,6BAEFkH,IAAK,IAAI7G,IACPL,EACA,6CACA,GACA,MACA,6BACA,6BAEFmH,IAAK,IAAI9G,IACPL,EACA,6CACA,GACA,MACA,wBACA,mBAEFoH,KAAM,IAAI/G,IACRL,EACA,6CACA,GACA,OACA,8BACA,uBAEFqH,IAAK,IAAIhH,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFsH,KAAM,IAAIjH,IACRL,EACA,6CACA,GACA,OACA,2BACA,2BAEFuH,KAAM,IAAIlH,IACRL,EACA,6CACA,GACA,OACA,iCACA,wBAEFwH,IAAK,IAAInH,IACPL,EACA,6CACA,GACA,MACA,0BACA,0BAEFyH,IAAK,IAAIpH,IACPL,EACA,6CACA,GACA,MACA,iCACA,qBAEF0H,IAAK,IAAIrH,IACPL,EACA,6CACA,GACA,MACA,kCACA,0BAEF2H,IAAK,IAAItH,IACPL,EACA,6CACA,GACA,MACA,4BACA,wBAEF4H,IAAK,IAAIvH,IACPL,EACA,6CACA,GACA,MACA,6BACA,wBAEF6H,KAAM,IAAIxH,IACRL,EACA,6CACA,GACA,OACA,mBACA,+BAEF8H,OAAQ,IAAIzH,IACVL,EACA,6CACA,GACA,SACA,mBACA,2BAEF+H,MAAO,IAAI1H,IACTL,EACA,6CACA,GACA,QACA,yBACA,2BAEFgI,QAAS,IAAI3H,IACXL,EACA,6CACA,GACA,UACA,2BACA,2BAEFiI,MAAO,IAAI5H,IACTL,EACA,6CACA,GACA,QACA,iBACA,yBAEFkI,IAAK,IAAI7H,IACPL,EACA,6CACA,GACA,MACA,iBACA,uBAEFmI,IAAK,IAAI9H,IACPL,EACA,6CACA,GACA,MACA,wBACA,2BAEFoI,KAAM,IAAI/H,IACRL,EACA,6CACA,GACA,OACA,oBACA,uBAEFqI,IAAK,IAAIhI,IACPL,EACA,6CACA,GACA,MACA,oBACA,2BAEFsI,KAAM,IAAIjI,IACRL,EACA,6CACA,GACA,OACA,mBACA,kCAEFuI,IAAK,IAAIlI,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEFwI,KAAM,IAAInI,IACRL,EACA,6CACA,EACA,OACA,qBACA,yBAEFyI,KAAM,IAAIpI,IACRL,EACA,6CACA,EACA,OACA,yBACA,6BAEF0I,IAAK,IAAIrI,IACPL,EACA,6CACA,GACA,MACA,gBACA,gCAEF2I,IAAK,IAAItI,IACPL,EACA,6CACA,GACA,MACA,sBACA,6BAEF4I,KAAM,IAAIvI,IACRL,EACA,6CACA,GACA,OACA,qBACA,iCAEF6I,IAAK,IAAIxI,IACPL,EACA,6CACA,GACA,MACA,sBACA,qBAEF8I,KAAM,IAAIzI,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEF+I,KAAM,IAAI1I,IAAML,EAAS,6CAA8C,GAAI,OAAQ,aAAc,oBACjGgJ,IAAK,IAAI3I,IAAML,EAAS,6CAA8C,EAAG,MAAO,YAAa,oBAC7FiJ,KAAM,IAAI5I,IACRL,EACA,6CACA,GACA,OACA,iBACA,wBAEFkJ,OAAQ,IAAI7I,IACVL,EACA,6CACA,GACA,SACA,eACA,+BAEFmJ,IAAK,IAAI9I,IACPL,EACA,6CACA,GACA,MACA,mBACA,+BAEFoJ,KAAM,IAAI/I,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFqJ,KAAM,IAAIhJ,IACRL,EACA,6CACA,GACA,OACA,kBACA,yBAEFsJ,IAAK,IAAIjJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,6BAEFuJ,IAAK,IAAIlJ,IACPL,EACA,6CACA,GACA,MACA,wBACA,wBAEFwJ,IAAK,IAAInJ,IACPL,EACA,6CACA,EACA,MACA,6BACA,2BAEFyJ,KAAM,IAAIpJ,IACRL,EACA,6CACA,GACA,OACA,SACA,4BAEF0J,KAAM,IAAIrJ,IACRL,EACA,6CACA,GACA,OACA,YACA,4BAEF2J,IAAK,IAAItJ,IACPL,EACA,6CACA,GACA,MACA,yBACA,gCAEF4J,MAAO,IAAIvJ,IACTL,EACA,6CACA,GACA,QACA,iBACA,+BAEF6J,IAAK,IAAIxJ,IACPL,EACA,6CACA,GACA,MACA,oBACA,8BAEF8J,IAAK,IAAIzJ,IACPL,EACA,6CACA,GACA,MACA,YACA,oCAEF+J,MAAO,IAAI1J,IACTL,EACA,6CACA,GACA,QACA,cACA,0BAEFgK,IAAK,IAAI3J,IACPL,EACA,6CACA,GACA,MACA,gBACA,4BAEFiK,YAAM,IAAI5J,IACRL,EACA,6CACA,EACA,YACA,sBACA,8BAEFkK,OAAQ,IAAI7J,IACVL,EACA,6CACA,GACA,SACA,cACA,kCAEFmK,IAAK,IAAI9J,IACPL,EACA,6CACA,GACA,MACA,iBACA,yBAEFoK,IAAK,IAAI/J,IACPL,EACA,6CACA,GACA,MACA,qBACA,yBAEFqK,IAAK,IAAIhK,IACPL,EACA,6CACA,GACA,MACA,+BACA,+BAEFsK,IAAK,IAAIjK,IACPL,EACA,6CACA,GACA,MACA,aACA,yBAEFuK,IAAK,IAAIlK,IACPL,EACA,6CACA,GACA,MACA,YACA,yBAEFwK,MAAO,IAAInK,IACTL,EACA,6CACA,GACA,QACA,4BACA,2BAEFyK,KAAM,IAAIpK,IACRL,EACA,6CACA,GACA,OACA,aACA,2BAEF0K,IAAK,IAAIrK,IACPL,EACA,6CACA,GACA,MACA,wBACA,0BAEF2K,IAAK,IAAItK,IACPL,EACA,6CACA,GACA,MACA,gCACA,0BAEF4K,KAAM,IAAIvK,IACRL,EACA,6CACA,GACA,OACA,aACA,uBAEF6K,IAAK,IAAIxK,IACPL,EACA,6CACA,EACA,MACA,mBACA,wBAEF8K,KAAM,IAAIzK,IACRL,EACA,6CACA,EACA,OACA,uBACA,yBAEF+K,KAAM,IAAI1K,IACRL,EACA,6CACA,GACA,OACA,kBACA,0BAEFgL,IAAK,IAAI3K,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFiL,KAAM,IAAI5K,IACRL,EACA,6CACA,GACA,OACA,iBACA,yBAEFkL,aAAO,IAAI7K,IACTL,EACA,6CACA,EACA,aACA,iBACA,8BAEFmL,IAAK,IAAI9K,IACPL,EACA,6CACA,GACA,MACA,eACA,2BAEFoL,KAAM,IAAI/K,IACRL,EACA,6CACA,GACA,OACA,eACA,uBAEFqL,MAAO,IAAIhL,IACTL,EACA,6CACA,EACA,QACA,qBACA,2BAEFsL,KAAM,IAAIjL,IACRL,EACA,6CACA,GACA,OACA,aACA,8BAEFuL,KAAM,IAAIlL,IACRL,EACA,6CACA,GACA,OACA,aACA,yBAEFwL,IAAK,IAAInL,IAAML,EAAS,6CAA8C,GAAI,MAAO,YAAa,wBAC9FyL,IAAK,IAAIpL,IACPL,EACA,6CACA,EACA,MACA,eACA,wBAEF0L,KAAM,IAAIrL,IACRL,EACA,6CACA,GACA,OACA,aACA,gCAEF2L,KAAM,IAAItL,IACRL,EACA,6CACA,GACA,OACA,gBACA,8BAEF4L,IAAK,IAAIvL,IACPL,EACA,6CACA,GACA,MACA,kBACA,0BAEF6L,OAAQ,IAAIxL,IACVL,EACA,6CACA,GACA,SACA,cACA,0BAEF8L,MAAO,IAAIzL,IACTL,EACA,6CACA,GACA,QACA,wBACA,uBAEF+L,GAAI,IAAI1L,IACNL,EACA,6CACA,GACA,KACA,gBACA,2BAEFgM,IAAK,IAAI3L,IACPL,EACA,6CACA,GACA,MACA,qBACA,qBAEFiM,KAAM,IAAI5L,IACRL,EACA,6CACA,GACA,OACA,4BACA,4BAEFkM,KAAM,IAAI7L,IACRL,EACA,6CACA,GACA,OACA,qBACA,yBAEFmM,IAAK,IAAI9L,IACPL,EACA,6CACA,GACA,MACA,gBACA,uBAEFoM,IAAK,IAAI/L,IACPL,EACA,6CACA,GACA,MACA,mBACA,0BAEFqM,KAAM,IAAIhM,IACRL,EACA,6CACA,GACA,OACA,oBACA,mCAEFsM,GAAI,IAAIjM,IAAML,EAAS,6CAA8C,GAAI,KAAM,WAAY,wBAC3FuM,IAAK,IAAIlM,IACPL,EACA,6CACA,GACA,MACA,iBACA,4BAEFwM,KAAM,IAAInM,IACRL,EACA,6CACA,GACA,OACA,cACA,2BAEFyM,OAAQ,IAAIpM,IACVL,EACA,6CACA,GACA,SACA,kBACA,8BAEF0M,MAAO,IAAIrM,IACTL,EACA,6CACA,GACA,QACA,kBACA,yBAEF2M,KAAM,IAAItM,IACRL,EACA,6CACA,EACA,OACA,aACA,+BAEF4M,GAAI,IAAIvM,IACNL,EACA,6CACA,GACA,KACA,gBACA,uBAEF6M,IAAK,IAAIxM,IAAML,EAAS,6CAA8C,EAAG,MAAO,eAAgB,sBAChG8M,IAAK,IAAIzM,IACPL,EACA,6CACA,GACA,MACA,eACA,0BAEF+M,IAAK,IAAI1M,IACPL,EACA,6CACA,GACA,MACA,yBACA,wBAEFgN,IAAK,IAAI3M,IACPL,EACA,6CACA,GACA,MACA,wBACA,4BAEFiN,SAAU,IAAI5M,IACZL,EACA,6CACA,EACA,WACA,iBACA,yBAEFkN,IAAK,IAAI7M,IACPL,EACA,6CACA,GACA,MACA,qCACA,6BAEFmN,IAAK,IAAI9M,IACPL,EACA,6CACA,GACA,MACA,eACA,uBAEFoN,KAAM,IAAI/M,IACRL,EACA,6CACA,GACA,OACA,gBACA,wBAEFqN,IAAK,IAAIhN,IACPL,EACA,6CACA,GACA,MACA,mBACA,oCAEFsN,KAAM,IAAIjN,IACRL,EACA,6CACA,GACA,OACA,aACA,iCAEFuN,GAAI,IAAIlN,IACNL,EACA,6CACA,GACA,KACA,kBACA,8BAEFwN,MAAO,IAAInN,IACTL,EACA,6CACA,GACA,QACA,qBACA,yBAEFyN,KAAM,IAAIpN,IACRL,EACA,6CACA,GACA,OACA,YACA,0BAIS0N,EAAgB,CAC3BtN,KAAM,IAAIC,IACRH,EACA,6CACA,GACA,OACA,cACA,4BAEFK,KAAM,IAAIF,IACRH,EACA,6CACA,GACA,OACA,oBACA,gCAEFW,KAAM,IAAIR,IACRH,EACA,6CACA,GACA,OACA,cACA,+BAEF4B,MAAO,IAAIzB,IACTH,EACA,6CACA,GACA,QACA,iBACA,gCAEF2H,KAAM,IAAIxH,IACRH,EACA,6CACA,GACA,OACA,mBACA,gCAIEyN,EAAS,WAIb,OAAInS,SAHYC,KAGM,MAAQwE,IAAQC,QAC7BpG,OAAOC,KAAKoG,GAAeyN,QAAO,SAACC,EAAOpU,GAC/C,OAAO,2BAAKoU,GAAZ,kBAAoBpU,EAAMiU,EAAcjU,IAAQ0G,EAAc1G,OAC7D,IAGE0G,GAGI2N,EAAkB,WAC7B,IAAMC,EAAqBJ,IAK3B,OAJyB7T,OAAOC,KAAKgU,GAAoBH,QAAO,SAACC,EAAOpU,GACtE,OAAO,2BAAKoU,GAAZ,kBAAoBpU,EAAMuU,YAAeD,EAAmBtU,QAC3D,KAKUkU,S,2HCrqDTM,EAASlS,IAAOU,IAAV,yGAKCyR,EAAenS,YAAOkS,EAAPlS,CAAH,oEAKZoS,EAAapS,IAAOU,IAAV,oHAML,gBAAGC,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGhC8R,O,8qBCtBA,EACD,CACV,GAAI,GACJ,GAAI,8CAHO,EASF,CACT,GAAI,GACJ,GAAI,IAXO,EAaF,CACT,GAAI,6CACJ,GAAI,IAfO,EAiBG,CACd,GAAI,GACJ,GAAI,IAnBO,EAqBG,CACd,GAAI,GACJ,GAAI,IAvBO,EAyBC,CACZ,GAAI,6CACJ,GAAI,IA3BO,EA6BA,CACX,GAAI,GACJ,GAAI,IA/BO,EAiCG,CACd,GAAI,GACJ,GAAI,IAnCO,EAqCC,CACZ,GAAI,GACJ,GAAI,IAvCO,EAyCO,CAClB,GAAI,GACJ,GAAI,IA3CO,EA6CF,CACT,GAAI,GACJ,GAAI,IA/CO,EAiDF,CACT,GAAI,GACJ,GAAI,IAnDO,EAqDA,CACX,GAAI,6CACJ,GAAI,IAvDO,EAyDI,CACf,GAAI,6CACJ,GAAI,IA3DO,EA6DU,CACrB,GAAI,GACJ,GAAI,IA/DO,EAiEW,CACtB,GAAI,6CACJ,GAAI,IAnEO,EAqEQ,CACnB,GAAI,GACJ,GAAI,IAvEO,EAyEA,CACX,GAAI,GACJ,GAAI,ICvEKG,EAAa,SAACC,GAEzB,OAAOA,EADS5S,IACU4S,EADV5S,IAC6B4S,EAAQpO,IAAQD,UAGlDsO,EAAuB,WAClC,OAAOF,EAAWG,IAEPC,EAAsB,WACjC,OAAOJ,EAAWG,IAEPE,EAAsB,WACjC,OAAOL,EAAWG,IAEPG,EAA2B,WACtC,OAAON,EAAWG,IAEPI,EAA2B,WACtC,OAAOP,EAAWG,IAEPK,EAAyB,WACpC,OAAOR,EAAWG,IAEPM,EAAwB,WACnC,OAAOT,EAAWG,IAEPO,EAA2B,WACtC,OAAOV,EAAWG,IAEPQ,EAAyB,WACpC,OAAOX,EAAWG,IAEPS,EAA+B,WAC1C,OAAOZ,EAAWG,IAEPU,EAAsB,WACjC,OAAOb,EAAWG,IAEPW,EAAsB,WACjC,OAAOd,EAAWG,IAEPY,EAAwB,WACnC,OAAOf,EAAWG,IAEPa,EAA4B,WACvC,OAAOhB,EAAWG,IAEPc,EAAkC,WAC7C,OAAOjB,EAAWG,IAEPe,EAAmC,WAC9C,OAAOlB,EAAWG,IAEPgB,EAAgC,WAC3C,OAAOnB,EAAWG,IAEPiB,EAAwB,WACnC,OAAOpB,EAAWG,K,6BC7DpB,wXAYO,SAASkB,EAAUlV,GACxB,IACE,OAAO6T,qBAAW7T,GAClB,SACA,OAAO,GAIJ,SAASmV,EACdhW,EACAiW,GAES,IADT3U,EACQ,uDADWiF,IAAQD,QAE3B,OAAQ2P,GACN,IAAK,cACH,MAAM,GAAN,OAAUC,IAAmB5U,GAA7B,eAA4CtB,GAE9C,IAAK,QACH,MAAM,GAAN,OAAUkW,IAAmB5U,GAA7B,kBAA+CtB,GAEjD,IAAK,QACH,MAAM,GAAN,OAAUkW,IAAmB5U,GAA7B,kBAA+CtB,GAEjD,IAAK,YACH,MAAM,GAAN,OAAUkW,IAAmB5U,GAA7B,4BAAyDtB,GAE3D,QACE,MAAM,GAAN,OAAUkW,IAAmB5U,GAA7B,oBAAiDtB,IAMhD,SAASmW,EAAmBtV,GACjC,OAAOA,EAAMuV,IAAI7S,IAAUgC,KAAK,KAAO8Q,IAAI9S,IAAUgC,KAAK,OAAQxC,IAAIQ,IAAUgC,KAAK,MAIhF,SAAS+Q,EAAqBC,GACnC,OAAO,IAAIC,IAAQC,IAAKC,OAAOH,GAAME,IAAKC,OAAO,MAG5C,SAASC,EAAwB9V,EAAuB+V,GAC7D,GAAIA,EAAW,GAAKA,EAAW,IAC7B,MAAM1V,MAAM,8BAAD,OAA+B0V,IAE5C,MAAO,CACLH,IAAKI,OAAOJ,IAAKK,SAASjW,EAAMkW,IAAKN,IAAKC,OAAO,IAAQE,IAAYH,IAAKC,OAAO,MACjFD,IAAKI,OAAOJ,IAAKK,SAASjW,EAAMkW,IAAKN,IAAKC,OAAO,IAAQE,IAAYH,IAAKC,OAAO,OAe9E,SAASM,EAAYrC,EAAiBsC,EAAU5V,EAAuB6V,GAC5E,IAAKnB,EAAUpB,IAAYA,IAAYwC,IACrC,MAAMjW,MAAM,gCAAD,OAAiCyT,EAAjC,OAGb,OAAO,IAAIyC,IAASzC,EAASsC,EAVxB,SAA6B5V,EAAuB6V,GACzD,OAAOA,EANF,SAAmB7V,EAAuB6V,GAC/C,OAAO7V,EAAQgW,UAAUH,GAASI,mBAKjBD,CAAUhW,EAAS6V,GAAW7V,EASbkW,CAAoBlW,EAAS6V,IAI1D,SAASM,EAAkBC,EAAWpW,EAAuB6V,GAClE,OAAOF,EAAYU,IAAgBC,IAAuBtW,EAAS6V,GAG9D,SAASU,EAAaC,GAC3B,OAAOA,EAAOnX,QAAQ,sBAAuB,QAGxC,SAASoX,EAAcC,EAAgCC,GAA+B,IAAD,EAC1F,OAAIA,IAAaC,KACVC,QAAQF,aAAoBrR,MAApB,UAA6BoR,EAAcC,EAAS1W,gBAApD,aAA6B,EAAkC0W,EAASrD,a,mVC1FzFpR,IAAU4U,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGX,IAEMnC,GAAkB,mBAC5B3P,IAAQD,QAAU,uBADU,cAE5BC,IAAQC,QAAU,+BAFU,GAYlB8R,EAAiB,IAAI/U,IAAU,IAC/BgV,EAAkB,IAAIhV,IAAW,SACjCiV,EAAgBF,EAAerU,MAAMsU,GACrCE,EAAW,8BAEXC,GADsB,UAAMD,EAAN,QACFvC,EAAmB3P,IAAQD,UAC/CqS,EAAwBlV,IAAQS,IAAI,IACpC0U,EAAoB,IAIpBC,EAAe,wB,k5BC/BfnB,EAAiB,6CAQjBoB,GAA6C,mBACvDvS,IAAQD,QAAU,CACjBG,IAAcC,KACdD,IAAcI,KACdJ,IAAcU,KACdV,IAAcY,KACdZ,IAAca,KACdb,IAAcc,IACdd,IAAce,IACdf,IAAcgB,OATwC,cAWvDlB,IAAQC,QAAU,CAACwN,IAActN,KAAMsN,IAAcnN,KAAMmN,IAAc7M,OAXlB,GAkB7C4R,EAAgF,eAC1FxS,IAAQD,QAAU,IAQR0S,EAA4E,eACtFzS,IAAQD,QAAU,IAIR2S,GAA+B,mBACzC1S,IAAQD,QAAU,CAACG,IAAcU,KAAMV,IAAcI,KAAMJ,IAAca,OADhC,cAEzCf,IAAQC,QAAU,CAACwN,IAActN,KAAMsN,IAAcnN,KAAMmN,IAAc7M,OAFhC,GAM/B+R,GAA4C,mBACtD3S,IAAQD,QAAU,CAACG,IAAcC,KAAMD,IAAcW,IAAKX,IAAcU,KAAMV,IAAcY,OADtC,cAEtDd,IAAQC,QAAU,CAACwN,IAActN,KAAMsN,IAAcnN,KAAMmN,IAAc7M,OAFnB,GAK5CgS,EAAkE,eAC5E5S,IAAQD,QAAU,CACjB,CAACG,IAAcI,KAAMJ,IAAcC,MACnC,CAACD,IAAcU,KAAMV,IAAcY,MACnC,CAACZ,IAAcW,IAAKX,IAAcY,QAOzB+R,EAA2B,GAE3BC,EAA4B,KAE5BC,EAAe7C,IAAKC,OAAO,GAG3B6C,EAAW,IAAI/C,IAAQC,IAAKC,OAAO,GAAID,IAAKC,OAAO,MACnD8C,EAAY/C,IAAKC,OAAO,KAExB+C,EAAoC,IAAIjD,IAAQC,IAAKC,OAAO,KAAM8C,GAClEE,EAAuC,IAAIlD,IAAQC,IAAKC,OAAO,KAAM8C,GACrEG,EAAqC,IAAInD,IAAQC,IAAKC,OAAO,KAAM8C,GAEnEI,EAAgD,IAAIpD,IAAQC,IAAKC,OAAO,KAAO8C,GAE/EK,EAA2C,IAAIrD,IAAQC,IAAKC,OAAO,MAAO8C,GAG1EM,EAAgBrD,IAAKsD,aAAatD,IAAKC,OAAO,IAAKD,IAAKC,OAAO,KAC/DsD,EAAmC,IAAIxD,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MAE5EuD,EAAe,IAAIzD,IAAQ,KAC3B0D,EAAsB,IAAI1D,IAAQ,KAGlC2D,EAA8B,CACzC,6CACA,6CACA,6CACA,6CACA,+C,8BChGF,ozBAQYC,EAMAC,EAdZ,S,SAQYD,K,yBAAAA,E,YAAAA,E,eAAAA,M,cAMAC,K,cAAAA,E,aAAAA,M,KAKL,IAAMC,EAAuBpY,YAA0C,6BACjEqY,EAA0BrY,YAA6C,gCACvEsY,EAA8BtY,YACzC,oCAEWuY,EAAqBvY,YAAuC,2BAC5DwY,EAAqBxY,YAAmD,2BACxEyY,EAAwBzY,YAAmD,8BAC3E0Y,EAAoB1Y,YAAiD,0BACrE2Y,EACX3Y,YAAgF,6BAErE4Y,EAAY5Y,YAAmB,kBAC/B6Y,EAAc7Y,YAAmB,oBACjC8Y,EAAc9Y,YAAmB,oBACjC+Y,EAA2B/Y,YACtC,iCAEWgZ,EAA2BhZ,YAA8C,iCACzEiZ,EAA0BjZ,YAA8C,gCACxEkZ,EAA0BlZ,YAA8C,gCACxEmZ,EAAmCnZ,YAC9C,yCAEWoZ,EAA0CpZ,YACrD,gDAEWqZ,EAA0CrZ,YACrD,gDAEWsZ,EAA+BtZ,YAC1C,qCAEWuZ,EAAiBvZ,YAAmC,uBAEpDwZ,EAAoBxZ,YAAkC,0BACtDyZ,EAAmBzZ,YAAkC,0B,6BCvDlE,goCA2DM8U,EAAc,SAAC4E,EAAUjH,EAAiBkH,GAC9C,IAAMC,EAAgB,OAAGD,QAAH,IAAGA,IAAUna,IACnC,OAAO,IAAI4D,IAAO8R,SAASzC,EAASiH,EAAKE,IAG9BC,EAAmB,SAACpH,EAAiBkH,GAChD,OAAO7E,EAAYgF,EAAUrH,EAASkH,IAE3BI,EAAoB,SAACtH,EAAiBkH,GACjD,OAAO7E,EAAYkF,EAAWvH,EAASkH,IAK5BM,EAAmB,SAACxH,EAAiBkH,GAChD,OAAO7E,EAAYoF,EAAUzH,EAASkH,IAE3BQ,EAAmB,SAAC1H,EAAiBkH,GAChD,OAAO7E,EAAYsF,EAAU3H,EAASkH,IAE3BU,EAAsB,SAACC,EAAYX,GAC9C,IAAM1D,EAASsE,IAAYC,MAAK,SAACC,GAAD,OAAUA,EAAKC,SAAWJ,KACpDZ,EAAMzD,EAAO0E,eAAiBrf,IAAasf,QAAUC,EAAcC,EACzE,OAAOhG,EAAY4E,EAAKlH,YAAWyD,EAAO8E,iBAAkBpB,IAEjDqB,EAAwB,SAACV,EAAYX,GAChD,IAAM1D,EAASsE,IAAYC,MAAK,SAACC,GAAD,OAAUA,EAAKC,SAAWJ,KAC1D,OAAOxF,EAAYmG,EAAYzI,YAAWyD,EAAO8E,iBAAkBpB,IAExDuB,EAA4B,SAACvB,GACxC,OAAO7E,EAAYqG,EAAgBjI,cAA4ByG,IAEpDyB,EAAkB,SAACzB,GAC9B,OAAO7E,EAAYuG,EAAStJ,IAAOpN,KAAK8N,QAASkH,IAEtC2B,EAAqB,SAAC3B,GACjC,OAAO7E,EAAYyG,EAAYzI,cAA4B6G,IAEhD6B,EAA2B,SAAC7B,GACvC,OAAO7E,EAAY2G,EAAmB1I,cAA4B4G,IAEvD+B,EAA0B,SAAC/B,GACtC,OAAO7E,EAAY6G,EAAiB3I,cAA0B2G,IAEnDiC,EAA0B,SAACjC,GACtC,OAAO7E,EAAY+G,EAAiB1I,cAA0BwG,IAEnDmC,EAAuB,SAACnC,GACnC,OAAO7E,EAAYiH,EAAclJ,cAAuB8G,IAE7CqC,EAAwB,SAACrC,GACpC,OAAO7E,EAAYmH,EAAYvJ,cAAwBiH,IAE5CuC,EAAyB,SAACvC,GACrC,OAAO7E,EAAYqH,EAAgBlJ,cAAyB0G,IAEjDyC,EAAgC,SAACzC,GAC5C,OAAO7E,EAAYuH,EAAuBjJ,cAAgCuG,IAE/D2C,EAAuB,SAAC3C,GACnC,OAAO7E,EAAYyH,EAAclJ,cAAuBsG,IAE7C6C,EAAuB,SAAC7C,GACnC,OAAO7E,EAAY2H,EAAcnJ,cAAuBqG,IAG7C+C,GAAyB,SAAC/C,GACrC,OAAO7E,EAAY6H,EAAgBpJ,cAAyBoG,IAGjDiD,GAA6B,SAACjD,GACzC,OAAO7E,EAAY+H,EAAoBrJ,cAA6BmG,IAEzDmD,GAAuB,SAACnD,GACnC,OAAO7E,EAAYiI,EAAcnK,cAAuB+G,IAE7CqD,GAAmC,SAACrD,GAC/C,OAAO7E,EAAYmI,EAA0BxJ,cAAmCkG,IAErEuD,GAAoC,SAACvD,GAChD,OAAO7E,EAAYqI,EAA2BzJ,cAAoCiG,IAEvEyD,GAAiC,SAACzD,GAC7C,OAAO7E,EAAYuI,EAAwB1J,cAAiCgG,IAEjE2D,GAAyB,SAAC3D,GACrC,OAAO7E,EAAYyI,EAAgB3J,cAAyB+F,K,6JCrG/C6D,IA/ByB,SAAC,GASlC,IARL7e,EAQI,EARJA,MAQI,IAPJ8e,aAOI,MAPI,OAOJ,MANJ3b,gBAMI,MANO,EAMP,MALJ4b,kBAKI,SAJJC,EAII,EAJJA,KACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACGC,EACC,iBACEC,EAAgBxe,iBAAO,GAM7B,OAJA1C,qBAAU,WACRkhB,EAAcpe,QAAUhB,IACvB,CAACA,IAGF,cAAC,KAAD,yBAAM8e,MAAOC,EAAa,eAAiBD,EAAOI,QAASA,GAAaC,GAAxE,aACE,cAAC,IAAD,CACEE,MAAOD,EAAcpe,QACrBse,IAAKtf,EACLif,OAAQA,EACRM,OAAQP,EACR7b,SAAUA,EACVqc,SAAU,EACVC,UAAU,W,8BCtClB,6kBAwDaC,EAAW,SAAC5L,GACvB,IAAQtT,EAAYF,cAAZE,QACR,OAAOmf,mBAAQ,kBAAMzE,YAAiBpH,EAAStT,EAAQgW,eAAc,CAAC1C,EAAStT,KAWpEof,EAAU,WACrB,IAAQpf,EAAYF,cAAZE,QACR,OAAOmf,mBAAQ,kBAAMlD,YAAgBjc,EAAQgW,eAAc,CAAChW,KAuBjDqf,EAAgB,WAC3B,IAAQrf,EAAYF,cAAZE,QACR,OAAOmf,mBAAQ,kBAAMtC,YAAsB7c,EAAQgW,eAAc,CAAChW,KAGvDsf,EAAc,SAACnE,GAC1B,IAAQnb,EAAYF,cAAZE,QACR,OAAOmf,mBAAQ,kBAAMjE,YAAoBC,EAAInb,EAAQgW,eAAc,CAACmF,EAAInb,KAuB7Duf,EAAgC,WAC3C,IAAQvf,EAAYF,cAAZE,QACR,OAAOmf,mBAAQ,kBAAMlC,YAA8Bjd,EAAQgW,eAAc,CAAChW,KAQ/Dwf,EAAuB,WAClC,IAAQxf,EAAYF,cAAZE,QACR,OAAOmf,mBAAQ,kBAAM9B,YAAqBrd,EAAQgW,eAAc,CAAChW,KAGtDyf,EAAyB,WACpC,IAAQzf,EAAYF,cAAZE,QACR,OAAOmf,mBAAQ,kBAAM5B,YAAuBvd,EAAQgW,eAAc,CAAChW,KA0CrE,SAAS0f,EAAYpM,EAA6BsC,GAAyD,IAA/C+J,IAA8C,yDACxG,EAA6B7f,cAArBE,EAAR,EAAQA,QAAS6V,EAAjB,EAAiBA,QAEjB,OAAOsJ,mBAAQ,WACb,IAAK7L,IAAYsC,IAAQ5V,EAAS,OAAO,KACzC,IACE,OAAO2V,YAAYrC,EAASsC,EAAK5V,EAAS2f,GAAwB9J,EAAUA,OAAU5Y,GACtF,MAAO2iB,GAEP,OADAC,QAAQD,MAAM,yBAA0BA,GACjC,QAER,CAACtM,EAASsC,EAAK5V,EAAS2f,EAAsB9J,IAG5C,SAASiK,EAAiBC,EAAuBJ,GACtD,OAAOD,EAAYK,EAAcC,EAAWL,GAGvC,SAASM,EAAgBN,GAC9B,IAAQ1f,EAAYH,cAAZG,QACR,OAAOyf,EAAYzf,EAAUigB,IAAKjgB,GAASqT,aAAUrW,EAAWkjB,EAAUR,GAGrE,SAASS,EAAwBT,GACtC,IACIrM,EADIrT,EAAYH,cAAZG,QAER,GAAIA,EAEF,OAAQA,GACN,KAAKiF,IAAQD,QACb,KAAKC,IAAQC,QACXmO,EAAU,6CAIhB,OAAOoM,EAAYpM,EAAS+M,EAASV,GAGhC,SAASW,EAAuBhN,EAA6BqM,GAClE,OAAOD,EAAYpM,EAASiN,EAAyBZ,GAGhD,SAASa,EAAwBT,EAAuBJ,GAC7D,OAAOD,EAAYK,EAAcU,IAAmBd,GAG/C,SAASe,EAAgBC,EAAsBhB,GACpD,OAAOD,EAAYiB,EAAaC,IAAmBjB,GAG9C,SAASkB,IACd,OAAOnB,EAAYjM,cAAuBqN,GAAc,K,+vBCtMnD,SAASC,IACd,IAAMC,EAAWC,cACXC,EAAYC,aAAqD,SAAC3jB,GAAD,OAAWA,EAAM4jB,KAAKF,aAEvFG,EAAqB5iB,uBAAY,WAEnCuiB,EADEE,EACOzH,cAEAC,iBAEV,CAACwH,EAAWF,IAEf,MAAO,CAACE,EAAWG,GAGd,SAASC,IACd,OAAOH,aAA0D,SAAC3jB,GAAD,OAAWA,EAAM4jB,KAAKG,kBAGlF,SAASC,IACd,IAAMR,EAAWC,cACXQ,EAAaH,IAEbI,EAAsBjjB,uBAAY,WACtCuiB,EAAS/H,YAAqB,CAAEsI,gBAAiBE,OAChD,CAACA,EAAYT,IAEhB,MAAO,CAACS,EAAYC,GAGf,SAASC,IACd,IAAMX,EAAWC,cAOjB,MAAO,CANQE,aAAkD,SAAC3jB,GAAD,OAAWA,EAAM4jB,KAAKQ,UAEnEnjB,uBAAY,WAC9BuiB,EAASa,iBACR,CAACb,KAKC,SAASc,IACd,IAAMd,EAAWC,cAajB,MAAO,CAXeE,aACpB,SAAC3jB,GAAD,OAAWA,EAAM4jB,KAAKW,qBAGCtjB,uBACvB,SAACujB,GACChB,EAAS9H,YAAwB,CAAE6I,kBAAmBC,OAExD,CAAChB,KAME,SAASiB,IACd,IAAMjB,EAAWC,cAYjB,MAAO,CAXuBE,aAAiE,SAAC3jB,GAC9F,OAAOA,EAAM4jB,KAAKc,yBAGazjB,uBAC/B,SAAC8W,GACCyL,EAAS7H,YAA4B,CAAE+I,sBAAuB3M,OAEhE,CAACyL,KA0BE,SAASmB,IACd,IAAMnB,EAAWC,cAYjB,MAAO,CAXoBE,aAA8D,SAAC3jB,GACxF,OAAOA,EAAM4jB,KAAKgB,sBAGU3jB,uBAC5B,SAAC4jB,GACCrB,EAASnH,YAAyB,CAAEuI,mBAAoBC,OAE1D,CAACrB,KAME,SAASsB,IACd,IAAMtB,EAAWC,cAYjB,MAAO,CAXmBE,aAA6D,SAAC3jB,GACtF,OAAOA,EAAM4jB,KAAKmB,qBAGS9jB,uBAC3B,SAAC+jB,GACCxB,EAASlH,YAAwB,CAAEyI,kBAAmBC,OAExD,CAACxB,KAsBE,SAASyB,IACd,IAAMzB,EAAWC,cAYjB,MAAO,CAX4BE,aAAsE,SAAC3jB,GACxG,OAAOA,EAAM4jB,KAAKsB,8BAGkBjkB,uBACpC,SAACkkB,GACC3B,EAAShH,YAAiC,CAAE4I,iBAAkBD,OAEhE,CAAC3B,KAME,SAAS6B,IACd,IAAM7B,EAAWC,cAejB,MAAO,CAdmCE,aAGxC,SAAC3jB,GACD,OAAOA,EAAM4jB,KAAK0B,qCAGyBrkB,uBAC3C,SAACskB,GACC/B,EAAS/G,YAAwC,CAAE+I,mBAAoBD,OAEzE,CAAC/B,KAME,SAASiC,IACd,IAAMjC,EAAWC,cAejB,MAAO,CAdmCE,aAGxC,SAAC3jB,GACD,OAAOA,EAAM4jB,KAAK8B,qCAGyBzkB,uBAC3C,SAAC0kB,GACCnC,EAAS9G,YAAwC,CAAEgJ,kCAAmCC,OAExF,CAACnC,KAsBE,SAASoC,IACd,IAAMpC,EAAWC,cAYjB,MAAO,CAXcE,aAAwD,SAAC3jB,GAC5E,OAAOA,EAAM4jB,KAAKiC,gBAGI5kB,uBACtB,SAAC6kB,GACCtC,EAAS5H,YAAmB,CAAEiK,aAAcC,OAE9C,CAACtC,KAME,SAASuC,IACd,IAAMvC,EAAWC,cACjB,OAAOxiB,uBACL,SAAC+kB,GACCxC,EAAS3H,YAAmB,CAAEoK,gBAAiBxQ,YAAeuQ,QAEhE,CAACxC,IAIE,SAAS0C,IACd,IAAM1C,EAAWC,cACjB,OAAOxiB,uBACL,SAACwB,EAAiBqT,GAChB0N,EAAS1H,YAAsB,CAAErZ,UAASqT,eAE5C,CAAC0N,IAIE,SAAS2C,IACd,IACMC,EAAUzC,aAAoD,SAAC3jB,GAAD,OAAWA,EAAM4jB,KAAKyC,YAC1F,MAFgBnjB,OAEGwE,IAAQD,QAAQ3F,WAAaskB,EAAUE,IAAeC,QAGpE,SAASC,IACd,IAAMhD,EAAWC,cAUjB,MAAO,CATc0C,IAEDllB,uBAClB,SAAColB,GACC7C,EAAS5G,YAAe,CAAEyJ,gBAE5B,CAAC7C,KAML,SAASiD,EAAcC,GACrB,MAAO,CACLC,OAAQlR,YAAeiR,EAAKC,QAC5BC,OAAQnR,YAAeiR,EAAKE,SAIzB,SAASC,IACd,IAAMrD,EAAWC,cAEjB,OAAOxiB,uBACL,SAACylB,GACClD,EAASzH,YAAkB,CAAE+K,eAAgBL,EAAcC,QAE7D,CAAClD,IASE,SAASuD,EAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAInf,IAAMkf,EAAOvkB,QAASykB,IAAKrR,WAAWmR,EAAQC,GAAS,GAAI,UAAW,eAM5E,SAASE,IACd,IAAQ1kB,EAAYH,cAAZG,QACF2S,EAASgS,cAGTC,EAAc1F,mBAAQ,wBAAOlf,GAAO,UAAG6X,IAAa7X,UAAhB,QAAiC,KAAK,CAACA,IAG3E6kB,EAAmC3F,mBACvC,kBACElf,EACI8kB,IAAQhmB,OAAOC,KAAK4T,IAAS,SAACmN,GAAkB,IAAD,EACvCyD,EAAQ5Q,EAAOmN,GAErB,OAEE,UAAClI,IAA6B5X,UAA9B,QAA0C,IAEvC+kB,KAAI,SAACC,GACJ,OAAIA,EAAK3R,UAAYkQ,EAAMlQ,QAClB,KAEF,CAAC2R,EAAMzB,MAEf0B,QAAO,SAACC,GAAD,OAAkC,OAANA,QAG1C,KACN,CAACvS,EAAQ3S,IAILmlB,EAAuBjE,aAAiD,qBAAGC,KAAQiE,SAEnFC,EAA8BnG,mBAAQ,WAC1C,IAAKlf,IAAYmlB,EAAsB,MAAO,GAC9C,IAAMG,EAAWH,EAAqBnlB,GACtC,OAAKslB,EAEExmB,OAAOC,KAAKumB,GAAUP,KAAI,SAACQ,GAChC,MAAO,CAACC,YAAiBF,EAASC,GAAQrB,QAASsB,YAAiBF,EAASC,GAAQpB,YAHjE,KAKrB,CAACgB,EAAsBnlB,IAEpBylB,EAAevG,mBACnB,kBAAMmG,EAAUK,OAAOb,GAAgBa,OAAOd,KAC9C,CAACC,EAAgBD,EAAaS,IAGhC,OAAOnG,mBAAQ,WAEb,IAAMyG,EAAQF,EAAa7S,QAA0C,SAACgT,EAAD,GAA6B,IAAD,mBAApBrB,EAAoB,KAAZC,EAAY,KACzFqB,EAAStB,EAAOuB,YAAYtB,GAC5B/lB,EAAMonB,EAAM,UAAMtB,EAAOlR,QAAb,YAAwBmR,EAAOnR,SAA/B,UAA8CmR,EAAOnR,QAArD,YAAgEkR,EAAOlR,SACzF,OAAIuS,EAAKnnB,KACTmnB,EAAKnnB,GAAOonB,EAAS,CAACtB,EAAQC,GAAU,CAACA,EAAQD,IAD3BqB,IAGrB,IAEH,OAAO9mB,OAAOC,KAAK4mB,GAAOZ,KAAI,SAACtmB,GAAD,OAASknB,EAAMlnB,QAC5C,CAACgnB,M,+BCpLC,IAAKM,EAMAC,EA2EAC,EA8DAC,EA8DAC,EAKAC,EAMAC,EAwCAC,EA5WZ,4M,SA4GYP,K,YAAAA,E,YAAAA,E,eAAAA,M,cAMAC,K,kBAAAA,E,YAAAA,E,gBAAAA,E,eAAAA,M,cA2EAC,K,UAAAA,E,sBAAAA,E,2BAAAA,M,cA8DAC,O,qBAAAA,I,qBAAAA,I,gBAAAA,M,cA8DAC,K,oBAAAA,E,aAAAA,M,cAKAC,K,UAAAA,E,YAAAA,E,uBAAAA,M,cAMAC,K,gBAAAA,E,kBAAAA,E,iBAAAA,M,cAwCAC,K,kBAAAA,E,YAAAA,E,kBAAAA,E,eAAAA,M,4HCxcNC,EAAS,uCAAG,WAAgBjM,EAAYkM,GAA5B,yBAAA9oB,EAAA,sEAER+oB,EAAQ/I,cACRgJ,EAAM,IAAI1iB,IAAO2iB,MAAMC,UAAUtM,GAEjCuM,EAAWL,EAAMzB,KAAI,SAAC+B,GAAD,MAAU,CAACA,EAAKzT,QAAQ0T,cAAeL,EAAIM,mBAAmBF,EAAKG,KAAMH,EAAKI,YAL3F,SAMeT,EAAMU,UAAUN,GAN/B,uBAMNO,EANM,EAMNA,WAEFC,EAAMD,EAAWrC,KAAI,SAAC+B,EAAMQ,GAAP,OAAaZ,EAAIa,qBAAqBf,EAAMc,GAAGL,KAAMH,MARlE,kBAUPO,GAVO,wCAYR,IAAIznB,MAAJ,MAZQ,0DAAH,wDAsBF4nB,EAAW,uCAAG,WACzBlN,EACAkM,GAFyB,uCAAA9oB,EAAA,6DAGzB+F,EAHyB,+BAGG,CAAEgkB,gBAAgB,GAEtCA,EAAmBhkB,EAAnBgkB,eACFhB,EAAQ/I,cACRgJ,EAAM,IAAI1iB,IAAO2iB,MAAMC,UAAUtM,GAEjCuM,EAAWL,EAAMzB,KAAI,SAAC+B,GAAD,MAAU,CAACA,EAAKzT,QAAQ0T,cAAeL,EAAIM,mBAAmBF,EAAKG,KAAMH,EAAKI,YAThF,SAUAT,EAAMiB,aAAaD,EAAgBZ,GAVnC,cAUnBO,EAVmB,OAWnBC,EAAMD,EAAWrC,KAAI,SAAC+B,EAAMQ,GAChC,kBAAuBR,EAAvB,GAAOa,EAAP,KAAejpB,EAAf,KACA,OAAOipB,EAASjB,EAAIa,qBAAqBf,EAAMc,GAAGL,KAAMvoB,GAAQ,QAbzC,kBAgBlB2oB,GAhBkB,4CAAH,wDAmBTd,O,gCCvDf,iHAEO,SAASqB,EAAgBlR,EAAgC1W,GAC9D,OAAOA,GAAW0W,IAAaC,IAAQsJ,IAAKjgB,GAAW0W,aAAoBrR,IAAQqR,OAAW1Z,EAGzF,SAAS6qB,EACdC,EACA9nB,GAEA,IAAMujB,EAAQuE,GAAkB9nB,EAAU4nB,EAAgBE,EAAepR,SAAU1W,QAAWhD,EAC9F,OAAOumB,GAASuE,EAAiB,IAAIC,IAAYxE,EAAOuE,EAAerS,UAAOzY,EAGzE,SAASgrB,EAAezE,GAC7B,OAAIA,EAAM0E,OAAOhI,IAAKsD,EAAMvjB,UAAkB2W,IACvC4M,I,6BChBT,gNAKa2E,EAAsB,SACjCC,EACAC,GAGI,IAFJ1lB,EAEG,uDAFQ,GACX2lB,EACG,uDADe,EAEZC,EAAmBvlB,YAAiBqlB,EAAkB1lB,GACtD6lB,EAAe,IAAItmB,IAAUkmB,EAAOK,aAAaF,IACjDG,EAAsB1lB,YAAiBwlB,EAAc7lB,GACrDgmB,EAAkBlmB,YAAiB,IAAIP,IAAUwmB,GAAsB/lB,GACvEimB,EAAuBzlB,YAAsBqlB,EAAc7lB,EAAU2lB,GAC3E,MAAO,CAAEI,sBAAqBC,kBAAiBC,yBAGpCC,EAAsB,SACjCrjB,EACA6iB,GAGI,IAFJ1lB,EAEG,uDAFQ,GACX2lB,EACG,uDADe,EAEZC,EAAmBvlB,YAAiBqlB,EAAkB1lB,GACtDmmB,EAAiB,IAAI5mB,IAAUsD,EAAKzC,UAAUwlB,IAC9CQ,EAAwB/lB,YAAiB8lB,EAAgBnmB,GACzDqmB,EAAoBvmB,YAAiB,IAAIP,IAAU6mB,GAAwBpmB,GAC3EsmB,EAAyB9lB,YAAsB2lB,EAAgBnmB,EAAU2lB,GAC/E,MAAO,CAAES,wBAAuBC,oBAAmBC,2BAMxCC,EAAa,SAAC5N,EAAwB6N,GACjD,IAAQC,EAAqB9N,EAArB8N,YAAaC,EAAQ/N,EAAR+N,IAGfC,EAAwBF,EAPM,IACM,EAQ1C,OAAIA,EAEK,CAAEC,IADyE,IAAlEE,YAAOF,EAVW,IAUyB,IAAKF,GACzCG,yBAElB,CAAED,MAAKC,0BAGHE,EAAuB,SAClC3T,EACA4T,EACAC,EACAC,EACAC,GAEA,IAAMC,EACJhU,GAAW4T,GAAwBA,EAAqBK,GAAG,IAAMJ,GAAcA,EAAWI,GAAG,GAEzFC,EADsB5B,EAAoBuB,EAAYC,GAApDhB,gBAC+BqB,MAAMP,GACvCQ,EAAoBF,EAAeG,IAAI,GAAKlnB,YAAiB+mB,EAAgB,IAAM,EAEnFI,EAAgBJ,EAAennB,MAAMgnB,GAE3C,MAAO,CAAEC,kBAAiBI,oBAAmBG,iBADpBD,EAAcD,IAAI,GAAKlnB,YAAiBmnB,EAAe,IAAM,IAI3EE,EAAmB,SAAC/O,EAAwBgP,GACvD,IAAQC,EAAqCjP,EAArCiP,WAAYC,EAAyBlP,EAAzBkP,SAAUC,EAAenP,EAAfmP,WACxBC,EAA2B7T,SAAS4T,GAAcF,GAAcC,GAChEG,EAAmBC,KAAKC,IAAIN,EAAaD,EAAc,GACvDQ,EAAkBF,KAAKC,IAAIL,EAAWF,EAAc,GACpDS,EAAsC,IAArBJ,GAA0BG,EAAkB,EAEnE,MAAO,CAAEJ,2BAA0BC,mBAAkBG,kBAAiBC,iBAAgBC,gBAD9DD,EAAiBD,EAAkBH,K,gLCpEvDM,EAAUjqB,IAAOU,IAAV,4FAGK,qBAAGwpB,QAAuB,SAU7B,SAASC,EAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BC,YAE0B,MAFnB,GAEmB,MAD1BJ,cAC0B,SAC1B,OACE,eAACD,EAAD,CAASC,OAAQA,EAAjB,UACGE,GAAa,cAACG,EAAA,EAAD,CAAc5U,SAAUyU,EAAWE,KAAI,UAAKA,EAAKhsB,WAAV,MAA0BksB,MAAO,CAAEC,YAAa,SACpGJ,GAAa,cAACE,EAAA,EAAD,CAAc5U,SAAU0U,EAAWC,KAAI,UAAKA,EAAKhsB,WAAV,W,wBCtBrDosB,EAAiB1qB,YAAO2qB,IAAP3qB,CAAH,2DACT,qBAAGsqB,QACF,qBAAGA,QAGA,SAASM,EAAT,GAUX,IATFC,EASC,EATDA,QACAL,EAQC,EARDA,MAQC,IAPDF,YAOC,MAPM,OAON,EANDQ,EAMC,EANDA,IAOMC,EAAiBC,YAAiBH,GAExC,OAAO,cAACH,EAAD,CAAgBI,IAAKA,EAAKR,KAAMA,EAAMS,KAAMA,EAAMP,MAAOA,M,iZCDlE,SAASS,EAAiBC,EAA2BC,GACnD,IAAQlsB,EAAYH,cAAZG,QACFmsB,EAAkBC,cAExB,OAAOlN,mBAAQ,WACb,IAAKlf,EAAS,MAAO,GAGrB,IAAMqsB,EAAiBvtB,OAAOC,KAAKktB,EAASjsB,IAAU4S,QAAqC,SAAC0Z,EAAQjZ,GAElG,OADAiZ,EAAOjZ,GAAW4Y,EAASjsB,GAASqT,GAASkQ,MACtC+I,IACN,IAEH,OAAIJ,EAEAC,EAEGvZ,QACC,SAAC2Z,EAAWhJ,GAEV,OADAgJ,EAAUhJ,EAAMlQ,SAAWkQ,EACpBgJ,IALb,eASSF,IAKNA,IACN,CAACrsB,EAASmsB,EAAiBF,EAAUC,IAQnC,SAASvH,IAEd,OAAOqH,EADWQ,eACiB,GAG9B,SAASC,IAEd,IACMC,EAAiBV,EADGW,eACiC,GAGrDC,EAAwB9tB,OAAOC,KAAK4lB,KAU1C,OATyBiI,EACrB9tB,OAAOC,KAAK2tB,GAAgB9Z,QAAqC,SAAC0Z,EAAQjZ,GAIxE,OAHKuZ,EAAsBC,SAASxZ,KAClCiZ,EAAOjZ,GAAWqZ,EAAerZ,IAE5BiZ,IACN,IACHI,EAKC,SAASI,IAEd,OAAOd,EADsBe,eACiB,GAGzC,SAASC,EAAiBzJ,GAC/B,IAAM0J,EAAetI,IAErB,SAAKsI,IAAiB1J,MAIb0J,EAAa1J,EAAMlQ,SAIvB,SAAS6Z,EAAuBC,GACrC,IAAQntB,EAAYH,cAAZG,QACF0sB,EAAiBD,IAEvB,OAAOvN,mBAAQ,WACb,GAAKlf,GAA2B,KAAhBmtB,EAIhB,OADeC,YAAatuB,OAAOuuB,OAAOX,GAAiBS,KAE1D,CAACntB,EAAS0sB,EAAgBS,IAIxB,SAASG,EAAoB5W,GAClC,IAAMyV,EAAkBC,cAExB,QAAK1V,KAIIyV,EAAgB/Q,MAAK,SAACmI,GAAD,OAAWgK,YAAe7W,EAAU6M,MAIpE,IAAMiK,EAAgB,sBAEtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAIG,OAAS,EACvBH,EAEFC,GAAWH,EAAcM,KAAKH,IAAsC,IAA1BI,mBAASJ,GAAS,IAC1DK,YAAmBL,GACnBC,EAMC,SAASK,EAASnO,GACvB,IAAQ9f,EAAYH,cAAZG,QACF2S,EAASgS,IAETtR,EAAUoB,YAAUqL,GAEpBoO,EAAgBrO,YAAiBxM,QAAWrW,GAAW,GACvDmxB,EAAuB5N,YAAwBlN,QAAWrW,GAAW,GACrEumB,EAA2BlQ,EAAUV,EAAOU,QAAWrW,EAEvDoxB,EAAYC,YAAoB9K,OAAQvmB,EAAYkxB,EAAe,YAAQlxB,EAAWsxB,KACtFC,EAAmBF,YACvB9K,OAAQvmB,EAAYmxB,EACpB,YACAnxB,EACAsxB,KAEIE,EAASH,YAAoB9K,OAAQvmB,EAAYkxB,EAAe,cAAUlxB,EAAWsxB,KACrFG,EAAgBJ,YAAoB9K,OAAQvmB,EAAYmxB,EAAsB,cAAUnxB,EAAWsxB,KACnG5rB,EAAW2rB,YAAoB9K,OAAQvmB,EAAYkxB,EAAe,gBAAYlxB,EAAWsxB,KAE/F,OAAOpP,mBAAQ,WACb,GAAIqE,EAAO,OAAOA,EAClB,GAAKvjB,GAAYqT,EAAjB,CACA,GAAI3Q,EAASgsB,SAAWF,EAAOE,SAAWN,EAAUM,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAIhsB,EAASilB,OACX,OAAO,IAAItiB,IACTrF,EACAqT,EACA3Q,EAASilB,OAAO,GAChB8F,EAAoB,UAACe,EAAO7G,cAAR,aAAC,EAAgB,GAAjB,UAAqB8G,EAAc9G,cAAnC,aAAqB,EAAuB,GAAI,WACpE8F,EAAoB,UAACW,EAAUzG,cAAX,aAAC,EAAmB,GAApB,UAAwB4G,EAAiB5G,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACDtU,EACArT,EACA0C,EAASgsB,QACThsB,EAASilB,OACT6G,EAAOE,QACPF,EAAO7G,OACP8G,EAAc9G,OACdpE,EACA6K,EAAUM,QACVN,EAAUzG,OACV4G,EAAiB5G,SAId,SAASgH,EAAYC,GAC1B,IAAMC,EAAsC,SAApB,OAAVD,QAAU,IAAVA,OAAA,EAAAA,EAAYE,eACpBvL,EAAQ0K,EAASY,OAAQ7xB,EAAY4xB,GAC3C,OAAOC,EAAQlY,IAAQ4M,I,gtBChKbwL,E,yIAAAA,K,UAAAA,E,YAAAA,E,oBAAAA,E,aAAAA,M,KAOL,IAAMC,EAAe,SAACzvB,GAC3B,GAAc,OAAVA,EACF,OAAO,KAGT,IAAM0vB,EAAWC,OAAO3vB,GACxB,OAAO2vB,OAAOC,MAAMF,GAAY,KAAOA,GAmB5BG,EAAuB,SAACC,GACnC,IAAMC,EAAM,CACVpU,GAAImU,EAAYnU,GAChBqU,KAAMF,EAAYE,KAClBC,MAAOR,EAAaK,EAAYG,OAChC/sB,OAAQ4sB,EAAY5sB,OAASgtB,WAAWJ,EAAY5sB,QAAU,EAC9DitB,SAAmC,SAAzBL,EAAYK,SAAsB3J,IAAY4J,KAAO5J,IAAY6J,KAC3EC,QAASR,EAAYQ,QACrBC,UAAWd,EAAaK,EAAYS,WACpCC,aAAcf,EAAaK,EAAYU,cACvCC,YAAaX,EAAYW,YACzBC,WAAYZ,EAAYY,WAAaR,WAAWJ,EAAYY,YAAc,EAC1EC,cAAeb,EAAYa,cAAgBT,WAAWJ,EAAYa,eAAiB,EACnFC,UAAWnB,EAAaK,EAAYc,WACpCC,UAAWpB,EAAaK,EAAYe,YAWtC,OARIf,EAAYlO,OACdmO,EAAInO,KAAOkP,EAAsBhB,EAAYlO,OAG3CkO,EAAYiB,QACdhB,EAAIgB,MAAQC,EAAuBlB,EAAYiB,QAG1ChB,GAGIe,EAAwB,SAACG,GACpC,IACEtV,EAeEsV,EAfFtV,GACAiV,EAcEK,EAdFL,UACAC,EAaEI,EAbFJ,UACAZ,EAYEgB,EAZFhB,MACAiB,EAWED,EAXFC,UACAC,EAUEF,EAVFE,cACAC,EASEH,EATFG,cACAC,EAQEJ,EARFI,SACAC,EAOEL,EAPFK,aACAC,EAMEN,EANFM,aACAC,EAKEP,EALFO,iBACAC,EAIER,EAJFQ,gBACAC,EAGET,EAHFS,QACAC,EAEEV,EAFFU,WACAC,EACEX,EADFW,OAGF,MAAO,CACLjW,KACAiV,UAAWnB,EAAamB,GACxBC,UAAWpB,EAAaoB,GACxBZ,MAAOR,EAAaQ,GACpBiB,UAAWzB,EAAayB,GACxBC,cAAe1B,EAAa0B,GAC5BC,cAAe3B,EAAa2B,GAC5BC,SAAUA,EAAWnB,WAAWmB,GAAY,EAC5CC,aAAcA,EAAepB,WAAWoB,GAAgB,EACxDC,aAAcA,EAAerB,WAAWqB,GAAgB,EACxDC,iBAAkB/B,EAAa+B,GAC/BC,gBAAiBA,EAAkBvB,WAAWuB,GAAmB,EACjEC,QAASA,EAAUxB,WAAWwB,GAAW,EACzCC,WAAYA,EAAazB,WAAWyB,GAAc,EAClDC,OAAQA,EAAS1B,WAAW0B,GAAU,IAI7BZ,EAAyB,SAACa,GACrC,IAnFwBC,EAoFtBnW,EAwBEkW,EAxBFlW,GACAoW,EAuBEF,EAvBFE,MACAC,EAsBEH,EAtBFG,OACA7B,EAqBE0B,EArBF1B,SACA8B,EAoBEJ,EApBFI,QACAlH,EAmBE8G,EAnBF9G,WACAmH,EAkBEL,EAlBFK,UACAC,EAiBEN,EAjBFM,OACAC,EAgBEP,EAhBFO,UACAC,EAeER,EAfFQ,SACAC,EAcET,EAdFS,UACAC,EAaEV,EAbFU,YACAC,EAYEX,EAZFW,QACAC,EAWEZ,EAXFY,WACAC,EAUEb,EAVFa,UACAC,EASEd,EATFc,WACAC,EAQEf,EARFe,aACA1B,EAOEW,EAPFX,UACA2B,EAMEhB,EANFgB,YACAC,EAKEjB,EALFiB,SACAC,EAIElB,EAJFkB,WACAC,EAGEnB,EAHFmB,SACAC,EAEEpB,EAFFoB,WAvBF,EAyBIpB,EADFqB,YAxBF,MAwBS,GAxBT,EA2BA,MAAO,CACLvX,KACAqW,SACAE,YACAG,WACAE,cACAK,eACAF,YACAvC,UAtHsB2B,EAsHK3B,EArHJ,SAArB2B,EACKtL,IAAY4J,KAGI,SAArB0B,EACKtL,IAAY6J,KAGI,UAArByB,EACKtL,IAAY2M,MAGd,MA0GLpB,MAAOtC,EAAasC,GACpBE,QAASxC,EAAawC,GACtBlH,WAAY0E,EAAa1E,GACzBoH,OAAQ1C,EAAa0C,GACrBC,UAAW3C,EAAa2C,GACxBE,UAAWA,EAAYpC,WAAWoC,GAAa,EAC/CE,QAAS/C,EAAa+C,GACtBC,WAAYhD,EAAagD,GACzBE,WAAYA,EAAazC,WAAWyC,GAAc,EAClDzB,UAAWzB,EAAayB,GACxB2B,YAAaA,EAAc3C,WAAW2C,GAAe,EACrDC,SAAUrD,EAAaqD,GACvBC,WAAYA,EAAa7C,WAAW6C,GAAc,EAClDC,SAAUvD,EAAauD,GACvBC,WAAYA,EAAa/C,WAAW+C,GAAc,EAClDC,KAAMA,EAAK1N,IAAIqK,KAINuD,EAAiB,SAACrD,EAAUsD,GACvC,IAAQtC,EAAUhB,EAAVgB,MACR,GAAIA,EAAMiB,OACR,OAAOxC,EAAO8D,SAGhB,GAAIvC,EAAMgB,OAASsB,EAAe,EAChC,OAAO7D,EAAO+D,KAEhB,IAAMC,EAAsBzC,EAAM4B,WAAa5B,EAAMuB,UAAY9L,IAAY4J,KAAO5J,IAAY6J,KAEhG,OAAON,EAAII,WAAaqD,EAAsBhE,EAAOiE,IAAMjE,EAAOkE,MAGvDC,EAAkB,SAACT,EAAaxN,GAC3C,OAAQA,GACN,KAAKgB,IAAckN,UACjB,OAAOV,EAAKxN,QAAO,SAACqK,GAAD,OAAyB,IAAhBA,EAAIO,WAClC,KAAK5J,IAAcmN,YACjB,OAAOX,EAAKxN,QAAO,SAACqK,GAClB,OAAQA,EAAIO,UAAYP,EAAII,WAAaJ,EAAIgB,MAAMZ,WAAiC,IAArBJ,EAAIgB,MAAMiB,WAE7E,KAAKtL,IAAcoN,IACnB,QACE,OAAOZ,IAyBAa,EAAa,uCAAG,8CAAA51B,EAAA,6DAAO61B,EAAP,+BAA4B,GAAIC,EAAhC,+BAAwC,IAAMC,EAA9C,+BAAqD,EAArD,SACJC,kBACrBC,IACAC,cAF6B,IAAD,+UC7HA,+IA1BE,mSAyCD,oND6H7B,CAAEJ,QAAOC,OAAMF,UAhBU,cACrBM,EADqB,yBAkBpBA,EAASpB,MAlBW,2CAAH,qDA4CbqB,EAAa,uCAAG,WAAOle,EAAiBme,GAAxB,mBAAAr2B,EAAA,6DACrB2V,EAAUc,cACV6f,EAAcD,EAAOhP,KAAI,SAACuM,GAAD,MAAY,CACzCje,UACA4T,KAAM,SACNC,OAAQ,CAACoK,EAAO1b,OALS,SAOJ4R,YAAyCjK,EAAgByW,GAPrD,cAOrBH,EAPqB,yBAQpBA,GARoB,2CAAH,wDAWbI,EAA+B,GAUtCC,EAA+B,CACnCT,KAAM,EACND,MAAOS,EACPE,QAAS,YACTC,SAAU,QAGCC,EAAkB,uCAAG,sDAAA32B,EAAA,6DAAO+F,EAAP,+BAA4C,GAA5C,6BACuBywB,GAAiCzwB,GAAhF+vB,EADwB,EACxBA,MAAOC,EADiB,EACjBA,KAAMF,EADW,EACXA,MAAOY,EADI,EACJA,QAASC,EADL,EACKA,SADL,SAETV,kBACrBC,IACAC,cAF6B,IAAD,oSCvLC,oNDgM7B,CAAEJ,QAAOC,OAAMF,QAAOY,UAASC,aAXD,cAE1BP,EAF0B,yBAazBA,EAASS,OAbgB,2CAAH,qDAgBlBC,EAAiB,uCAAG,WAAO3e,GAAP,eAAAlY,EAAA,sEACRg2B,kBACrBC,IACAC,cAF6B,IAAD,sHCtMC,oND+M7B,CACE1Y,GAAItF,EAAQmR,gBAXe,cACzB8M,EADyB,yBAcxBA,EAAS1S,MAde,2CAAH,sDAiBjBqT,EAAgB,uCAAG,WAC9B5e,EACAme,GAF8B,mBAAAr2B,EAAA,6DAIxB2V,EAAUc,cACVsgB,EAAiBV,EAAOhP,KAAI,SAACuM,GAAD,MAAY,CAC5Cje,UACA4T,KAAM,YACNC,OAAQ,CAACoK,EAAO1b,OARY,SAUG4R,YAA8CjK,EAAgBkX,GAVjE,cAUxBC,EAVwB,yBAYvBA,EAAmB9hB,QAAO,SAACC,EAAO8hB,EAAmBC,GAC1D,IAAMtD,EAAQyC,EAAOa,GACdC,EAAP,YAAoBF,EAApB,MAEA,OAAO,2BACF9hB,GADL,kBAEGye,EAAQuD,MAEV,KApB2B,2CAAH,wDA2BhBC,EAAiB,uCAAG,sDAAAp3B,EAAA,6DACzB2V,EAAUc,cACV4gB,EAAc,CAAC,eAAgB,kBAAmB,eAAgB,SAAU,iBAAiBhQ,KAAI,SAACiQ,GAAD,MAAa,CAClH3hB,UACA4T,KAAM+N,MAJuB,SAM8DxN,YAC3FjK,EACAwX,GAR6B,gEAMvBnC,EANuB,2BAMPqC,EANO,2BAMYC,EANZ,2BAM4BC,EAN5B,2BAMsCC,EANtC,uBAWxB,CACLC,OAAQF,EAASnP,IAAiBsP,OAAStP,IAAiB8M,KAC5DF,aAAcA,EAAa3vB,WAC3BgyB,gBAAiBA,EAAgBhyB,WACjCiyB,aAAcA,EAAa71B,WAC3B+1B,cAAeA,EAAcnyB,aAhBA,4CAAH,qDAoBjBsyB,EAAa,uCAAG,WAAOxB,GAAP,mBAAAr2B,EAAA,6DACrB2V,EAAUc,cACVqS,EAAQuN,EAAOhP,KAAI,SAACuM,GAAD,MAAY,CACnCje,UACA4T,KAAM,SACNC,OAAQ,CAACoK,OALgB,SAOJ9J,YAAyCjK,EAAgBiJ,GAPrD,cAOrBqN,EAPqB,yBAQpBA,GARoB,2CAAH,sDAWb2B,EAA0B,SAAClE,EAAemE,GACrD,MAAO,CACLnE,QACAmE,iBACAC,cAAe,KACfC,eAAgB,KAChB9D,UAAW,KACXK,WAAY,KACZE,YAAapuB,IAAO/B,UAAUgC,KAAK,GAAG1B,SACtC+vB,WAAYtuB,IAAO/B,UAAUgC,KAAK,GAAG1B,SACrCiwB,WAAYxuB,IAAO/B,UAAUgC,KAAK,GAAG1B,SACrCqzB,oBAAqB5xB,IAAO/B,UAAUgC,KAAK,GAAG1B,SAC9CszB,aAAc7xB,IAAO/B,UAAUgC,KAAK,GAAG1B,SACvCuzB,cAAc,EACdC,aAAc,KACdC,cAAe,OAINC,EAAgB,SAACC,GAC5B,OAAOA,EAAOtjB,QAAO,SAACC,EAAOyd,GAC3B,OAAO,2BACFzd,GADL,kBAEGyd,EAAMgB,MAAMjyB,WAAaixB,MAE3B,KAGQ6F,EAAqC,SAACC,GAAD,MAAiE,CACjH1G,SAAsC,IAA5B0G,EAAe1G,SAAiB3J,IAAY4J,KAAO5J,IAAY6J,KACzEntB,OAAQ2zB,EAAe3zB,OAAOF,SAC9BstB,QAASuG,EAAevG,UAGbwG,EAAiB,SAACzgB,EAAiB0gB,EAAsCvC,GACpF,OAAOuC,EAAQ1jB,QAAO,SAACC,EAAOujB,EAAgBxB,GAC5C,IAAKwB,EACH,OAAOvjB,EAIT,GAAIujB,EAAe3zB,OAAO8zB,GAAG,GAC3B,OAAO1jB,EAGT,IAAMye,EAAQyC,EAAOa,GAAOv1B,WAE5B,OAAO,2BACFwT,GADL,kBAEG+C,EAFH,2BAGO/C,EAAM+C,IAHb,kBAIK0b,EAAQ6E,EAAmCC,SAG/C,KAMQI,EAAqC,SAAC3C,GACjD,IACEvC,EAcEuC,EAdFvC,MACAmE,EAaE5B,EAbF4B,eACAC,EAYE7B,EAZF6B,cACAC,EAWE9B,EAXF8B,eACA9D,EAUEgC,EAVFhC,UACAK,EASE2B,EATF3B,WACAE,EAQEyB,EARFzB,YACAE,EAOEuB,EAPFvB,WACAE,EAMEqB,EANFrB,WACAoD,EAKE/B,EALF+B,oBACAC,EAIEhC,EAJFgC,aACAC,EAGEjC,EAHFiC,aACAC,EAEElC,EAFFkC,aACAC,EACEnC,EADFmC,cAGF,MAAO,CACLF,eACAxE,MAAOA,EAAMruB,WACbwyB,eAAgBA,EAAec,GAAG,GAAK,KAAOd,EAAexyB,WAC7DyyB,cAAeA,EAAca,GAAG,GAAK,KAAOb,EAAczyB,WAC1D0yB,eAAgBA,EAAeY,GAAG,GAAK,KAAOZ,EAAe1yB,WAC7D4uB,UAAWA,EAAU0E,GAAG,GAAK,KAAO1E,EAAUtvB,SAC9C2vB,WAAYA,EAAWqE,GAAG,GAAK,KAAOrE,EAAW3vB,SACjD6vB,YAAaA,EAAY7vB,SACzB+vB,WAAYA,EAAW/vB,SACvBiwB,WAAYA,EAAWjwB,SACvBqzB,oBAAqBA,EAAoBrzB,SACzCszB,aAAcA,EAAatzB,SAC3BwzB,aAAcA,EAAa12B,WAC3B22B,cAAeA,EAAc32B,aAQpBo3B,EAAoB,SAAmD/3B,GAClF,OAAOI,OAAOC,KAAKL,GAAMkU,QAAO,SAACC,EAAOpU,GACtC,IAAMc,EAAQb,EAAKD,GAEnB,OAAIc,GAAyB,eAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOoV,MACX,2BACF9B,GADL,kBAEGpU,EAAMuF,IAAO/B,UAAUgC,KAAK1E,KAI1B,2BACFsT,GADL,kBAEGpU,EAAMc,MAER,KAGQm3B,EAAsB,uCAAG,WAAO9gB,GAAP,iBAAAlY,EAAA,sEAE5Bi5B,EAAWrZ,cAFiB,SAGbqZ,EAASC,oBAAoBhhB,GAHhB,cAG5BiY,EAH4B,yBAI3BA,GAJ2B,yDAM3B7pB,IAAO/B,UAAUgC,KAAK,IANK,yDAAH,sDAatB4yB,EAAe,uCAAG,WAC7BjhB,GAD6B,uCAAAlY,EAAA,6DAE7Bo5B,EAF6B,+BAEpB,EACTzL,EAH6B,+BAGtB0L,IAEDJ,EAAWrZ,cALY,kBAQKqZ,EAASK,cAAcphB,EAASkhB,EAAQzL,GAR7C,0CAQpB6K,EARoB,KAQZI,EARY,uBAUpBJ,EAAOtjB,QAAO,SAACC,EAAOyd,EAAOsE,GAClC,OAAO,2BACF/hB,GADL,kBAEGyd,EAAMjxB,WAAa82B,EAAmCG,EAAQ1B,QAEhE,KAfwB,2DAkBpB,MAlBoB,0DAAH,uD,6BEjhB5B,4IA0BYqC,EA1BZ,eAIO,SAASjkB,EAAeuQ,GAC7B,MAAO,CACLvjB,QAASujB,EAAMvjB,QACfqT,QAASkQ,EAAMlQ,QACf3Q,SAAU6gB,EAAM7gB,SAChB8rB,OAAQjL,EAAMiL,OACdvH,KAAM1D,EAAM0D,KACZiQ,YAAa3T,EAAM2T,aAIhB,SAAS1R,EAAiBhC,GAC/B,OAAO,IAAIne,IACTme,EAAgBxjB,QAChBwjB,EAAgBnQ,QAChBmQ,EAAgB9gB,SAChB8gB,EAAgBgL,OAChBhL,EAAgByD,KAChBzD,EAAgB0T,c,SAIRD,K,YAAAA,E,SAAAA,E,YAAAA,E,cAAAA,M,KAOL,IAAMpT,EAAiB,CAC5BsT,QAASC,qBAAWH,EAAS,QAAU,QAAQ53B,WAC/Cg4B,KAAMD,qBAAWH,EAAUI,KAAM,QAAQh4B,WACzCi4B,QAASF,qBAAWH,EAAUK,QAAS,QAAQj4B,WAC/CykB,QAASsT,qBAAWH,EAAUnT,QAAS,QAAQzkB,a,6BClCjD,mLAuBA,SAASk4B,EAAYC,GACnB,OAAmD,IAA5C,CAAC,SAAU,UAAUC,eAAeD,GAG7C,SAASE,EAAkBF,GACzB,YACQx6B,IAANw6B,GACCG,MAAMC,QAAQJ,IAAMA,EAAEK,OAAM,SAACC,GAAD,OAAQP,EAAYO,IAAQH,MAAMC,QAAQE,IAAOA,EAAGD,MAAMN,MAU3F,IAAMQ,EAA6B,CAAEC,OAAO,EAAOC,iBAAaj7B,EAAW0B,UAAM1B,GAGpEsxB,EAAgC,CAC3C4J,eAAgBC,KAIlB,SAASC,EAAa5R,EAA6B/iB,GACjD,IAAQzD,EAAYH,cAAZG,QACFq4B,EAAcnX,aAClB,SAAC3jB,GAAD,OAAWA,EAAMgpB,UAAU8R,eAEvBtX,EAAWC,cAEXsX,EAA6BpZ,mBACjC,4BACEqZ,KAAKC,UAAL,iBACEhS,QADF,IACEA,GADF,UACEA,EACIvB,QAAO,SAACwT,GAAD,OAAkB7hB,QAAQ6hB,aAFvC,iBACE,EAEI1T,IAAI2T,YAHV,aACE,EAGIC,cAJN,QAIgB,MAElB,CAACnS,IA4BH,OAxBA/oB,qBAAU,WACR,IAAMm7B,EAAqBL,KAAKM,MAAMP,GACtC,GAAKt4B,GAA+B,IAApB44B,EAAS/K,OAAzB,CAEA,IAAMrH,EAAQoS,EAAS7T,KAAI,SAACtmB,GAAD,OAASq6B,YAAar6B,MASjD,OARAsiB,EACEgY,YAAsB,CACpB/4B,UACAwmB,QACA/iB,aAIG,WACLsd,EACEiY,YAAyB,CACvBh5B,UACAwmB,QACA/iB,iBAIL,CAACzD,EAAS+gB,EAAUtd,EAAS60B,IAEzBpZ,mBACL,kBACEsH,EAAMzB,KAAgB,SAAC+B,GAAU,IAAD,EAC9B,IAAK9mB,IAAY8mB,EAAM,OAAOiR,EAE9B,IACIr5B,EADEipB,EAAM,UAAG0Q,EAAYr4B,UAAf,aAAG,EAAuB04B,YAAU5R,IAOhD,OALU,OAANa,QAAM,IAANA,OAAA,EAAAA,EAAQjpB,OAAyB,QAAX,OAANipB,QAAM,IAANA,OAAA,EAAAA,EAAQjpB,QAE1BA,EAAOipB,EAAOjpB,MAGT,CAAEs5B,OAAO,EAAMt5B,OAAMu5B,YAAW,OAAEtQ,QAAF,IAAEA,OAAF,EAAEA,EAAQsQ,kBAErD,CAACI,EAAa7R,EAAOxmB,IAgBzB,IAAMi5B,EAAgC,CAAEjB,OAAO,EAAOrQ,YAAQ3qB,EAAW0xB,SAAS,EAAOwK,SAAS,EAAOvZ,OAAO,GAC1GwZ,EAAgC,CAAEnB,OAAO,EAAMrQ,YAAQ3qB,EAAW0xB,SAAS,EAAMwK,SAAS,EAAMvZ,OAAO,GAE7G,SAASyZ,EACPC,EACAC,EACAC,EACAC,GAEA,IAAKH,EAAY,OAAOJ,EACxB,IAAQjB,EAA6BqB,EAA7BrB,MAAOt5B,EAAsB26B,EAAtB36B,KAAMu5B,EAAgBoB,EAAhBpB,YACrB,IAAKD,EAAO,OAAOiB,EACnB,GAAIjB,IAAUC,EAAa,OAAOkB,EAClC,IAAKG,IAAsBC,IAAaC,EAAmB,OAAOL,EAClE,IAEIxR,EAFE8R,EAAU/6B,GAAQA,EAAKmvB,OAAS,EAChCqL,GAAU,OAACjB,QAAD,IAACA,IAAe,GAAKuB,EAErC,GAAIC,GAAW/6B,EACb,IACEipB,EAAS2R,EAAkB/R,qBAAqBgS,EAAU76B,GAC1D,MAAOihB,GAEP,OADAC,QAAQ8Z,MAAM,6BAA8BH,EAAU76B,GAC/C,CACLs5B,OAAO,EACPtJ,SAAS,EACT/O,OAAO,EACPuZ,UACAvR,UAIN,MAAO,CACLqQ,OAAO,EACPtJ,SAAS,EACTwK,UACAvR,SACAhI,OAAQ8Z,GAIL,SAASE,EACdhD,EACAiD,EACAC,EACAp2B,GAEA,IAAM81B,EAAWra,mBAAQ,+BAAMyX,QAAN,IAAMA,GAAN,UAAMA,EAAQ,iBAAd,aAAM,EAAqBmD,YAAYF,KAAa,CAACjD,EAAUiD,IAelFG,EAAU3B,EAbFlZ,mBACZ,kBACEyX,GAAY4C,GAAYM,GAAcA,EAAWhM,OAAS,EACtDgM,EAAW9U,KAAU,SAACiV,GACpB,MAAO,CACL3mB,QAASsjB,EAAStjB,QAClB4mB,SAAUtD,EAAQ,UAAW3P,mBAAmBuS,EAAUS,OAG9D,KACN,CAACH,EAAYlD,EAAU4C,IAGW91B,GAE5B4mB,EAAiB6P,cAAjB7P,aAER,OAAOnL,mBAAQ,WACb,OAAO6a,EAAQhV,KAAI,SAAC4C,GAAD,OAAYyR,EAAYzR,EAAD,OAASgP,QAAT,IAASA,OAAT,EAASA,EAAQ,UAAa4C,EAAUlP,QACjF,CAACkP,EAAU5C,EAAUoD,EAAS1P,IAG5B,SAAS8P,EACd5mB,EACA+lB,EACAM,EACAC,EACAp2B,GAEA,IAAM81B,EAAWra,mBAAQ,kBAAMoa,EAAkBQ,YAAYF,KAAa,CAACN,EAAmBM,IACxFK,EAA+B/a,mBACnC,kBACEqa,GAAY7B,EAAkBmC,GAC1BP,EAAkBtS,mBAAmBuS,EAAUM,QAC/C78B,IACN,CAAC68B,EAAYP,EAAmBC,IAkB5BQ,EAAU3B,EAfFlZ,mBACZ,kBACEqa,GAAYhmB,GAAaA,EAAUsa,OAAS,GAAKoM,EAC7C1mB,EAAUwR,KAAsB,SAAC1R,GAC/B,OAAOA,GAAW4mB,EACd,CACE5mB,UACA4mB,iBAEFj9B,KAEN,KACN,CAACuW,EAAW0mB,EAAUV,IAGY91B,GAE5B4mB,EAAiB6P,cAAjB7P,aAER,OAAOnL,mBAAQ,WACb,OAAO6a,EAAQhV,KAAI,SAAC4C,GAAD,OAAYyR,EAAYzR,EAAQ2R,EAAmBC,EAAUlP,QAC/E,CAACkP,EAAUQ,EAAST,EAAmBjP,IAGrC,SAASgE,EACdsI,EACAiD,EACAI,EACAv2B,GAEA,IAAM81B,EAAWra,mBAAQ,+BAAMyX,QAAN,IAAMA,GAAN,UAAMA,EAAQ,iBAAd,aAAM,EAAqBmD,YAAYF,KAAa,CAACjD,EAAUiD,IAalFjS,EAASyQ,EAXDlZ,mBAAgB,WAC5B,OAAOyX,GAAY4C,GAAY7B,EAAkBsC,GAC7C,CACE,CACE3mB,QAASsjB,EAAStjB,QAClB4mB,SAAUtD,EAAQ,UAAW3P,mBAAmBuS,EAAUS,KAG9D,KACH,CAACrD,EAAU4C,EAAUS,IAEWv2B,GAAS,GACpC4mB,EAAiB6P,cAAjB7P,aAER,OAAOnL,mBAAQ,WACb,OAAOka,EAAYzR,EAAD,OAASgP,QAAT,IAASA,OAAT,EAASA,EAAQ,UAAa4C,EAAUlP,KACzD,CAAC1C,EAAQgP,EAAU4C,EAAUlP,M,kMCvP5B+P,EAAwB,CAC5B,CACElf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,SACPC,MAAO,gBAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,WACPC,MAAO,oBAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,mBACPC,MAAO,eAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,OACPC,MAAO,gBAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,aACPC,MAAO,iBAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,QACPC,MAAO,eAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,UACPC,MAAO,iBAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,SACPC,MAAO,kBAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,QACPC,MAAO,eAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,QACPC,MAAO,iBAET,CACEpf,GAAI,YACJvG,KAAM,MACN0lB,MAAO,QACPC,MAAO,eAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,wBACPC,MAAO,4BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,uBACPC,MAAO,2BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,uBACPC,MAAO,2BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,uBACPC,MAAO,2BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,2BACPC,MAAO,+BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,0BACPC,MAAO,8BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,yBACPC,MAAO,6BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,yBACPC,MAAO,6BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,yBACPC,MAAO,6BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,6BACPC,MAAO,iCAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,0BACPC,MAAO,8BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,yBACPC,MAAO,6BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,yBACPC,MAAO,6BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,yBACPC,MAAO,6BAET,CACEpf,GAAI,YACJvG,KAAM,aACN0lB,MAAO,6BACPC,MAAO,iCAET,CACEpf,GAAI,YACJvG,KAAM,gBACN0lB,MAAO,eACPE,YAAa,qDACbD,MAAO,oBAET,CACEpf,GAAI,YACJvG,KAAM,gBACN0lB,MAAO,cACPE,YAAa,mDACbD,MAAO,mBAET,CACEpf,GAAI,YACJvG,KAAM,gBACN0lB,MAAO,SACPE,YAAa,iDACbD,MAAO,cAET,CACEpf,GAAI,YACJvG,KAAM,gBACN0lB,MAAO,QACPE,YAAa,8CACbD,MAAO,aAET,CACEpf,GAAI,YACJvG,KAAM,gBACN0lB,MAAO,SACPE,YAAa,uDACbD,MAAO,eAQEE,EAAc,IAAI99B,IAE/B09B,EAAUp7B,SAAQ,SAACy7B,GACjBD,EAAY79B,IAAI89B,EAASvf,GAAIuf,MAGhBL,I,kDC/MFM,G,OAAmBC,YAAY,CAC1C1T,KAAM,eACN5qB,aANqC,CACrCqC,KAAM,IAMNk8B,SAAU,CACRC,eAAgB,SAACt9B,EAAOu9B,GACtBv9B,EAAMmB,KAAKq8B,KAAKD,EAAOE,UAEzBC,gBAAiB,SAAC19B,EAAOu9B,GACvBv9B,EAAMmB,KAAN,sBAAiBnB,EAAMmB,MAAvB,YAAgCo8B,EAAOE,WAEzCE,gBAAiB,SAAC39B,EAAOu9B,GACvBv9B,EAAMmB,KAAOo8B,EAAOE,SAEtBG,kBAAmB,SAAC59B,GAClBA,EAAMmB,KAAO,QAMZ,EAAgFg8B,EAAiBU,QAYzFV,GAZR,EAAQG,eAAR,EAAwBI,gBAAxB,EAAyCC,gBAAzC,EAA0DC,kBAYlDT,EAAf,S,kDCvBaW,EAAkBC,YAC7B,+BAD6C,uCAE7C,WAAO1lB,GAAP,iBAAAlY,EAAA,6DAEQ69B,EAAoBz8B,OAAOC,KAAKy8B,KAAazW,IAAzB,iBAAAjmB,OAAA,IAAAA,CAAA,UAA6B,WAAO28B,GAAP,+BAAA/9B,EAAA,6DACpCg+B,EAAeF,IAAYC,GAApCpoB,QACFA,EAAUD,YAAWsoB,GACrB/E,EAAWhc,YAAkBtH,GAHkB,SAIrBsjB,EAASgF,UAAU/lB,GAJE,UAI/CgmB,EAJ+C,OAK/CD,EAAYC,EAAkB34B,YAEhC24B,EAAkBrF,GAAG,GAP4B,yCAQ5C,IAR4C,OA2BrD,IAhBMsF,EAX+C,+BAAAn+B,EAAA,MAW3B,WAAOk3B,GAAP,mBAAAl3B,EAAA,+EAEoBi5B,EAASmF,oBAAoBlmB,EAASgf,GAF1D,cAEhBmH,EAFgB,OAGhBC,EAAUD,EAAU94B,WAHJ,SAKEg5B,YAAgB5oB,EAAS2oB,GAL3B,cAKhBE,EALgB,yBAMf,CAACF,EAASE,EAAUC,aANL,yCAQtBvc,QAAQD,MAAM,oBAAd,MARsB,kBASf,MATe,0DAX2B,sDAwB/Cyc,EAAuB,GAGpB9U,EAAI,EAAGA,EAAIqU,EAAWrU,IAC7B8U,EAAqBrB,KAAKc,EAAkBvU,IA5BO,iBA+B/B+U,QAAQC,IAAIF,GA/BmB,eA+B/CG,EA/B+C,yBAgC9CA,GAhC8C,4CAA7B,uDAF5B,SAqC8BF,QAAQC,IAAIf,GArC1C,cAqCQiB,EArCR,yBAuCSA,EAAcC,QAvCvB,2CAF6C,uDAwEhCC,EA3BkB/B,YAAY,CAC3C1T,KAAM,eACN5qB,aAxDsC,CACtCsgC,eAAe,EACfC,WAAW,EACXl+B,KAAM,IAsDNk8B,SAAU,GACViC,cAAe,SAACC,GACdA,EAAQC,QAAQ1B,EAAgB2B,SAAS,SAACz/B,GACxCA,EAAMq/B,WAAY,KAEpBE,EAAQC,QAAQ1B,EAAgB4B,WAAW,SAAC1/B,EAAOu9B,GACjDv9B,EAAMq/B,WAAY,EAClBr/B,EAAMo/B,eAAgB,EACtBp/B,EAAMmB,KAAOo8B,EAAOE,QAAQpoB,QAAO,SAACC,EAAOqqB,GACzC,IAAKA,EACH,OAAOrqB,EAGT,MAA8BqqB,EAA9B,mBAAOlB,EAAP,KAAgBG,EAAhB,KAEA,OAAO,2BACFtpB,GADL,kBAEGspB,EAAatpB,EAAMspB,GAAN,sBAAwBtpB,EAAMspB,IAA9B,CAA2CH,IAAW,CAACA,OAEtE,UAKT,Q,yBCpFamB,EAAY,uCAAG,8CAAAz/B,EAAA,6DAAO81B,EAAP,+BAAe,EAAGC,EAAlB,+BAAyB,EAAGl2B,EAA5B,+BAAoC8oB,IAAc+W,OAAlD,SACwB1J,IAChD2J,IACAzJ,cAFwD,MAAD,shBA2BvD,CAAEJ,QAAOC,OAAMl2B,UA5BS,cACpBs2B,EADoB,yBA8BnBA,EAASyJ,WA9BU,2CAAH,qDAiCZC,EAAW,uCAAG,WAAOriB,GAAP,eAAAxd,EAAA,sEACsBg2B,IAC7C2J,IACAzJ,cAFqD,IAAD,gVAqBpD,CAAE1Y,OAtBqB,cACnB2Y,EADmB,yBAwBlBA,EAAS2J,UAxBS,2CAAH,sDA2BXC,EAAQ,uCAAG,WAAOjK,EAAeC,EAAcF,GAApC,eAAA71B,EAAA,sEACoBg2B,IACxC2J,IACAzJ,cAFgD,IAAD,kYAoB/C,CAAEJ,QAAOC,OAAMF,UArBK,cAChBM,EADgB,yBAuBfA,EAAS6J,OAvBM,2CAAH,0DA0BRC,EAA2B,uCAAG,WACzCD,EACAlO,GAFyC,qBAAA9xB,EAAA,8DAIrB8xB,EAJqB,qCAILpvB,IAAkBw9B,iBAJb,iCAInC3F,EAJmC,KAMnC4F,EAAgBH,EAAM3Y,KAAI,SAAC+Y,GAAD,cAAW,CACzCzqB,QAASyqB,EAAKC,MACdC,iBAAgB,UAAEF,EAAKG,gBAAP,aAAE,EAAeD,iBACjCE,MAAK,UAAEJ,EAAKG,gBAAP,aAAE,EAAeE,gBATiB,SAWlBC,MAAM,GAAD,OAAIC,IAAJ,WAAkC,CAC5DrJ,OAAQ,OACRsJ,QAAS,CACP,eAAgB,oBAElBC,KAAMhG,KAAKC,UAAU,CACnBhJ,MAAOyI,EACPyF,MAAOG,MAlB8B,WAWnChK,EAXmC,QAsB3B2K,GAtB2B,uBAuBjC,IAAI5+B,MAAMi0B,EAAS4K,YAvBc,yBA0BtB5K,EAAS6K,OA1Ba,eA0BnChgC,EA1BmC,yBA2BlCg/B,EAAM9qB,QAAO,SAACC,EAAOirB,GAAU,IAAD,EACnC,OAAO,2BACFjrB,GADL,kBAEGirB,EAAK5iB,IAAsD,KAAjD,UAAAxc,EAAKA,KAAKo/B,EAAKC,MAAMhX,sBAArB,eAAqC4X,aAEjD,KAhCsC,4CAAH,wDAmC3BC,EAAW,uCAAG,WAAOC,EAAoBrP,GAA3B,2BAAA9xB,EAAA,6DAA2CohC,EAA3C,+BAA2D,IAA3D,kBAElB,IAAIzC,SAAQ,SAAC0C,EAASC,GAC3B,IAAItB,EAAgB,GAEduB,EAAc,uCAAG,WAAOC,GAAP,eAAAxhC,EAAA,+EAEK+/B,EAASqB,EAAeI,EAAS,CAAE1B,SAAUqB,IAFlD,OAIM,KAFnBM,EAFa,QAILtR,OACZkR,EAAQrB,IAERA,EAAK,sBAAOA,GAAP,YAAiByB,IACtBF,EAAeC,EAAUJ,IARR,gDAWnBE,EAAO,EAAD,IAXa,yDAAH,sDAepBC,EAAe,OApBQ,2CAAH,wDCzHlB5iC,EAA4B,CAChC+iC,sBAAuB9Y,IAAyB+Y,QAChD/B,UAAW,GACXgC,kBAAmBhZ,IAAyB+Y,QAC5C3B,MAAO,IAII6B,EAAiBjE,YAC5B,wBAD4C,uCAE5C,uCAAA59B,EAAA,6DAAS81B,EAAT,EAASA,MAAT,IAAgBC,YAAhB,MAAuB,EAAvB,MAA0Bl2B,aAA1B,MAAkC8oB,IAAc+W,OAAhD,WACyBD,EAAa3J,EAAOC,EAAMl2B,GADnD,cACQs2B,EADR,yBAESA,GAFT,2CAF4C,uDAQjC2L,EAAgBlE,YAAmC,uBAAnB,uCAA2C,WAAOuD,GAAP,eAAAnhC,EAAA,sEAC/D6/B,EAAYsB,GADmD,cAChFhL,EADgF,yBAE/EA,GAF+E,2CAA3C,uDAKhC4L,EAAanE,YAGxB,oBAHwC,uCAGnB,iCAAA59B,EAAA,6DAASmhC,EAAT,EAASA,WAAYrP,EAArB,EAAqBA,MAArB,SACEoP,EAAYC,EAAYrP,GAD1B,cACfqE,EADe,yBAEd,CAAE6J,MAAO7J,EAAUgL,eAFL,2CAHmB,uDAQ7Ba,EAAcpE,YAIzB,qBAJyC,uCAInB,yCAAA59B,EAAA,6DAASmhC,EAAT,EAASA,WAAYc,EAArB,EAAqBA,SAAcC,EAAnC,EAAmCA,SACnDriC,EAAQqiC,IACRC,EAAgBtiC,EAAMuiC,OAAOpC,MAAMmB,GAFnB,SAGClB,EAA4BkC,EAAe3Q,OAAOyQ,IAHnD,cAGhB9L,EAHgB,yBAIf,CAAEkG,QAASlG,EAAUgL,eAJN,2CAJmB,yDAuE5BkB,EA5DYpF,YAAY,CACrC1T,KAAM,SACN5qB,eACAu+B,SAAU,GACViC,cAAe,SAACC,GAEdA,EAAQC,QAAQ2C,EAAYzC,WAAW,SAAC1/B,EAAOu9B,GAC7C,MAAgCA,EAAOE,QAA/B6D,EAAR,EAAQA,WAAY9E,EAApB,EAAoBA,QAEhBx8B,EAAMmgC,MAAMmB,KACdthC,EAAMmgC,MAAMmB,GAActhC,EAAMmgC,MAAMmB,GAAY9Z,KAAI,SAAC+Y,GACrD,OAAO,2BACFA,GADL,IAEEkC,UAA+B,IAArBjG,EAAQ+D,EAAK5iB,aAO/B4hB,EAAQC,QAAQwC,EAAevC,SAAS,SAACz/B,GACvCA,EAAM6hC,sBAAwB9Y,IAAyB2Z,WAEzDnD,EAAQC,QAAQwC,EAAetC,WAAW,SAAC1/B,EAAOu9B,GAChD,IAAMwC,EAAYxC,EAAOE,QAAQpoB,QAAO,SAACC,EAAO2qB,GAC9C,OAAO,2BACF3qB,GADL,kBAEG2qB,EAAStiB,GAAKsiB,MAEhB,IAEHjgC,EAAM+/B,UAAY4C,gBAAM,GAAI3iC,EAAM+/B,UAAWA,GAC7C//B,EAAM6hC,sBAAwB9Y,IAAyB6Z,QAIzDrD,EAAQC,QAAQyC,EAAcxC,SAAS,SAACz/B,GACtCA,EAAM6hC,sBAAwB9Y,IAAyB2Z,WAEzDnD,EAAQC,QAAQyC,EAAcvC,WAAW,SAAC1/B,EAAOu9B,GAC/Cv9B,EAAM+/B,UAAUxC,EAAOE,QAAQ9f,IAAM4f,EAAOE,QAC5Cz9B,EAAM6hC,sBAAwB9Y,IAAyB6Z,QAIzDrD,EAAQC,QAAQ0C,EAAWzC,SAAS,SAACz/B,GACnCA,EAAM+hC,kBAAoBhZ,IAAyB2Z,WAErDnD,EAAQC,QAAQ0C,EAAWxC,WAAW,SAAC1/B,EAAOu9B,GAC5C,MAA8BA,EAAOE,QAA7B0C,EAAR,EAAQA,MAAOmB,EAAf,EAAeA,WAEfthC,EAAMmgC,MAAN,2BACKngC,EAAMmgC,OADX,kBAEGmB,EAAanB,IAEhBngC,EAAM+hC,kBAAoBhZ,IAAyB6Z,WAKzD,Q,2CCzGaC,GAA2B,KCYlCC,GAAkB3jB,cAElB4jB,GAAoC,SAACzM,EAAU0M,GACnD,IACElL,EAaExB,EAbFwB,OACAmL,EAYE3M,EAZF2M,UACAC,EAWE5M,EAXF4M,QACAC,EAUE7M,EAVF6M,kBACAC,EASE9M,EATF8M,gBACAC,EAQE/M,EARF+M,YACAC,EAOEhN,EAPFgN,cACAC,EAMEjN,EANFiN,aACAC,EAKElN,EALFkN,sBACAC,EAIEnN,EAJFmN,YACAC,EAGEpN,EAHFoN,eACAC,EAEErN,EAFFqN,uBACAC,EACEtN,EADFsN,iBAGIC,EAAYtiC,OAAOC,KAAK5C,MAAek5B,GACvCgM,EAA2BJ,EAAelc,KAAI,SAACuc,GAAD,OAAmBl/B,aAA4Bk/B,MAC7FC,EAAmCL,EAAuBnc,KAAI,SAACyc,GAAD,OAClEp/B,aAA4Bo/B,MAExBC,EAA6BN,EAAiBpc,KAAI,SAAC2c,GAAD,OAAYt/B,aAA4Bs/B,MAEhG,MAAO,CACL9E,WAAW,EACX2D,YACAlL,OAAQl5B,KAAcilC,GACtBZ,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWnhC,WACtBohC,QAAO,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAASphC,WAClBqhC,kBAAmBt+B,aAA4Bs+B,GAC/CC,gBAAe,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAiBthC,WAClCuhC,YAAW,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAavhC,WAC1BwhC,cAAa,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAexhC,WAC9ByhC,aAAY,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAczhC,WAC5B0hC,sBAAuB3+B,aAA4B2+B,GACnDC,cACAC,eAAgBI,EAChBH,uBAAwBK,EACxBJ,iBAAkBM,IAIhBE,GAAkC,SAACpB,GACvC,MAAO,CACL3D,WAAW,EACX2D,YACAlL,OAAQl5B,KAAcylC,QACtBpB,UAAW,GACXC,QAAS,GACTC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,KACbC,eAAgB,GAChBC,uBAAwB,GACxBC,iBAAkB,KAITU,GAAY,uCAAG,WAAOtB,GAAP,eAAA7iC,EAAA,+EAEE2iC,GAAgByB,YAAYvB,GAF9B,cAElBwB,EAFkB,yBAGjBzB,GAAkCyB,EAAaxB,IAH9B,yDAKjBoB,GAAgCpB,IALf,yDAAH,sDASZyB,GAAsB,uCAAG,WAAOC,GAAP,mBAAAvkC,EAAA,6DAC9B8oB,EAAQyb,EAAWld,KAAI,SAAC7J,GAAD,MAAS,CACpC+L,KAAM,cACN5T,QAASI,cACTyT,OAAQ,CAAChM,OAJyB,kBAOPsM,YAAY7K,GAAc6J,EAAO,CAAEiB,gBAAgB,IAP5C,cAO5Bya,EAP4B,OAQ5BC,EAAqBD,EAAand,KAAI,SAACsC,EAAKuN,GAAN,OAC1C0L,GAAkCjZ,EAAI,GAAI4a,EAAWrN,OATrB,kBAW3BuN,GAX2B,uCAalCviB,QAAQD,MAAR,MAbkC,kBAc3B6G,EAAMzB,KAAI,SAAC+B,EAAM8N,GAAP,OAAiB+M,GAAgCM,EAAWrN,QAd3C,yDAAH,sDAkBtBwN,GAA8B,uCAAG,wCAAA1kC,EAAA,sEAEpC8oB,EAAQ,CAAC,mBAAoB,iCAAiCzB,KAAI,SAACiQ,GAAD,MAAa,CACnF3hB,QAASI,cACTwT,KAAM+N,MAJkC,SAM2BxN,YACnE7K,GACA6J,GARwC,gEAMlC6b,EANkC,2BAMdC,EANc,uBAWnC,CACLD,iBAAkBA,EAAmBA,EAAiBhjC,WAAa,KACnEijC,8BAA+BA,EAAgCA,EAA8BjjC,WAAa,OAblE,2DAgBnC,CACLgjC,iBAAkB,KAClBC,8BAA+B,OAlBS,0DAAH,qDAuB9BC,GAAmB,SAACF,GAG/B,IAFA,IAAMG,EAAiBhiC,SAAS6hC,EAAkB,IAC5CI,EAAW,GACRnb,EAAI,EAAGA,EDhI4B,ECgIQA,IAClDmb,EAAS1H,KAAKyH,EAAiBlb,GAEjC,OAAOmb,EAAS1d,KAAI,SAAC2d,GAAD,OAAaA,EAAQrjC,eA4C9BsjC,GAAsB,SAACC,GAElC,OADuBA,EAAQ3d,QAAO,SAAC4d,GAAD,OAAYA,EAAOxN,UACnCxH,OAAS,GCzK3BiV,GAAwC,SAC5CC,EACAC,GAGA,GAA6B,IAAzBA,EAAcnV,OAChB,OAAOkV,EAAShe,KAAI,SAACke,GACnB,MAAO,CACLxC,QAASwC,EAAUxC,QACnBO,YAAaiC,EAAUjC,YAAY3hC,WACnCmhC,UAAWyC,EAAUzC,UACrBnL,OAAQ4N,EAAU5N,OAClBna,GAAI+nB,EAAU1C,UAAUlhC,WACxB6jC,YAAaD,EAAUvC,kBACvByC,aAAc,GACdC,WAAY,GACZC,eAAgB,OAMtB,IAAMC,EAA0BP,EAAShe,KAAI,SAACwe,GAC5C,IAAMC,EAAiBR,EAAc5nB,MAAK,SAACqoB,GAAD,OAAwBA,EAAmBvoB,KAAOqoB,EAAchD,aAC1G,MAAO,CACLE,QAAS8C,EAAc9C,QACvBO,YAAauC,EAAcvC,YAAY3hC,WACvCmhC,UAAW+C,EAAc/C,UACzBnL,OAAQkO,EAAclO,OACtBna,GAAIqoB,EAAchD,UAClB2C,YAAW,OAAEM,QAAF,IAAEA,OAAF,EAAEA,EAAgBN,YAC7BC,aAAY,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAgBL,aAC9BC,WAAU,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAgBJ,WAC5BC,eAAc,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAgBH,mBAKpC,EAAgCC,EAAwBI,OAAO,GAAxDC,EAAP,oBACMC,EAA6BZ,EAChCje,KAAI,SAAC8e,GAAD,cAAgBA,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAY3oB,MAChCuc,QAFgC,OAExBkM,QAFwB,IAExBA,OAFwB,EAExBA,EAAuBzoB,IAE5B4oB,EAA0Bd,EAAgBA,EAAce,OAAOH,EAA6B,GAAK,GAEvG,MADoB,sBAAON,GAAP,YAAmCQ,KAI5CE,GAAiB,uCAAG,8CAAAtmC,EAAA,6DAC/B81B,EAD+B,+BArDS,IAuDxCC,EAF+B,+BAExB,EACPF,EAH+B,+BAGP,GAHO,kBAMNG,kBACrBuQ,IACArQ,cAF6B,MAAD,6bAiB5B,CAAEH,OAAMD,QAAOD,UAvBY,cAMvBM,EANuB,yBAyBtBA,EAASqQ,WAzBa,yCA2B7BtkB,QAAQD,MAAR,MA3B6B,kBA4BtB,IA5BsB,0DAAH,qDAwCfwkB,GARO,uCAAG,WAAO9B,GAAP,qBAAA3kC,EAAA,6DACjB0mC,EAAkB7B,GAAiBF,GADlB,SAEAL,GAAuBoC,GAFvB,cAEjBrB,EAFiB,gBAGKiB,KAHL,cAGjBhB,EAHiB,OAIjBqB,EAAavB,GAAsCC,EAAUC,GAJ5C,kBAKhBqB,GALgB,2CAAH,sDCrFhBhE,GAAkB3jB,cAEX4nB,GAA4B,SAACC,GACxC,kBAAmDA,EAAnD,GAAOC,EAAP,KAAkBC,EAAlB,KAAiCC,EAAjC,KAEA,OAAa,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAW3W,QAAS,EACf2W,EAAUzf,KAAI,SAAC4f,EAAU/P,GAC9B,MAAO,CACL1Z,GAAIypB,EAAStlC,WACbiE,OAAQmhC,EAAc7P,GAAOv1B,WAC7Bg2B,OAAQqP,EAAe9P,OAItB,IAGIgQ,GAAwB,uCAAG,WACtChvB,EACA2qB,EACAzJ,EACA+N,GAJsC,eAAAnnC,EAAA,+EAOjB2iC,GAAgBuE,yBAAyBhvB,EAAS2qB,EAAWzJ,EAAQ+N,GAPpD,cAO9BnmC,EAP8B,yBAQ7B4lC,GAA0B5lC,IARG,uCAUpCkhB,QAAQD,MAAM,2BAAd,MAVoC,kBAW7B,MAX6B,yDAAH,4DAexBmlB,GAA2B,uCAAG,WAAOlvB,EAAiB2qB,GAAxB,qBAAA7iC,EAAA,sDACrCo5B,EAAS,EACTiO,EAAc3E,GACZ4E,EAAa,GAHsB,UAKlCD,IAAgB3E,GALkB,iCAOhBwE,GAAyBhvB,EAAS2qB,EAAWzJ,EAAQsJ,IAPrC,OAOjCvM,EAPiC,OAQvCiD,GAAUsJ,GACV2E,EAAclR,EAAShG,OACvBmX,EAAWjK,KAAX,MAAAiK,EAAU,YAASnR,IAVoB,gDAalCmR,GAbkC,4CAAH,wDAgB3BC,GAAiC,uCAAG,WAC/CC,EACAtvB,GAF+C,qBAAAlY,EAAA,sDAIzCynC,EAA2B,GACxB7d,EAAI,EALkC,YAK/BA,EAAI4d,EAAWrX,QALgB,wBAMvC6U,EAAUwC,EAAW5d,GANkB,SAQfwd,GAA4BlvB,EAAS8sB,GARtB,OAQvC0C,EARuC,OAS7CD,EAAyBpK,KAAK,CAC5B2H,UACA2C,YAAaD,IAX8B,OAKR9d,GAAK,EALG,gDAcxC6d,GAdwC,4CAAH,wDCzCxCG,GAAmC,SACvCC,EACAC,EACAC,GAGA,GAA6B,IAAzBD,EAAc3X,OAChB,OAAO4X,EAAgB1gB,KAAI,SAACke,GAC1B,IAAMyC,EAAqBH,EAAanqB,MAAK,SAACuqB,GAAD,OAAkBA,EAAajD,UAAYO,EAAU1C,aAClG,MAAO,CACLE,QAASwC,EAAUxC,QACnBpL,OAAQ4N,EAAU5N,OAClBkL,UAAW0C,EAAU1C,UAAUlhC,WAC/BwwB,QAAS8S,GAAoB+C,EAAmBL,aAChDlC,aAAa,GAAD,OAAKuC,EAAmBL,YAAYxX,OAAOxuB,YACvDujC,QAAS8C,EAAmBL,gBAMlC,IAAM/B,EAA0BiC,EAAaxgB,KAAI,SAAC6gB,GAChD,IAAMC,EAAiBL,EAAcpqB,MACnC,SAACqoB,GAAD,OAAwBA,EAAmBlD,YAAcqF,EAAclD,WAEnEa,EAAgBkC,EAAgBrqB,MAAK,SAAC6nB,GAAD,OAAeA,EAAU1C,YAAcqF,EAAclD,WAChG,MAAO,CACLjC,QAAS8C,EAAc9C,QACvBpL,OAAQkO,EAAclO,OACtBkL,UAAWgD,EAAchD,UAAUlhC,WACnCwwB,QAAS8S,GAAoBiD,EAAcP,aAC3ClC,cAA4B,OAAd0C,QAAc,IAAdA,OAAA,EAAAA,EAAgB1C,eAAgByC,EAAcP,YAAYxX,OAAOxuB,WAC/EujC,QAASgD,EAAcP,gBAK3B,EAAgC/B,EAAwBI,OAAO,GAAxDC,EAAP,oBACMC,EAA6B4B,EAChCzgB,KAAI,SAAC8e,GAAD,cAAgBA,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAYtD,aAChC9I,QAFgC,OAExBkM,QAFwB,IAExBA,OAFwB,EAExBA,EAAuBpD,WAC5BuD,EAA0B0B,EAAgBA,EAAczB,OAAOH,EAA6B,GAAK,GAEvG,MADoB,sBAAON,GAAP,YAAmCQ,KAI5CgC,GAAmB,uCAAG,WACjClwB,GADiC,uCAAAlY,EAAA,6DAEjC81B,EAFiC,+BAnDY,IAsD7CC,EAHiC,+BAG1B,EACPF,EAJiC,+BAIL,GAGtBwS,EAAY,CAChBnwB,UACAowB,UAAW,GACX7C,aAAc,GACdjN,OAAQ,IAXuB,kBAeRxC,kBACrBuQ,IACArQ,cAF6B,MAAD,iiBAqB5B,CAAEhe,QAASA,EAAQmR,cAAeyM,QAAOC,OAAMF,UApClB,OAezBM,EAfyB,OAsCzBoS,EAAUpS,EAAS1S,KAMvBA,EAHG8kB,EAGI,CACLrwB,QAASqwB,EAAQ/qB,GACjB8qB,UAAWC,EAAQD,UACnB7C,aAAc8C,EAAQ9C,aACtBjN,OAAQ+P,EAAQ/P,OAAOnR,KAAI,SAACuL,GAAW,IAAD,MACpC,MAAO,CACLiQ,UAAS,OAAEjQ,QAAF,IAAEA,GAAF,UAAEA,EAAO4V,eAAT,aAAE,EAAgBhrB,GAC3BulB,QAAO,OAAEnQ,QAAF,IAAEA,GAAF,UAAEA,EAAO4V,eAAT,aAAE,EAAgBzF,QACzB5Q,QAAO,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAOT,QAChBsT,aAAY,OAAE7S,QAAF,IAAEA,OAAF,EAAEA,EAAO6S,aACrB9N,OAAM,OAAE/E,QAAF,IAAEA,GAAF,UAAEA,EAAO4V,eAAT,aAAE,EAAgB7Q,OAAOtO,mBAZ9Bgf,EA1CsB,kDA4D/BnmB,QAAQD,MAAR,MACAwB,EAAO4kB,EA7DwB,iCAgE1B5kB,GAhE0B,0DAAH,sDA+EjBglB,GAZS,uCAAG,WAAOvwB,EAAiBysB,GAAxB,6BAAA3kC,EAAA,6DACnB0oC,EAAwB7D,GAAiBF,GADtB,SAEa4C,GAAkCmB,EAAuBxwB,GAFtE,cAEnBywB,EAFmB,OAGnBC,EAAqBD,EAAwBphB,QAAO,SAACqL,GAAD,OAAWA,EAAM+U,YAAYxX,OAAS,KAC1F0Y,EAA0BD,EAAmBvhB,KAAI,SAACuL,GAAD,OAAWA,EAAMoS,WAJ/C,SAKOV,GAAuBuE,GAL9B,cAKnBC,EALmB,iBAMGV,GAAoBlwB,GANvB,eAMnBotB,EANmB,OAOnByD,EAAkBnB,GAAiCgB,EAAoBtD,EAAc9M,OAAQsQ,GAC7FE,EARmB,2BAQgB1D,GARhB,IAQ+B9M,OAAQuQ,IARvC,kBASlBC,GATkB,4CAAH,wDChHlBrqC,GAA6B,CACjCgmC,iBAAkB,KAClBsE,iBAAiB,EACjBrE,8BAA+B,KAC/BsE,aAAc,CACZhK,WAAW,EACX2D,UAAW,KACXlL,OAAQl5B,KAAcylC,QACtBpB,UAAW,GACXC,QAAS,GACTC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,KACbC,eAAgB,GAChBC,uBAAwB,GACxBC,iBAAkB,GAClBkE,YAAa,CACXzI,WAAW,EACXgG,QAAS,KAGbiE,cAAe,KACfC,gBAAiB,CAAElxB,QAAS,GAAIowB,UAAW,GAAI7C,aAAc,GAAIjN,OAAQ,KAG9D6Q,GAAsBzL,YACjC,8BADiD,uCAEjD,+BAAA59B,EAAA,6DAAS2kC,EAAT,EAASA,iBAAT,SAC4BR,GAAaQ,GADzC,cACQ2E,EADR,yBAESA,GAFT,2CAFiD,uDAQtCC,GAAwB3L,YAAoC,gCAApB,sBAAqD,4BAAA59B,EAAA,sEACvE0kC,KADuE,cAClG8E,EADkG,yBAEjGA,GAFiG,4CAK7FC,GAA+B7L,YAG1C,uCAH0D,uCAGlB,uCAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAASysB,EAAlB,EAAkBA,iBAAlB,SACT8D,GAAmBvwB,EAASysB,GADnB,UAClC+E,EADkC,OAElCC,EAFkC,UAEAD,EAAiBlR,cAFjB,aAEA,EAAyB9a,MAAK,SAACkV,GAAD,OAAWA,EAAMiQ,YAAc8B,MAC/FgD,EAHkC,OAGpBgC,QAHoB,IAGpBA,OAHoB,EAGpBA,EAAiCzE,UAGV,IAAvByC,EAAYxX,OANQ,yCAO/B,CAAEwX,YAAa,KAAMiC,cAAeF,IAPL,gCAUjC,CAAE/B,cAAaiC,cAAeF,IAVG,2CAHkB,uDAgB/CG,GAAuBjM,YAClC,+BADkD,uCAElD,+BAAA59B,EAAA,6DAAS2kC,EAAT,EAASA,iBAAT,SAC0B8B,GAAiB9B,GAD3C,cACQ6B,EADR,yBAESA,GAFT,2CAFkD,uDAQvCsD,GAAqBlM,YAGhC,6BAHgD,uCAGlB,iCAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAASysB,EAAlB,EAAkBA,iBAAlB,SACF8D,GAAmBvwB,EAASysB,GAD1B,cACxBiF,EADwB,yBAEvBA,GAFuB,2CAHkB,uDAQrCG,GAA+BnM,YAG1C,uCAH0D,uCAGlB,iCAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAAS6d,EAAlB,EAAkBA,KAAlB,SACFqS,GAAoBlwB,OAAS5Y,EAAWy2B,GADtC,cAClCiU,EADkC,yBAEjCA,GAFiC,2CAHkB,uDAQ/CC,GAA4BrM,YAAgB,oEAEvD,6BAAA59B,EAAA,6DAASipC,EAAT,EAASA,gBAAT,kBACS,CAAEA,oBADX,2CAFuD,uDAO5CiB,GAAejN,YAAY,CACtC1T,KAAM,UACN5qB,gBACAu+B,SAAU,CACRiN,qBAAsB,SAACtqC,EAAOu9B,GACpBA,EAAOE,UAGnB6B,cAAe,SAACC,GACdA,EAAQC,QAAQgK,GAAoB9J,WAAW,SAAC1/B,EAAOu9B,GACrDv9B,EAAMqpC,aAAN,2BAA0BrpC,EAAMqpC,cAAiB9L,EAAOE,YAE1D8B,EAAQC,QAAQkK,GAAsBhK,WAAW,SAAC1/B,EAAOu9B,GACvDv9B,EAAM8kC,iBAAmBvH,EAAOE,QAAQqH,iBACxC9kC,EAAM+kC,8BAAgCxH,EAAOE,QAAQsH,iCAEvDxF,EAAQC,QACNoK,GAA6BlK,WAC7B,SAAC1/B,EAAOu9B,GACNv9B,EAAMqpC,aAAavB,YAAYzI,WAAY,EAC3Cr/B,EAAMqpC,aAAavB,YAAYzC,QAAU9H,EAAOE,QAAQqK,YACxD9nC,EAAMupC,gBAAkBhM,EAAOE,QAAQsM,iBAG3CxK,EAAQC,QAAQwK,GAAqBtK,WAAW,SAAC1/B,EAAOu9B,GACtDv9B,EAAMspC,cAAgB/L,EAAOE,WAE/B8B,EAAQC,QAAQyK,GAAmBvK,WAAW,SAAC1/B,EAAOu9B,GACpDv9B,EAAMupC,gBAAkBhM,EAAOE,WAEjC8B,EAAQC,QAAQ0K,GAA6BxK,WAAW,SAAC1/B,EAAOu9B,GAC9D,IAAMgN,EAAY,sBAAOvqC,EAAMupC,gBAAgB5Q,QAA7B,YAAwC4E,EAAOE,QAAQ9E,SACzE34B,EAAMupC,gBAAgB5Q,OAAS4R,KAEjChL,EAAQC,QACN4K,GAA0B1K,WAC1B,SAAC1/B,EAAOu9B,GACNv9B,EAAMopC,gBAAkB7L,EAAOE,QAAQ2L,sBAShCiB,IAFyBA,GAAaxM,QAAtCyM,qBAEAD,GAAf,SChJaG,GAAqBnnC,YAA6C,oCAClEonC,GAA0BpnC,YACrC,yCAEWqnC,GAA6BrnC,YACxC,4CAGWsnC,GAAiBtnC,YAAoC,6BACrDunC,GAAcvnC,YAA0C,0BACxDwnC,GAAsBxnC,YACjC,kCAEWynC,GAAyBznC,YACpC,qCAGW0nC,GAAkB1nC,YAAsC,+BACxD2nC,GAAe3nC,YAA2C,4BAC1D4nC,GAAwB5nC,YACnC,qCAEW6nC,GAAuB7nC,YAClC,oCAEW8nC,GAA0B9nC,YACrC,uCAEW+nC,GAAuB/nC,YAKjC,oCClBGvE,GAA0B,CAC9BusC,SAAU,CACRC,cAAU7rC,EACV8rC,eAAW9rC,EACX+rC,kBAAc/rC,GAEhBgsC,MAAO,CAAEC,UAAW,IACpBt2B,OAAQ,CAAEs2B,UAAW,KAGRC,eAAc7sC,IAAc,SAACygC,GAAD,OACzCA,EAEGC,QAAQgL,IAAoB,SAACxqC,EAAD,GAA2C,IAAtB4rC,EAAqB,EAAhCnO,QAAWmO,aAChD5rC,EAAMqrC,SAASC,SAAWM,KAE3BpM,QAAQiL,IAAyB,SAACzqC,EAAD,GAAwC,IAAnBurC,EAAkB,EAA7B9N,QAAW8N,UACrDvrC,EAAMqrC,SAASE,UAAYA,KAE5B/L,QAAQkL,IAA4B,SAAC1qC,EAAD,GAA2C,IAAtBwrC,EAAqB,EAAhC/N,QAAW+N,aACxDxrC,EAAMqrC,SAASG,aAAeA,KAG/BhM,QAAQmL,IAAgB,SAAC3qC,EAAD,GAAmC,EAAzBy9B,QAAWgO,MACtChqC,SAAQ,SAACoqC,GACb7rC,EAAMyrC,MAAMC,UAAUG,EAAS/1B,SAA/B,2BACK9V,EAAMyrC,MAAMC,UAAUG,EAAS/1B,UADpC,IAEE3U,KAAM0qC,UAIXrM,QAAQoL,IAAa,SAAC5qC,EAAD,GAA2C,EAAjCy9B,QAAWqO,cAC3BrqC,SAAQ,SAACqU,GAChB9V,EAAMyrC,MAAMC,UAAU51B,KACzB9V,EAAMyrC,MAAMC,UAAU51B,GAAW,CAC/B3U,UAAM1B,EACN8rC,eAAW9rC,EACX+rC,kBAAc/rC,UAKrB+/B,QAAQqL,IAAqB,SAAC7qC,EAAD,GAAqD,IAAD,IAA1Cy9B,QAAWsO,EAA+B,EAA/BA,YAAaR,EAAkB,EAAlBA,UAC9DvrC,EAAMyrC,MAAMC,UAAUK,GAAtB,2BAA0C/rC,EAAMyrC,MAAMC,UAAUK,IAAhE,IAA8ER,iBAE/E/L,QAAQsL,IAAwB,SAAC9qC,EAAD,GAAwD,IAAD,IAA7Cy9B,QAAWsO,EAAkC,EAAlCA,YAAaP,EAAqB,EAArBA,aACjExrC,EAAMyrC,MAAMC,UAAUK,GAAtB,2BAA0C/rC,EAAMyrC,MAAMC,UAAUK,IAAhE,IAA8EP,oBAG/EhM,QAAQuL,IAAiB,SAAC/qC,EAAD,GAAoC,EAA1By9B,QAAWroB,OACtC3T,SAAQ,SAACuqC,GACdhsC,EAAMoV,OAAOs2B,UAAUM,EAAUl2B,SAAjC,2BACK9V,EAAMoV,OAAOs2B,UAAUM,EAAUl2B,UADtC,IAEE3U,KAAM6qC,UAIXxM,QAAQwL,IAAc,SAAChrC,EAAD,GAA4C,EAAlCy9B,QAAWwO,eAC3BxqC,SAAQ,SAACqU,GACjB9V,EAAMoV,OAAOs2B,UAAU51B,KAC1B9V,EAAMoV,OAAOs2B,UAAU51B,GAAW,CAChCg2B,mBAAersC,EACf0B,UAAM1B,EACN8rC,eAAW9rC,EACXysC,UAAW,GACXV,kBAAc/rC,UAKrB+/B,QAAQyL,IAAuB,SAACjrC,EAAD,GAA0D,IAAD,IAA/Cy9B,QAAWlb,EAAoC,EAApCA,aAAcupB,EAAsB,EAAtBA,cACjE9rC,EAAMoV,OAAOs2B,UAAUnpB,GAAvB,2BAA4CviB,EAAMoV,OAAOs2B,UAAUnpB,IAAnE,IAAkFupB,qBAEnFtM,QAAQ0L,IAAsB,SAAClrC,EAAD,GAAsD,IAAD,IAA3Cy9B,QAAWlb,EAAgC,EAAhCA,aAAcgpB,EAAkB,EAAlBA,UAChEvrC,EAAMoV,OAAOs2B,UAAUnpB,GAAvB,2BAA4CviB,EAAMoV,OAAOs2B,UAAUnpB,IAAnE,IAAkFgpB,iBAEnF/L,QAAQ2L,IAAyB,SAACnrC,EAAD,GAAyD,IAAD,IAA9Cy9B,QAAWlb,EAAmC,EAAnCA,aAAcipB,EAAqB,EAArBA,aACnExrC,EAAMoV,OAAOs2B,UAAUnpB,GAAvB,2BAA4CviB,EAAMoV,OAAOs2B,UAAUnpB,IAAnE,IAAkFipB,oBAEnFhM,QACC4L,IACA,SAACprC,EAAD,GAA+F,IAAD,MAApFy9B,QAAWlb,EAAyE,EAAzEA,aAAc4pB,EAA2D,EAA3DA,gBAAiBD,EAA0C,EAA1CA,UAAWE,EAA+B,EAA/BA,uBAC7DpsC,EAAMoV,OAAOs2B,UAAUnpB,GAAvB,2BACKviB,EAAMoV,OAAOs2B,UAAUnpB,IAD5B,IAEE2pB,UAAU,2BACLlsC,EAAMoV,OAAOs2B,UAAUnpB,GAAc2pB,WADjC,uBAENC,EAAkBD,GAFZ,uCAGPE,GAHO,YCnGNC,GAAgBhpC,YAAmB,wB,2BC6B1CipC,GAAmB,kBAAM,IAAIC,MAAOC,WA8C1C,SAASC,GAAQC,EAAuBC,GACtC,MAAM,GAAN,OAAUD,EAAV,YAA2BC,GAGtB,I,GAAM7tC,GAA0B,CACrCilB,gBAAgB,EAChBQ,mBAAmB,EACnBG,sBAAuBnK,KACvBsL,aAAcrL,KACdpF,OAAQ,GACRyS,MAAO,GACP+kB,UAAWN,KACX5oB,WAAW,EACXU,QAAQ,EACRyoB,mBAAoBtxB,KAAeuxB,YACnCloB,oBAAoB,EACpBG,kBAAmBvJ,KAASuxB,MAC5BC,kBAAmBxxB,KAASuxB,MAC5B7nB,4BAA4B,EAC5BI,mCAAmC,EACnCI,mCAAmC,EACnCunB,wBAAwB,EACxB5mB,SAAUC,KAAc,QACxB4mB,gBAAiB,GACjBC,eAAgB,IAGHxB,eAAc7sC,IAAc,SAACygC,GAAD,OACzCA,EACGC,QAAQ6M,IAAe,SAACrsC,GAGoB,kBAAhCA,EAAM0kB,wBACf1kB,EAAM0kB,sBAAwBnK,MAKE,kBAAvBva,EAAM6lB,eACf7lB,EAAM6lB,aAAerL,MAGvBxa,EAAMotC,2BAA6Bd,QAEpC9M,QAAQ/jB,MAAsB,SAACzb,EAAOu9B,GACrCv9B,EAAM+jB,eAAiBwZ,EAAOE,QAAQ1Z,eACtC/jB,EAAM4sC,UAAYN,QAEnB9M,QAAQ7jB,MAA6B,SAAC3b,EAAOu9B,GAC5Cv9B,EAAM0kB,sBAAwB6Y,EAAOE,QAAQ/Y,sBAC7C1kB,EAAM4sC,UAAYN,QAEnB9M,QAAQ5jB,MAAoB,SAAC5b,EAAOu9B,GACnCv9B,EAAM6lB,aAAe0X,EAAOE,QAAQ5X,aACpC7lB,EAAM4sC,UAAYN,QAEnB9M,QAAQ9jB,MAAyB,SAAC1b,EAAOu9B,GACxCv9B,EAAMukB,kBAAoBgZ,EAAOE,QAAQlZ,qBAE1Cib,QAAQ3jB,MAAoB,SAAC7b,EAAD,GAA8C,IAAzBimB,EAAwB,EAAnCwX,QAAWxX,gBAC3CjmB,EAAMoV,SACTpV,EAAMoV,OAAS,IAEjBpV,EAAMoV,OAAO6Q,EAAgBxjB,SAAWzC,EAAMoV,OAAO6Q,EAAgBxjB,UAAY,GACjFzC,EAAMoV,OAAO6Q,EAAgBxjB,SAASwjB,EAAgBnQ,SAAWmQ,EACjEjmB,EAAM4sC,UAAYN,QAEnB9M,QAAQ1jB,MAAuB,SAAC9b,EAAD,GAA+C,IAAD,IAApCy9B,QAAW3nB,EAAyB,EAAzBA,QAASrT,EAAgB,EAAhBA,QACvDzC,EAAMoV,SACTpV,EAAMoV,OAAS,IAEjBpV,EAAMoV,OAAO3S,GAAWzC,EAAMoV,OAAO3S,IAAY,UAC1CzC,EAAMoV,OAAO3S,GAASqT,GAC7B9V,EAAM4sC,UAAYN,QAEnB9M,QAAQzjB,MAAmB,SAAC/b,EAAD,GAA6C,IAAxB8mB,EAAuB,EAAlC2W,QAAW3W,eAC/C,GACEA,EAAeH,OAAOlkB,UAAYqkB,EAAeF,OAAOnkB,SACxDqkB,EAAeH,OAAO7Q,UAAYgR,EAAeF,OAAO9Q,QACxD,CACA,IAAQrT,EAAYqkB,EAAeH,OAA3BlkB,QACRzC,EAAM6nB,MAAMplB,GAAWzC,EAAM6nB,MAAMplB,IAAY,GAC/CzC,EAAM6nB,MAAMplB,GAASgqC,GAAQ3lB,EAAeH,OAAO7Q,QAASgR,EAAeF,OAAO9Q,UAAYgR,EAEhG9mB,EAAM4sC,UAAYN,QAEnB9M,QAAQxjB,MAAsB,SAAChc,EAAD,GAAoE,IAAD,IAAzDy9B,QAAWh7B,EAA8C,EAA9CA,QAAS4qC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,cACtEttC,EAAM6nB,MAAMplB,YAEPzC,EAAM6nB,MAAMplB,GAASgqC,GAAQY,EAAeC,WAC5CttC,EAAM6nB,MAAMplB,GAASgqC,GAAQa,EAAeD,KAErDrtC,EAAM4sC,UAAYN,QAEnB9M,QAAQvjB,MAAW,SAACjc,GACnBA,EAAM0jB,WAAY,KAEnB8b,QAAQtjB,MAAa,SAAClc,GACrBA,EAAM0jB,WAAY,KAEnB8b,QAAQrjB,MAAa,SAACnc,GACrBA,EAAMokB,QAAUpkB,EAAMokB,UAEvBob,QAAQpjB,MAA0B,SAACpc,EAAD,GAAiD,IAA5B6sC,EAA2B,EAAtCpP,QAAWoP,mBACtD7sC,EAAM6sC,mBAAqBA,KAE5BrN,QAAQnjB,MAA0B,SAACrc,EAAD,GAAiD,IAA5B4kB,EAA2B,EAAtC6Y,QAAW7Y,mBACtD5kB,EAAM4kB,mBAAqBA,KAE5B4a,QAAQljB,MAAyB,SAACtc,EAAD,GAAgD,IAA3B+kB,EAA0B,EAArC0Y,QAAW1Y,kBACrD/kB,EAAM+kB,kBAAoBA,KAE3Bya,QAAQjjB,MAAyB,SAACvc,EAAD,GAAgD,IAA3BgtC,EAA0B,EAArCvP,QAAWuP,kBACrDhtC,EAAMgtC,kBAAoBA,KAE3BxN,QAAQhjB,MAAkC,SAACxc,EAAD,GAA+C,IAA1BolB,EAAyB,EAApCqY,QAAWrY,iBAC9DplB,EAAMklB,2BAA6BE,KAEpCoa,QAAQ/iB,MAAyC,SAACzc,EAAD,GAAiD,IAA5BwlB,EAA2B,EAAtCiY,QAAWjY,mBACrExlB,EAAMslB,kCAAoCE,KAE3Cga,QAAQ9iB,MAAyC,SAAC1c,EAAD,GAAgE,IAA3C0lB,EAA0C,EAArD+X,QAAW/X,kCACrE1lB,EAAM0lB,kCAAoCA,KAE3C8Z,QAAQ7iB,MAA8B,SAAC3c,EAAD,GAAqD,IAAhCitC,EAA+B,EAA1CxP,QAAWwP,uBAC1DjtC,EAAMitC,uBAAyBA,KAEhCzN,QAAQ5iB,MAAgB,SAAC5c,EAAOu9B,GAC/Bv9B,EAAMqmB,SAAWkX,EAAOE,QAAQpX,YAEjCmZ,QAAQ3iB,MAAmB,SAAC7c,EAAD,GAAsC,IAAD,EAAhB8V,EAAgB,EAA3B2nB,QAAW3nB,QAEzCy3B,EAAc,UAAGvtC,EAAMktC,uBAAT,QAA4B,GAChD,GAAKK,EAAeje,SAASxZ,GAEtB,CAEL,IAAM03B,EAAYxtC,EAAMktC,gBAAgBxlB,QAAO,SAACuS,GAAD,OAAOA,IAAMnkB,KAC5D9V,EAAMktC,gBAAkBM,OAJxBxtC,EAAMktC,gBAAN,sBAA4BK,GAA5B,CAA4Cz3B,OAO/C0pB,QAAQ1iB,MAAkB,SAAC9c,EAAD,GAAsC,IAAD,EAAhB8V,EAAgB,EAA3B2nB,QAAW3nB,QAExC23B,EAAc,UAAGztC,EAAMmtC,sBAAT,QAA2B,GAC/C,GAAKM,EAAene,SAASxZ,GAEtB,CAEL,IAAM43B,EAAW1tC,EAAMmtC,eAAezlB,QAAO,SAACuS,GAAD,OAAOA,IAAMnkB,KAC1D9V,EAAMmtC,eAAiBO,OAJvB1tC,EAAMmtC,eAAN,sBAA2BM,GAA3B,CAA2C33B,U,UCtN7C63B,GAAM,kBAAM,IAAIpB,MAAOC,WAsBdb,eAF+B,IAEH,SAACpM,GAAD,OACzCA,EACGC,QAAQoO,MAAgB,SAACpC,EAAD,GAAmF,IAAD,QAAjE/N,QAAWh7B,EAAsD,EAAtDA,QAASiE,EAA6C,EAA7CA,KAAMsrB,EAAuC,EAAvCA,KAAM6b,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,MAC3F,aAAIvC,EAAa/oC,UAAjB,aAAI,EAAwBuvB,GAC1B,MAAM3vB,MAAM,0CAEd,IAAM2rC,EAAG,UAAGxC,EAAa/oC,UAAhB,QAA4B,GACrCurC,EAAIhc,GAAQ,CAAEA,OAAM6b,WAAUC,UAASC,QAAOrnC,OAAMunC,UAAWN,MAC/DnC,EAAa/oC,GAAWurC,KAEzBxO,QAAQ0O,MAAsB,SAAC1C,EAAD,GAA6C,IAAjB/oC,EAAgB,EAA3Bg7B,QAAWh7B,QACpD+oC,EAAa/oC,KAClB+oC,EAAa/oC,GAAW,OAEzB+8B,QAAQ2O,MAAoB,SAAC3C,EAAD,GAAgE,IAAD,MAA9C/N,QAAWh7B,EAAmC,EAAnCA,QAASuvB,EAA0B,EAA1BA,KAAM0I,EAAoB,EAApBA,YAChE0T,EAAE,UAAG5C,EAAa/oC,UAAhB,aAAG,EAAwBuvB,GAC9Boc,IAGAA,EAAGC,uBAGND,EAAGC,uBAAyBjhB,KAAKC,IAAIqN,EAAa0T,EAAGC,wBAFrDD,EAAGC,uBAAyB3T,MAK/B8E,QAAQ8O,MAAqB,SAAC9C,EAAD,GAA4D,IAAD,MAA1C/N,QAAWzL,EAA+B,EAA/BA,KAAMvvB,EAAyB,EAAzBA,QAAS8rC,EAAgB,EAAhBA,QACjEH,EAAE,UAAG5C,EAAa/oC,UAAhB,aAAG,EAAwBuvB,GAC9Boc,IAGLA,EAAGG,QAAUA,EACbH,EAAGI,cAAgBb,Y,SC/CnB7uC,IAAuB,IAC3B2vC,iBAAkBtrC,KAAMurC,MACxBC,WAAY,IAFe,eAG1BxrC,KAAMurC,MAAQ,CACbrd,WAAY,KAJa,eAM1BluB,KAAMyrC,OAAS,CACdvd,WAAY,KAPa,2BAShB,MATgB,IAYdsa,eAAyB7sC,IAAc,SAACygC,GAAD,OACpDA,EACGC,QACCj7B,MACA,SAACvE,EAAD,GAA8F,IAAD,MAAnFy9B,QAAWkR,EAAwE,EAAxEA,WAAYE,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,iBAClE,OAAO,EAAP,iBACG7rC,KAAMurC,MAAQ,CACbrd,WAAY0d,IAFhB,cAIG5rC,KAAMyrC,OAAS,CACdvd,WAAY2d,IALhB,iCAOoBF,GAPpB,2BAQEH,GARF,0BASEE,GATF,KAaHrP,QAAQn7B,MAAgB,SAACrE,EAAD,GAAgD,IAEtB,EAFqB,IAArCy9B,QAAWpM,EAA0B,EAA1BA,WAAYyd,EAAc,EAAdA,MAClDG,EAAaH,IAAU3rC,KAAMurC,MAAQvrC,KAAMyrC,OAASzrC,KAAMurC,MAChE,OAAIrd,IAAerxB,EAAMivC,GAAY5d,WAE5B,2BACFrxB,GADL,OAEEyuC,iBAAkBzuC,EAAMyuC,mBAAqBtrC,KAAMurC,MAAQvrC,KAAMyrC,OAASzrC,KAAMurC,OAFlF,cAGGI,EAAQ,CAAEzd,eAHb,cAIG4d,EAAa,CAAE5d,WAAYrxB,EAAM8uC,GAAOzd,aAJ3C,IAQK,2BACFrxB,GADL,kBAEG8uC,EAAQ,CAAEzd,mBAGdmO,QAAQl7B,MAAkB,SAACtE,GAAW,IAAD,EACpC,OAAO,2BACFA,GADL,OAEEyuC,iBAAkBzuC,EAAMyuC,mBAAqBtrC,KAAMurC,MAAQvrC,KAAMyrC,OAASzrC,KAAMurC,OAFlF,cAGGvrC,KAAMurC,MAAQ,CAAErd,WAAYrxB,EAAMmD,KAAMyrC,QAAQvd,aAHnD,cAIGluB,KAAMyrC,OAAS,CAAEvd,WAAYrxB,EAAMmD,KAAMurC,OAAOrd,aAJnD,OAODmO,QAAQp8B,MAAW,SAACpD,EAAD,GAAgD,IAAD,IAArCy9B,QAAWqR,EAA0B,EAA1BA,MAAOH,EAAmB,EAAnBA,WAC9C,OAAO,2BACF3uC,GADL,IAEEyuC,iBAAkBK,EAClBH,kBAGHnP,QAAQh7B,MAAc,SAACxE,EAAD,GAAwC,IAAnB6uC,EAAkB,EAA7BpR,QAAWoR,UAC1C7uC,EAAM6uC,UAAYA,Q,SCtElB/vC,GAA0B,CAC9B2vC,iBAAkBtrC,KAAM+rC,WACxBP,WAAY,GACZQ,gBAAiB,IAGJxD,eAAyB7sC,IAAc,SAACygC,GAAD,OACpDA,EACGC,QAAQl8B,MAAgB,kBAAMxE,MAC9B0gC,QAAQp8B,MAAW,SAACpD,EAAD,GAA6D,IAAD,IAAlDy9B,QAAWqR,EAAuC,EAAvCA,MAAOH,EAAgC,EAAhCA,WAC9C,OAD8E,EAApBS,YAGpDN,IAAU9uC,EAAMyuC,iBACX,2BACFzuC,GADL,IAEEyuC,iBAAkBK,EAClBH,eAKG,2BACF3uC,GADL,IAEEyuC,iBAAkBK,EAClBH,aACAQ,gBAAiBnvC,EAAM2uC,aAGpB,2BACF3uC,GADL,IAEEyuC,iBAAkBK,EAClBH,aACAQ,gBAAiB,W,4BCdnBE,GAA4B,CAChCjtB,MAAO,KACPpf,QAAS,KACTssC,iBAAkB,KAClBC,cAAe,MAKXzwC,GAA2B,CAC/B0wC,kCAAmCC,KACnCC,MAAM,eACDD,KAAsBtnB,OAAtB,MAAAsnB,KAAqB,YAAWE,OAAuBt6B,QAAqC,SAACgT,EAAMunB,GAEpG,OADAvnB,EAAKunB,GAAWP,GACThnB,IACN,KAELwnB,eAAgBC,MAGHnE,eAAc7sC,IAAc,SAACygC,GAAD,OACzCA,EACGC,QAAQuQ,KAAetQ,SAAS,SAACz/B,EAAD,GAA6C,IAAD,IAAlCy9B,QAAWuS,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,IAC/DjwC,EAAM0vC,MAAMO,GAAZ,yBACEjtC,QAAS,KACTusC,cAAe,MACZvvC,EAAM0vC,MAAMO,IAHjB,IAIEX,iBAAkBU,EAClB5tB,MAAO,UAGVod,QAAQuQ,KAAerQ,WAAW,SAAC1/B,EAAD,GAAwD,IAAD,QAA7Cy9B,QAAWuS,EAAkC,EAAlCA,UAAWE,EAAuB,EAAvBA,UAAWD,EAAY,EAAZA,IACtEjtC,EAAO,UAAGhD,EAAM0vC,MAAMO,UAAf,aAAG,EAAkBjtC,QAC5BssC,EAAgB,UAAGtvC,EAAM0vC,MAAMO,UAAf,aAAG,EAAkBX,iBAG3C,GAAItsC,EAAS,CAGX,GAFoBmtC,aAAkBntC,EAAQotC,QAASF,EAAUE,WAE7CC,KAAeC,KAAM,OAChB,OAArBhB,GAA6BA,IAAqBU,IACpDhwC,EAAM0vC,MAAMO,GAAZ,2BACKjwC,EAAM0vC,MAAMO,IADjB,IAEEX,iBAAkB,KAClBltB,MAAO,KACPpf,UACAusC,cAAeW,SAGd,CAEwC,IAAD,EAA5C,GAAIJ,KAAyBxgB,SAAS2gB,GACpC,UAAAjwC,EAAM6vC,sBAAN,SAAsBrS,KAAKyS,GAG7BjwC,EAAM0vC,MAAMO,GAAZ,2BACKjwC,EAAM0vC,MAAMO,IADjB,IAEEX,iBAAkB,KAClBltB,MAAO,KACPpf,QAASktC,EACTX,cAAe,WAIpB/P,QAAQuQ,KAAeQ,UAAU,SAACvwC,EAAD,GAA2D,IAAD,MAAhDy9B,QAAWwS,EAAqC,EAArCA,IAAKD,EAAgC,EAAhCA,UAAWQ,EAAqB,EAArBA,cACjE,UAAAxwC,EAAM0vC,MAAMO,UAAZ,eAAkBX,oBAAqBU,IAK3ChwC,EAAM0vC,MAAMO,GAAZ,2BACKjwC,EAAM0vC,MAAMO,IADjB,IAEEX,iBAAkB,KAClBltB,MAAOouB,EACPxtC,QAAS,KACTusC,cAAe,WAGlB/P,QAAQiR,MAAS,SAACzwC,EAAD,GAA8B,IAAXiwC,EAAU,EAAnBxS,QACrBz9B,EAAM0vC,MAAMO,KACfjwC,EAAM0vC,MAAMO,GAAOZ,OAGtB7P,QAAQkR,MAAY,SAAC1wC,EAAD,GAA8B,IAAXiwC,EAAU,EAAnBxS,QACzBz9B,EAAM0vC,MAAMO,WACPjwC,EAAM0vC,MAAMO,GAGjBjwC,EAAM6vC,gBAAkB7vC,EAAM6vC,eAAevgB,SAAS2gB,KACxDjwC,EAAM6vC,eAAiB7vC,EAAM6vC,eAAenoB,QAAO,SAACipB,GAAD,OAAOA,IAAMV,SAGnEzQ,QAAQoR,MAAY,SAAC5wC,EAAD,GAA8B,IAAXiwC,EAAU,EAAnBxS,QACxBz9B,EAAM0vC,MAAMO,KACfjwC,EAAM0vC,MAAMO,GAAOZ,IAGjBrvC,EAAM6vC,iBAAmB7vC,EAAM6vC,eAAevgB,SAAS2gB,IACzDjwC,EAAM6vC,eAAerS,KAAKyS,GAGvBjwC,EAAM6vC,iBACT7vC,EAAM6vC,eAAiB,CAACI,OAG3BzQ,QAAQqR,MAAa,SAAC7wC,EAAD,GAA8B,IAAXiwC,EAAU,EAAnBxS,QAC1Bz9B,EAAM6vC,gBAAkB7vC,EAAM6vC,eAAevgB,SAAS2gB,KACxDjwC,EAAM6vC,eAAiB7vC,EAAM6vC,eAAenoB,QAAO,SAACipB,GAAD,OAAOA,IAAMV,SAGnEzQ,QAAQsR,MAAkB,SAAC9wC,EAAD,GAA8B,IAAD,EAAViwC,EAAU,EAAnBxS,QACnC,KAAI,UAACz9B,EAAM0vC,MAAMO,UAAb,aAAC,EAAkBV,eACrB,MAAM,IAAIltC,MAAM,oDAElBrC,EAAM0vC,MAAMO,GAAZ,2BACKjwC,EAAM0vC,MAAMO,IADjB,IAEEV,cAAe,KACfvsC,QAAShD,EAAM0vC,MAAMO,GAAKV,mBAG7B/P,QAAQ6M,IAAe,SAACrsC,GAEvB,GAAKA,EAAMwvC,mCAGJ,GAAIxvC,EAAMwvC,kCAAmC,CAClD,IAAMuB,EAAqB/wC,EAAMwvC,kCAAkCn6B,QACjE,SAAC27B,EAAGC,GAAJ,OAAUD,EAAEx5B,IAAIy5B,KAChB,IAAIC,KAEAC,EAAoB1B,KAAsBp6B,QAAoB,SAAC27B,EAAGC,GAAJ,OAAUD,EAAEx5B,IAAIy5B,KAAI,IAAIC,KAE5FzB,KAAsBhuC,SAAQ,SAACmuC,GACxBmB,EAAmBnwC,IAAIgvC,KAC1B5vC,EAAM0vC,MAAME,GAAWP,OAI3BrvC,EAAMwvC,kCAAkC/tC,SAAQ,SAACmuC,GAC1CuB,EAAkBvwC,IAAIgvC,WAClB5vC,EAAM0vC,MAAME,YAjBvB5vC,EAAM0vC,MAAQ5wC,GAAa4wC,MAC3B1vC,EAAM6vC,eAAiB/wC,GAAa+wC,eAqBtC7vC,EAAMwvC,kCAAoCC,KAGrCzvC,EAAM6vC,iBACT7vC,EAAM6vC,eAAiBC,KAGvBA,KAAyBtoB,KAAI,SAACooB,GAI5B,OAHK5vC,EAAM0vC,MAAME,KACf5vC,EAAM0vC,MAAME,GAAWP,KAElB,Y,UC/KXvwC,GAA0B,CAC9B2vC,iBAAkBtrC,KAAMiuC,kBACxBzC,WAAY,KAGChD,eAAyB7sC,IAAc,SAACygC,GAAD,OACpDA,EAAQC,QAAQp8B,MAAW,SAACpD,EAAD,GAAgD,IAAD,IAArCy9B,QAAWqR,EAA0B,EAA1BA,MAAOH,EAAmB,EAAnBA,WACrD,OAAO,2BACF3uC,GADL,IAEEyuC,iBAAkBK,EAClBH,qB,SCmBShD,eAJsB,CACnC7Q,YAAa,KAG4B,SAACyE,GAAD,OACzCA,EACGC,QAAQhE,MAAuB,SAACx7B,EAAD,GAAmF,IAAD,MAAxEy9B,QAAWxU,EAA6D,EAA7DA,MAAOxmB,EAAsD,EAAtDA,QAAsD,IAA7CyD,QAA6C,gBAAX,GAAW,GAAlCy0B,sBAAkC,MAAjB,EAAiB,EAC1G0W,EAA6CrxC,EAAMsxC,cACrDtxC,EAAMsxC,cACLtxC,EAAMsxC,cAAgB,GAC3BD,EAAU5uC,GAAV,UAAqB4uC,EAAU5uC,UAA/B,QAA2C,GAC3CwmB,EAAMxnB,SAAQ,SAAC8nB,GAAU,IAAD,IAChBgoB,EAAUpW,aAAU5R,GAC1B8nB,EAAU5uC,GAAS8uC,GAAnB,UAA8BF,EAAU5uC,GAAS8uC,UAAjD,QAA6D,GAC7DF,EAAU5uC,GAAS8uC,GAAS5W,IAAkB,UAAC0W,EAAU5uC,GAAS8uC,GAAS5W,UAA7B,QAAgD,GAAK,QAGtG6E,QACC/D,MACA,SAACz7B,EAAD,GAAmF,IAAD,IAAxEy9B,QAAWh7B,EAA6D,EAA7DA,QAASwmB,EAAoD,EAApDA,MAAoD,IAA7C/iB,QAA6C,gBAAX,GAAW,GAAlCy0B,sBAAkC,MAAjB,EAAiB,EAC1E0W,EAA6CrxC,EAAMsxC,cACrDtxC,EAAMsxC,cACLtxC,EAAMsxC,cAAgB,GAEtBD,EAAU5uC,IACfwmB,EAAMxnB,SAAQ,SAAC8nB,GACb,IAAMgoB,EAAUpW,aAAU5R,GACrB8nB,EAAU5uC,GAAS8uC,IACnBF,EAAU5uC,GAAS8uC,GAAS5W,KAEmB,IAAhD0W,EAAU5uC,GAAS8uC,GAAS5W,UACvB0W,EAAU5uC,GAAS8uC,GAAS5W,GAEnC0W,EAAU5uC,GAAS8uC,GAAS5W,YAKnC6E,QAAQgS,MAA0B,SAACxxC,EAAD,GAAkE,IAAD,MAAvDy9B,QAAWh7B,EAA4C,EAA5CA,QAASgvC,EAAmC,EAAnCA,oBAAqBxoB,EAAc,EAAdA,MACpFjpB,EAAM86B,YAAYr4B,GAAlB,UAA6BzC,EAAM86B,YAAYr4B,UAA/C,QAA2D,GAC3DwmB,EAAMxnB,SAAQ,SAAC8nB,GACb,IAAMgoB,EAAUpW,aAAU5R,GACpBvmB,EAAUhD,EAAM86B,YAAYr4B,GAAS8uC,GAC3C,GAAKvuC,EAIE,CAAC,IAAD,EACL,IAAI,UAACA,EAAQyuC,2BAAT,QAAgC,IAAMA,EAAqB,OAC/DzxC,EAAM86B,YAAYr4B,GAAS8uC,GAASE,oBAAsBA,OAL1DzxC,EAAM86B,YAAYr4B,GAAS8uC,GAAW,CACpCE,6BAQPjS,QAAQkS,MAA+B,SAAC1xC,EAAD,GAAkE,IAAD,MAAvDy9B,QAAWgU,EAA4C,EAA5CA,oBAAqBhvC,EAAuB,EAAvBA,QAASwmB,EAAc,EAAdA,MACzFjpB,EAAM86B,YAAYr4B,GAAlB,UAA6BzC,EAAM86B,YAAYr4B,UAA/C,QAA2D,GAC3DwmB,EAAMxnB,SAAQ,SAAC8nB,GACb,IAAMgoB,EAAUpW,aAAU5R,GACpBvmB,EAAUhD,EAAM86B,YAAYr4B,GAAS8uC,GACtCvuC,GACDA,EAAQyuC,sBAAwBA,WAC3BzuC,EAAQyuC,oBACfzuC,EAAQ7B,KAAO,KACf6B,EAAQ03B,YAAc+W,SAI3BjS,QAAQmS,MAAwB,SAAC3xC,EAAD,GAA4D,IAAD,MAAjDy9B,QAAWh7B,EAAsC,EAAtCA,QAAS+5B,EAA6B,EAA7BA,QAAS9B,EAAoB,EAApBA,YACtE16B,EAAM86B,YAAYr4B,GAAlB,UAA6BzC,EAAM86B,YAAYr4B,UAA/C,QAA2D,GAC3DlB,OAAOC,KAAKg7B,GAAS/6B,SAAQ,SAAC8vC,GAAa,IAAD,EAClCvuC,EAAUhD,EAAM86B,YAAYr4B,GAAS8uC,IACvC,iBAACvuC,QAAD,IAACA,OAAD,EAACA,EAAS03B,mBAAV,QAAyB,GAAKA,IAClC16B,EAAM86B,YAAYr4B,GAAS8uC,GAAW,CACpCpwC,KAAMq7B,EAAQ+U,GACd7W,yBCnFJkX,GAA2B,CAAC,OAAQ,eAAgB,QAAS,UAAW,gBAExEC,GAAQC,YAAe,CAC3BC,UAAU7uC,EACV8uC,QAAS,CACPC,aAAcC,EACdjgB,MAAOkgB,IACPC,MAAOC,IACP5G,MAAO6G,IACPC,YAAaC,IACbC,QAASC,IACTC,MAAOC,IACPC,aAAcC,EACdvQ,OAAQwQ,EACRpK,QAASqK,GACTC,KAAMC,GAGNtvB,QACA4nB,gBACA2H,QACAC,QACAC,QACArqB,aACAsqB,UAEFC,WAAW,GAAD,mBAAMC,YAAqB,CAAEC,OAAO,KAApC,CAA6CC,eAAK,CAAEC,OAAQ/B,OACtEgC,eAAgBC,eAAK,CAAEF,OAAQ/B,OAGjCC,GAAMruB,SAAS6oB,MAOR,IAAMyH,GAAiB,kBAAMrwB,eAErBouB,Q,sNC5CAkC,ICJHC,EDIGD,EAZf,SAA2B/tB,EAAeiuB,EAAgBC,GACxD,IAAM9a,EAAW9W,YAAgB,OAAC0D,QAAD,IAACA,OAAD,EAACA,EAAOlQ,SAAS,GAE5C2mB,EAAS9a,mBAAQ,iBAAM,CAACsyB,EAAOC,KAAU,CAACD,EAAOC,IACjDC,EAAYrjB,YAAoBsI,EAAU,YAAaqD,GAAQrS,OAErE,OAAOzI,mBACL,kBAAOqE,GAASmuB,EAAY,IAAI3pB,IAAYxE,EAAOmuB,EAAUryC,iBAAcrC,IAC3E,CAACumB,EAAOmuB,K,0CCQL,SAASC,EACdC,EACAH,GAEA,IAAQ77B,EAAY/V,cAAZ+V,QACAi8B,EAAqBC,cAArBD,iBACFtuB,EAAQquB,aAA2B7pB,IAAc6pB,EAAgBruB,WAAQvmB,EACzE+0C,EAAmBT,EAAkB/tB,EAAD,OAAQ3N,QAAR,IAAQA,SAAW5Y,EAAWy0C,GAClEO,EAAkBC,YAAqB,OAAC1uB,QAAD,IAACA,OAAD,EAACA,EAAOlQ,QAASo+B,GAGxDS,EAA+BhzB,mBAAQ,WAC3C,OAAK0yB,GAAoBH,EACrBG,EAAgBl7B,WAAaC,IAAc46B,EAAcY,SAExDJ,EAGEA,EAAiBK,SAASR,GAC7BI,EACET,EAAc3P,QACd2P,EAAcc,aAChBd,EAAcY,SAPYZ,EAAce,QAHHf,EAAce,UAWtD,CAACV,EAAiBG,EAAkBC,EAAiBP,IAElDvjB,EAAgBrO,YAAgB,OAAC0D,QAAD,IAACA,OAAD,EAACA,EAAOlQ,SACxC83B,EAAiBoH,cAEjBC,EAAUh0C,sBAAW,sBAAC,8BAAAd,EAAA,yDACtBw0C,IAAkBX,EAAcc,aADV,uBAExBzyB,QAAQD,MAAM,oCAFU,6BAKrB4D,EALqB,uBAMxB3D,QAAQD,MAAM,YANU,6BAUrBuO,EAVqB,uBAWxBtO,QAAQD,MAAM,yBAXU,6BAerBiyB,EAfqB,wBAgBxBhyB,QAAQD,MAAM,6BAhBU,8BAoBrB8xB,EApBqB,wBAqBxB7xB,QAAQD,MAAM,cArBU,kCAyBtB8yB,GAAW,EAzBW,UA2BCvkB,EAAcwkB,YAAYF,QAAQf,EAASkB,KAA3C,OAA6D,WAGtF,OADAF,GAAW,EACJvkB,EAAcwkB,YAAYF,QAAQf,EAASG,EAAgBn8B,IAAIpW,eA9B9C,eA2BpBuzC,EA3BoB,yBAkCnBf,EACL3jB,EACA,UACA,CAACujB,EAASgB,EAAWb,EAAgBn8B,IAAIpW,WAAaszC,KACtD,CACEE,SAAUh+B,YAAmB+9B,KAG9BE,MAAK,SAACjf,GACLsX,EAAetX,EAAU,CACvBwX,QAAQ,WAAD,OAAauG,EAAgBl7B,SAAS8X,QAC7C4c,SAAU,CAAEtrB,aAAcyD,EAAMlQ,QAASo+B,gBAXxC,OAcE,SAAC9xB,GAEN,MADAC,QAAQD,MAAM,0BAA2BA,GACnCA,MAlDgB,4CAoDzB,CAACuyB,EAAe3uB,EAAO2K,EAAe0jB,EAAiBH,EAAStG,EAAgB0G,IAEnF,MAAO,CAACK,EAAeM,GAIlB,SAASO,EAA4B9lC,GAAqC,IAAtB+lC,EAAqB,uDAAH,EACrEpB,EAAkB1yB,mBACtB,kBAAOjS,EAAQgmC,YAA+BhmC,EAAO+lC,GAAiBtyC,IAAMurC,YAASjvC,IACrF,CAACiQ,EAAO+lC,IAGV,OAAOrB,EAAmBC,EAAiBx7B,M,SApGjCm7B,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,uCCdZ,0GAGarE,EAAkC,GAGlCF,EAA+B,CALrB,8DADE,gEAMmB,OAGvCE,GAIQG,EAAqC,I,kZCGlD,SAAS6F,EAAmBC,EAAcC,GACxC,IAAM5f,EAAQwZ,IAAsBngB,SAASsmB,GAAQnG,IAAsBvV,QAAQ0b,GAAQjkB,OAAOmkB,iBAC5FC,EAAStG,IAAsBngB,SAASumB,GAAQpG,IAAsBvV,QAAQ2b,GAAQlkB,OAAOmkB,iBAGnG,OAAI7f,EAAQ8f,EAAe,EACvB9f,EAAQ8f,GAAgB,EACrB,EAMF,IAAMC,EAAb,kDAKE,WAAYC,EAAsBC,GAAkB,IAAD,8BACjD,cAAMD,EAAUxzC,QAASwzC,EAAUngC,QAASmgC,EAAU9wC,SAAU8wC,EAAUhlB,OAAQglB,EAAUvsB,OAL9EusB,eAImC,IAFnCC,UAEmC,EAEjD,EAAKD,UAAYA,EACjB,EAAKC,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAOC,KAAKF,UAAU5nB,YAZ1B,GAAsCvmB,KAuBhCsuC,GAA2B,mBAC9B1uC,IAAQD,QAAU,IADY,cAE9BC,IAAQC,QAAU,IAFY,GAK3B0uC,EACe,qBAAZC,QAA0B,IAAIA,QAAwC,KAExE,SAASC,EAAeC,GAC7B,IAAMpsB,EAAM,OAAGisB,QAAH,IAAGA,OAAH,EAAGA,EAAWh2C,IAAIm2C,GAC9B,GAAIpsB,EAAQ,OAAOA,EAEnB,IAAM5C,EAAMgvB,EAAKphC,OAAOC,QACtB,SAACqZ,EAAUunB,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACI1uB,KAAI,SAACivB,GAAW,IAAD,EACf,GAAI,UAACD,EAAKN,YAAN,aAAC,EAAYO,GACjB,OAAO,2BAAKD,EAAKN,KAAKO,IAAtB,IAA8B94B,GAAI84B,cAJnB,aACnB,EAKI/uB,QAAO,SAACuS,GAAD,OAAqB5gB,QAAQ4gB,aANrB,QAM4B,GAC3CjU,EAAQ,IAAIgwB,EAAiBC,EAAWC,GAC9C,QAA+Cz2C,IAA3CivB,EAAS1I,EAAMvjB,SAASujB,EAAMlQ,SAAwB,MAAMzT,MAAM,qBACtE,OAAO,2BACFqsB,GADL,kBAEG1I,EAAMvjB,QAFT,2BAGOisB,EAAS1I,EAAMvjB,UAHtB,kBAIKujB,EAAMlQ,QAAU,CACfkQ,QACAwwB,cAjBE,eAsBLJ,IAGP,OADS,OAATC,QAAS,IAATA,KAAWj3C,IAAIo3C,EAAMhvB,GACdA,EAGF,SAASkvB,IAQd,OAAO/yB,aAAkD,SAAC3jB,GAAD,OAAWA,EAAMszC,MAAM5D,SAGlF,SAASiH,EAAYC,EAAuBC,GAAyC,IAAD,EAClF,OAAO,EAAP,iBACGnvC,IAAQD,QADX,2BAC0BmvC,EAAKlvC,IAAQD,UAAaovC,EAAKnvC,IAAQD,WADjE,cAEGC,IAAQC,QAFX,2BAE0BivC,EAAKlvC,IAAQC,UAAakvC,EAAKnvC,IAAQC,WAFjE,EAOF,SAASmvC,EAA4BC,GACnC,IAAMzD,EAAQoD,IAEd,OAAO/0B,mBAAQ,WACb,OAAKo1B,EAGHA,EACG5Q,QAEA/K,KAAKua,GACLtgC,QAAO,SAAC2hC,EAAWC,GAAgB,IAAD,EAC3Bj0C,EAAO,UAAGswC,EAAM2D,UAAT,aAAG,EAAmBj0C,QACnC,IAAKA,EAAS,OAAOg0C,EACrB,IAEE,OAAOL,EAAYK,EADDz1C,OAAO21C,OAAOX,EAAevzC,KAE/C,MAAOof,GAEP,OADAC,QAAQD,MAAM,yCAA0CA,GACjD40B,KAERZ,GAjBWA,IAmBjB,CAAC9C,EAAOyD,IAIN,SAASI,IAA2C,IAAD,EACxD,iBAAOxzB,aAA2D,SAAC3jB,GAAD,OAAWA,EAAMszC,MAAMzD,yBAAzF,aAAO,EAAmGnoB,QACxG,SAACuoB,GAAD,OAAUN,IAAsBrgB,SAAS2gB,MAWtC,SAAShhB,IAId,OAAO0nB,EAFcG,EADEK,KAECZ,EAAea,IAKlC,SAAShoB,IAEd,OAAO0nB,EAjBF,WACL,IAAMxD,EAAQoD,IACRW,EAAoBF,IAC1B,OAAO51C,OAAOC,KAAK8xC,GAAO5rB,QAAO,SAACuoB,GAAD,QAAS,OAACoH,QAAD,IAACA,OAAD,EAACA,EAAmB/nB,SAAS2gB,MAASN,IAAsBrgB,SAAS2gB,MAazEqH,IAKjC,SAASC,IACd,OAAOhB,EAAea,GAIjB,SAAS5nB,IAQd,OAAOmnB,EANyBJ,EAAeiB,GAGdV,EAA4BnH,MAMxD,SAAS8H,EAAgBxH,GAC9B,IAAMJ,EAAiBsH,IACvB,OAAO99B,QAAO,OAACw2B,QAAD,IAACA,OAAD,EAACA,EAAgBvgB,SAAS2gB,M,ydC3K7ByH,G,OAAa,SACxBC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAA0B,IAAIrzC,IAAUkzC,GAAkBxyC,MAAM0yC,GAAe1yC,MAAMsU,KACrFs+B,EAA0B,IAAItzC,IAAUizC,GAAmBvyC,MAAMyyC,GACjEhsB,EAAMksB,EAAwB7zC,IAAI8zC,GAAyB5yC,MAAM,KACvE,OAAOymB,EAAI+F,UAAY/F,EAAIosB,WAAa,KAAOpsB,EAAInmB,a,mECVxCwyC,EAAqB,uCAAG,oCAAA/3C,EAAA,6DAC7Bg4C,EAAev6B,IAAY8J,QAAO,SAACC,GAAD,OAAoB,IAAbA,EAAE5J,UAC3Cq6B,EAAkBD,EAAa3wB,KAAI,SAAC6wB,GACxC,MAAO,CACLviC,QAASD,YAAWwiC,EAAWj6B,iBAC/BsL,KAAM,iBAGJ4uB,EAAgBH,EAAa3wB,KAAI,SAAC6wB,GACtC,MAAO,CACLviC,QAASD,YAAWwiC,EAAWj6B,iBAC/BsL,KAAM,oBAXyB,SAedV,YAAUuvB,EAAaH,GAfT,cAe7BI,EAf6B,gBAgBhBxvB,YAAUuvB,EAAaD,GAhBP,cAgB7BG,EAhB6B,yBAkB5BN,EAAa3wB,KAAI,SAACkxB,EAAgBrhB,GACvC,IAAMtK,EAAayrB,EAAOnhB,GACpBrK,EAAWyrB,EAAKphB,GACtB,MAAO,CACLtZ,OAAQ26B,EAAe36B,OACvBgP,WAAY,IAAIroB,IAAUqoB,GAAY/nB,SACtCgoB,SAAU,IAAItoB,IAAUsoB,GAAUhoB,cAxBH,4CAAH,qDA6BrB2zC,EAAsB,uCAAG,sCAAAx4C,EAAA,6DAC9By4C,EAAch7B,IAAY8J,QAAO,SAACC,GAAD,MAAiC,QAA1BA,EAAEkxB,aAAa5nB,UACvD6nB,EAAUl7B,IAAY8J,QAAO,SAACC,GAAD,MAAiC,QAA1BA,EAAEkxB,aAAa5nB,UAEnD8nB,EAAmBH,EAAYpxB,KAAI,SAAC6wB,GACxC,MAAO,CACLviC,QAASuiC,EAAWQ,aAAa/iC,QACjC4T,KAAM,YACNC,OAAQ,CAAC9T,YAAWwiC,EAAWj6B,sBAI7B46B,EAAgBF,EAAQtxB,KAAI,SAAC6wB,GACjC,MAAO,CACLviC,QAASV,IAAOvN,KAAKiO,QACrB4T,KAAM,YACNC,OAAQ,CAAC9T,YAAWwiC,EAAWj6B,sBAhBC,SAoBC4K,YAAUiwB,EAASF,GApBpB,cAoB9BG,EApB8B,gBAqBFlwB,YAAUmwB,EAASH,GArBjB,cAqB9BI,EArB8B,+CAwB/BR,EAAYpxB,KAAI,SAACG,EAAG0P,GAAJ,MAAe,CAChCtZ,OAAQ4J,EAAE5J,OACV85B,YAAa,IAAInzC,IAAUw0C,EAAuB7hB,IAAQryB,cA1B1B,YA4B/B8zC,EAAQtxB,KAAI,SAACG,EAAG0P,GAAJ,MAAe,CAC5BtZ,OAAQ4J,EAAE5J,OACV85B,YAAa,IAAInzC,IAAU00C,EAAoB/hB,IAAQryB,gBA9BvB,4CAAH,qDAmCtBq0C,EAAqB,uCAAG,WAAOt7B,GAAP,iBAAA5d,EAAA,sEAE3Bm5C,EAAej7B,YAAsBN,GAFV,SAGNu7B,EAAaC,mBAHP,cAG3BC,EAH2B,yBAI1B,IAAI90C,IAAU80C,EAAa13C,aAJD,yDAM1B2C,KAN0B,yDAAH,sDAUrBg1C,EAAuB,uCAAG,WACrCC,GADqC,mBAAAv5C,EAAA,6DAG/Bw5C,EAAa/7B,IAChB8J,QAAO,SAACC,GAAD,MAAiC,QAA1BA,EAAEkxB,aAAa5nB,SAAqBtJ,EAAEsF,cACpDvF,QAAO,SAACC,GAAD,OAAQ+xB,EAAsBpqB,SAAS3H,EAAE5J,WAI7C67B,EAAuBD,EAAWnyB,KAAI,SAACqyB,GAAD,OAAeR,EAAsBQ,EAAU97B,WATtD,SAUT+gB,QAAQC,IAAI6a,GAVH,cAU/BE,EAV+B,yBAY9BA,EAAczkC,QAAO,SAACC,EAAOkkC,EAAcniB,GAChD,OAAO,2BACF/hB,GADL,kBAEGqkC,EAAWtiB,GAAOtZ,OAASy7B,MAE7B,KAjBkC,2CAAH,sD,iBC1E9BZ,EAAch7B,IAAY8J,QAAO,SAAC5J,GAAD,MAAuC,QAA7BA,EAAK+6B,aAAa5nB,UAC7D8oB,EAAWn8B,IAAY8J,QAAO,SAAC5J,GAAD,MAAuC,QAA7BA,EAAK+6B,aAAa5nB,UAC1D+oB,EAAiBp8B,IAAY8J,QAAO,SAAC5J,GAAD,OAA0B,IAAhBA,EAAKC,UACnDk8B,EAAqB56B,cAEd66B,EAAmB,uCAAG,WAAO7hC,GAAP,iBAAAlY,EAAA,6DAC3B8oB,EAAQ2vB,EAAYpxB,KAAI,SAAC1J,GAAD,MAAW,CACvChI,QAASgI,EAAK+6B,aAAa/iC,QAC3B4T,KAAM,YACNC,OAAQ,CAACtR,EAASxC,YAAWiI,EAAKM,sBAJH,SAOR4K,YAAUmxB,EAAUlxB,GAPZ,cAO3BmxB,EAP2B,yBAQ1BxB,EAAYvjC,QACjB,SAACglC,EAAKv8B,EAAMuZ,GAAZ,mBAAC,eAA2BgjB,GAA5B,kBAAkCv8B,EAAKC,OAAS,IAAIrZ,IAAU01C,EAAW/iB,IAAQryB,aACjF,KAV+B,2CAAH,sDAcnBs1C,EAAiB,uCAAG,WAAOjiC,GAAP,uBAAAlY,EAAA,6DAEzB8oB,EAAQ2vB,EAAYpxB,KAAI,SAAC1J,GAAD,MAAW,CACvChI,QAASgI,EAAK+6B,aAAa/iC,QAC3B4T,KAAM,YACNC,OAAQ,CAACtR,OALoB,SAOA2Q,YAAUmxB,EAAUlxB,GAPpB,cAOzBsxB,EAPyB,OAQzBC,EAAgB5B,EAAYvjC,QAChC,SAACglC,EAAKv8B,EAAMuZ,GAAZ,mBAAC,eAA2BgjB,GAA5B,kBAAkCv8B,EAAKC,OAAS,IAAIrZ,IAAU61C,EAAiBljB,IAAQryB,aACvF,IAV6B,SAcNnC,IAAkB43C,WAAWpiC,GAdvB,cAczBqiC,EAdyB,OAezBC,EAAcZ,EAAS1kC,QAC3B,SAACglC,EAAKv8B,GAAN,mBAAC,eAAoBu8B,GAArB,kBAA2Bv8B,EAAKC,OAAS,IAAIrZ,IAAUg2C,EAAW54C,YAAYkD,aAC9E,IAjB6B,6CAoBnBw1C,GAAkBG,IApBC,4CAAH,sDAuBjBC,EAAsB,uCAAG,WAAOviC,GAAP,uBAAAlY,EAAA,6DAC9B8oB,EAAQ+wB,EAAexyB,KAAI,SAACG,GAAD,MAAQ,CACvC7R,QAASD,YAAW8R,EAAEvJ,iBACtBsL,KAAM,WACNC,OAAQ,CAACtR,OAJyB,SAMb2Q,YAAUuvB,EAAatvB,GANV,cAM9B4xB,EAN8B,OAO9BC,EAAiBd,EAAe3kC,QACpC,SAACglC,EAAKv8B,EAAMuZ,GAAZ,mBAAC,eACIgjB,GADL,kBAEGv8B,EAAKC,OAAS,IAAIrZ,IAAUm2C,EAASxjB,GAAOnyB,OAAO61C,MAAM/1C,aAE5D,IAZkC,SAgBOi1C,EAAmBY,SAAS,IAAKxiC,GAhBxC,uBAgBpB2iC,EAhBoB,EAgB5B91C,OAhB4B,6CAkBxB41C,GAlBwB,IAkBR,EAAG,IAAIp2C,IAAUs2C,EAAiBl5C,YAAYkD,YAlBtC,4CAAH,sDAqBtBi2C,EAAuB,uCAAG,WAAO5iC,GAAP,qBAAAlY,EAAA,6DAC/B8oB,EAAQ+wB,EAAexyB,KAAI,SAACG,GAAD,MAAQ,CACvC7R,QAASD,YAAW8R,EAAEvJ,iBACtBsL,KAAM,gBACNC,OAAQ,CAACtR,OAJ0B,SAMnB2Q,YAAUuvB,EAAatvB,GANJ,cAM/Ba,EAN+B,OAO/BoxB,EAAiBlB,EAAe3kC,QACpC,SAACglC,EAAKv8B,EAAMuZ,GAAZ,mBAAC,eACIgjB,GADL,kBAEGv8B,EAAKC,OAAS,IAAIrZ,IAAUolB,EAAIuN,IAAQryB,aAE3C,IAZmC,SAgBTi1C,EAAmBkB,YAAY,IAAK9iC,GAhB3B,cAgB/B+iC,EAhB+B,oDAkBzBF,GAlByB,IAkBT,EAAG,IAAIx2C,IAAU02C,EAAct5C,YAAYkD,YAlBlC,2CAAH,sD,wBCnEvBq2C,EAAoB,uCAAG,sDAAAl7C,EAAA,sEAE1B8oB,EAAQ,CACZ,uBACA,cACA,8BACA,oCACAzB,KAAI,SAACiQ,GAAD,MAAa,CACjB3hB,QAASa,cACT+S,KAAM+N,MATwB,SAY+DxN,YAC7FnK,EACAmJ,GAd8B,gEAYxBqyB,EAZwB,2BAYV1wB,EAZU,2BAYA2wB,EAZA,2BAY6BC,EAZ7B,KAiB1BC,EAAyB7wB,EAAS,IAAIlmB,IAAUkmB,EAAO9oB,YAAc2C,IACrEi3C,EAAwBJ,EAAa,IAAI52C,IAAU42C,EAAWx5C,YAAc2C,IAC5Ek3C,EAA2BhxB,YAAoB8wB,EAAwBC,GAnB7C,kBAoBzB,CACLE,YAAaH,EAAuBz2C,SACpCmnB,kBAAmBuvB,EAAsB12C,SACzC62C,iBAAkBF,EAAyBxwB,gBAAgBnmB,SAC3Du2C,0BAA2B,IAAI72C,IAAU62C,EAA0Bz5C,YAAYkD,SAC/Ew2C,wBAAyB,IAAI92C,IAAU82C,EAAwB15C,YAAYkD,WAzB7C,2DA4BzB,CACL42C,YAAa,KACbzvB,kBAAmB,KACnB0vB,iBAAkB,KAClBN,0BAA2B,KAC3BC,wBAAyB,OAjCK,0DAAH,qDAsCpBM,EAAc,uCAAG,gDAAA37C,EAAA,sEAEpB8oB,EAAQ,CAAC,iBAAkB,UAAW,cAAe,qBAAqBzB,KAAI,SAACiQ,GAAD,MAAa,CAC/F3hB,QAASa,cACT+S,KAAM+N,MAJkB,SAO0DxN,YAAYnK,EAAcmJ,GAPpF,gEAOlB0C,EAPkB,2BAOAowB,EAPA,2BAOWC,EAPX,2BAO4BC,EAP5B,uBASnB,CACLtwB,eAAgBA,EAAejmB,WAC/Bq2C,QAASA,EAAQr2C,WACjBs2C,cAAeA,EAAct2C,WAC7Bu2C,oBAAqBA,EAAoBv2C,aAbjB,2DAgBnB,CACLimB,eAAgB,KAChBowB,QAAS,KACTC,cAAe,KACfC,oBAAqB,OApBG,0DAAH,qDC1CrBC,EAAoBr8B,cAuBXs8B,EArBK,uCAAG,WAAO9jC,GAAP,eAAAlY,EAAA,+EAEgB+7C,EAAkBrB,SAASxiC,GAF3C,cAEb+jC,EAFa,yBAGZ,CACL/c,WAAW,EACXnT,WAAY,IAAIxnB,IAAU03C,EAAqBxxB,OAAO9oB,YAAYkD,SAClEq3C,kBAAmBD,EAAqBC,kBAAkBv6C,WAC1Dw6C,mBAAoBF,EAAqBE,mBAAmBx6C,WAC5DmqB,qBAAsB,IAAIvnB,IAAU03C,EAAqBnwB,qBAAqBnqB,YAAYkD,WARzE,yDAWZ,CACLq6B,WAAW,EACXnT,WAAY,KACZmwB,kBAAmB,KACnBC,mBAAoB,KACpBrwB,qBAAsB,OAhBL,yDAAH,sD,SCadntB,EAA2B,CAC/BqC,KAAK,YAAKyc,KACV2+B,gBAAgB,EAChBC,UAAW,CACTZ,YAAa,KACbzvB,kBAAmB,KACnB0vB,iBAAkB,KAClBN,0BAA2B,KAC3BC,wBAAyB,KACzBiB,KAAM,CACJ9wB,eAAgB,KAChBowB,QAAS,KACTC,cAAe,KACfC,oBAAqB,MAEvBS,SAAU,CACRrd,WAAW,EACXnT,WAAY,KACZD,qBAAsB,KACtBowB,kBAAmB,KACnBC,mBAAoB,QAMbK,EAA4B,SAAC7vB,GAAD,8CAA0B,WAAOtJ,EAAU6e,GAAjB,qBAAAliC,EAAA,sEACvC+3C,IADuC,cAC3D0E,EAD2D,gBAErCjE,IAFqC,OAE3DkE,EAF2D,OAI3DC,EAASC,YAAuB1a,IAAW+P,MAAMjxC,MAEjD67C,EAAWp/B,IAAY4J,KAAI,SAAC1J,GAChC,IAAMm/B,EAAaL,EAAY/+B,MAAK,SAACq/B,GAAD,OAAWA,EAAMn/B,SAAWD,EAAKC,UAC/Do/B,EAAeN,EAAch/B,MAAK,SAACq/B,GAAD,OAAWA,EAAMn/B,SAAWD,EAAKC,UACnEq/B,KAAyBtwB,EAAe,GAAKmwB,IAAanwB,EAAe6E,OAAOsrB,EAAWjwB,UAC3FqwB,EAAiBv/B,EAAKmP,YAAcmwB,EAEpCE,EAAsBx/B,EAAK+6B,aAAa/iC,QAAUgI,EAAK+6B,aAAa/iC,QAAQ0T,cAAgB,KAC5FmuB,EAAoB2F,EAAsBR,EAAOQ,GAAuB,EAExEC,EAAsBz/B,EAAK0/B,aAAa1nC,QAAUgI,EAAK0/B,aAAa1nC,QAAQ0T,cAAgB,KAC5F4C,EAAoBmxB,EAAsBT,EAAOS,GAAuB,EACxE1xB,EAAOwxB,EAOT,EANA3F,EACEC,EACAvrB,EACA5mB,YAAiB,IAAId,IAAUy4C,EAAatF,aAAc/5B,EAAK+6B,aAAa1zC,UAC5E+sB,WAAWpU,EAAKg6B,gBAItB,OAAO,uCACFmF,GACAE,GAFL,IAGExF,oBACAvrB,oBACAP,MACAoB,WAAYowB,OAIhB75B,EAASi6B,GAAmBT,IApCqC,2CAA1B,yDAuC5BU,EAA+B,yDAAM,WAAOl6B,EAAU6e,GAAjB,mBAAAliC,EAAA,6DAC1Cu5C,EAAwBrX,IAC3BoJ,MAAMtqC,KAAKumB,QAAO,gBAAG8xB,EAAH,EAAGA,aAAH,OAAuC,OAAjBA,QAA0C/5C,IAAjB+5C,KACjEhyB,KAAI,SAAC1J,GAAD,OAAUA,EAAKC,UAH0B,SAKpB07B,EAAwBC,GALJ,OAK1CI,EAL0C,OAO1C6D,EAAmB//B,IAAY4J,KAAI,SAAC1J,GACxC,GAAI47B,EAAsBpqB,SAASxR,EAAKC,QACtC,MAAO,CAAEA,OAAQD,EAAKC,QAExB,IAAMy7B,EAAeM,EAAch8B,EAAKC,SAAWtZ,IACnD,MAAO,CACLsZ,OAAQD,EAAKC,OACby7B,aAAcA,EAAax0C,aAI/Bwe,EAASi6B,GAAmBE,IAlBoB,2CAAN,yDAqB/BC,EACX,SAACvlC,GAAD,8CACA,WAAOmL,GAAP,uBAAArjB,EAAA,sEAC2B+5C,EAAoB7hC,GAD/C,cACQ+hC,EADR,gBAEqCE,EAAkBjiC,GAFvD,cAEQwlC,EAFR,gBAG+BjD,EAAuBviC,GAHtD,cAGQyiC,EAHR,iBAI+BG,EAAwB5iC,GAJvD,QAIQ6iC,EAJR,OAMQwB,EAAW9+B,IAAY4J,KAAI,SAAC1J,GAAD,MAAW,CAC1CC,OAAQD,EAAKC,OACbo2B,UAAWiG,EAAWt8B,EAAKC,QAC3B+/B,oBAAqBD,EAAqB//B,EAAKC,QAC/CggC,cAAejD,EAAeh9B,EAAKC,QACnCq9B,cAAeF,EAAep9B,EAAKC,YAGrCyF,EAASw6B,GAAiBtB,IAd5B,4CADA,uDAkBWuB,EACX,SAAClgC,EAAgB1F,GAAjB,8CACA,WAAOmL,GAAP,eAAArjB,EAAA,sEAC2B+5C,EAAoB7hC,GAD/C,OACQ+hC,EADR,OAEE52B,EAAS06B,GAAoB,CAAEngC,SAAQ+wB,MAAO,YAAa9sC,MAAOo4C,EAAWr8B,MAF/E,2CADA,uDAMWogC,EACX,SAACpgC,EAAgB1F,GAAjB,8CACA,WAAOmL,GAAP,eAAArjB,EAAA,sEAC8Bm6C,EAAkBjiC,GADhD,OACQmiC,EADR,OAEEh3B,EAAS06B,GAAoB,CAAEngC,SAAQ+wB,MAAO,sBAAuB9sC,MAAOw4C,EAAcz8B,MAF5F,2CADA,uDAMWqgC,EACX,SAACrgC,EAAgB1F,GAAjB,8CACA,WAAOmL,GAAP,eAAArjB,EAAA,sEAC+By6C,EAAuBviC,GADtD,OACQyiC,EADR,OAEEt3B,EAAS06B,GAAoB,CAAEngC,SAAQ+wB,MAAO,gBAAiB9sC,MAAO84C,EAAe/8B,MAFvF,2CADA,uDAMWsgC,EACX,SAACtgC,EAAgB1F,GAAjB,8CACA,WAAOmL,GAAP,eAAArjB,EAAA,sEAC+B86C,EAAwB5iC,GADvD,OACQ6iC,EADR,OAEE13B,EAAS06B,GAAoB,CAAEngC,SAAQ+wB,MAAO,gBAAiB9sC,MAAOk5C,EAAen9B,MAFvF,2CADA,uDAMWugC,GAA2BvgB,YAA4B,4BAAZ,sBAAyC,4BAAA59B,EAAA,sEACjEk7C,IADiE,cACzFkD,EADyF,yBAExFA,GAFwF,4CAKpFC,GAAqBzgB,YAA4B,sBAAZ,sBAAmC,4BAAA59B,EAAA,sEAC3D27C,IAD2D,cAC7E2C,EAD6E,yBAE5EA,GAF4E,4CAKxEC,GAAyB3gB,YACpC,sBADoD,uCAEpD,+BAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAAT,SACyB8jC,EAAe9jC,GADxC,cACQqkC,EADR,yBAESA,GAFT,2CAFoD,uDAQzCiC,GAAavhB,YAAY,CACpC1T,KAAM,QACN5qB,eACAu+B,SAAU,CACRogB,mBAAoB,SAACz9C,EAAOu9B,GAC1B,IAAMqhB,EAAkCrhB,EAAOE,QAC/Cz9B,EAAMmB,KAAOnB,EAAMmB,KAAKqmB,KAAI,SAAC1J,GAC3B,IAAM+gC,EAAeD,EAAc/gC,MAAK,SAACq/B,GAAD,OAAWA,EAAMn/B,SAAWD,EAAKC,UACzE,OAAO,2BAAKD,GAAS+gC,OAGzBb,iBAAkB,SAACh+C,EAAOu9B,GACxB,IAAMmf,EAAWnf,EAAOE,QACxBz9B,EAAMmB,KAAOnB,EAAMmB,KAAKqmB,KAAI,SAAC1J,GAC3B,IAAMghC,EAAepC,EAAS7+B,MAAK,SAACq/B,GAAD,OAAWA,EAAMn/B,SAAWD,EAAKC,UACpE,OAAO,2BAAKD,GAAZ,IAAkB4+B,SAAUoC,OAE9B9+C,EAAMu8C,gBAAiB,GAEzB2B,oBAAqB,SAACl+C,EAAOu9B,GAC3B,MAAiCA,EAAOE,QAAhCqR,EAAR,EAAQA,MAAO9sC,EAAf,EAAeA,MAAO+b,EAAtB,EAAsBA,OAChBsZ,EAAQr3B,EAAMmB,KAAK49C,WAAU,SAACp3B,GAAD,OAAOA,EAAE5J,SAAWA,KAEnDsZ,GAAS,IACXr3B,EAAMmB,KAAKk2B,GAAX,2BAAyBr3B,EAAMmB,KAAKk2B,IAApC,IAA4CqlB,SAAS,2BAAM18C,EAAMmB,KAAKk2B,GAAOqlB,UAAzB,kBAAoC5N,EAAQ9sC,SAItGs9B,cAAe,SAACC,GAEdA,EAAQC,QAAQ8e,GAAyB5e,WAAW,SAAC1/B,EAAOu9B,GAC1Dv9B,EAAMw8C,UAAN,2BAAuBx8C,EAAMw8C,WAAcjf,EAAOE,YAGpD8B,EAAQC,QAAQgf,GAAmB9e,WAAW,SAAC1/B,EAAOu9B,GACpD,IAAMkf,EAAOlf,EAAOE,QACpBz9B,EAAMw8C,UAAN,2BAAuBx8C,EAAMw8C,WAA7B,IAAwCC,YAG1Cld,EAAQC,QAAQkf,GAAuBhf,WAAW,SAAC1/B,EAAOu9B,GACxD,IAAMmf,EAAWnf,EAAOE,QACxBif,EAASrd,WAAY,EACrBr/B,EAAMw8C,UAAN,2BAAuBx8C,EAAMw8C,WAA7B,IAAwCE,mBAMvC,GAAsEiC,GAAW9gB,QAAzE4f,GAAR,GAAQA,mBAAoBO,GAA5B,GAA4BA,iBAAkBE,GAA9C,GAA8CA,oBAEtCS,OAAf,S,8GClNMK,EAAkBx7C,IAAOU,IAAV,2EAoBN+6C,IAbyB,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAA8C,IAAxCC,iBAAwC,MAA5B,YAA4B,EAAZh+B,EAAY,iBACvF,EAA+Ci+B,aAAWF,EAAM,CAAEC,YAAWE,QAAS,UAA9EC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAE5B,OACE,eAAC,IAAD,2BAASr+B,GAAT,cACGq+B,GAAkBD,EACnB,cAACP,EAAD,CAAiBS,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUx+B,MAAM,aAAapd,MAAM,iB,6BCvB3C,wNAGaqsC,EAIR,CACHtQ,QAASp8B,YAAa,gCACtBq8B,UAAWr8B,YAAa,kCACxBktC,SAAUltC,YAAa,kCAGZotC,EAAUptC,YAAqB,iBAC/BqtC,EAAartC,YAAqB,oBAGlCutC,EAAavtC,YAAqB,oBAClCwtC,EAAcxtC,YAAqB,qBAGnCytC,EAAmBztC,YAAqB,0BAClBA,YAAsB,8B,qPCXnDq8C,EAAW,IAAI/nC,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MACpDwD,EAAsB,IAAI1D,IAAQC,IAAKC,OAAO,KAAQD,IAAKC,OAAO,MAClE8nC,EAA2BtkC,EAAoBukC,SAASF,GAGvD,SAASG,EAA2BnwC,GAMzC,IAAMowC,EAAiBpwC,EAEnB2L,EAAoBukC,SAClBlwC,EAAMqwC,MAAMl4B,MAAMxS,QAChB,SAAC2qC,GAAD,OAAoCA,EAAW/nC,SAAS0nC,KACxDtkC,SAJJ5b,EASEwgD,EAAgCvwC,GAASowC,EAAgBpwC,EAAMwwC,YAAYN,SAASE,QAAiBrgD,EAe3G,MAAO,CAAE0gD,sBAZ4BF,EACjC,IAAItoC,IAAJ,OAAYsoC,QAAZ,IAAYA,OAAZ,EAAYA,EAA+BG,UAA3C,OAAsDH,QAAtD,IAAsDA,OAAtD,EAAsDA,EAA+BI,kBACrF5gD,EAU0DqgD,cAN5DA,GACApwC,IACCA,EAAM4wC,uBAAuB91B,IAC1B,IAAIA,IAAY9a,EAAM4wC,YAAYt6B,MAAO85B,EAAc7nC,SAASvI,EAAM4wC,YAAYpoC,KAAKqoC,UACvFC,IAAeC,MAAMX,EAAc7nC,SAASvI,EAAM4wC,YAAYpoC,KAAKqoC,YAMpE,SAAS7K,EACdhmC,EACA+lC,GACwC,IAAD,EACjCiL,EAAMjpC,YAAqBg+B,GACjC,OAAO,EAAP,iBACGtyC,IAAMurC,MADT,OACiBh/B,QADjB,IACiBA,OADjB,EACiBA,EAAOixC,gBAAgBD,IADxC,cAEGv9C,IAAMyrC,OAFT,OAEkBl/B,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAOkxC,iBAAiBF,IAF1C,EAMK,SAASG,EAAgBX,GAC9B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAarL,SAAS75B,OACvB,OAACklC,QAAD,IAACA,OAAD,EAACA,EAAarL,SAAS/5B,OACvB,OAAColC,QAAD,IAACA,OAAD,EAACA,EAAarL,SAASh6B,OACvB,OAACqlC,QAAD,IAACA,OAAD,EAACA,EAAarL,SAASj6B,MACpB,EADsD,EADG,EADF,EADM,EAO/D,SAASkmC,EAAqBpxC,EAAeqxC,GAClD,OAAKrxC,EAGEqxC,EAAQ,UACRrxC,EAAMsxC,eAAeC,SAASC,cAAc,GADpC,YAC0CxxC,EAAM4wC,YAAYnnC,SAAS8X,OADrE,cAETvhB,EAAMyxC,aAAahoC,SAAS8X,QAFnB,UAIRvhB,EAAMsxC,eAAeE,cAAc,GAJ3B,YAIiCxxC,EAAMyxC,aAAahoC,SAAS8X,OAJ7D,cAKTvhB,EAAM4wC,YAAYnnC,SAAS8X,QAPxB,GAcJ,IAAMmwB,EAAwB,SAACC,EAAcn8C,GAA4C,IAA5Bo8C,EAA2B,uDAAP,GACtF,OAAKD,EAIEnvB,WAAWmvB,EAAMH,cAAcI,IAAsBp8C,EAHnD,I,8BCxFX,0PAOMq8C,EAAgB,sBAChBC,EAAkB,gBACjB,SAASrmB,EAAU5R,GACxB,IAAKg4B,EAAchxB,KAAKhH,EAAKzT,SAC3B,MAAM,IAAIzT,MAAJ,2BAA8BknB,EAAKzT,UAE3C,IAAK0rC,EAAgBjxB,KAAKhH,EAAKmT,UAC7B,MAAM,IAAIr6B,MAAJ,uBAA0BknB,EAAKmT,WAEvC,MAAM,GAAN,OAAUnT,EAAKzT,QAAf,YAA0ByT,EAAKmT,UAG1B,SAASnB,EAAagW,GAC3B,IAAMkQ,EAAMlQ,EAAQvqC,MAAM,KAC1B,GAAmB,IAAfy6C,EAAInxB,OACN,MAAM,IAAIjuB,MAAJ,4BAA+BkvC,IAEvC,MAAO,CACLz7B,QAAS2rC,EAAI,GACb/kB,SAAU+kB,EAAI,IASX,IAAMjmB,EAAwBn4B,YACnC,mCAEWo4B,EAA2Bp4B,YACtC,sCAEWmuC,EAA2BnuC,YACtC,sCAEWquC,EAAgCruC,YAI1C,2CACUsuC,EAAyBtuC,YAMnC,qC,iEC7CYq+C,IANE,WACf,MAA8Bv9B,cAA9B,mBAAOC,EAAP,KAAejI,EAAf,KAEA,MAAO,CAAEiI,SAAQu9B,MADHv/C,qBAAWw/C,KACDzlC,iB,6BCP1B,oBAGM0lC,EAAmBtsC,cAEnBk2B,EAAgC,CACpC,CACE1tB,OAAQ,EACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,6CACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,KACfkK,UAAW,EACX/0B,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB33C,MAC/BkU,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB55C,KAC/BmW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB35C,SAC/BkW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB7sC,GAC/BoJ,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBz5C,IAC/BgW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,QAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB15C,IAC/BiW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB3sC,KAC/BkJ,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBr4C,IAC/B4U,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,QAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBv2C,IAC/B8S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB12C,KAC/BiT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBhtC,KAC/BuJ,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBnuC,KAC/B0K,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/3C,KAC/BsU,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/vC,IAC/BsM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,OAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB93C,MAC/BqU,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB7vC,IAC/BoM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAgB,GAC9BzjC,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB53C,IAC/BmU,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBjtC,IAC/BwJ,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBltC,IAC/ByJ,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiBltC,IAC/B6oC,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBnvC,KAC/B0L,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB9vC,IAC/BqM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB33C,MAC/BkU,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB13C,MAC/BiU,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBz3C,QAC/BgU,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBx3C,KAC/B+T,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBv3C,IAC/B8T,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBzxC,IAC/BgO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBt3C,IAC/B6T,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBxwC,MAC/B+M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBr3C,OAC/B4T,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBp3C,OAC/B2T,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBvuC,OAC/B8K,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBxuC,IAC/B+K,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBn3C,KAC/B0T,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBj3C,KAC/BwT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBptC,IAC/B2J,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBrtC,IAC/B4J,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBrtC,IAC/B4J,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,aAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBttC,IAC/B6J,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB7wC,IAC/BoN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB1xC,IAC/BiO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBvtC,IAC/B8J,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBxtC,GAC/B+J,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,YAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBztC,KAC/BgK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBrxC,KAC/B4N,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBlxC,OAC/ByN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB1tC,MAC/BiK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB5tC,KAC/BmK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB7tC,IAC/BoK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB9tC,GAC/BqK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/tC,KAC/BsK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBhuC,IAC/BuK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBjuC,IAC/BwK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBluC,KAC/ByK,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBnuC,KAC/B0K,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBpuC,IAC/B2K,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBh5C,KAC/BuV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBruC,GAC/B4K,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBh5C,KAC/BuV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACX/0B,YAAY,EACZ6qB,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBtuC,MAC/B6K,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB5xC,KAC/BmO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,YAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBzuC,KAC/BgL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,KAEb,CACEjkC,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB1uC,KAC/BiL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,KAEb,CACEjkC,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB3uC,IAC/BkL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,KAEb,CACEjkC,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB5uC,IAC/BmL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,aACfkK,UAAW,KAEb,CACEjkC,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB7uC,KAC/BoL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBx1C,KAC/B+R,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/4C,SAC/BsV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB9uC,KAC/BqL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/uC,MAC/BsL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBhvC,KAC/BuL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBjvC,IAC/BwL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBlvC,WAC/ByL,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,QACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBnvC,KAC/B0L,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBpvC,IAC/B2L,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,QACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBrvC,KAC/B4L,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiBtvC,KAC/BirC,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBp2C,KAC/B2S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBvvC,IAC/B8L,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBxvC,KAC/B+L,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB1vC,IAC/BiM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB3vC,KAC/BkM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBn5C,IAC/B0V,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB7vC,IAC/BoM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB9vC,IAC/BqM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/vC,IAC/BsM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,QACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBhwC,IAC/BuM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBlyC,IAC/ByO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBr2C,MAC/B4S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB12C,KAC/BiT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBrwC,MAC/B4M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBhyC,KAC/BuO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,YACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB5xC,KAC/BmO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBpyC,QAC/B2O,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,aACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBryC,MAC/B4O,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,aACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBlxC,OAC/ByN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBpwC,IAC/B2M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBvwC,IAC/B8M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB3wC,KAC/BkN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/wC,KAC/BsN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,QACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBrxC,KAC/B4N,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBx2C,KAC/B+S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBjwC,IAC/BwM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBlwC,OAC/ByM,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBnwC,UAC/B0M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,aACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBnwC,UAC/B0M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,aACf7qB,YAAY,GAEd,CACElP,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/1C,QAC/BsS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBpwC,IAC/B2M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBrwC,MAC/B4M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBvwC,IAC/B8M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBtwC,IAC/B6M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBxwC,MAC/B+M,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBv0C,QAC/B8Q,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBzwC,IAC/BgN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB1wC,KAC/BiN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB3wC,KAC/BkN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB5wC,IAC/BmN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB7wC,IAC/BoN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,IACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB9wC,IAC/BqN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/wC,KAC/BsN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,QACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBhxC,KAC/BuN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBlxC,OAC/ByN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBjxC,IAC/BwN,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBnxC,KAC/B0N,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBpxC,IAC/B2N,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,SAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBrxC,KAC/B4N,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBtxC,KAC/B6N,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,aAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBvxC,IAC/B8N,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBxxC,KAC/B+N,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBzxC,IAC/BgO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBhyC,KAC/BuO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,YACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB1xC,IAC/BiO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB3xC,KAC/BkO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB5xC,KAC/BmO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB7xC,IAC/BoO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB9xC,KAC/BqO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,WAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBpyC,QAC/B2O,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,aACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBryC,MAC/B4O,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,aACf7qB,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/xC,IAC/BsO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTC,UAAW,IACXlK,cAAe,UAEjB,CACE/5B,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBjyC,IAC/BwO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBjyC,IAC/BwO,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBnyC,MAC/B0O,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB3zC,KAC/BkQ,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB5zC,KAC/BmQ,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,aACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBl3C,IAC/ByT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,WACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBh3C,IAC/BuT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/2C,MAC/BsT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB92C,MAC/BqT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAgB,IAC9BzjC,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB52C,IAC/BmT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB32C,KAC/BkT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB94C,KAC/BqV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB12C,KAC/BiT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBz2C,IAC/BgT,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,YACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBx2C,KAC/B+S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,WACfkK,UAAW,IACX/0B,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBv2C,IAC/B8S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiBt2C,IAC/BiyC,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBt2C,IAC/B6S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB74C,MAC/BoV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBr2C,MAC/B4S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBp2C,KAC/B2S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBn2C,KAC/B0S,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBl2C,IAC/ByS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,WACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBj2C,MAC/BwS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB9zC,MAC/ByvC,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBh2C,KAC/BuS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/1C,QAC/BsS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB54C,IAC/BmV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB91C,IAC/BqS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB71C,KAC/BoS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB7zC,KAC/BwvC,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB7zC,KAC/BwvC,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB31C,IAC/BkS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,MACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB11C,KAC/BiS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB11C,KAC/BiS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBz1C,IAC/BgS,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBx1C,KAC/B+R,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBv1C,IAC/B8R,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBt1C,KAC/B6R,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,WACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBn5C,IAC/B0V,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB34C,MAC/BkV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBr1C,MAC/B4R,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB14C,OAC/BiV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBp1C,MAC/B2R,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,WACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBn1C,KAC/B0R,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBz4C,IAC/BgV,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBl1C,MAC/ByR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBj1C,IAC/BwR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBh1C,IAC/BuR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB/0C,GAC/BsR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB90C,KAC/BqR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBx4C,MAC/B+U,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiBz0C,IAC/BowC,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB70C,IAC/BoR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB50C,IAC/BmR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB30C,IAC/BkR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB95C,IAC/By1C,aAAcqE,EAAiB75C,KAC/BoW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAasf,QAC3B8jC,SAAS,EACTjK,cAAe,MACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB95C,IAC/BqW,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,SACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBv4C,MAC/B8U,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBv4C,MAC/B8U,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,EACZg1B,yBAAyB,GAE3B,CACElkC,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiB10C,KAC/BiR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,UACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBz0C,IAC/BgR,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,IACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBx0C,KAC/B+Q,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,QACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBv0C,QAC/B8Q,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAcrf,IAAaujD,UAC3BH,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBt0C,KAC/B6Q,gBAAiB,CACf,GAAI,6CACJ,GAAI,8CAENJ,aAAcrf,IAAaujD,UAC3BH,SAAS,EACTjK,cAAe,MACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBr0C,IAC/B4Q,gBAAiB,CACf,GAAI,6CACJ,GAAI,8CAENJ,aAAcrf,IAAaujD,UAC3BH,SAAS,EACTjK,cAAe,IACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,GACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBp0C,IAC/B2Q,gBAAiB,CACf,GAAI,6CACJ,GAAI,8CAENJ,aAAcrf,IAAaujD,UAC3BH,SAAS,EACTC,UAAW,IACXlK,cAAe,KACf7qB,YAAY,GAEd,CACElP,OAAQ,EACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBn0C,IAC/B0Q,gBAAiB,CACf,GAAI,6CACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,MACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,EACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBz0C,IAC/BgR,gBAAiB,CACf,GAAI,6CACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,KACfkK,UAAW,IACX/0B,YAAY,GAEd,CACElP,OAAQ,EACR86B,aAAcgJ,EAAiB75C,KAC/Bw1C,aAAcqE,EAAiBl0C,IAC/ByQ,gBAAiB,CACf,GAAI,6CACJ,GAAI,8CAENJ,aAAcrf,IAAamjD,KAC3BC,SAAS,EACTjK,cAAe,OACfkK,UAAW,IACX/0B,YAAY,IAIDwe,O,6BCr2Ff,oBAae0W,IAVE,WACf,IAAMC,EAAehgD,qBAAWigD,KAEhC,QAAqB5iD,IAAjB2iD,EACF,MAAM,IAAI//C,MAAM,4BAGlB,OAAO+/C,I,6BCVT,uDAGME,EAAUC,cAEH1/C,EAAoB,IAAI4D,IAAO+7C,UAAUC,gBAAgBH,I,6BCLtE,4MAAO,IAAMI,EAAoBx/C,8DACpBkzB,EAAuBlzB,oEACvBwjC,EAAoBxjC,8DACpB49B,EAAsB59B,0CACtBy/C,EAAoBz/C,2BAEpB48B,EAAY,UAAM6iB,EAAN,YAOZC,GANgB,UAAMD,EAAN,gBAMU,mE,6BCbvC,4MAaME,EAA0B,SAACC,GAC/B,MAAO,CACL3O,UAAW2O,EAAKpG,SAAW,IAAIh4C,IAAUo+C,EAAKpG,SAASvI,WAAa1vC,IACpEs+C,aAAcD,EAAKpG,SAAW,IAAIh4C,IAAUo+C,EAAKpG,SAASqG,cAAgBt+C,IAC1Es5C,cAAe+E,EAAKpG,SAAW,IAAIh4C,IAAUo+C,EAAKpG,SAASqB,eAAiBt5C,IAC5Eu+C,SAAUF,EAAKpG,SAAW,IAAIh4C,IAAUo+C,EAAKpG,SAASsG,UAAYv+C,MAIhEw+C,EAAkB,SAACH,GAGvB,MAAO,CACLI,YAHyGJ,EAAnGI,YAINC,SAJyGL,EAAtFK,SAKnBC,IALyGN,EAA5EM,IAM7BC,KANyGP,EAAvEO,KAOlCC,WAPyGR,EAAjEQ,WAQxCC,YARyGT,EAArDS,YASpDC,oBATyGV,EAAxCU,oBAUjEC,eAVyGX,EAAnBW,eAWtFz9B,MAAOiC,YAAiB66B,EAAK98B,OAC7B09B,WAAYz7B,YAAiB66B,EAAKY,YAClChH,SAAUmG,EAAwBC,GAClCa,iBAAkBb,EAAKa,iBAAmB,IAAIj/C,IAAUo+C,EAAKa,kBAAoBl/C,IACjFm/C,oBAAqBd,EAAKc,oBAAsB,IAAIl/C,IAAUo+C,EAAKc,qBAAuBn/C,IAC1Fo/C,cAAef,EAAKe,cAAgB,IAAIn/C,IAAUo+C,EAAKe,eAAiBp/C,IACxEq/C,kBAAmBhB,EAAKgB,kBAAoB,IAAIp/C,IAAUo+C,EAAKgB,mBAAqBr/C,IACpFs/C,WAAYjB,EAAKiB,WAAa,IAAIr/C,IAAUo+C,EAAKiB,YAAct/C,MAItDu/C,EAAyB,WAA6B,IAA5BC,EAA2B,wDAC1DzgC,EAAWswB,cACjB,EAAwBoQ,cAAhBC,EAAR,EAAQA,YAERjkD,qBAAU,WACR,IACMkkD,GADeH,EAAiBI,IAAcC,KAC1B98B,KAAI,SAAC+8B,GAAD,OAAiBA,EAAYnB,OAE3D5/B,EAASghC,YAA0BJ,MAClC,CAACH,EAAgBzgC,EAAU2gC,KAyBnBM,EAAsB,WACjC,IAAMjhC,EAAWswB,cACT4Q,EAAgBR,cAAhBQ,YAERxkD,qBAAU,WACRsjB,EAASghC,YAA0B,CAAC,IAAK,SACxC,CAAChhC,EAAUkhC,KAcHC,EAAiB,SAACvB,GAC7B,IAAMN,EAAOn/B,aAAY,SAAC3jB,GAAD,OAAkBA,EAAMoyC,MAAMjxC,KAAK0c,MAAK,SAAC+mC,GAAD,OAAOA,EAAExB,MAAQA,QAClF,OAAOH,EAAgBH,IA6CZ+B,EAAmB,WAC9B,IAEMC,EAFcH,EAAe,KAEOlB,eAM1C,OAJsB9hC,mBAAQ,WAC5B,OAAO,IAAIjd,IAAUogD,KACpB,CAACA,M,kNCvJOC,EAAQ,CACnBC,QAAS,UACTC,OAAQ,SACRC,QAAS,UACTC,KAAM,Q,4CCAFC,GAAY,mBACfL,EAAMI,KAAOE,KAAcF,MADZ,cAEfJ,EAAMC,QAAUK,KAAcL,SAFf,cAGfD,EAAME,OAASI,KAAcJ,QAHd,cAIfF,EAAMG,QAAUG,KAAcH,SAJf,GAOZI,EAAc9hD,IAAOU,IAAV,0LAOb,qBAAGy9C,MAAkB4D,aAAaC,MAoDvBC,EA/CqB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAU33B,EAA2B,EAA3BA,MAAO43B,EAAoB,EAApBA,IAAQzkC,EAAY,iBAC3E0kC,EAAQjjD,mBACR68C,EAAM78C,iBAAO,MACbkjD,EAAgBljD,iBAAO+iD,GACrBhoC,EAAiC+nC,EAAjC/nC,GAAImf,EAA6B4oB,EAA7B5oB,MAAOE,EAAsB0oB,EAAtB1oB,YAAa5lB,EAASsuC,EAATtuC,KAE1B2uC,EAAe9kD,uBAAY,kBAAM6kD,EAAc9iD,QAAQ2a,KAAK,CAACA,EAAImoC,IA8BvE,OAdA5lD,qBAAU,WASR,OARI2lD,EAAM7iD,SACRgjD,aAAaH,EAAM7iD,SAGrB6iD,EAAM7iD,QAAUijD,OAAOC,YAAW,WAChCH,MACCH,GAEI,WACLI,aAAaH,EAAM7iD,YAEpB,CAAC6iD,EAAOD,EAAKG,IAGd,cAACI,EAAA,EAAD,yBAAeC,QAAS3G,EAAK4G,QAAS,IAAKr4B,MAAOA,GAAW7M,GAA7D,aACE,cAACmkC,EAAD,CAAa7F,IAAKA,EAAK6G,aA9BF,WACvBN,aAAaH,EAAM7iD,UA6BsCujD,aA1BlC,WACnBV,EAAM7iD,SACRgjD,aAAaH,EAAM7iD,SAGrB6iD,EAAM7iD,QAAUijD,OAAOC,YAAW,WAChCH,MACCH,IAmBD,SACE,cAAC,IAAD,CAAO9oB,MAAOA,EAAO0pB,QAASpB,EAAahuC,GAAO8J,QAAS6kC,EAA3D,SACG/oB,UCxDLypB,EAAuBjjD,IAAOU,IAAV,8TAuCXwiD,EAjBuC,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,OAAQhB,EAA8C,EAA9CA,SAA8C,IAApCC,WAAoC,MAA9B,IAA8B,MAAxBgB,oBAAwB,MAAT,GAAS,EAC7G,OACE,cAACH,EAAD,UACE,cAACI,EAAA,EAAD,UACGF,EAAOn/B,KAAI,SAACk+B,EAAOruB,GAClB,IAAMyvB,GA9BD,IA8BoBzvB,GAAOv1B,WAC1BilD,EA9BK,GA8BgB1vB,EAAQuvB,EAEnC,OACE,cAAC,EAAD,CAAsBlB,MAAOA,EAAOC,SAAUA,EAAUC,IAAKA,EAAK53B,MAAO,CAAE+4B,IAAI,GAAD,OAAKA,EAAL,MAAcD,WAAhFpB,EAAM/nC,Y,iCCZfqpC,EAhB6C,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQtnD,EAAe,EAAfA,SAC7D8C,EAAYH,cAAZG,QACAR,EAAMC,cAAND,EAER,OACE,qCACuB,kBAAbtC,EAAwB,cAAC,KAAD,CAAMunD,GAAG,IAAT,SAAcvnD,IAAmBA,EAChEsnD,GACC,eAAC,KAAD,CAAME,UAAQ,EAACC,KAAMjwC,YAAe8vC,EAAQ,cAAexkD,GAA3D,UACGR,EAAE,mBADL,KAC2BolD,YAAaJ,EAAQ,EAAG,W,gNCb9CK,EAAqB,WAChC,IAAMzB,EAAQjjD,iBAAO,MACf4gB,EAAWswB,cACXyT,EAAkBC,cAExBtnD,qBAAU,WAUR,OATIqnD,EACF1B,EAAM7iD,QAAUykD,YAAW,sBAAC,4BAAAtnD,EAAA,sEACA0C,IAAkBw9B,iBADlB,OACpB3F,EADoB,OAE1BlX,EAASkkC,YAAShtB,IAFQ,2CAGzB,KAEHitB,cAAc9B,EAAM7iD,SAGf,kBAAM2kD,cAAc9B,EAAM7iD,YAChC,CAACwgB,EAAUqiC,EAAO0B,KAGV5qB,EAAW,WACtB,OAAOhZ,aAAY,SAAC3jB,GAAD,OAAkBA,EAAMiyB,UAGhC21B,EAAkB,WAC7B,OAAOjkC,aAAY,SAAC3jB,GAAD,OAAkBA,EAAMiyB,MAAM41B,kB,+BChCnD,+QAgDO,SAASC,EACdhyC,EACAV,GAEA,IAAM2yC,EAA2BpmC,mBAC/B,yCAAMvM,QAAN,IAAMA,OAAN,EAAMA,EAAQsS,QAAO,SAACzlB,GAAD,OAAqD,IAA1BiV,YAAS,OAACjV,QAAD,IAACA,OAAD,EAACA,EAAG6T,mBAA7D,QAAoF,KACpF,CAACV,IAGG4yC,EAA0BrmC,mBAAQ,kBAAMomC,EAAgBvgC,KAAI,SAACygC,GAAD,OAAQA,EAAGnyC,aAAU,CAACiyC,IAElFG,EAAWtrB,YAA8BorB,EAAyBG,IAAiB,YAAa,CAACryC,IAEjGsyC,EAAsBzmC,mBAAQ,kBAAMumC,EAASG,MAAK,SAACC,GAAD,OAAeA,EAAUn3B,aAAU,CAAC+2B,IAE5F,MAAO,CACLvmC,mBACE,kBACE7L,GAAWiyC,EAAgBz3B,OAAS,EAChCy3B,EAAgB1yC,QAA4D,SAACgT,EAAMrC,EAAO+D,GAAO,IAAD,IACxF/nB,EAAK,OAAGkmD,QAAH,IAAGA,GAAH,UAAGA,EAAWn+B,UAAd,iBAAG,EAAeK,cAAlB,aAAG,EAAwB,GAChCllB,EAASlD,EAAQ4V,IAAKC,OAAO7V,EAAMF,iBAAcrC,EAIvD,OAHIyF,IACFmjB,EAAKrC,EAAMlQ,SAAW,IAAI0U,IAAYxE,EAAO9gB,IAExCmjB,IACN,IACH,KACN,CAACvS,EAASiyC,EAAiBG,IAE7BE,GAIG,SAASG,EACdzyC,EACAV,GAEA,OAAO0yC,EAAqChyC,EAASV,GAAQ,GAIxD,SAASozC,EAAgBnwC,EAAkB2N,GAChD,IAAMw0B,EAAgB+N,EAAiBlwC,EAAS,CAAC2N,IACjD,GAAKA,EACL,OAAOw0B,EAAcx0B,EAAMlQ,SAGtB,SAAS2yC,EACdpwC,EACAqwC,GAEA,IAAMtzC,EAASuM,mBACb,yCAAM+mC,QAAN,IAAMA,OAAN,EAAMA,EAAYhhC,QAAO,SAACvO,GAAD,OAAiCA,aAAoBrR,cAA9E,QAAwF,KACxF,CAAC4gD,IAGGlO,EAAgB+N,EAAiBlwC,EAASjD,GAE1CuzC,EA/FD,SAAwBC,GAG7B,IAAMC,EAAoBxlC,cAEpBrN,EAAsB2L,mBAC1B,kBACEinC,EACIA,EACGphC,IAAItQ,KACJwQ,QAAO,SAACvnB,GAAD,OAA0B,IAANA,KAC3Bi7B,OACH,KACN,CAACwtB,IAGGpsB,EAAUJ,YACdysB,EACA,gBACA7yC,EAAUwR,KAAI,SAAC1R,GAAD,MAAa,CAACA,OAG9B,OAAO6L,mBACL,kBACE3L,EAAUX,QAA8C,SAACgT,EAAMvS,EAASiU,GAAO,IAAD,IACtE/nB,EAAK,OAAGw6B,QAAH,IAAGA,GAAH,UAAGA,EAAUzS,UAAb,iBAAG,EAAcK,cAAjB,aAAG,EAAuB,GAErC,OADIpoB,IAAOqmB,EAAKvS,GAAW0qC,IAAeC,MAAM7oC,IAAKC,OAAO7V,EAAMF,cAC3DumB,IACN,MACL,CAACrS,EAAWwmB,IAkEKssB,CADUnnC,mBAAQ,yCAAM+mC,QAAN,IAAMA,OAAN,EAAMA,EAAYL,MAAK,SAAClvC,GAAD,OAAcA,IAAaC,cAAlD,WAAmE,CAACsvC,IACzD,CAACrwC,GAAW,IAE5D,OAAOsJ,mBACL,yCACE+mC,QADF,IACEA,OADF,EACEA,EAAYlhC,KAAI,SAACrO,GACf,GAAKd,GAAYc,EACjB,OAAIA,aAAoBrR,IAAc0yC,EAAcrhC,EAASrD,SACzDqD,IAAaC,IAAcuvC,EAAWtwC,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAASqwC,EAAYC,EAAYnO,IAI/B,SAASuO,EAAmB1wC,EAAkBc,GACnD,OAAOsvC,EAAoBpwC,EAAS,CAACc,IAAW,GAI3C,SAAS6vC,IACd,IAAQ3wC,EAAY9V,cAAZ8V,QACF2+B,EAAY5vB,cAEZ8gC,EAAWK,EAAgB,OAAClwC,QAAD,IAACA,SAAW5Y,EADtBkiB,mBAAQ,kBAAMpgB,OAAOuuB,OAAP,OAAcknB,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAOkR,QAAP,IAAOA,IAAY,K,+yECxHTe,E,+DAFNC,EAAiB,IAAI7/B,IAAUjG,KAS9B,SAAS+lC,EAAST,GACvB,IAAQjmD,EAAYH,cAAZG,QAEF2S,EAASuM,mBACb,kBACE+mC,EAAWlhC,KAAI,mCAAE4hC,EAAF,KAAaC,EAAb,WAA4B,CACzCh/B,YAAgB++B,EAAW3mD,GAC3B4nB,YAAgBg/B,EAAW5mD,SAE/B,CAACA,EAASimD,IAGNY,EAAgB3nC,mBACpB,kBACEvM,EAAOoS,KAAI,YAAuB,IAAD,mBAApBR,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAO0D,OAAOzD,GAAUC,IAAKrR,WAAWmR,EAAQC,QAAUxnB,OAE1F,CAAC2V,IAGGonB,EAAUI,YAA8B0sB,EAAeJ,EAAgB,eAE7E,OAAOvnC,mBAAQ,WACb,OAAO6a,EAAQhV,KAAI,SAAC4C,EAAQL,GAC1B,IAAgBw/B,EAAsBn/B,EAA9BA,OAAkB+G,EAAY/G,EAAZ+G,QACpBnK,EAAS5R,EAAO2U,GAAG,GACnB9C,EAAS7R,EAAO2U,GAAG,GAEzB,GAAIoH,EAAS,MAAO,CAAC83B,EAAUvmB,QAAS,MACxC,IAAK1b,IAAWC,GAAUD,EAAO0D,OAAOzD,GAAS,MAAO,CAACgiC,EAAUO,QAAS,MAC5E,IAAKD,EAAU,MAAO,CAACN,EAAUQ,WAAY,MAC7C,IAAQC,EAAuBH,EAAvBG,SAAUC,EAAaJ,EAAbI,SAClB,EAAyB3iC,EAAOuB,YAAYtB,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOL,EAAP,KAAeC,EAAf,KACA,MAAO,CACLqiC,EAAUW,OACV,IAAI1iC,IAAK,IAAIsD,IAAY7D,EAAQ+iC,EAAS5nD,YAAa,IAAI0oB,IAAY5D,EAAQ+iC,EAAS7nD,mBAG3F,CAAC06B,EAASpnB,IAGR,SAASy0C,EAAQ7iC,EAAmBC,GACzC,OAAOkiC,EAAS,CAAC,CAACniC,EAAQC,KAAU,I,SAjD1BgiC,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,qFCMGa,IAZa,SAAC3oC,GAC3B,IAAQlf,EAAMC,cAAND,EACR,EAA0B8nD,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,aAAeH,EAAOC,EAAQhoD,GAAxDioD,sBAER,OACE,cAAC,IAAD,yBAAQhpC,QAASgpC,GAA2B/oC,GAA5C,aACGlf,EAAE,uB,6BCZT,4MAAO,IAAMmoD,EAAc,IAGdC,EAAe,EAEfC,EAAmB,EACnBC,EAAqB,EAErB/wB,EAAkB,IAClBgxB,EAAgC,I,8BCR7C,4KAQO,SAASxV,IAQd,MAA6B1yC,cAArBG,EAAR,EAAQA,QAAS4V,EAAjB,EAAiBA,QACXmL,EAAWC,cAEjB,OAAOxiB,uBACL,SACEq1B,GAMI,IAAD,yDAD4G,GAH7GwX,EAIC,EAJDA,QACAD,EAGC,EAHDA,SACAE,EAEC,EAFDA,MAGF,GAAK11B,GACA5V,EAAL,CAEA,IAAQuvB,EAASsE,EAATtE,KACR,IAAKA,EACH,MAAM3vB,MAAM,8BAEdmhB,EAASoqB,YAAe,CAAE5b,OAAMtrB,KAAM2R,EAAS5V,UAASorC,WAAUC,UAASC,cAE7E,CAACvqB,EAAU/gB,EAAS4V,IAKjB,SAASoyC,IAAgE,IAAD,EACrEhoD,EAAYH,cAAZG,QAEFzC,EAAQ2jB,aAAgD,SAACqtB,GAAD,OAAOA,EAAExF,gBAEvE,OAAO/oC,GAAO,UAAGzC,EAAMyC,UAAT,QAA0B,GAenC,SAASioD,EAAoBtc,GAClC,OAAO,IAAI7B,MAAOC,UAAY4B,EAAGH,UAAY,MAIxC,SAASyG,EAAsBnyB,EAAkC2xB,GACtE,IAAMyW,EAAkBF,IACxB,OAAO9oC,mBACL,iBAC0B,kBAAjBY,GACY,kBAAZ2xB,GACP3yC,OAAOC,KAAKmpD,GAAiBtC,MAAK,SAACr2B,GACjC,IAAMoc,EAAKuc,EAAgB34B,GAC3B,IAAKoc,EAAI,OAAO,EAChB,GAAIA,EAAGG,QACL,OAAO,EAET,IAAQV,EAAaO,EAAbP,SACR,QAAKA,IACEA,EAASqG,UAAYA,GAAWrG,EAAStrB,eAAiBA,GAAgBmoC,EAAoBtc,SAEzG,CAACuc,EAAiBzW,EAAS3xB,M,6BCpF/B,oJAcaqrB,EAAiBvqC,YAO3B,+BACU6qC,EAAuB7qC,YAAmC,qCAC1DirC,EAAsBjrC,YAIhC,oCACU8qC,EAAqB9qC,YAI/B,oC,sKC7BGunD,EAAOpnD,YAAOC,IAAPD,CAAH,0KAMC,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGtB,qBAAGG,WACJ,qBAAGC,UACI,qBAAGC,gBACA,qBAAG49C,MAAkBkJ,OAAOC,cAEnCF,MAER,IAAMG,EAAYvnD,YAAOonD,EAAPpnD,CAAH,gFACA,qBAAGm+C,MAAkBkJ,OAAOC,cAC5B,qBAAGnJ,MAAkBkJ,OAAOG,iBAGrCC,EAAgBznD,YAAOonD,EAAPpnD,CAAH,gFACJ,qBAAGm+C,MAAkBkJ,OAAOK,cAC5B,qBAAGvJ,MAAkBkJ,OAAOC,cAGrCK,EAAW3nD,YAAOonD,EAAPpnD,CAAH,sDACC,qBAAGm+C,MAAkBkJ,OAAOO,a,6BC9BlD,wIACA,IAAMC,EAA4B,CAAC,EAAG,EAAG,GAAI,IAAK,MAWrCC,EAAuB,SAAC,GAY9B,IAXLC,EAWI,EAXJA,eACA1/B,EAUI,EAVJA,IACAO,EASI,EATJA,kBASI,IARJo/B,yBAQI,MARgB,EAQhB,MAPJ7/B,sBAOI,MAPa,EAOb,EAEE8/B,EAAkB,IAAMD,EAExBE,EAAe7/B,EAAM,IAKrB8/B,EADmBv+B,KAAK2F,MAAM3G,EAAoB,KAAQ,EACjB,EAAI,EAEnD,OAAOi/B,EAA0B7jC,KAAI,SAACokC,GACpC,IAAMC,EAAsBD,EAAO,IAE7BE,EAAYP,EAAiBn/B,EAC/B2/B,EAAiBD,EAAYJ,GAAgBE,EAAO,KAChC,IAApBH,IAIFM,EAFsBD,EAAS,SAAI,EAAIJ,EAAeD,EAAqBA,EAAkBI,GAE5DC,EAC7BngC,IAGFogC,GAD+BA,GADCpgC,EAAiB,OAKrD,OAAOuG,WAAW65B,EAAelmD,QAAQ8lD,QAUhCK,EAA0B,SACrCC,EACApgC,EACAqgC,GAEI,IADJvgC,EACG,uDADc,EAEjB,OAAO0/B,EAA0B7jC,KAAI,SAACokC,GACpC,IAAMO,EAAepgC,EAAOF,EAAKqgC,EAAsBN,EAAMjgC,GAG7D,OAAOuG,YAAY+5B,EAAWE,GAActmD,QAAQ,QAY3CkmB,EAAS,SAACF,GAAwE,IAA3D2/B,EAA0D,uDAAtC,EAAGI,EAAmC,uDAA5B,IAAKjgC,EAAuB,uDAAN,EAChFkgC,EAAsBD,EAAO,IAC7BF,EAAe7/B,EAAM,IACrB4/B,EAAkB,IAAMD,EAC1BW,EAAgBtgC,EAAM,IAAOggC,EAIjC,GAHIJ,EAAkB,IACpBU,EAAe,SAAC,EAAIT,EAAeD,EAAqBA,EAAkBI,GAAuB,GAE/FlgC,EAAgB,CAClB,IAAMygC,EAA0BzgC,EAAiB,IAC3C0gC,EAAwBF,EAAeC,EAC7CD,GAAgBE,EAElB,OAAOF,GAGIG,EAAS,SAAC,GAAwF,IAAtFC,EAAqF,EAArFA,aAAcC,EAAuE,EAAvEA,eACrC,OAAuB,IAAnBA,EACK,EAEWD,EAAeC,EAAkB,M,6BCvGvD,2BAceC,IAPK,WAClB,IAEMrmC,EADQyrB,IAAMxP,WACEze,KAAKyC,UAAYC,IAAc,QACrD,MAHgBpjB,OAGGwE,IAAQD,QAAQ3F,WAAaskB,EAAUE,IAAeC,U,6BCT3E,sGAAO,IAEMtnB,EAAe,CAAEI,OAAQ,QAASsB,SAAU,UAAW+rD,KAAM,MA2B7D3sD,EAAY,CACvB,QA9B0B,CAAEV,OAAQ,QAASsB,SAAU,6CAAW+rD,KAAM,MA+BxE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,iCAAS+rD,KAAM,MA+BtE,QAASztD,EACT,QA9B0B,CAAEI,OAAQ,QAASsB,SAAU,UAAW+rD,KAAM,MA+BxE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,mDAAY+rD,KAAM,MA+BzE,QA9B4B,CAAErtD,OAAQ,QAASsB,SAAU,aAAW+rD,KAAM,SA+B1E,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,cAAe+rD,KAAM,MA+B5E,SA9B2B,CAAErtD,OAAQ,SAAUsB,SAAU,WAAY+rD,KAAM,OA+B3E,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,cAAY+rD,KAAM,MA+BzE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,iCAAS+rD,KAAM,MA+BtE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,SAAU+rD,KAAM,MA+BvE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,mBAAoB+rD,KAAM,MA+BjF,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,WAAY+rD,KAAM,MA+BzE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,qBAAO+rD,KAAM,MA+BpE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,qBAAO+rD,KAAM,MA+BpE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,aAAc+rD,KAAM,MA+B3E,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,SAAU+rD,KAAM,MA+BvE,QA9B4B,CAAErtD,OAAQ,QAASsB,SAAU,wBAAsB+rD,KAAM,SA+BrF,QA9B4B,CAAErtD,OAAQ,QAASsB,SAAU,eAAa+rD,KAAM,SA+B5E,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,iBAAU+rD,KAAM,MA+BvE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,6CAAW+rD,KAAM,MA+BxE,QA9B4B,CAAErtD,OAAQ,QAASsB,SAAU,UAAW+rD,KAAM,MA+B1E,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,iCAAS+rD,KAAM,MA+BtE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,eAAU+rD,KAAM,MA+BvE,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,+DAAc+rD,KAAM,MA+B3E,QA9B0B,CAAErtD,OAAQ,QAASsB,SAAU,uBAAc+rD,KAAM,MA+B3E,QA9B4B,CAAErtD,OAAQ,QAASsB,SAAU,2BAAQ+rD,KAAM,SA+BvE,QA9B4B,CAAErtD,OAAQ,QAASsB,SAAU,2BAAQ+rD,KAAM,UAiC5DC,EAAeprD,OAAOuuB,OAAO/vB,I,6PCjDpC6sD,EAA2B,SAACC,GAChC,IAAWC,EAA+ED,EAAlF,GAAcE,EAAoEF,EAAvE,GAAoBG,EAAmDH,EAAtD,GAAcI,EAAwCJ,EAA3C,GAAkBpuB,EAAyBouB,EAA5B,GAAeK,EAAaL,EAAhB,GAE1E,MAAO,CACLC,OAAQA,EAAOpnD,WACfynD,OAAQJ,EAAarnD,WACrBsnD,OAAQA,EAAOtnD,WACf+4B,QAASA,EAAQ/4B,WACjBunD,aACAC,aAIEE,EAAkBzuC,cAGX0uC,EAAW,uCAAG,WAAOv3C,GAAP,qBAAA3V,EAAA,+EAEA0gC,MAAM,GAAD,OAJb39B,kCAIa,sBAA4B4S,EAAQ0T,gBAFzC,WAEjB8M,EAFiB,QAIT2K,GAJS,yCAKd,IALc,uBAQS3K,EAAS6K,OARlB,2BAQfmsB,gBARe,MAQJ,GARI,oBAUhBA,GAVgB,2DAYhB,IAZgB,0DAAH,sDAmBXC,EAAgB,uCAAG,WAAOz3C,GAAP,uBAAA3V,EAAA,+EAEAitD,EAAgBI,cAAc13C,GAF9B,0DAKnB,MALmB,uBAQEs3C,EAAgBK,eAAe33C,GARjC,UAQtB+2C,EARsB,SAScD,EAAyBC,GAA3DpuB,EAToB,EASpBA,QAASwuB,EATW,EASXA,WATW,EASCC,SATD,0CAYnB,MAZmB,yBAeVxuB,YAAgBuuB,EAAYxuB,GAflB,eAetBivB,EAfsB,yBAgBrBA,GAhBqB,2DAkBrB,MAlBqB,0DAAH,sDAsBhBC,EAAU,uCAAG,WAAO73C,GAAP,yCAAA3V,EAAA,+EAEMitD,EAAgBI,cAAc13C,GAFpC,UAEhB03C,EAFgB,gDAKb,CAAEA,gBAAe/a,QAAS,OALb,uBAQQ2a,EAAgBK,eAAe33C,GARvC,cAQhB+2C,EARgB,SAS4CD,EAAyBC,GAAnFC,EATc,EASdA,OAAQK,EATM,EASNA,OAAQH,EATF,EASEA,OAAQvuB,EATV,EASUA,QAASwuB,EATnB,EASmBA,WAAYC,EAT/B,EAS+BA,SAT/B,UAUHU,YAAQZ,GAVL,eAUhBa,EAVgB,iBAWCR,EAAYv3C,GAXb,WAWhBw3C,EAXgB,QAgBlBJ,EAhBkB,kCAiBRxuB,YAAgBuuB,EAAYxuB,GAjBpB,QAiBpBivB,EAjBoB,OAoBpBI,IAAQ1uD,IAAR,kBACa0W,GACX,CACEw3C,WACAS,OAAO,2CAAD,iBAA6CL,SAA7C,aAA6C,EAAKM,OAAOxI,KAEjE,CAAEyI,OAAQ,sBAAuBC,QAAQ,EAAMC,QAAS,KA1BtC,eA8BhB1b,EAAU,CACdqa,SACAK,SACAH,SACAvuB,UACA6uB,WACAL,aACAC,WACAQ,MACAG,QAvCoB,kBA0Cf,CAAEL,gBAAe/a,YA1CF,yCA4CtBpwB,QAAQD,MAAR,MA5CsB,kBA6Cf,MA7Ce,0DAAH,sDChEjBtjB,EAA6B,CACjCsgC,eAAe,EACfC,WAAW,EACXmuB,eAAe,EACfrsD,KAAM,KACNitD,eAAgB,IAGLC,EAAqBtwB,YAChC,6BADgD,uCAEhD,WAAO1lB,GAAP,eAAAlY,EAAA,sEACoBotD,EAAiBl1C,GADrC,cACQq1C,EADR,yBAES,CAAEr1C,UAASq1C,QAFpB,2CAFgD,uDAQrCY,EAAuBvwB,YAClC,+BADkD,uCAElD,WAAO1lB,GAAP,eAAAlY,EAAA,sEACyBktD,EAAYh1C,GADrC,cACQi1C,EADR,yBAES,CAAEj1C,UAASi1C,aAFpB,2CAFkD,uDAQvCiB,EAAenxB,YAAY,CACtC1T,KAAM,UACN5qB,eACAu+B,SAAU,CACRmxB,kBAAmB,SAACxuD,GAClBA,EAAMq/B,WAAY,GAEpBovB,sBAAuB,SAACzuD,EAAOu9B,GAC7B,MAAmCA,EAAOE,QAAlCgV,EAAR,EAAQA,QAAS+a,EAAjB,EAAiBA,cAEjBxtD,EAAMo/B,eAAgB,EACtBp/B,EAAMq/B,WAAY,EAClBr/B,EAAMwtD,cAAgBA,EACtBxtD,EAAMmB,KAAOsxC,GAEfic,mBAAoB,SAAC1uD,GACnBA,EAAMq/B,WAAY,EAClBr/B,EAAMo/B,eAAgB,GAExBuvB,aAAc,8BAAC,eACV7vD,GADS,IAEZugC,WAAW,KAEbuvB,UAAW,SAAC5uD,EAAOu9B,GACjBv9B,EAAMmB,KAAKgsD,QAAU5vB,EAAOE,UAGhC6B,cAAe,SAACC,GACdA,EAAQC,QAAQ8uB,EAAqB5uB,WAAW,SAAC1/B,EAAOu9B,GACtD,MAA8BA,EAAOE,QAA7BplB,EAAR,EAAQA,QAASi1C,EAAjB,EAAiBA,SAEbttD,EAAMouD,eAAe/1C,GACvBrY,EAAMouD,eAAe/1C,GAArB,2BACKrY,EAAMouD,eAAe/1C,IAD1B,IAEEi1C,aAGFttD,EAAMouD,eAAe/1C,GAAW,CAAEi1C,WAAUI,IAAK,SAGrDnuB,EAAQC,QAAQ6uB,EAAmB3uB,WAAW,SAAC1/B,EAAOu9B,GACpD,MAAyBA,EAAOE,QAAxBplB,EAAR,EAAQA,QAASq1C,EAAjB,EAAiBA,IAEb1tD,EAAMouD,eAAe/1C,GACvBrY,EAAMouD,eAAe/1C,GAArB,2BACKrY,EAAMouD,eAAe/1C,IAD1B,IAEEq1C,QAGF1tD,EAAMouD,eAAe/1C,GAAW,CAAEi1C,SAAU,KAAMI,aAOnD,EACLa,EAAa1wB,QADA2wB,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,sBAAuBC,EAAlD,EAAkDA,mBAAoBC,EAAtE,EAAsEA,aAKhEE,GALN,EAAoFD,UAK/D,SAAC94C,GAAD,8CAAqB,WAAO0N,GAAP,eAAArjB,EAAA,sEAE7CqjB,EAASgrC,KAFoC,SAGtBb,EAAW73C,GAHW,OAGvCwgB,EAHuC,OAI7C9S,EAASirC,EAAsBn4B,IAJc,gDAM7CjU,QAAQD,MAAR,MACAoB,EAASkrC,KAPoC,yDAArB,wDAWbH,MAAf,S,yLCjGeO,EAFO,SAAC1L,GAAD,OAAiBA,GAHN,KAGyCA,GAF3C,K,QCsBhB2L,EApBgC,CAQ7C,CACE3L,IAAK,KACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO5Q,IAAOhD,IACdsxC,WAAYtuC,IAAOvN,O,kECkFRmnD,EApFA,uCAAG,WAAOlM,GAAP,iEAAA3iD,EAAA,6DACRijD,EAAwCN,EAAxCM,IAAKF,EAAmCJ,EAAnCI,YAAal9B,EAAsB88B,EAAtB98B,MAAO09B,EAAeZ,EAAfY,WAC3BuL,EAAYp5C,YAAWqtC,GACvBj6B,EAAQ,CAEZ,CACEnT,QAASkQ,EAAMlQ,QACf4T,KAAM,YACNC,OAAQ,CAACslC,IAGX,CACEn5C,QAAS4tC,EAAW5tC,QACpB4T,KAAM,YACNC,OAAQ,CAACslC,IAGX,CACEn5C,QAASm5C,EACTvlC,KAAM,YACNC,OAAQ,CAAC5T,gBAGX,CACED,QAASm5C,EACTvlC,KAAM,eAGR,CACE5T,QAASkQ,EAAMlQ,QACf4T,KAAM,YAGR,CACE5T,QAAS4tC,EAAW5tC,QACpB4T,KAAM,aAnCM,SAwCRV,YAAUkmC,EAAOjmC,GAxCT,sCAuCTkmC,EAvCS,KAuCOC,EAvCP,KAuC4BC,EAvC5B,KAuC8CxL,EAvC9C,KAuC6DyL,EAvC7D,KAuC4EC,EAvC5E,KA2CVC,EAAe,IAAI9qD,IAAU2qD,GAAkBnrD,IAAI,IAAIQ,IAAUm/C,IAGjEF,EAAmB,IAAIj/C,IAAUyqD,GAAgBjrD,IAAIU,IAAQS,IAAIiqD,IACjEG,EAAwB,IAAI/qD,IAAU0qD,GAAqBlrD,IAAIU,IAAQS,IAAIkqD,IAG3EG,EAAqBD,EAAsBrqD,MAAMoqD,GAGjD5L,EAAsB8L,EAAmBtqD,MAAM,IAAIV,IAAU,KAIjE0+C,GAAe,IAARA,EAzDO,kCA0DJp6B,YAAU2mC,EAAe,CAC7B,CACE75C,QAASC,cACT2T,KAAM,WACNC,OAAQ,CAACy5B,IAEX,CACEttC,QAASC,cACT2T,KAAM,qBAlEA,iDAqEV,CAAC,KAAM,MArEG,yCAwDTupB,EAxDS,KAwDH2c,EAxDG,KAuEVC,EAAa5c,EAAO,IAAIvuC,IAAJ,UAAcuuC,EAAK4c,kBAAnB,aAAc,EAAiB9U,MAAQt2C,IAC3Ds/C,EAAa6L,EAAkBC,EAAW3rD,IAAI,IAAIQ,IAAUkrD,IAAoBnrD,IAxEtE,kBA0ET,CACLk/C,iBAAkBA,EAAiB3+C,SACnC6+C,cAAe,IAAIn/C,IAAUm/C,GAAe7+C,SAC5C4+C,oBAAqBA,EAAoB5+C,SACzC8+C,kBAAmB2L,EAAsBvrD,IAAIy/C,GAAkB3+C,SAC/D++C,WAAYA,EAAW/+C,SACvBs+C,WAAW,GAAD,OAAKuM,EAAW3rD,IAAI,KAAKpC,WAAzB,OAhFI,4CAAH,sDCRAktD,EANA,uCAAG,WAAOlM,GAAP,eAAA3iD,EAAA,sEACa2vD,EAAoBhN,GADjC,cACViN,EADU,oDAGJjN,GAASiN,IAHL,2CAAH,sDCWAC,EAXC,uCAAG,WAAOC,GAAP,eAAA9vD,EAAA,sEACE2+B,QAAQC,IACzBkxB,EAAazoC,IAAb,uCAAiB,WAAO0oC,GAAP,iBAAA/vD,EAAA,sEACI6uD,EAAUkB,GADd,cACTpN,EADS,OAETqN,EAFS,2BAEarN,GAFb,IAEmB98B,MAAO88B,EAAK98B,MAAO09B,WAAYZ,EAAKY,aAFvD,kBAGRyM,GAHQ,2CAAjB,wDAFe,cACXhvD,EADW,yBAQVA,GARU,2CAAH,sDCKHivD,EAA0B,SACrChe,GAEoB,IADpBie,EACmB,uDADc,CAAC,OAAQ,QAEpCC,EAAgBle,EAAMv0B,MAAK,SAACilC,GAChC,OAAOuN,EAAqBhI,MAAK,SAAC3E,GAChC,OAAOZ,EAAKY,WAAWzyB,SAAWyyB,QAGtC,OAAO4M,GAAiBle,EAAM,ICX1Bme,EAAyB,SAC7Bne,EACAoe,EACAH,GAEA,IAAMI,EAAuBre,EAAM1qB,QAAO,SAACo7B,GAAD,OAAUA,EAAK98B,MAAMiL,SAAWu/B,KAE1E,OADqBJ,EAAwBK,EAAsBJ,IAI/DK,EAAwB,SAC5B5N,EACA6N,EACAC,GAEA,IAAMC,EAAuBx3C,QAAQypC,EAAKgB,mBAE1C,GAAIhB,EAAKY,WAAWzyB,SAAW7b,IAAO9M,KAAK2oB,OACzC,OAAO4/B,EAAuB,IAAInsD,IAAUo+C,EAAKgB,mBAAqBr/C,IAGxE,GAAIq+C,EAAKY,WAAWzyB,SAAW7b,IAAOvN,KAAKopB,OACzC,OAAO4/B,EAAuBD,EAAaxrD,MAAM09C,EAAKgB,mBAAqBr/C,IAI7E,IAAKksD,EACH,OAAOlsD,IAQT,GAAIksD,EAAejN,WAAWzyB,SAAW7b,IAAOvN,KAAKopB,OAAQ,CAC3D,IAAM6/B,EAAmBF,EAAaxrD,MAAMurD,EAAe7M,mBAC3D,OAAO+M,GAAwBC,EAC3B,IAAIpsD,IAAUo+C,EAAKgB,mBAAmB1+C,MAAM0rD,GAC5CrsD,IAGN,GAAIksD,EAAejN,WAAWzyB,SAAW7b,IAAO9M,KAAK2oB,OAAQ,CAC3D,IAAM6/B,EAAmBH,EAAe7M,kBACxC,OAAO+M,GAAwBC,EAC3B,IAAIpsD,IAAUo+C,EAAKgB,mBAAmB1+C,MAAM0rD,GAC5CrsD,IAIN,OAAOA,KAGHssD,EAAyB,SAC7BjO,EACA6N,EACAC,GAEA,MAA+B,SAA3B9N,EAAKY,WAAWzyB,OACXtsB,IAGsB,SAA3Bm+C,EAAKY,WAAWzyB,OACX2/B,EAGJD,EAIoC,SAArCA,EAAejN,WAAWzyB,OACrB0/B,EAAe7M,kBAAoB8M,EAAaxrD,MAAMurD,EAAe7M,mBAAqBr/C,IAG1D,SAArCksD,EAAejN,WAAWzyB,QACrB0/B,EAAe7M,kBAAoB,IAAIp/C,IAAUisD,EAAe7M,mBAGlEr/C,IAXEA,KAiCIusD,EAnBO,uCAAG,WAAO5e,GAAP,mBAAAjyC,EAAA,6DACjB8wD,EAAc7e,EAAMv0B,MAAK,SAACilC,GAAD,OAAuB,MAAbA,EAAKM,OACxCwN,EAAeK,EAAYnN,kBAAoBn/C,IAAQT,IAAI+sD,EAAYnN,mBAAqBr/C,IAE5FysD,EAAkB9e,EAAM5qB,KAAI,SAACs7B,GACjC,IAAM6N,EAAiBJ,EAAuBne,EAAO0Q,EAAKY,WAAWzyB,QAC/DwyB,EAAiBiN,EAAsB5N,EAAM6N,EAAgBC,GAC7DpN,EAAsBuN,EAAuBjO,EAAM6N,EAAgBC,GAEzE,OAAO,2BACF9N,GADL,IAEEW,eAAgBA,EAAez+C,SAC/Bw+C,oBAAqBA,EAAoBx+C,cAZtB,kBAgBhBksD,GAhBgB,2CAAH,sDChFTC,EAAuB,uCAAG,WAAO94C,EAAiB43C,GAAxB,qBAAA9vD,EAAA,6DAC/BixD,EAAoBr7C,cAEpBkT,EAAQgnC,EAAazoC,KAAI,SAACs7B,GAE9B,MAAO,CAAEhtC,QADiBD,YAAWitC,EAAKI,aACLx5B,KAAM,YAAaC,OAAQ,CAACtR,EAAS+4C,OALvC,SAQPpoC,YAAUmxB,EAAUlxB,GARb,cAQ/BooC,EAR+B,OAS/BC,EAAqBD,EAAgB7pC,KAAI,SAAC+pC,GAC9C,OAAO,IAAI7sD,IAAU6sD,GAAWvsD,YAVG,kBAY9BssD,GAZ8B,2CAAH,wDAevBE,EAA0B,uCAAG,WAAOn5C,EAAiB43C,GAAxB,mBAAA9vD,EAAA,6DAClC8oB,EAAQgnC,EAAazoC,KAAI,SAACs7B,GAE9B,MAAO,CACLhtC,QAFwBD,YAAWitC,EAAKI,aAGxCx5B,KAAM,YACNC,OAAQ,CAACtR,OAN2B,SAUT2Q,YAAUmxB,EAAUlxB,GAVX,cAUlCwoC,EAVkC,OAWlCC,EAAsBD,EAAiBjqC,KAAI,SAACu7B,GAChD,OAAO,IAAIr+C,IAAUq+C,GAAc/9C,YAZG,kBAcjC0sD,GAdiC,2CAAH,wDAiB1BC,EAA2B,uCAAG,WAAOt5C,EAAiB43C,GAAxB,qBAAA9vD,EAAA,6DACnCixD,EAAoBr7C,cAEpBkT,EAAQgnC,EAAazoC,KAAI,SAACs7B,GAC9B,MAAO,CACLhtC,QAASs7C,EACT1nC,KAAM,WACNC,OAAQ,CAACm5B,EAAKM,IAAK/qC,OAPkB,SAWT2Q,YAAU2mC,EAAe1mC,GAXhB,cAWnC2oC,EAXmC,OAYnCC,EAAuBD,EAAkBpqC,KAAI,SAACu2B,GAClD,OAAO,IAAIr5C,IAAUq5C,EAAc,GAAGhD,MAAM/1C,YAbL,kBAelC6sD,GAfkC,2CAAH,wDAkB3BC,EAAqB,uCAAG,WAAOz5C,EAAiB43C,GAAxB,qBAAA9vD,EAAA,6DAC7BixD,EAAoBr7C,cAEpBkT,EAAQgnC,EAAazoC,KAAI,SAACs7B,GAC9B,MAAO,CACLhtC,QAASs7C,EACT1nC,KAAM,cACNC,OAAQ,CAACm5B,EAAKM,IAAK/qC,OAPY,SAWT2Q,YAAU2mC,EAAe1mC,GAXhB,cAW7B8oC,EAX6B,OAY7BC,EAAiBD,EAAYvqC,KAAI,SAACw7B,GACtC,OAAO,IAAIt+C,IAAUs+C,GAAUh+C,YAbE,kBAe5BgtD,GAf4B,2CAAH,wDCjC5BlzD,EAAqC,CACzCqC,KAX0BkjD,IAAY78B,KAAI,SAACs7B,GAAD,mBAAC,eACxCA,GADuC,IAE1CpG,SAAU,CACRvI,UAAW,IACX4O,aAAc,IACdhF,cAAe,IACfiF,SAAU,UAMZiP,uBAAuB,EACvB1V,gBAAgB,GAGL+H,EAAmBD,IAAY38B,QAAO,gBAAG07B,EAAH,EAAGA,IAAH,OAAc0L,EAAc1L,MAGlEoB,EAA4BzmB,YACvC,kCADuD,uCAEvD,WAAOqmB,GAAP,uBAAAjkD,EAAA,6DACQ8vD,EAAe5L,IAAY38B,QAAO,SAACwoC,GAAD,OAAgB9L,EAAK90B,SAAS4gC,EAAW9M,QAG3E8O,EAAwBjC,EAAa9nC,OAAOgqC,GAJpD,SAMsBnC,EAAWkC,GANjC,cAMQ9f,EANR,gBAOgC4e,EAAiB5e,GAPjD,cAOQ8e,EAPR,OAUQkB,EAAwBlB,EAAgBxpC,QAAO,SAACo7B,GACpD,OAAOA,EAAKM,KAAoB,IAAbN,EAAKM,OAX5B,kBAcSgP,GAdT,4CAFuD,uDA4B5CC,EAAyBt0B,YACpC,+BADoD,uCAEpD,yCAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAAS+rC,EAAlB,EAAkBA,KACV6L,EAAe5L,IAAY38B,QAAO,SAACwoC,GAAD,OAAgB9L,EAAK90B,SAAS4gC,EAAW9M,QADnF,SAEmC+N,EAAwB94C,EAAS43C,GAFpE,cAEQqC,EAFR,gBAGsCd,EAA2Bn5C,EAAS43C,GAH1E,cAGQsC,EAHR,iBAImCZ,EAA4Bt5C,EAAS43C,GAJxE,eAIQuC,EAJR,iBAKiCV,EAAsBz5C,EAAS43C,GALhE,eAKQwC,EALR,yBAOSH,EAAmB9qC,KAAI,SAACkrC,EAAer7B,GAC5C,MAAO,CACL+rB,IAAK6M,EAAa54B,GAAO+rB,IACzBjP,UAAWme,EAAmBj7B,GAC9B0rB,aAAcwP,EAAsBl7B,GACpC0mB,cAAeyU,EAAmBn7B,GAClC2rB,SAAUyP,EAAiBp7B,QAbjC,4CAFoD,uDAqBzCs7B,EAAav1B,YAAY,CACpC1T,KAAM,QACN5qB,eACAu+B,SAAU,CACRu1B,yBAA0B,SAAC5yD,EAAOu9B,GAChC,IAAM00B,EAAwB10B,EAAOE,QACrCz9B,EAAMiyD,sBAAwBA,IAGlC3yB,cAAe,SAACC,GAEdA,EAAQC,QAAQglB,EAA0B9kB,WAAW,SAAC1/B,EAAOu9B,GAC3Dv9B,EAAMmB,KAAOnB,EAAMmB,KAAKqmB,KAAI,SAACs7B,GAC3B,IAAM+P,EAAet1B,EAAOE,QAAQ5f,MAAK,SAACi1C,GAAD,OAAcA,EAAS1P,MAAQN,EAAKM,OAC7E,OAAO,2BAAKN,GAAS+P,SAKzBtzB,EAAQC,QAAQ6yB,EAAuB3yB,WAAW,SAAC1/B,EAAOu9B,GACxDA,EAAOE,QAAQh8B,SAAQ,SAACsxD,GACtB,IAAQ3P,EAAQ2P,EAAR3P,IACF/rB,EAAQr3B,EAAMmB,KAAK49C,WAAU,SAAC+D,GAAD,OAAUA,EAAKM,MAAQA,KAC1DpjD,EAAMmB,KAAKk2B,GAAX,2BAAyBr3B,EAAMmB,KAAKk2B,IAApC,IAA4CqlB,SAAUqW,OAExD/yD,EAAMu8C,gBAAiB,QAMeoW,EAAW90B,QAAxC+0B,yBAEAD,MAAf,S,iWChGO,SAASK,IACd,OAAOrvC,aAAwC,SAAC3jB,GAAD,OAAWA,EAAMmzC,QAG3D,SAAS8f,IAMd,IAAMzvC,EAAWC,cACXyvC,EAAsBjyD,uBAC1B,SAAC6tC,EAAc31B,GACbqK,EACEnf,YAAe,CACbyqC,QACAzd,WAAYlY,aAAoBrR,IAAQqR,EAASrD,QAAUqD,IAAaC,IAAQ,MAAQ,QAI9F,CAACoK,IAqBH,MAAO,CACL2vC,eAnBqBlyD,uBAAY,WACjCuiB,EAASlf,iBACR,CAACkf,IAkBF0vC,sBACAE,YAjBkBnyD,uBAClB,SAAC6tC,EAAcH,GACbnrB,EAASpgB,YAAU,CAAE0rC,QAAOH,kBAE9B,CAACnrB,IAcD6vC,kBAXwBpyD,uBACxB,SAAC4tC,GACCrrB,EAAShf,YAAa,CAAEqqC,iBAE1B,CAACrrB,KAYE,SAAS8vC,EAAetxD,EAAgBmX,GAC7C,GAAKnX,GAAUmX,EAGf,IACE,IAAMo6C,EAAmB15B,qBAAW73B,EAAOmX,EAAShU,UAAUrD,WAC9D,GAAyB,MAArByxD,EACF,OAAOp6C,aAAoBrR,IACvB,IAAI0iB,IAAYrR,EAAUvB,IAAKC,OAAO07C,IACtC/S,IAAeC,MAAM7oC,IAAKC,OAAO07C,IAEvC,MAAOnxC,GAEPC,QAAQ8Z,MAAR,yCAAgDn6B,EAAhD,KAA0DogB,IAM9D,IAAMoxC,EAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,EAAgB/jD,EAAcgkD,GACrC,OACEhkD,EAAMqwC,MAAM4T,KAAKtL,MAAK,SAACriC,GAAD,OAAWA,EAAMlQ,UAAY49C,MACnDhkD,EAAMqwC,MAAMl4B,MAAMwgC,MAAK,SAAC3hC,GAAD,OAAUA,EAAKktC,eAAe99C,UAAY49C,KAK9D,SAASG,IAMb,IAAD,QAwCIC,EAKe,EAIwC,EAhDnDz7C,EAAY/V,cAAZ+V,QACApW,EAAMC,cAAND,EAER,EAMI+wD,IALFvkB,EADF,EACEA,iBACAE,EAFF,EAEEA,WAC6BI,EAH/B,EAGG5rC,IAAMurC,OAAUrd,WACa2d,EAJhC,EAIG7rC,IAAMyrC,QAAWvd,WAClBwd,EALF,EAKEA,UAGIklB,EAAgB3iC,YAAY2d,GAC5BilB,EAAiB5iC,YAAY4d,GAC7BilB,EAAkBC,YAAM,OAACrlB,QAAD,IAACA,SAAapvC,GACtC00D,EAAiB,UAAkB,OAAdtlB,EAAqBx2B,EAAU47C,EAAgBn+C,eAAnD,QAA+D,KAEhFs+C,EAAwB3L,YAAmB,OAACpwC,QAAD,IAACA,SAAW5Y,EAAW,QACtEs0D,QADsE,IACtEA,SAAiBt0D,EADqD,OAEtEu0D,QAFsE,IAEtEA,SAAkBv0D,IAGd40D,EAAqB5lB,IAAqBtrC,IAAMurC,MAChD4lB,EAAehB,EAAe3kB,EAAD,UAAc0lB,EAAYN,EAAgBC,SAA1C,aAA6Dv0D,GAE1F80D,EAAmBC,YAAgBH,EAAYC,OAAe70D,EAA5B,OAAuCu0D,QAAvC,IAAuCA,SAAkBv0D,GAC3Fg1D,EAAoBC,YAAgB,OAACX,QAAD,IAACA,SAAiBt0D,EAAY40D,OAA2B50D,EAAf60D,GAE9EK,EAAUN,EAAYE,EAAmBE,EAEzCG,GAAgB,mBACnBzxD,IAAMurC,MAAQ0lB,EAAsB,IADjB,cAEnBjxD,IAAMyrC,OAASwlB,EAAsB,IAFlB,GAKhB1L,GAA2C,mBAC9CvlD,IAAMurC,MADwC,OAChCqlB,QADgC,IAChCA,SAAiBt0D,GADe,cAE9C0D,IAAMyrC,OAFwC,OAE/BolB,QAF+B,IAE/BA,SAAkBv0D,GAFa,IAM5C4Y,IACHy7C,EAAa7xD,EAAE,mBAGZqyD,KACHR,EAAU,UAAGA,SAAH,QAAiB7xD,EAAE,oBAG1BymD,EAAWvlD,IAAMurC,QAAWga,EAAWvlD,IAAMyrC,UAChDklB,EAAU,UAAGA,SAAH,QAAiB7xD,EAAE,mBAG/B,IACyB,EADnB4yD,EAAc39C,YAAUi9C,GAC9B,GAAKA,GAAOU,GAEL,IAC6C,IAAlDrB,EAAwBt5B,QAAQ26B,IAC/BN,GAAoBd,EAAgBc,EAAkBM,IACtDJ,GAAqBhB,EAAgBgB,EAAmBI,GACzD,CAAC,IAAD,EACAf,EAAU,UAAGA,SAAH,QAAiB7xD,EAAE,2BAN7B6xD,EAAU,UAAGA,SAAH,QAAiB7xD,EAAE,qBAS/B,MAA0BwiB,cAAnBgxB,EAAP,oBAEMqf,EAA0BH,GAAWlf,GAAmBC,YAA+Bif,EAASlf,GAGtG,EAA8B,CAC5Bmf,EAAiBzxD,IAAMurC,OACvBomB,EAA0BA,EAAwB3xD,IAAMurC,OAAS,MAF5DqmB,EAAP,KAAkBC,EAAlB,KASA,OAJID,GAAaC,GAAYD,EAAUlgB,SAASmgB,KAC9ClB,EAAa7xD,EAAE,gCAAiC,CAAEgvB,OAAQ+jC,EAAS77C,SAAS8X,UAGvE,CACLy3B,aACAkM,mBACAN,eACAK,QAAO,OAAEA,QAAF,IAAEA,SAAWl1D,EACpBq0D,cAIJ,SAASmB,EAA8BC,GACrC,GAAwB,kBAAbA,EAAuB,CAChC,IAAMz6B,EAAQvjB,YAAUg+C,GACxB,GAAIz6B,EAAO,OAAOA,EAClB,GAA+B,QAA3By6B,EAAS3jC,cAAyB,MAAO,MAC7C,IAAc,IAAVkJ,EAAiB,MAAO,MAE9B,cAAO,YAAS,GAYlB,IAAM06B,EAAiB,qFACjB5T,EAAgB,sBAUf,SAAS6T,EAA2BC,GAAgC,IAAD,EACpEtB,EAAgBkB,EAA8BI,EAAStB,eACvDC,EAAiBiB,EAA8BI,EAASrB,gBACxDD,IAAkBC,IACmB,kBAA5BqB,EAASrB,eAClBD,EAAgB,GAEhBC,EAAiB,IAIrB,IA/BoCkB,EA+B9BrmB,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1B33B,YAAU23B,KAEtBsmB,EAAe5kC,KAAKse,IACpB0S,EAAchxB,KAAKse,GADoBA,EAEpC,MAcWymB,CAAmBD,EAASxmB,WAE9C,OAAO,EAAP,iBACG1rC,IAAMurC,MAAQ,CACbrd,WAAY0iC,IAFhB,cAIG5wD,IAAMyrC,OAAS,CACdvd,WAAY2iC,IALhB,2BA/B2B,kBAFSkB,EAwCOG,EAASE,cAtCZ3jC,MAAMM,WAAWgjC,IAAwB,GAAXA,GA+BtE,iCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAAS1rC,cAA6BrmB,IAAMyrC,OAASzrC,IAAMurC,MAmC9E8mB,CAAkCH,EAASI,aAR/D,0BASE5mB,GATF,EAcK,SAAS6mB,IAGd,IAAQjzD,EAAYH,cAAZG,QACF+gB,EAAWC,cACX4xC,EClQO,WACb,IAAQM,EAAWC,cAAXD,OACR,OAAOh0C,mBACL,kBAAOg0C,GAAUA,EAAOrlC,OAAS,EAAIgL,gBAAMq6B,EAAQ,CAAEE,aAAa,EAAOC,mBAAmB,IAAU,KACtG,CAACH,ID8PcI,GACjB,EAA4Bn2D,qBAA5B,mBAAOwqB,EAAP,KAAe4rC,EAAf,KAsBA,OAlBA91D,qBAAU,WACR,GAAKuC,EAAL,CACA,IAAMwzD,EAASb,EAA2BC,GAE1C7xC,EACEjf,YAAiB,CACfoqC,WAAYsnB,EAAOtnB,WACnBG,MAAOmnB,EAAOxnB,iBACdM,gBAAiBknB,EAAO9yD,IAAMurC,OAAOrd,WACrC2d,iBAAkBinB,EAAO9yD,IAAMyrC,QAAQvd,WACvCwd,UAAW,QAIfmnB,EAAU,CAAEjnB,gBAAiBknB,EAAO9yD,IAAMurC,OAAOrd,WAAY2d,iBAAkBinB,EAAO9yD,IAAMyrC,QAAQvd,gBAEnG,CAAC7N,EAAU/gB,IAEP2nB,I,6BE7RT,oBAQe85B,IALI,WACjB,MAAuB9hD,qBAAW8zD,KAClC,MAAO,CAAExR,YADT,EAAQ5qB,KACoBqqB,YAD5B,EAAcgS,Q,qICST,SAAS5hB,IACd,IAAMluB,EAAWF,cAsBjB,MAAO,CAAEmuB,iBApBgBrzC,sBAAW,uCAClC,WACEm4B,EACAiD,GAFF,mCAAAl8B,EAAA,6DAGEi2D,EAHF,+BAGsB,GACpBC,EAJF,+BAI6B,KAErBC,EAAiBj2D,cAAI+4B,EAAUiD,GAC/Bk6B,EAPR,OAOoCF,QAPpC,IAOoCA,OAPpC,EAOoCA,EAAWhwC,SAP/C,SASmBiwC,EAAc,WAAd,cACZF,GADY,QAEfG,EAAyB,eAAQF,GAAR,2BAA2BA,GAA3B,IAAsChwC,gBAXnE,cASQ+nB,EATR,yBAcSA,GAdT,2CADkC,wDAiBlC,CAAC/nB,O,0KCjBOmwC,E,0IAAAA,K,0BAAAA,E,kBAAAA,E,iBAAAA,M,KAMZ,IAAMhO,EAAkB,SAACjmC,GACvB,IAAQk0C,EAAiCD,EAAjCC,YAAazR,EAAoBwR,EAApBxR,QAAS0R,EAAWF,EAAXE,OAC9B,EAAwC92D,mBAA+B,CACrE6F,QAAShB,IACTkyD,YAAaF,IAFf,mBAAOG,EAAP,KAAqBC,EAArB,KAIQx+C,EAAY9V,cAAZ8V,QACAqsC,EAAgBR,cAAhBQ,YAsBR,OApBAxkD,qBAAU,WAeJmY,GAdc,uCAAG,8BAAAlY,EAAA,6DACbi5B,EAAWlc,YAAiBqF,GADf,kBAGC6W,EAASgF,UAAU/lB,GAHpB,OAGXyR,EAHW,OAIjB+sC,EAAgB,CAAEpxD,QAAS,IAAIf,IAAUolB,EAAIhoB,YAAa60D,YAAa3R,IAJtD,gDAMjB3iC,QAAQD,MAAR,MACAy0C,GAAgB,SAACC,GAAD,mBAAC,eACZA,GADW,IAEdH,YAAaD,OATE,yDAAH,oDAehBK,KAED,CAAC1+C,EAASkK,EAAcmiC,EAAaM,EAAS0R,IAE1CE,GAGII,EAAiB,WAC5B,IAAQ7S,EAAgBD,cAAhBC,YACR,EAAsCvkD,qBAAtC,mBAAOq3D,EAAP,KAAoBC,EAApB,KAYA,OAVAh3D,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACQg3D,EAAe14C,cADvB,SAEuB04C,EAAaF,cAFpC,OAEQG,EAFR,OAGEF,EAAe,IAAIxyD,IAAU0yD,EAAOt1D,aAHtC,4CADc,uBAAC,WAAD,wBAOdu1D,KACC,CAAClT,IAEG8S,GAGIK,EAAmB,SAAC/0C,GAC/B,MAA8B3iB,mBAAS6E,KAAvC,mBAAOgB,EAAP,KAAgB8xD,EAAhB,KACQpT,EAAgBD,cAAhBC,YAYR,OAVAjkD,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbi5B,EAAWlc,YAAiBqF,GADf,SAED6W,EAASgF,UAAU,8CAFlB,OAEbtU,EAFa,OAGnBytC,EAAW,IAAI7yD,IAAUolB,EAAIhoB,aAHV,2CAAH,qDAMlBi1D,KACC,CAACx0C,EAAc4hC,IAEX1+C,GAGI+xD,EAAmB,WAC9B,MAAsC53D,mBAAS42D,EAAYC,aAA3D,mBAAOE,EAAP,KAAoBc,EAApB,KACA,EAA8B73D,mBAAS6G,IAAO/B,UAAUgC,KAAK,IAA7D,mBAAOjB,EAAP,KAAgB8xD,EAAhB,KACQl/C,EAAY9V,cAAZ8V,QACR,EAAwCq/C,cAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAkBrB,OAhBA13D,qBAAU,WAWJmY,GAVc,uCAAG,4BAAAlY,EAAA,+EAEW0C,IAAkB43C,WAAWpiC,GAFxC,OAEXw/C,EAFW,OAGjBN,EAAWM,GACXJ,EAAejB,EAAYxR,SAJV,gDAMjByS,EAAejB,EAAYE,QANV,yDAAH,oDAWhBK,KAED,CAAC1+C,EAASs/C,EAAaJ,EAAYE,IAE/B,CAAEhyD,UAASkxD,cAAamB,QAASF,IAU3BpP,O,wICrHAuP,EAHS,SAACjiD,GAAD,gFAC6CA,EAD7C,c,gBCSlBkiD,EAAax0D,YAAO2qB,IAAP3qB,CAAH,2DACL,qBAAGsqB,QACF,qBAAGA,QAGA,SAASC,EAAT,GAQX,IAAD,EAPD5U,EAOC,EAPDA,SAOC,IAND2U,YAMC,MANM,OAMN,EALDE,EAKC,EALDA,MAMMiqC,EAAezpC,YAAiBrV,aAAoB68B,IAAmB78B,EAASkV,aAAU5uB,GAE1F8uB,EAAiB5M,mBAAQ,WAC7B,OAAIxI,IAAaC,IAAc,GAE3BD,aAAoBrR,IAClBqR,aAAoB68B,IAChB,GAAN,mBAAWiiB,GAAX,CAAyBF,EAAgB5+C,EAASrD,WAE7C,CAACiiD,EAAgB5+C,EAASrD,UAE5B,KACN,CAACqD,EAAU8+C,IAEd,OAAI9+C,IAAaC,IACR,cAAC,IAAD,CAAa1V,MAAOoqB,EAAME,MAAOA,IAGnC,cAACgqC,EAAD,CAAYlqC,KAAMA,EAAMS,KAAMA,EAAMD,IAAG,2BAAKnV,QAAL,IAAKA,OAAL,EAAKA,EAAU8X,cAAf,QAAyB,QAAzB,SAAyCjD,MAAOA,M,6BCzChG,YAGM6zB,EAAmBtsC,cAEnB68B,EAAgC,CAIpC,CACEgR,IAAK,EACLD,SAAU,OACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt4C,MACxBm6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB75C,KACxB07C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv5C,KACxBo7C,WAAY7B,EAAiBh6C,MAK/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB33C,MACxBw5C,WAAY7B,EAAiBj5C,MAE/B,CACEw6C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/sC,IACxB4uC,WAAY7B,EAAiBh6C,KAC7B07C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv3C,IACxBo5C,WAAY7B,EAAiBh6C,KAC7B07C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh4C,KACxB65C,WAAY7B,EAAiBh6C,KAC7B07C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB55C,KACxBy7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB35C,SACxBw7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,YACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7sC,GACxB0uC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,iBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx5C,QACxBq7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB15C,IACxBu7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3sC,KACxBwuC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr4C,IACxBk6C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv2C,IACxBo4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn4C,KACxBg6C,WAAY7B,EAAiBv5C,KAC7Bi7C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5sC,MACxByuC,WAAY7B,EAAiBh6C,KAC7B07C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9sC,KACxB2uC,WAAY7B,EAAiBv5C,KAC7Bi7C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB12C,KACxBu4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhtC,KACxB6uC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnuC,KACxBgwC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/vC,IACxB4xC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9vC,IACxB2xC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7vC,IACxB0xC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,kBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp4C,SACxBi6C,WAAY7B,EAAiBh6C,KAC7B07C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn4C,KACxBg6C,WAAY7B,EAAiBh6C,KAC7B07C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl4C,KACxB+5C,WAAY7B,EAAiBh6C,KAC7B07C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj4C,IACxB85C,WAAY7B,EAAiBh6C,KAC7B07C,aAAa,GAEf,CACEH,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/3C,KACxB45C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/vC,IACxB4xC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB93C,MACxB25C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7vC,IACxB0xC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAgB,GACvB6B,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB53C,IACxBy5C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjtC,IACxB8uC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBltC,IACxB+uC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnvC,KACxBgxC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9vC,IACxB2xC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB13C,MACxBu5C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz3C,QACxBs5C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx3C,KACxBq5C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzxC,IACxBszC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt3C,IACxBm5C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj5C,KACxB86C,WAAY7B,EAAiBr5C,MAE/B,CACE46C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB75C,KACxB07C,WAAY7B,EAAiBr5C,MAE/B,CACE46C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxwC,MACxBqyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr3C,OACxBk5C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp3C,OACxBi5C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvuC,OACxBowC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxuC,IACxBqwC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn3C,KACxBg5C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj3C,KACxB84C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,YACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBptC,IACxBivC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrtC,IACxBkvC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBttC,IACxBmvC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7wC,IACxB0yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1xC,IACxBuzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvtC,IACxBovC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxtC,GACxBqvC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBztC,KACxBsvC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrxC,KACxBkzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl5C,IACxB+6C,WAAY7B,EAAiBj5C,MAE/B,CACEw6C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp5C,KACxBi7C,WAAY7B,EAAiBl5C,KAE/B,CACEy6C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlxC,OACxB+yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1tC,MACxBuvC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3tC,OACxBwvC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5tC,KACxByvC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7tC,IACxB0vC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9tC,GACxB2vC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/tC,KACxB4vC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhuC,IACxB6vC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjuC,IACxB8vC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBluC,KACxB+vC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB51C,IACxBy3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpuC,IACxBiwC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,YACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBruC,GACxBkwC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh5C,KACxB66C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtuC,MACxBmwC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5xC,KACxByzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzuC,KACxBswC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1uC,KACxBuwC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3uC,IACxBwwC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB75C,KACxB07C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5uC,IACxBywC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7uC,KACxB0wC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx1C,KACxBq3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,kBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/4C,SACxB46C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9uC,KACxB2wC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/uC,MACxB4wC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhvC,KACxB6wC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjvC,IACxB8wC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,oBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlvC,WACxB+wC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpvC,IACxBixC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrvC,KACxBkxC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtvC,KACxBmxC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp2C,KACxBi4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvvC,IACxBoxC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxvC,KACxBqxC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1vC,IACxBuxC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1vC,IACxBuxC,WAAY7B,EAAiBzvC,KAE/B,CACEgxC,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3vC,KACxBwxC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5vC,MACxByxC,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlyC,IACxB+zC,WAAY7B,EAAiBhyC,MAE/B,CACEuzC,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr2C,MACxBk4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp5C,KACxBi7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhwC,IACxB6xC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjwC,IACxB8xC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,iBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlwC,OACxB+xC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,oBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnwC,UACxBgyC,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,IACLD,SAAU,iBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/1C,QACxB43C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpwC,IACxBiyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrwC,MACxBkyC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvwC,IACxBoyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,iBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv0C,QACxBo2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzwC,IACxBsyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1wC,KACxBuyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3wC,KACxBwyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5wC,IACxByyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9wC,IACxB2yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/wC,KACxB4yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhxC,KACxB6yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjxC,IACxB8yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnxC,KACxBgzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpxC,IACxBizC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtxC,KACxBmzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvxC,IACxBozC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxxC,KACxBqzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhyC,KACxB6zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3xC,KACxBwzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7xC,IACxB0zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9xC,KACxB2zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,kBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpyC,QACxBi0C,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBryC,MACxBk0C,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/xC,IACxB4zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjyC,IACxB8zC,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnyC,MACxBg0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3zC,KACxBw1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5zC,KACxBy1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl3C,IACxB+4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh3C,IACxB64C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/2C,MACxB44C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB92C,MACxB24C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAgB,IACvB6B,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB52C,IACxBy4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB32C,KACxBw4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB94C,KACxB26C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz2C,IACxBs4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx2C,KACxBq4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt2C,IACxBm4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB74C,MACxB06C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn2C,KACxBg4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl2C,IACxB+3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj2C,MACxB83C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9zC,MACxB21C,WAAY7B,EAAiBl5C,KAE/B,CACEy6C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh2C,KACxB63C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB54C,IACxBy6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB91C,IACxB23C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB71C,KACxB03C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7zC,KACxB01C,WAAY7B,EAAiBl5C,KAE/B,CACEy6C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB31C,IACxBw3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB11C,KACxBu3C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz1C,IACxBs3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv1C,IACxBo3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt1C,KACxBm3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn5C,IACxBg7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzzC,MACxBs1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxzC,OACxBq1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvzC,MACxBo1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtzC,MACxBm1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB34C,MACxBw6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr1C,MACxBk3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB14C,OACxBu6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp1C,MACxBi3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrzC,IACxBk1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj5C,KACxB86C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt5C,IACxBm7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn1C,KACxBg3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz4C,IACxBs6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl1C,MACxB+2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB90C,KACxB22C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx4C,MACxBq6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB30C,IACxBw2C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv4C,MACxBo6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB10C,KACxBu2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx0C,KACxBq2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn0C,IACxBg2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj0C,IACxB81C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl0C,IACxB+1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxyC,IACxBq0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzyC,IACxBs0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1yC,IACxBu0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9yC,KACxB20C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/yC,IACxB40C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr5C,KACxBk7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh0C,MACxB61C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp5C,KACxBi7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl5C,IACxB+6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/zC,IACxB41C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz0C,IACxBs2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr5C,KACxBk7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhzC,KACxB60C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjzC,IACxB80C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlzC,IACxB+0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnzC,KACxBg1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpzC,IACxBi1C,WAAY7B,EAAiBh6C,MAK/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB75C,KACxB07C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,oBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnwC,UACxBgyC,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,IACLD,SAAU,iBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/1C,QACxB43C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpwC,IACxBiyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrwC,MACxBkyC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvwC,IACxBoyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxwC,MACxBqyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,iBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv0C,QACxBo2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzwC,IACxBsyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1wC,KACxBuyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3wC,KACxBwyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5wC,IACxByyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7wC,IACxB0yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9wC,IACxB2yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/wC,KACxB4yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhxC,KACxB6yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlxC,OACxB+yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjxC,IACxB8yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnxC,KACxBgzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpxC,IACxBizC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrxC,KACxBkzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtxC,KACxBmzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvxC,IACxBozC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxxC,KACxBqzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzxC,IACxBszC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhyC,KACxB6zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1xC,IACxBuzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3xC,KACxBwzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5xC,KACxByzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7xC,IACxB0zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9xC,KACxB2zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,kBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpyC,QACxBi0C,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBryC,MACxBk0C,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/xC,IACxB4zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjyC,IACxB8zC,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnyC,MACxBg0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3zC,KACxBw1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5zC,KACxBy1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl3C,IACxB+4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh3C,IACxB64C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/2C,MACxB44C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB92C,MACxB24C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAgB,IACvB6B,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB52C,IACxBy4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB32C,KACxBw4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB94C,KACxB26C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB12C,KACxBu4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz2C,IACxBs4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx2C,KACxBq4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv2C,IACxBo4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt2C,IACxBm4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB74C,MACxB06C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr2C,MACxBk4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp2C,KACxBi4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn2C,KACxBg4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl2C,IACxB+3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj2C,MACxB83C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9zC,MACxB21C,WAAY7B,EAAiBl5C,KAE/B,CACEy6C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh2C,KACxB63C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB54C,IACxBy6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB91C,IACxB23C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB71C,KACxB03C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7zC,KACxB01C,WAAY7B,EAAiBl5C,KAE/B,CACEy6C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB31C,IACxBw3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB11C,KACxBu3C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz1C,IACxBs3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx1C,KACxBq3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv1C,IACxBo3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt1C,KACxBm3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn5C,IACxBg7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzzC,MACxBs1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxzC,OACxBq1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvzC,MACxBo1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtzC,MACxBm1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB34C,MACxBw6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr1C,MACxBk3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB14C,OACxBu6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp1C,MACxBi3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrzC,IACxBk1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj5C,KACxB86C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt5C,IACxBm7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn1C,KACxBg3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz4C,IACxBs6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl1C,MACxB+2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB90C,KACxB22C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx4C,MACxBq6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB30C,IACxBw2C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv4C,MACxBo6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB10C,KACxBu2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx0C,KACxBq2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn0C,IACxBg2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj0C,IACxB81C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl0C,IACxB+1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxyC,IACxBq0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzyC,IACxBs0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1yC,IACxBu0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7yC,KACxB00C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9yC,KACxB20C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/yC,IACxB40C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr5C,KACxBk7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh0C,MACxB61C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp5C,KACxBi7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl5C,IACxB+6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/zC,IACxB41C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz0C,IACxBs2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr5C,KACxBk7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhzC,KACxB60C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjzC,IACxB80C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlzC,IACxB+0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnzC,KACxBg1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpzC,IACxBi1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv5C,KACxBo7C,WAAY7B,EAAiBh6C,MAK/B,CACEu7C,IAAK,EACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB75C,KACxB07C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,oBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnwC,UACxBgyC,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,GACLD,SAAU,iBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/1C,QACxB43C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpwC,IACxBiyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrwC,MACxBkyC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvwC,IACxBoyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxwC,MACxBqyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,iBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv0C,QACxBo2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzwC,IACxBsyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1wC,KACxBuyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3wC,KACxBwyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5wC,IACxByyC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7wC,IACxB0yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9wC,IACxB2yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/wC,KACxB4yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhxC,KACxB6yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlxC,OACxB+yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjxC,IACxB8yC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnxC,KACxBgzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpxC,IACxBizC,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrxC,KACxBkzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtxC,KACxBmzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvxC,IACxBozC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxxC,KACxBqzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzxC,IACxBszC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhyC,KACxB6zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1xC,IACxBuzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3xC,KACxBwzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5xC,KACxByzC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7xC,IACxB0zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9xC,KACxB2zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,kBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpyC,QACxBi0C,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,IACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBryC,MACxBk0C,WAAY7B,EAAiBp5C,MAE/B,CACE26C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/xC,IACxB4zC,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjyC,IACxB8zC,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,IACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnyC,MACxBg0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,IACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3zC,KACxBw1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5zC,KACxBy1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl3C,IACxB+4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh3C,IACxB64C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/2C,MACxB44C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB92C,MACxB24C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAgB,IACvB6B,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB52C,IACxBy4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB32C,KACxBw4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB32C,KACxBw4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB94C,KACxB26C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB12C,KACxBu4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz2C,IACxBs4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx2C,KACxBq4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv2C,IACxBo4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt2C,IACxBm4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB74C,MACxB06C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr2C,MACxBk4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp2C,KACxBi4C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn2C,KACxBg4C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl2C,IACxB+3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj2C,MACxB83C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9zC,MACxB21C,WAAY7B,EAAiBl5C,KAE/B,CACEy6C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh2C,KACxB63C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB54C,IACxBy6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB91C,IACxB23C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB71C,KACxB03C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7zC,KACxB01C,WAAY7B,EAAiBl5C,KAE/B,CACEy6C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB31C,IACxBw3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1zC,KACxBu1C,WAAY7B,EAAiBl5C,KAE/B,CACEy6C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB11C,KACxBu3C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz1C,IACxBs3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx1C,KACxBq3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv1C,IACxBo3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt1C,KACxBm3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn5C,IACxBg7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzzC,MACxBs1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,GACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxzC,OACxBq1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvzC,MACxBo1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtzC,MACxBm1C,WAAY7B,EAAiBn5C,KAE/B,CACE06C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB34C,MACxBw6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr1C,MACxBk3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,gBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB14C,OACxBu6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp1C,MACxBi3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBrzC,IACxBk1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj5C,KACxB86C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt5C,IACxBm7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn1C,KACxBg3C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz4C,IACxBs6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl1C,MACxB+2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,YACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/0C,GACxB42C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj1C,IACxB82C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh1C,IACxB62C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB90C,KACxB22C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx4C,MACxBq6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB70C,IACxB02C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB50C,IACxBy2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB10C,KACxBu2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiB30C,IACxBw2C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv4C,MACxBo6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBx0C,KACxBq2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,EACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv5C,KACxBo7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,EACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBpzC,IACxBi1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,EACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBnzC,KACxBg1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,EACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBlzC,IACxB+0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,EACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBjzC,IACxB80C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,EACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBhzC,KACxB60C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr5C,KACxBk7C,WAAY7B,EAAiBv5C,MAE/B,CACE86C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBz0C,IACxBs2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/zC,IACxB41C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl5C,IACxB+6C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp5C,KACxBi7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBh0C,MACxB61C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr5C,KACxBk7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB/yC,IACxB40C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB9yC,KACxB20C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB7yC,KACxB00C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt5C,IACxBm7C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB5yC,IACxBy0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB3yC,IACxBw0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiB1yC,IACxBu0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBzyC,IACxBs0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBxyC,IACxBq0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBl0C,IACxB+1C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj5C,KACxB86C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBj0C,IACxB81C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,aACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBn0C,IACxBg2C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,eACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBt0C,KACxBm2C,WAAY7B,EAAiB75C,KAC7Bu7C,aAAa,GAEf,CACEH,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBr0C,IACxBk2C,WAAY7B,EAAiB75C,KAC7Bu7C,aAAa,GAEf,CACEH,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBp0C,IACxBi2C,WAAY7B,EAAiB75C,KAC7Bu7C,aAAa,GAEf,CACEH,IAAK,GACLD,SAAU,kBACVD,YAAa,CACX,GAAI,GACJ,GAAI,8CAENl9B,MAAO67B,EAAiBv0C,QACxBo2C,WAAY7B,EAAiB75C,KAC7Bu7C,aAAa,GAEf,CACEH,IAAK,EACLD,SAAU,qBACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvyC,KACxBo0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,EACLD,SAAU,gBACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBtyC,OACxBm0C,WAAY7B,EAAiBh6C,MAE/B,CACEu7C,IAAK,GACLD,SAAU,cACVD,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENl9B,MAAO67B,EAAiBvyC,KACxBo0C,WAAY7B,EAAiBh6C,OAIlBuqC,O,qCCp5IA,SAAS8lB,EAAOC,GAC7B,MAAO,SAAS5nC,KAAK4nC,GALvB,mC,0KCIap3D,EAAS,uBAETT,EAAW,uCAAG,WAAOjB,GAAP,iBAAAc,EAAA,sEACF0gC,MAAM,GAAD,OALZ39B,cAKY,oBAAyB7D,EAAzB,UADH,cACnBi3B,EADmB,gBAENA,EAAS6K,OAFH,cAEnBhgC,EAFmB,yBAGlBA,GAHkB,2CAAH,sDAMXrB,EAAwB,WACnC,IAGE,OAFwBe,aAAau3D,QAAQr3D,IAEnB9B,IAAGI,OAC7B,SACA,OAAOJ,IAAGI,U,8BCXCgoD,IAJM,SAACvxC,GAAqD,IAApCuiD,EAAmC,uDAArB,EAAGC,EAAkB,uDAAN,EAClE,MAAM,GAAN,OAAUxiD,EAAQyiD,UAAU,EAAGF,GAA/B,cAAiDviD,EAAQyiD,UAAUziD,EAAQwa,OAASgoC,M,iKCsEvEvO,IAvDC,WACd,IAAQ9nD,EAAMC,cAAND,EACFuhB,EAAWswB,cACjB,EAAiCvxC,cAAzBi2D,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACVC,EAAevW,cAAfuW,WAgDR,MAAO,CAAE1O,MA9CK/oD,uBACZ,SAAC03D,GACC,IAAMC,EAAYC,IAAiBF,GAC/BC,EACFJ,EAASI,EAAD,uCAAY,WAAOx2C,GAAP,SAAAjiB,EAAA,2DACdiiB,aAAiB02C,KADH,gCAEOC,cAFP,eAIdP,EAASI,GAJK,sBAOhB3S,OAAOplD,aAAam4D,WAAWC,MAC3B72C,aAAiB82C,KAA2B92C,aAAiB+2C,qBAC/DT,EAAWz2D,EAAE,kBAAmBA,EAAE,0BAElCmgB,aAAiBg3C,KACjBh3C,aAAiBi3C,KAEbT,aAAqBU,MACCV,EACRW,sBAAwB,MAE1Cb,EAAWz2D,EAAE,uBAAwBA,EAAE,6CAEvCy2D,EAAWt2C,EAAMsH,KAAMtH,EAAMo3C,SApBf,2CAAZ,uDAyBRd,EAAWz2D,EAAE,4BAA6BA,EAAE,oCAGhD,CAACA,EAAGu2D,EAAUE,IAcAzO,OAXDhpD,uBAAY,WACzBuiB,EAASmrC,eACT8J,IAEIxS,OAAOplD,aAAau3D,QAAQ,mBAC9BS,IAAiBY,cAAcC,QAC/Bb,IAAiBY,cAAcF,sBAAwB,MAEzDtT,OAAOplD,aAAam4D,WAAWC,QAC9B,CAACR,EAAYj1C,O,mFClEH,SAASm2C,EAAe33D,EAAU43D,GAC/C,MAA4Ch6D,mBAAYoC,GAAxD,mBAAO63D,EAAP,KAAuBC,EAAvB,KAgBA,OAdA55D,qBAAU,WAER,IAAM65D,EAAU7T,YAAW,WACzB4T,EAAkB93D,KACjB43D,GAKH,OAAO,WACL5T,aAAa+T,MAEd,CAAC/3D,EAAO43D,IAEJC,I,8ICXId,EAAY,uCAAG,8BAAA54D,EAAA,2DACpB2C,EAAWmjD,OAAO+T,UADE,wBAGlBv3D,EAAUQ,SAASC,KAAgC,IAHjC,kBAKhBJ,EAASqzB,QAAQ,CACrBsB,OAAQ,0BACR9N,OAAQ,CACN,CACElnB,QAAQ,KAAD,OAAOA,EAAQX,SAAS,KAC/Bm4D,UAAW,8BACXC,eAAgB,CACdxwC,KAAM,MACNuH,OAAQ,MACR9rB,SAAU,IAEZg1D,QAASC,IACTC,kBAAmB,CAAC,GAAD,OAAIxgD,IAAJ,UAjBH,iCAqBf,GArBe,uCAuBtBwI,QAAQD,MAAM,2CAAd,MAvBsB,mBAwBf,GAxBe,uCA2BxBC,QAAQD,MAAM,gFA3BU,mBA4BjB,GA5BiB,yDAAH,qDAuCZk4C,EAAa,uCAAG,WAAO/3C,EAAsBiuC,EAAqBlB,GAAlD,eAAAnvD,EAAA,sEACF8lD,OAAO+T,SAAS7jC,QAAQ,CAC/CsB,OAAQ,oBACR9N,OAAQ,CACNvS,KAAM,QACNlR,QAAS,CACP4P,QAASyM,EACT0O,OAAQu/B,EACRrrD,SAAUmqD,EACViL,MAAM,GAAD,OAAK3gD,IAAL,0BAA+B2I,EAA/B,YATgB,cACrBi4C,EADqB,yBAcpBA,GAdoB,2CAAH,2D,6BChD1B,6CAEO,SAASnpC,EAAWlY,GACzB,GAAIA,IAAaC,IAAO,MAAO,MAC/B,GAAID,aAAoBrR,IAAO,OAAOqR,EAASrD,QAC/C,MAAM,IAAIzT,MAAM,sB,y9ICAH,SAASo4D,EAAUC,GAAwB,IAAD,IAEvD,OADiBA,EAAI1zD,MAAM,KAAK,GAAGwiB,eAEjC,IAAK,QACH,MAAO,CAACkxC,GACV,IAAK,OACH,MAAO,CAAC,QAAD,OAASA,EAAIC,OAAO,IAAMD,GACnC,IAAK,OACH,IAAM1oC,EAAI,UAAG0oC,EAAIr5D,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqC2wB,EAArC,oCAAsEA,EAAtE,MACT,IAAK,OACH,IAAMtI,EAAI,UAAGgxC,EAAIr5D,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCqoB,EAArC,oCAAsEA,EAAtE,MACT,QACE,MAAO,IAnBb,mC,+ECaM5qB,G,OAA2B,CAC/BsgC,eAAe,EACfC,WAAW,EACXl+B,KAV2By5D,IAAUvlD,QAAO,SAACC,EAAOu4C,GACpD,OAAO,2BACFv4C,GADL,kBAEGu4C,EAAKlwC,GAAKkwC,MAEZ,MAQUgN,EAAaz9B,YAAY,CACpC1T,KAAM,QACN5qB,eACAu+B,SAAU,CACRy9B,WAAY,SAAC96D,GACXA,EAAMq/B,WAAY,GAEpB07B,YAAa,SAAC/6D,GACZA,EAAMq/B,WAAY,EAClBr/B,EAAMo/B,eAAgB,GAExB47B,mBAAoB,SAACh7D,EAAOu9B,GAC1Bv9B,EAAMo/B,eAAgB,EACtBp/B,EAAMq/B,WAAY,EAClBr/B,EAAMmB,KAAKo8B,EAAOE,QAAQ9f,IAAM4f,EAAOE,SAEzCw9B,oBAAqB,SAACj7D,EAAOu9B,GAC3Bv9B,EAAMo/B,eAAgB,EACtBp/B,EAAMq/B,WAAY,EAClBr/B,EAAMmB,KAAOo8B,EAAOE,YAMnB,EAA6Eo9B,EAAWh9B,QAAxF,EAAQi9B,WAAR,EAAoBE,mBAApB,EAAwCD,YAAxC,EAAqDE,oBAuB7CJ,MAAf,S,iwNCjEM58B,EAAwB,eAC3Bi9B,IAAcC,QAAU,CACvBzxC,KAAM,kBACN5T,QAAS,CACP,GAAI,6CACJ,GAAI,gDAKKmoB,O,wMCYTxQ,EAAUjqB,IAAOU,IAAV,4CAGPk3D,EAAU53D,YAAOoS,IAAPpS,CAAH,8CAIP63D,EAAgB73D,YAAOmS,IAAPnS,CAAH,gDAInB,SAAS83D,EAAT,GAA+E,IAAzCC,EAAwC,EAAxCA,YAC5Bt5D,EAAMC,cAAND,EACR,OACE,eAACwrB,EAAD,WACE,cAAC4tC,EAAD,UACE,cAAC,KAAD,MAEF,eAAC,IAAD,CAAYl3D,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM43D,SAAS,OAAf,SAAuBv5D,EAAE,8BACzB,cAAC,IAAD,CAAYkC,IAAI,OAAOP,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAM63D,MAAI,EAACC,OAAK,EAACC,UAAU,SAA3B,SACGJ,MAGL,cAAC,KAAD,CAAMG,OAAK,EAAC56C,MAAM,aAAa66C,UAAU,SAAzC,SACG15D,EAAE,mDAOb,SAAS25D,EAAT,GAUI,IAAD,EATDC,EASC,EATDA,UACAp5D,EAQC,EARDA,QACAuvB,EAOC,EAPDA,KACA8pC,EAMC,EANDA,cAOQt5D,EAAYF,cAAZE,QAEAP,EAAMC,cAAND,EAEF+jB,EAA2BqE,YAAgByxC,EAAer5D,GAEhE,OACE,cAACgrB,EAAD,UACE,eAAC2tC,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAaU,YAAa,GAAKr4D,MAAM,OAAOod,MAAM,cAEpD,eAAC,IAAD,CAAY3c,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM43D,SAAS,OAAf,SAAuBv5D,EAAE,2BACxBQ,GAAWuvB,GACV,cAAC,KAAD,CAAMm1B,UAAQ,EAACuU,OAAK,EAACtU,KAAMjwC,YAAe6a,EAAM,cAAevvB,GAA/D,SACGR,EAAE,qBAGN65D,IAAa,OAAIt5D,QAAJ,IAAIA,GAAJ,UAAIA,EAASM,gBAAb,aAAI,EAAmBk5D,aACnC,cAAC,IAAD,CACExV,QAAQ,WACRyV,GAAG,OACHv4D,MAAM,cACNwd,QAAS,kBAAMo5C,YAAct0C,EAAMlQ,QAASkQ,EAAMiL,OAAQjL,EAAM7gB,WAJlE,SAME,eAAC,IAAD,WACGlD,EAAE,0BAA2B,CAAEi6D,MAAOJ,EAAc7qC,SACrD,cAAC,KAAD,CAAcvtB,MAAM,OAAOy4D,GAAG,aAIpC,cAAC,IAAD,CAAQj7C,QAAS26C,EAAWI,GAAG,OAA/B,SACGh6D,EAAE,mBAQR,SAASm6D,EAAT,GAMH,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,WAKA,OACE,eAAC7uC,EAAD,WACE,cAAC,IAAD,UAAM6uC,MACN,cAAC,IAAD,UAAMD,SAKL,SAASE,EAAT,GAAsG,IAAnE/C,EAAkE,EAAlEA,QAASqC,EAAyD,EAAzDA,UACzC55D,EAAMC,cAAND,EACR,OACE,eAACwrB,EAAD,WACE,eAAC,IAAD,CAAY7pB,QAAQ,SAApB,UACE,cAAC,IAAD,CAAWkd,MAAM,UAAUpd,MAAM,SACjC,cAAC,KAAD,CAAMod,MAAM,UAAUkN,MAAO,CAAE2tC,UAAW,SAAUj4D,MAAO,OAA3D,SACG81D,OAIL,cAAC,IAAD,CAAMgD,eAAe,SAASC,GAAG,OAAjC,SACE,cAAC,IAAD,CAAQv7C,QAAS26C,EAAjB,SAA6B55D,EAAE,kBAuDxBy6D,IAvC6E,SAAC,GAStF,IARL5/B,EAQI,EARJA,MACA++B,EAOI,EAPJA,UACAc,EAMI,EANJA,gBACAC,EAKI,EALJA,cACA5qC,EAII,EAJJA,KACAupC,EAGI,EAHJA,YACAsB,EAEI,EAFJA,QACAf,EACI,EADJA,cAEQr5D,EAAYH,cAAZG,QAEFq6D,EAAgB77D,uBAAY,WAC5B07D,GACFA,IAEFd,MACC,CAACc,EAAiBd,IAErB,OAAKp5D,EAGH,cAAC,KAAD,CAAOq6B,MAAOA,EAAOigC,iBAAiB,uBAAuBlB,UAAWiB,EAAxE,SACGF,EACC,cAACtB,EAAD,CAA4BC,YAAaA,IACvCvpC,EACF,cAAC4pC,EAAD,CACEn5D,QAASA,EACTuvB,KAAMA,EACN6pC,UAAWA,EACXC,cAAeA,IAGjBe,MAde,O,4HCnKR,SAAS3I,EAAO8I,GAK7B,IAAMC,EAAY/lD,YAAU8lD,GACtBE,ECFO,SAAoBpnD,GAAiE,IAAD,MAC3FqnD,EAAmBxD,YAAY7jD,EAAS,KACxCsnD,EAAkBz7C,mBAAQ,WAC9B,IAAKw7C,IAAqBjmD,YAAUimD,GAAmB,MAAO,MAAC19D,GAC/D,IACE,OAAO09D,EAAmB,CAACE,mBAAS,GAAD,OAAIF,EAAiB3zC,cAAcmxC,OAAO,GAA1C,mBAAgE,MAACl7D,GACpG,MAAO2iB,GACP,MAAO,MAAC3iB,MAET,CAAC09D,IACEG,EAAoB16C,aAAwB,GAC5C26C,EAAkBzsC,YAAoBwsC,EAAmB,WAAYF,GACrEI,EAAqB,UAAGD,EAAgBnzC,cAAnB,aAAG,EAAyB,GACjDqzC,EAAmB36C,YACvB06C,IAA0BtF,YAAOsF,GAAyBA,OAAwB/9D,GAClF,GAEIiqB,EAAOoH,YAAoB2sC,EAAkB,OAAQL,GAErDM,EAAUP,IAAqBrnD,EACrC,MAAO,CACL6nD,QAASD,EAAU,KAAH,oBAAUh0C,EAAKU,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9C+G,QAASusC,GAAWH,EAAgBpsC,SAAWzH,EAAKyH,SDpBhCysC,CAAWX,QAAax9D,GACxCo+D,EELO,SAAuBC,GAAwE,IAAD,MACrGC,EAAgBpE,YAAYmE,EAAS,KACrCV,EAAkBz7C,mBAAQ,WAC9B,IAAKo8C,EAAe,MAAO,MAACt+D,GAC5B,IACE,OAAOs+D,EAAgB,CAACV,mBAASU,IAAkB,MAACt+D,GACpD,MAAO2iB,GACP,MAAO,MAAC3iB,MAET,CAACs+D,IACET,EAAoB16C,aAAwB,GAC5C26C,EAAkBzsC,YAAoBwsC,EAAmB,WAAYF,GACrEI,EAAqB,UAAGD,EAAgBnzC,cAAnB,aAAG,EAAyB,GACjDqzC,EAAmB36C,YACvB06C,IAA0BtF,YAAOsF,GAAyBA,OAAwB/9D,GAClF,GAEIu+D,EAAOltC,YAAoB2sC,EAAkB,OAAQL,GAErDM,EAAUK,IAAkBD,EAClC,MAAO,CACLhoD,QAAS4nD,EAAU,KAAH,oBAAUM,EAAK5zC,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9C+G,QAASusC,GAAWH,EAAgBpsC,SAAW6sC,EAAK7sC,SFjBvC8sC,CAAcjB,GAE7B,MAAO,CACL7rC,QAAS+rC,EAAc/rC,SAAW0sC,EAAO1sC,QACzCrb,QAASmnD,GAAaY,EAAO/nD,QAC7B4T,KAAMwzC,EAAcS,QAAUT,EAAcS,SAAWV,GAAaY,EAAO/nD,SAAUknD,GAAwB,Q,qKGhB1G,SAASkB,EACdC,EACAC,GAEsB,IADtBC,EACqB,uDADGjjD,IAExB,GAAI+iD,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAC9B,GAAKA,GAAWC,EAAhB,CAEA,GACED,EAAOG,YAAcF,EAAOE,YAC3BtuC,YAAemuC,EAAO7d,YAAYnnC,SAAUilD,EAAO9d,YAAYnnC,YAC/D6W,YAAeouC,EAAOjd,aAAahoC,SAAUilD,EAAOjd,aAAahoC,UAElE,MAAM,IAAI9W,MAAM,6BAGlB,OAAIg8D,EAAaE,QAAQnjD,KAChB+iD,EAAOnd,eAAenM,SAASupB,EAAOpd,gBAExCmd,EAAOnd,eAAe9oC,IAAID,SAASomD,EAAa7mD,IAAI6D,MAAsBw5B,SAASupB,EAAOpd,iBAGpFkd,I,kECRf,SAASM,EAAkBpV,EAAsBC,GAC/C,IAAQ5mD,EAAYH,cAAZG,QAER,EAAyBA,EACrB,CAAC4nB,YAAgB++B,EAAW3mD,GAAU4nB,YAAgBg/B,EAAW5mD,IACjE,MAAChD,OAAWA,GAFhB,mBAAOunB,EAAP,KAAeC,EAAf,KAIMw3C,EAAiB98C,mBAAQ,WAAO,IAAD,UACnC,IAAKlf,EAAS,MAAO,GAErB,IAAMi8D,EAAM,UAAGzkD,IAA8BxX,UAAjC,QAA6C,GACnDk8D,EAAc33C,GAAM,oBAAG9M,IAAiBzX,UAApB,aAAG,EAA4BukB,EAAOlR,gBAAtC,QAAuD,GAC3E8oD,EAAc33C,GAAM,oBAAG/M,IAAiBzX,UAApB,aAAG,EAA4BwkB,EAAOnR,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,mBAAW4oD,GAAX,YAAsBC,GAAtB,YAAsCC,MACrC,CAACn8D,EAASukB,EAAQC,IAEf43C,EAA8Bl9C,mBAClC,kBAAM4F,IAAQk3C,GAAO,SAACh3C,GAAD,OAA4Bg3C,EAAMj3C,KAAI,SAACs3C,GAAD,MAAe,CAACr3C,EAAMq3C,WACjF,CAACL,IAGGM,EAAwCp9C,mBAC5C,kBACEqF,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,mBAIKw3C,EAAMj3C,KAAI,SAACC,GAAD,MAA0B,CAACT,EAAQS,OAJlD,YAMKg3C,EAAMj3C,KAAI,SAACC,GAAD,MAA0B,CAACR,EAAQQ,OANlD,YAQKo3C,IAEFn3C,QAAO,SAACtS,GAAD,OAAsCiE,QAAQjE,EAAO,IAAMA,EAAO,OACzEsS,QAAO,mCAAEs3C,EAAF,KAAMC,EAAN,YAAcD,EAAGlpD,UAAYmpD,EAAGnpD,WACvC4R,QAAO,YAAyB,IAAD,mBAAtBw3C,EAAsB,KAAbC,EAAa,KAC9B,IAAK18D,EAAS,OAAO,EACrB,IAAM28D,EAAcjlD,IAAa1X,GAE3B48D,EAAiC,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAcF,EAAQppD,SAC1DwpD,EAAiC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcD,EAAQrpD,SAEhE,OAAKupD,IAAiBC,KAElBD,IAAiBA,EAAaxhD,MAAK,SAAC4J,GAAD,OAAU03C,EAAQz0C,OAAOjD,UAC5D63C,IAAiBA,EAAazhD,MAAK,SAAC4J,GAAD,OAAUy3C,EAAQx0C,OAAOjD,UAIpE,KACN,CAACT,EAAQC,EAAQw3C,EAAOI,EAAWp8D,IAG/B88D,EAAWpW,YAAS4V,GAG1B,OAAOp9C,mBACL,kBACEpgB,OAAOuuB,OACLyvC,EAEG73C,QAAO,SAAC0C,GAAD,OAAgD/Q,QAAQ+Q,EAAO,KAAO6+B,IAAUW,QAAUx/B,EAAO,OAExG/U,QAAwC,SAACgT,EAAD,GAAqB,IAAD,EAAVm3C,EAAU,oBAE3D,OADAn3C,EAAKm3C,EAAK5L,eAAe99C,SAAzB,UAAoCuS,EAAKm3C,EAAK5L,eAAe99C,gBAA7D,QAAyE0pD,EAClEn3C,IACN,OAET,CAACk3C,IASE,SAAS/K,EAAgBiL,EAAmCC,GACjE,IAAMC,EAAenB,EAAiB,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAkBtmD,SAAUumD,GAEnE,EAAwBp7C,cAAjBs7C,EAAP,oBAEA,OAAOj+C,mBAAQ,WACb,GAAI89C,GAAoBC,GAAeC,EAAarvC,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAIsvC,EACF,iBACEC,IAAMtL,iBAAiBoL,EAAcF,EAAkBC,EAAa,CAAEI,QAAS,EAAGC,cAAe,IAAK,UADxG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1Bj2C,EAAI,EAAGA,GApBL,EAoBoBA,IAAK,CAAC,IAAD,EAC5Bk2C,EAA0B,UAC9BJ,IAAMtL,iBAAiBoL,EAAcF,EAAkBC,EAAa,CAAEI,QAAS/1C,EAAGg2C,cAAe,IAAK,UADxE,QAE9B,KAEE7B,EAAc8B,EAAgBC,EAAc9kD,OAC9C6kD,EAAiBC,GAGrB,OAAOD,EAGT,OAAO,OACN,CAACL,EAAcF,EAAkBC,EAAaE,IAM5C,SAASlL,EAAiBwL,EAAuBC,GACtD,IAAMR,EAAenB,EAAkB0B,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmBhnD,UAEtE,EAAwBmL,cAAjBs7C,EAAP,oBAEA,OAAOj+C,mBAAQ,WACb,GAAIu+C,GAAcC,GAAqBR,EAAarvC,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAIsvC,EACF,iBACEC,IAAMpL,kBAAkBkL,EAAcO,EAAYC,EAAmB,CAAEL,QAAS,EAAGC,cAAe,IAAK,UADzG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1Bj2C,EAAI,EAAGA,GAtDL,EAsDoBA,IAAK,CAAC,IAAD,EAC5Bk2C,EAAY,UAChBJ,IAAMpL,kBAAkBkL,EAAcO,EAAYC,EAAmB,CAAEL,QAAS/1C,EAAGg2C,cAAe,IAAK,UADvF,QAEhB,KACE7B,EAAc8B,EAAgBC,EAAc9kD,OAC9C6kD,EAAiBC,GAGrB,OAAOD,EAET,OAAO,OACN,CAACE,EAAYC,EAAmBR,EAAcC,IAG5C,SAASQ,EAA4BF,EAAuBR,GACjE,IAAMW,EAAkD9wC,cAChD9sB,EAAYH,cAAZG,QAEF69D,EAAUj2C,YAAgB61C,EAAYz9D,GACtC89D,EAAWl2C,YAAgBq1C,EAAaj9D,GAG9C,GAAI49D,EAAmB,CACrB,GAAIC,GAAW/+D,OAAOC,KAAK6+D,GAAmB/wC,SAASgxC,EAAQxqD,SAC7D,OAAO,EAET,GAAIyqD,GAAYh/D,OAAOC,KAAK6+D,GAAmB/wC,SAASixC,EAASzqD,SAC/D,OAAO,EAIX,OAAO,I,0gaClLT,0JAQa0qD,EAAkB,WAC7B,IAAQnoD,EAAY9V,cAAZ8V,QACFmL,EAAWswB,cAEjB5zC,qBAAU,WACJmY,GACFmL,EAASqrC,YAAax2C,MAEvB,CAACA,EAASmL,KAGFi9C,EAAa,WACxB,MAAwE98C,aAAY,SAAC3jB,GAAD,OAAkBA,EAAMyyC,WAApGrT,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,UAAWl+B,EAAlC,EAAkCA,KAAMqsD,EAAxC,EAAwCA,cACxC,MAAO,CAAE/a,QAAStxC,EAAMu/D,WAAYthC,GAAiBouB,EAAepuB,gBAAeC,cAGxEshC,EAAsB,SAACtoD,GAClC,IACA,EADsBsL,aAAY,SAAC3jB,GAAD,OAAkBA,EAAMyyC,QAAQ2b,eAAe/1C,OACtC,GAAnCi1C,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,IACZlqC,EAAWswB,cAcjB,OAZA5zC,qBAAU,WACR,IAAM4V,EAAUoB,YAAUmB,IAErBq1C,GAAO53C,GACV0N,EAAS6qC,YAAmBh2C,KAGzBi1C,GAAYI,GAAO53C,GACtB0N,EAAS8qC,YAAqBj2C,MAE/B,CAACA,EAASq1C,EAAKJ,EAAU9pC,IAErB,CAAE8pC,WAAUI,S,kICtCRkT,EAAyB,CACpC9jC,MAAO,4BACPE,YACE,yO,iDCGE6jC,EAAar9D,YAAOs9D,IAAPt9D,CAAH,oPAKZ,qBAAGm+C,MAAkB4D,aAAaC,MAKlC,qBAAG7D,MAAkB4D,aAAawb,MAMzBC,EAA0C,SAAC,GAAgB,IAAd/vC,EAAa,EAAbA,OAChDhvB,EAAMC,cAAND,EACAg/D,EAAarL,cAAbqL,SACFC,EAAeC,cACfC,EAAsBF,EAAY,WAAOA,EAAar7D,QAAQ,IAAO,MAErEw7D,EDrBqB,SAAC1N,EAAc1xD,GAgB1C,OAdI0xD,EAAK2N,WAAW,SACP,QACF3N,EAAK2N,WAAW,QACd,OACF3N,EAAK2N,WAAW,WACd,UACF3N,EAAK2N,WAAW,UACd,SACF3N,EAAK2N,WAAW,qBAAgC,4BAAT3N,EACrC,mBAEAA,GAIX,IAAK,IACH,MAAO,CACL72B,MAAM,GAAD,OAAK76B,EAAE,QAAP,cAAoBA,EAAE,iBAE/B,IAAK,QACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,YAAP,cAAwBA,EAAE,+BAEnC,IAAK,OACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,iBAAP,cAA6BA,EAAE,+BAExC,IAAK,UACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,oBAAP,cAAgCA,EAAE,+BAE3C,IAAK,aACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,aAAP,cAAyBA,EAAE,+BAEpC,IAAK,QACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,eAAP,cAA2BA,EAAE,+BAEtC,IAAK,eACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,kBAAP,cAA8BA,EAAE,+BAEzC,IAAK,cACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,cAAP,cAA0BA,EAAE,+BAErC,IAAK,0BACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,eAAP,cAA2BA,EAAE,+BAEtC,IAAK,SACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,SAAP,cAAqBA,EAAE,+BAEhC,IAAK,iBACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,iBAAP,cAA6BA,EAAE,+BAExC,IAAK,SACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,SAAP,cAAqBA,EAAE,+BAEhC,IAAK,WACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,WAAP,cAAuBA,EAAE,+BAElC,IAAK,gBACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,gBAAP,cAA4BA,EAAE,+BAEvC,IAAK,OACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,yBAAP,cAAqCA,EAAE,+BAEhD,IAAK,SACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,eAAP,cAA2BA,EAAE,+BAEtC,IAAK,WACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,gBAAP,cAA4BA,EAAE,+BAEvC,IAAK,iBACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,eAAP,cAA2BA,EAAE,+BAEtC,IAAK,UACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,UAAP,cAAsBA,EAAE,+BAEjC,IAAK,mBACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,aAAP,cAAyBA,EAAE,+BAEpC,IAAK,0BACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,mBAAP,cAA+BA,EAAE,+BAE1C,IAAK,QACH,MAAO,CACL66B,MAAM,GAAD,OAAK76B,EAAE,YAAP,cAAwBA,EAAE,+CAC/B+6B,YAAa,4DAEjB,IAAK,cAKL,IAAK,eACH,MAAO,CACLF,MAAM,GAAD,OAAK76B,EAAE,SAAP,cAAqBA,EAAE,+CAC5B+6B,YAAa,4DAEjB,QACE,OAAO,MChGMukC,CAAcN,EAAUh/D,IAAM,GAC/C,6BAA2C2+D,GAAiBS,GAApDvkC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,YAAau9B,EAA5B,EAA4BA,MACxBiH,EAAYJ,EAAsB,CAACtkC,EAAOskC,GAAqBK,KAAK,OAAS3kC,EAKjF,OAJI7L,IACFuwC,EAAY,CAACvwC,EAAQ6L,GAAO2kC,KAAK,QAIjC,eAAC,IAAD,WACE,gCAAQD,IACR,sBAAME,SAAS,WAAW7E,QAAS//B,IACnC,sBAAM4kC,SAAS,iBAAiB7E,QAAS7/B,IACzC,sBAAM0kC,SAAS,WAAW7E,QAAStC,QAkB1BoH,IATmB,SAAC,GAAoC,IAAlChiE,EAAiC,EAAjCA,SAAUsxB,EAAuB,EAAvBA,OAAW9P,EAAY,iBACpE,OACE,qCACE,cAAC,EAAD,CAAU8P,OAAQA,IAClB,cAAC4vC,EAAD,2BAAgB1/C,GAAhB,aAAwBxhB,U,mPChDxBiiE,EAAmBp+D,IAAOU,IAAV,8PASX,qBAAGy9C,MAAkBkJ,OAAOgX,WAGjCC,EAAct+D,IAAOU,IAAV,2CACN,gBAAGu7B,EAAH,EAAGA,QAASvD,EAAZ,EAAYA,QAASylB,EAArB,EAAqBA,MAArB,OACPliB,EAAUkiB,EAAMkJ,OAAOgX,QAAU3lC,EAAUylB,EAAMkJ,OAAO3uB,QAAUylB,EAAMkJ,OAAOkX,WAGpE,SAASC,EAAT,GAA0D,IAAD,IAAlC5zB,EAAkC,EAAlCA,GAC5B3rC,EAAYH,cAAZG,QAEFqrC,EAAO,OAAGM,QAAH,IAAGA,OAAH,EAAGA,EAAIN,QACdrO,IAAU,OAAC2O,QAAD,IAACA,OAAD,EAACA,EAAIG,SACfrS,GAAWuD,GAAW2O,IAA8B,KAAvB,UAAAA,EAAGG,eAAH,eAAYzW,SAA8C,qBAA9B,UAAOsW,EAAGG,eAAV,aAAO,EAAYzW,SAElF,OAAKr1B,EAGH,eAACm/D,EAAD,CAAkBniC,QAASA,EAASvD,QAASA,EAA7C,UACE,cAAC,KAAD,CAAckrB,KAAMjwC,YAAei3B,EAAGpc,KAAM,cAAevvB,GAA3D,gBAAsEqrC,QAAtE,IAAsEA,IAAWM,EAAGpc,OACpF,cAAC8vC,EAAD,CAAariC,QAASA,EAASvD,QAASA,EAAxC,SACGuD,EAAU,cAACwiC,EAAA,EAAD,IAAmB/lC,EAAU,cAAC,IAAD,CAAepb,MAAM,YAAe,cAAC,IAAD,CAAWA,MAAM,iBAN9E,KCnBvB,SAASohD,EAAqB/hE,EAAuBgiE,GACnD,OAAOA,EAAEl0B,UAAY9tC,EAAE8tC,UAGzB,SAASm0B,EAAmB52B,GAC1B,OACE,cAAC,IAAD,CAAM62B,cAAc,SAApB,SACG72B,EAAahkB,KAAI,SAAC4mB,GACjB,OAAO,cAAC4zB,EAAD,CAA0C5zB,GAAIA,GAA5BA,EAAGpc,KAAOoc,EAAGH,gBAM9C,I,IA2Ceq0B,EA3CyC,SAAC,GAAmB,IAAjBzG,EAAgB,EAAhBA,UACzD,EAA6Bv5D,cAArB+V,EAAR,EAAQA,QAAS5V,EAAjB,EAAiBA,QACX+gB,EAAWC,cACXknC,EAAkBF,cAEhBxoD,EAAMC,cAAND,EAEFsgE,EAA2B5gD,mBAAQ,WAEvC,OADYpgB,OAAOuuB,OAAO66B,GACfjjC,OAAOgjC,KAAqBtvB,KAAK8mC,KAC3C,CAACvX,IAEElrB,EAAU8iC,EAAyB76C,QAAO,SAAC0mB,GAAD,OAASA,EAAGG,WACtDi0B,EAAYD,EAAyB76C,QAAO,SAAC0mB,GAAD,OAAQA,EAAGG,WAEvDk0B,EAA+BxhE,uBAAY,WAC3CwB,GAAS+gB,EAAS0qB,YAAqB,CAAEzrC,eAC5C,CAAC+gB,EAAU/gB,IAEd,OACE,cAAC,KAAD,CAAOq6B,MAAO76B,EAAE,uBAAwB86D,iBAAiB,uBAAuBlB,UAAWA,EAA3F,SACGxjD,GACC,cAAC,KAAD,UACKonB,EAAQnP,QAAYkyC,EAAUlyC,OAC/B,qCACE,eAAC,IAAD,CAASoyC,GAAG,OAAO10C,MAAO,CAAEwuC,eAAgB,iBAA5C,UACE,cAAC,KAAD,UAAOv6D,EAAE,yBACT,cAAC,IAAD,CAAQukD,QAAQ,WAAWmc,MAAM,KAAKzhD,QAASuhD,EAA/C,SACGxgE,EAAE,kBAGNmgE,EAAmB3iC,GACnB2iC,EAAmBI,MAGtB,cAAC,KAAD,UAAOvgE,EAAE,iCC/CN2gE,EAXM,WACnB,MAAqCC,aAAS,cAAC,EAAD,KAAvCC,EAAP,oBACA,OACE,mCACE,cAAC,IAAD,CAAQtc,QAAQ,OAAO7+B,EAAG,EAAGzG,QAAS4hD,EAA4B3G,GAAG,OAArE,SACE,cAAC,IAAD,CAAar7C,MAAM,aAAapd,MAAM,c,QCQxCq/D,EAAqBv/D,YAAOw/D,IAAPx/D,CAAH,0JAKK,qBAAGm+C,MAAkBkJ,OAAOK,cAsC1C+X,EAnCoB,SAAC,GAA2D,IAAzDnmC,EAAwD,EAAxDA,MAAOomC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAA+B,IAAvBC,gBAAuB,SAC5F,EAAqBr/C,cAAdC,EAAP,oBAEA,OACE,eAAC8+C,EAAD,WACE,eAAC,IAAD,CAAMO,WAAW,SAASC,GAAIF,EAAW,EAAI,OAA7C,UACGD,GACC,cAAC,IAAD,CAAYlc,GAAIsc,IAAMrP,GAAIiP,EAA1B,SACE,cAAC,IAAD,CAAe1/D,MAAM,WAGzB,eAAC,IAAD,CAAM2+D,cAAc,SAApB,UACE,cAAC,IAAD,CAASnb,GAAG,KAAKwb,GAAG,MAApB,SACG5lC,IAEH,eAAC,IAAD,CAAMwmC,WAAW,SAAjB,UACGH,GAAU,cAAClkB,EAAA,EAAD,CAAgBC,KAAMikB,EAAQI,GAAG,QAC5C,cAAC,KAAD,CAAMziD,MAAM,aAAa06C,SAAS,OAAlC,SACG0H,cAKPG,GACA,eAAC,IAAD,CAAMC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAiBG,KAAMx/C,EAAvB,SACE,cAACy/C,EAAA,EAAD,MAEF,cAAC,EAAD,WCjDGC,EAAcngE,YAAOonD,IAAPpnD,CAAH,wGAUT,SAASogE,EAAT,GAA+D,IAA5CjkE,EAA2C,EAA3CA,SAChC,OAAO,cAACgkE,EAAD,UAAchkE,M,8BCfvB,8CAKakkE,EAAazmC,YAAY,CACpC1T,KAAM,QACN5qB,aAJ+B,CAAEguB,aAAc,EAAG+6B,aAAc,GAKhExqB,SAAU,CACRqqB,SAAU,SAAC1nD,EAAOu9B,GACW,IAAvBv9B,EAAM6nD,eACR7nD,EAAM6nD,aAAetqB,EAAOE,SAG9Bz9B,EAAM8sB,aAAeyQ,EAAOE,YAMnBiqB,EAAamc,EAAWhmC,QAAxB6pB,SAEAmc,MAAf,S,sICnBMC,EAASC,YAAH,sHASNC,EAAYxgE,IAAOygE,IAAV,iIACGH,GACN,qBAAGh2C,QACJ,qBAAGA,QAEA,gBAAGo2C,EAAH,EAAGA,OAAQviB,EAAX,EAAWA,MAAX,cAAuBuiB,QAAvB,IAAuBA,IAAUviB,EAAMkJ,OAAOgX,WAQ7C,SAASI,EAAT,GAQX,IAAD,IAPDn0C,YAOC,MAPM,OAON,EANDo2C,EAMC,EANDA,OACGC,EAKF,iBACD,OACE,cAACH,EAAD,yBAAWI,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6Bx2C,KAAMA,EAAMo2C,OAAQA,GAAYC,GAA9G,aACE,sBACEI,EAAE,6HACFxI,YAAY,MACZyI,cAAc,QACdC,eAAe,e,wNCpCjBv+D,EAAU,CACdovC,SAAUv7B,KAGC2qD,EAAS,uCAAG,WAAOzqB,EAAoBmJ,EAAKl+C,GAAhC,yBAAA/E,EAAA,yDACjBkmB,EAAWomC,cACXzqD,EAAQ,IAAI0C,IAAUQ,GAAQE,MAAM0U,KAAuBhY,WACrD,IAARshD,EAHmB,iCAIJnJ,EAAmB0qB,aAAa3iE,EAAhC,2BAA4CkE,GAA5C,IAAqDmgB,cAJjD,cAIf+nB,EAJe,gBAKCA,EAAGw2B,OALJ,cAKfr2B,EALe,yBAMdA,EAAQzW,QANM,yBASNmiB,EAAmB4qB,QAAQzhB,EAAKphD,EAAhC,2BAA4CkE,GAA5C,IAAqDmgB,cAT/C,eASjB+nB,EATiB,iBAUDA,EAAGw2B,OAVF,eAUjBr2B,EAViB,yBAWhBA,EAAQzW,QAXQ,4CAAH,0DAcTgtC,EAAW,uCAAG,WAAO7qB,EAAoBmJ,EAAKl+C,GAAhC,yBAAA/E,EAAA,yDACnBkmB,EAAWomC,cACXzqD,EAAQ,IAAI0C,IAAUQ,GAAQE,MAAM0U,KAAuBhY,WACrD,IAARshD,EAHqB,iCAINnJ,EAAmB8qB,aAAa/iE,EAAhC,2BAA4CkE,GAA5C,IAAqDmgB,cAJ/C,cAIjB+nB,EAJiB,gBAKDA,EAAGw2B,OALF,cAKjBr2B,EALiB,yBAMhBA,EAAQzW,QANQ,yBASRmiB,EAAmB+qB,SAAS5hB,EAAKphD,EAAjC,2BAA6CkE,GAA7C,IAAsDmgB,cAT9C,eASnB+nB,EATmB,iBAUHA,EAAGw2B,OAVA,eAUnBr2B,EAVmB,yBAWlBA,EAAQzW,QAXU,4CAAH,0DAcXmtC,EAAW,uCAAG,WAAOhrB,EAAoBmJ,GAA3B,uBAAAjjD,EAAA,yDACnBkmB,EAAWomC,cACL,IAARrJ,EAFqB,gCAGNnJ,EAAmB8qB,aAAa,IAAhC,2BAA0C7+D,GAA1C,IAAmDmgB,cAH7C,cAGjB+nB,EAHiB,gBAIDA,EAAGw2B,OAJF,cAIjBr2B,EAJiB,yBAKhBA,EAAQzW,QALQ,wBAQRmiB,EAAmB4qB,QAAQzhB,EAAK,IAAhC,2BAA0Cl9C,GAA1C,IAAmDmgB,cAR3C,eAQnB+nB,EARmB,iBASHA,EAAGw2B,OATA,eASnBr2B,EATmB,yBAUlBA,EAAQzW,QAVU,4CAAH,wD,6DCpCxB,wDAGasiC,EAAQ,CACnBl3D,oCACAA,mCACAA,mCACAA,kCAOagiE,IAJI,WACjB,OAAOC,IAAO/K,K,8BCTT,IAAKc,EAAZ,kC,SAAYA,K,mBAAAA,M,mCCFZ,sCAAM/F,EAAiB,kDAEhB,SAASiQ,EAAgBC,GAC9B,IAAMhkE,EAAQgkE,EAAWhkE,MAAM8zD,GAC/B,GAAK9zD,EACL,MAAO,CAAEy8D,QAAQ,GAAD,OAAKz8D,EAAM,GAAGmoB,cAAd,OAAkC87C,QAASjkE,EAAM,M,gKCI7DkkE,EAAqB,IAAIC,IAAI,CAAEC,WAAW,IAAQC,QAAQC,GAOjD,SAAeC,EAA9B,oC,4CAAe,WACbh2B,EACAi2B,GAFa,uCAAA1lE,EAAA,2DAIP2lE,EAAYV,YAAgBx1B,IAJrB,0CASci2B,EAAsBC,EAAUhI,SAT9C,OASTiI,EATS,6DAWT1jD,QAAQD,MAAR,sCAA6C0jD,EAAUhI,SAAvD,MACM,IAAIz7D,MAAJ,sCAAyCyjE,EAAUhI,UAZhD,kBAgBTkI,EAAgBC,YAAiBF,GAhBxB,yDAkBT1jD,QAAQD,MAAM,yCAA0C2jD,GAClD,IAAI1jE,MAAJ,kDAAqD0jE,IAnBlD,QAqBXhvB,EAAO0jB,YAAU,GAAD,OAAIuL,GAAJ,iBAAoBF,EAAUR,eAA9B,QAAyC,KArB9C,wBAuBXvuB,EAAO0jB,YAAU7qB,GAvBN,QAyBJ7lB,EAAI,EAzBA,aAyBGA,EAAIgtB,EAAKzmB,QAzBZ,wBA0BL2f,EAAM8G,EAAKhtB,GACXm8C,EAASn8C,IAAMgtB,EAAKzmB,OAAS,EAC/BgG,OA5BO,sBA8BQuK,MAAMoP,GA9Bd,QA8BT3Z,EA9BS,6DAgCTjU,QAAQD,MAAM,uBAAwBwtB,EAAtC,OACIs2B,EAjCK,uBAiCS,IAAI7jE,MAAJ,kCAAqCutC,IAjC9C,kDAqCNtZ,EAAS2K,GArCH,qBAsCLilC,EAtCK,uBAsCS,IAAI7jE,MAAJ,kCAAqCutC,IAtC9C,gEA0CQtZ,EAAS6K,OA1CjB,WA0CLA,EA1CK,OA2CNokC,EAAmBpkC,GA3Cb,uBA4CHglC,EA5CG,oBA6CPZ,EAAmBa,cA7CZ,aA6CP,EAA2B/wD,QAAe,SAACgT,EAAMjG,GAAW,IAAD,EACnD5K,EAAG,UAAO4K,EAAcikD,SAArB,sBAAiCjkD,EAAMo3C,eAAvC,QAAkD,IAC3D,OAAOnxC,EAAKiI,OAAS,EAAd,UAAqBjI,EAArB,aAA8B7Q,GAA9B,UAAyCA,KAC/C,WAhDI,QAgDG,gBACN,IAAInV,MAAJ,wCAA2C8jE,IAjDxC,iCAmDJhlC,GAnDI,QAyBoBpX,IAzBpB,8BAqDP,IAAI1nB,MAAM,mCArDH,0E,2CCZTikE,EAAgB,CACpB,CACEC,UAAU,EACV9pC,OAAQ,CACN,CACE/S,KAAM,OACNtS,KAAM,YAGVsS,KAAM,WACN88C,QAAS,CACP,CACE98C,KAAM,kBACNtS,KAAM,YAGVqvD,SAAS,EACTC,gBAAiB,OACjBtvD,KAAM,aAGJuvD,EAAoB,6CAEpBC,EAAe,CACnB,CACEL,UAAU,EACV9pC,OAAQ,CACN,CACEoqC,aAAc,UACdn9C,KAAM,OACNtS,KAAM,YAGVsS,KAAM,cACN88C,QAAS,CACP,CACEK,aAAc,QACdn9C,KAAM,GACNtS,KAAM,UAGVqvD,SAAS,EACTC,gBAAiB,OACjBtvD,KAAM,aAKV,SAASqmD,EAAiBF,EAAyBz6D,GACjD,OAAO,IAAIyV,IAASglD,EAAiBqJ,EAAc9jE,G,4CAQtC,WAAqCg7D,EAAiBh7D,GAAtD,mBAAA3C,EAAA,6DACP2mE,EAAuB,IAAIvuD,IAASouD,EAAmBL,EAAexjE,GACtEkvB,EAAOqrC,mBAASS,GAFT,SAGiBgJ,EAAqBC,SAAS/0C,GAH/C,cAGPurC,EAHO,yBAINE,EAAiBF,EAAiBz6D,GAAUkkE,YAAYh1C,IAJlD,4C,sBCRAi1C,IAzCf,WACE,IAAQzkE,EAAY0kE,cAAZ1kE,QACAC,EAAYH,cAAZG,QACF+gB,EAAWC,cAEX0jD,EAAclmE,uBAClB,SAAC68D,GACC,GAAIr7D,IAAYiF,IAAQD,QACtB,MAAM,IAAIpF,MAAM,4CAElB,ODuCS,SAAf,oCCvCawjE,CAAsB/H,EAASt7D,KAExC,CAACC,EAASD,IAIZ,OAAOvB,sBAAW,uCAChB,WAAO2uC,GAAP,6BAAAzvC,EAAA,6DAAwBinE,IAAxB,iCACQp3B,EAAYq3B,cACdD,GACF5jD,EAASusB,IAAetQ,QAAQ,CAAEuQ,YAAWC,IAAKL,KAHtD,kBAKSg2B,EAAah2B,EAASu3B,GAC1B5xB,MAAK,SAACrF,GAIL,OAHIk3B,GACF5jD,EAASusB,IAAerQ,UAAU,CAAEuQ,IAAKL,EAASM,YAAWF,eAExDE,KALJ,OAOE,SAAC9tB,GAKN,MAJAC,QAAQD,MAAR,oCAA2CwtB,GAAWxtB,GAClDglD,GACF5jD,EAASusB,IAAeQ,SAAS,CAAEN,IAAKL,EAASI,YAAWQ,aAAcpuB,EAAMo3C,WAE5Ep3C,MAjBZ,2CADgB,sDAqBhB,CAACoB,EAAU2jD,M,qLC5CF9kB,EAAgB7iD,6BAA+BC,GAE/C6nE,EAA2B,SAAC,GAAkB,IAAhB3nE,EAAe,EAAfA,SACzC,EAA4BC,mBAAoC,IAAhE,mBAAO+mD,EAAP,KAAe4gB,EAAf,KAEM7hB,EAAQzkD,uBACZ,YAAsD,IAAnD67B,EAAkD,EAAlDA,MAAOE,EAA2C,EAA3CA,YAAa5lB,EAA8B,EAA9BA,KACrBmwD,GAAU,SAACC,GACT,IAAM7pD,EAAK8pD,oBAAU3qC,GAGf4qC,EAAgBF,EAAW9/C,QAAO,SAACigD,GAAD,OAAeA,EAAUhqD,KAAOA,KAExE,MAAM,CACJ,CACEA,KACAmf,QACAE,cACA5lB,SALJ,mBAOKswD,SAIT,CAACH,IAoBH,OACE,cAACllB,EAActgD,SAAf,CAAwBC,MAAO,CAAE2kD,SAAQihB,MAN7B,kBAAML,EAAU,KAMoBM,OALnC,SAAClqD,GACd4pD,GAAU,SAACC,GAAD,OAAgBA,EAAW9/C,QAAO,SAACigD,GAAD,OAAeA,EAAUhqD,KAAOA,SAIpB+6C,WAlBvC,SAAC57B,EAAuBE,GACzC,OAAO0oB,EAAM,CAAE5oB,QAAOE,cAAa5lB,KAAM0wD,IAAW7iB,UAiBgB8iB,UAfpD,SAACjrC,EAAuBE,GACxC,OAAO0oB,EAAM,CAAE5oB,QAAOE,cAAa5lB,KAAM0wD,IAAW3iB,QAc2B6iB,aAZ5D,SAAClrC,EAAuBE,GAC3C,OAAO0oB,EAAM,CAAE5oB,QAAOE,cAAa5lB,KAAM0wD,IAAW9iB,WAWyCijB,aAT1E,SAACnrC,EAAuBE,GAC3C,OAAO0oB,EAAM,CAAE5oB,QAAOE,cAAa5lB,KAAM0wD,IAAW5iB,YAQpD,SACGvlD,K,QCvCQuoE,EARO,WACpB,MAA2B/lB,cAAnBwE,EAAR,EAAQA,OAAQkhB,EAAhB,EAAgBA,OAIhB,OAAO,cAACpiB,EAAA,EAAD,CAAgBkB,OAAQA,EAAQhB,SAFlB,SAAChoC,GAAD,OAAgBkqD,EAAOlqD,Q,mPCFxCwqD,EAAc3kE,IAAO4kE,MAAV,snBACN,gBAAGhmD,EAAH,EAAGA,MAAOu/B,EAAV,EAAUA,MAAV,OAAuBv/B,EAAQu/B,EAAMkJ,OAAOkX,QAAUpgB,EAAMkJ,OAAO3L,QAS9D,gBAAGv7C,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAGg+C,MAAkBkJ,OAAOwd,cAInCC,EAAa1mE,OAAO,0BAEb2mE,EAAQC,IAAMngD,MAAK,YAWyC,IAVvErmB,EAUsE,EAVtEA,MACAoxD,EASsE,EATtEA,YACAqV,EAQsE,EARtEA,YACGtE,EAOmE,iBAO9DliE,EAAMC,cAAND,EAER,OACE,cAACkmE,EAAD,2BACMhE,GADN,IAEEniE,MAAOA,EACP0mE,SAAU,SAACC,GAZE,IAACC,GACM,MADNA,EAcHD,EAAME,OAAO7mE,MAAMH,QAAQ,KAAM,OAblBymE,EAAW/3C,KAAKxX,YAAa6vD,MACvDxV,EAAYwV,IAeZE,UAAU,UACVhsC,MAAO76B,EAAE,gBACT8mE,aAAa,MACbC,YAAY,MAEZ5xD,KAAK,OACL6xD,QAAQ,sBACRR,YAAaA,GAAe,MAC5BS,UAAW,EACXC,UAAW,GACXC,WAAW,cCpEXC,EAAW7lE,IAAOU,IAAV,iHAID,qBAAGolE,SAA2B,8BAAgC,kCAErEC,EAAuB/lE,YAAOgmE,KAAQC,MAAM,CAAEjjB,QAAS,OAAQmc,MAAO,MAA/Cn/D,CAAH,kDAGpBkmE,EAAWlmE,IAAOU,IAAV,6LAIH,qBAAGy9C,MAAkBkJ,OAAO3L,QAKjCyqB,EAAanmE,IAAOU,IAAV,kKAIG,qBAAG0lE,UAA6B,MAAQ,UACrC,qBAAGjoB,MAAkBkJ,OAAOC,cAG5CgW,EAAYt9D,IAAOU,IAAV,kGAEO,qBAAGy9C,MAAkBkJ,OAAOud,SAClC,qBAAGzmB,MAAkBkoB,QAAQC,SAkB9B,SAASC,EAAT,GAec,IAAD,EAd1B/nE,EAc0B,EAd1BA,MACAoxD,EAa0B,EAb1BA,YACA4W,EAY0B,EAZ1BA,MACAC,EAW0B,EAX1BA,cACAC,EAU0B,EAV1BA,MACAC,EAS0B,EAT1BA,iBACAhxD,EAQ0B,EAR1BA,SAQ0B,IAP1BixD,6BAO0B,aAN1BC,mBAM0B,aAL1B3jD,YAK0B,MALnB,KAKmB,MAJ1BkjD,iBAI0B,SAH1BU,EAG0B,EAH1BA,cACA3sD,EAE0B,EAF1BA,GACA4sD,EAC0B,EAD1BA,gBAEQlyD,EAAY/V,cAAZ+V,QACFmyD,EAA0BzhB,YAAkB,OAAC1wC,QAAD,IAACA,SAAW5Y,EAAZ,OAAuB0Z,QAAvB,IAAuBA,SAAY1Z,GAC7EwC,EAAMC,cAAND,EACFwoE,EAAkBP,GAASjoE,EAAE,SAEnC,EAAiC4gE,aAC/B,cAAC6H,EAAA,EAAD,CACEP,iBAAkBA,EAClBQ,iBAAkBxxD,EAClByxD,sBAAuBN,EACvBC,gBAAiBA,KALdM,EAAP,oBAQA,OACE,cAAClB,EAAD,CAAYhsD,GAAIA,EAAhB,SACE,eAACmjD,EAAD,CAAW8I,UAAWA,EAAtB,WACIA,GACA,cAACF,EAAD,UACE,eAACnmE,EAAA,EAAD,WACE,cAAC,KAAD,CAAMi4D,SAAS,OAAf,SAAuBiP,IACtBpyD,GACC,cAAC,KAAD,CAAM6I,QAAS8oD,EAAOxO,SAAS,OAAOxtC,MAAO,CAAE88C,QAAS,SAAUvxC,OAAQ,WAA1E,UACI8wC,GAAiBlxD,EACflX,EAAE,qBAAsB,CAAEwD,QAAO,iBAAE+kE,QAAF,IAAEA,OAAF,EAAEA,EAAyBtpB,cAAc,UAAzC,QAA+Cj/C,EAAE,aAClF,YAMd,eAAConE,EAAD,CAAUr7C,MAAO47C,EAAY,CAAE/lE,QAAS,IAAKE,aAAc,OAAU,GAAIulE,SAAUc,EAAnF,WACIR,GACA,qCACE,cAAC,EAAD,CACEmB,UAAU,qBACV/oE,MAAOA,EACPoxD,YAAa,SAAC4X,GACZ5X,EAAY4X,MAGf3yD,GAAWc,GAAY8wD,GAA2B,OAAVC,GACvC,cAAC,IAAD,CAAQhpD,QAAS8oD,EAAOrH,MAAM,KAAKnc,QAAQ,OAA3C,oBAMN,cAAC+iB,EAAD,CACED,WAAYnwD,EACZ4xD,UAAU,8BACV7pD,QAAS,WACFkpD,GACHS,KALN,SASE,eAAC,IAAD,CAAMvH,WAAW,SAAS9G,eAAe,gBAAzC,UACG91C,EACC,cAAC,IAAD,CAAoBkH,UAAWlH,EAAKC,OAAQkH,UAAWnH,EAAKE,OAAQkH,KAAM,GAAIJ,QAAM,IAClFvU,EACF,cAAC,IAAD,CAAcA,SAAUA,EAAU2U,KAAK,OAAOE,MAAO,CAAEC,YAAa,SAClE,KACHvH,EACC,eAAC,KAAD,CAAM/I,GAAG,OAAT,iBACG+I,QADH,IACGA,OADH,EACGA,EAAMC,OAAOsK,OADhB,WACyBvK,QADzB,IACyBA,OADzB,EACyBA,EAAME,OAAOqK,UAGtC,cAAC,KAAD,CAAMtT,GAAG,OAAT,UACIxE,GAAYA,EAAS8X,QAAU9X,EAAS8X,OAAOX,OAAS,GAAxD,UACKnX,EAAS8X,OAAOkV,MAAM,EAAG,GAD9B,cACsChtB,EAAS8X,OAAOkV,MAClDhtB,EAAS8X,OAAOX,OAAS,EACzBnX,EAAS8X,OAAOX,SAHpB,OAKEnX,QALF,IAKEA,OALF,EAKEA,EAAU8X,SAAWhvB,EAAE,wBAG7BmoE,GAAyB,cAAC,IAAD,mB,8BCxJzC,uFAIO,SAASv6C,EAAaza,EAAiBugD,GAC5C,GAAsB,IAAlBA,EAAOrlC,OAAc,OAAOlb,EAEhC,IAAM61D,EAAmB/zD,YAAUy+C,GAEnC,GAAIsV,EACF,OAAO71D,EAAOsS,QAAO,SAAC1B,GAAD,OAAWA,EAAMlQ,UAAYm1D,KAGpD,IAAMC,EAAmBvV,EACtBnsC,cACAxiB,MAAM,OACN0gB,QAAO,SAACspB,GAAD,OAAOA,EAAE1gB,OAAS,KAE5B,GAAgC,IAA5B46C,EAAiB56C,OACnB,OAAOlb,EAGT,IAAM+1D,EAAgB,SAACn6B,GACrB,IAAMo6B,EAASp6B,EACZxnB,cACAxiB,MAAM,OACN0gB,QAAO,SAAC2jD,GAAD,OAAQA,EAAG/6C,OAAS,KAE9B,OAAO46C,EAAiB5wC,OAAM,SAAC3S,GAAD,OAAoB,IAAbA,EAAE2I,QAAgB86C,EAAO/iB,MAAK,SAACijB,GAAD,OAAQA,EAAGhK,WAAW35C,IAAM2jD,EAAGC,SAAS5jD,UAG7G,OAAOvS,EAAOsS,QAAO,SAAC1B,GACpB,IAAQiL,EAAiBjL,EAAjBiL,OAAQvH,EAAS1D,EAAT0D,KAChB,OAAQuH,GAAUk6C,EAAcl6C,IAAavH,GAAQyhD,EAAczhD,MAIhE,SAAS8hD,EAAuBp2D,EAA6Bwa,GAClE,OAAOjO,mBAAQ,WACb,IAAKvM,EACH,MAAO,GAGT,IAAMq2D,EAAc77C,EACjBpG,cACAxiB,MAAM,OACN0gB,QAAO,SAACspB,GAAD,OAAOA,EAAE1gB,OAAS,KAE5B,GAAIm7C,EAAYn7C,OAAS,EACvB,OAAOlb,EAGT,IAAMs2D,EAAwB,GACxBC,EAA2B,GAC3BxH,EAAgB,GAatB,OAVA/uD,EAAOoS,KAAI,SAACxB,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAMiL,cAAN,eAAczH,iBAAkBiiD,EAAY,GACvCC,EAAaluC,KAAKxX,IAE3B,UAAIA,EAAMiL,cAAV,aAAI,EAAczH,cAAc83C,WAAW1xC,EAAYpG,cAAcoiD,SAC5DD,EAAgBnuC,KAAKxX,GAEvBm+C,EAAK3mC,KAAKxX,MAGb,GAAN,OAAW0lD,EAAiBC,EAAoBxH,KAC/C,CAAC/uD,EAAQwa,M,8KC5DRi8C,EAAS3G,cACTziE,EAAUQ,SAASC,KAAgC,IAEnD4oE,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAACvpE,KAEvDg3D,EAAgB,IAAIH,IAAuB,CAC/C2S,IAAI,eAAIxpE,EAAUopE,GAClBK,QAAQ,EACRC,gBATuB,OAYnBC,EAAe,IAAIC,eAAa,CAAEL,kBAAmB,CAACvpE,KAE/Co2D,GAA4D,mBACtEyT,IAAeC,SAAWT,GAD4C,cAEtEQ,IAAeE,cAAgB/S,GAFuC,cAGtE6S,IAAeG,IAAML,GAHiD,GAM5DM,EAAa,SAAC5pE,GACzB,IAAMN,EAAU,IAAIiE,IAAO+7C,UAAUmqB,aAAa7pE,GAElD,OADAN,EAAQ2pE,gBAtBe,KAuBhB3pE,I,kDC5BHoqE,E,KAAOppE,EAAOqpE,KAAV,oUAqBKD,O,iCCtBf,2BAce5V,IARf,SAAwBhxC,GAAyC,IAAD,IACxDoT,EAAW9W,YAAgB,OAAC0D,QAAD,IAACA,OAAD,EAACA,EAAOlQ,SAAS,GAE5CmhD,EAAsB,UAAGnmC,YAAoBsI,EAAU,sBAAjC,iBAAG,EAA8ChP,cAAjD,aAAG,EAAuD,GAEtF,OAAOpE,GAASixC,EAAc,IAAIzsC,IAAYxE,EAAOixC,EAAYn1D,iBAAcrC,I,+l3BCH3E2tD,EAAkBzuC,cAEXivC,EAAO,uCAAG,WAAOZ,GAAP,yBAAA7sD,EAAA,+EAE2DitD,EAAgB0f,eAAe9f,GAF1F,uBAER+f,EAFQ,EAEX,GAAgBC,EAFL,EAEE,GAAmBjgB,EAFrB,EAEkB,GAAoBkgB,EAFtC,EAEmC,GAChDC,EAAiBtS,IAAU/8C,MAAK,SAACsvD,GAAD,OAAgBA,EAAWxvD,KAAOqvC,KAHrD,kBAKZrqB,IAAM,GAAIuqC,EAAgB,CAC/BD,aACAvjD,KAAMqjD,EACNh2C,MAAOi2C,EAAYtnE,WACnBynD,OAAQJ,EAAarnD,cATJ,2DAYZ,MAZY,0DAAH,sDAmBP0nE,EAAQ,uCAAG,sCAAAjtE,EAAA,sEAEdktE,EAAYzS,IAAUvlD,QAAO,SAACC,EAAOu4C,GACzC,OAAO,2BACFv4C,GADL,kBAEGu4C,EAAKlwC,GAAKkwC,MAEZ,IAPiB,SAQET,EAAgBkgB,cARlB,OAWpB,IAHMC,EARc,OAUdtkD,EAAQ,GACLc,EAAI,EAAGA,GAAKwjD,EAASxjD,IAC5Bd,EAAMuU,KAAK,CACT1nB,QAASK,cACTuT,KAAM,iBACNC,OAAQ,CAACI,KAfO,gBAkBGE,YAAYrL,EAAYqK,GAlB3B,cAkBdukD,EAlBc,OAoBdC,EAAkBD,EAASn4D,QAAO,SAACC,EAAOu4C,EAAMx2B,GACpD,IAAW01C,EAA6Dlf,EAAhE,GAAgBmf,EAAgDnf,EAAnD,GAAmBd,EAAgCc,EAAnC,GAAoBof,EAAepf,EAAlB,GAEtD,OAAO,2BACFv4C,GADL,kBAEG+hB,EAAQ,EAAI,CACX3N,KAAMqjD,EACNh2C,MAAOi2C,EAAYtnE,WACnBynD,OAAQJ,EAAarnD,WACrBunE,kBAGH,IAhCiB,kBAkCbtqC,IAAM,GAAI0qC,EAAWI,IAlCR,2DAoCb,MApCa,0DAAH,sD,6BC9BrB,YAGM96B,EAAgB,CACpB,CACEh1B,GAAI,EACJ+L,KAAM,cACNsT,YAAa,gFACbgxB,OAAQ,CACN+S,GAAI,qBACJ2M,GAAI,qBACJloB,GAAI,qBACJl3B,IAAK,sBACLq/C,KAAK,GAAD,OAAK3zD,IAAL,oEAEN8wC,WAAY,qBACZ8iB,UAAW,UACX72C,MAAO,EACPo2B,OAAQ,GAEV,CACExvC,GAAI,EACJ+L,KAAM,oBACNsT,YAAa,yFACbgxB,OAAQ,CACN+S,GAAI,2BACJ2M,GAAI,2BACJloB,GAAI,2BACJl3B,IAAK,4BACLq/C,KAAK,GAAD,OAAK3zD,IAAL,0EAEN8wC,WAAY,2BACZ8iB,UAAW,UACX72C,MAAO,EACPo2B,OAAQ,GAEV,CACExvC,GAAI,EACJ+L,KAAM,iBACNsT,YAAa,sFACbgxB,OAAQ,CACN+S,GAAI,wBACJ2M,GAAI,wBACJloB,GAAI,wBACJl3B,IAAK,yBACLq/C,KAAK,GAAD,OAAK3zD,IAAL,uEAEN8wC,WAAY,wBACZ8iB,UAAW,UACX72C,MAAO,EACPo2B,OAAQ,IAIGxa,O,6BCtDf,qEAOe,SAAS9jB,IACtB,IAAQpsB,EAAYH,cAAZG,QACForE,EAAsBlqD,aAAkD,qBAAGC,KAAQxO,UAEzF,OAAOuM,mBAAQ,WAAO,IAAD,EACnB,OAAKlf,EACElB,OAAOuuB,OAAP,iBAAc+9C,QAAd,IAAcA,OAAd,EAAcA,EAAsBprE,UAApC,QAA2D,IAAI+kB,IAAIS,KADrD,KAEpB,CAAC4lD,EAAqBprE,M,8GCsRZqrE,EAjSK,CAClB,CACEpkD,KAAM,SACNsT,YAAa,6BACbgxB,OAAQ,CACN+S,GAAI,gBACJ2M,GAAI,gBACJloB,GAAI,gBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,+DAEN+zD,MAAO,CACLC,KAAK,GAAD,OAAKh0D,IAAL,+DACJi0D,IAAI,GAAD,OAAKj0D,IAAL,+DAEL4kB,WAAY,SACZjhB,GAAI,IAEN,CACE+L,KAAM,QACNsT,YAAa,iCACbgxB,OAAQ,CACN+S,GAAI,eACJ2M,GAAI,eACJloB,GAAI,eACJmoB,KAAK,GAAD,OAAK3zD,IAAL,8DAEN+zD,MAAO,CACLC,KAAK,GAAD,OAAKh0D,IAAL,8DACJi0D,IAAI,GAAD,OAAKj0D,IAAL,8DAEL4kB,WAAY,QACZjhB,GAAI,IAEN,CACE+L,KAAM,SACNsT,YAAa,oCACbgxB,OAAQ,CACN+S,GAAI,gBACJ2M,GAAI,gBACJloB,GAAI,gBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,+DAEN+zD,MAAO,CACLC,KAAK,GAAD,OAAKh0D,IAAL,+DACJi0D,IAAI,GAAD,OAAKj0D,IAAL,+DAEL4kB,WAAY,SACZjhB,GAAI,IAEN,CACE+L,KAAM,SACNsT,YAAa,mEACbgxB,OAAQ,CACN+S,GAAI,gBACJ2M,GAAI,gBACJloB,GAAI,gBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,+DAEN4kB,WAAY,SACZjhB,GAAI,IAEN,CACE+L,KAAM,aACNsT,YAAa,mDACbgxB,OAAQ,CACN+S,GAAI,cACJ2M,GAAI,cACJloB,GAAI,cACJmoB,KAAK,GAAD,OAAK3zD,IAAL,mEAEN+zD,MAAO,CACLC,KAAK,GAAD,OAAKh0D,IAAL,mEACJi0D,IAAI,GAAD,OAAKj0D,IAAL,mEAEL4kB,WAAY,aACZjhB,GAAI,IAEN,CACE+L,KAAM,4BACNsT,YAAa,kEACbgxB,OAAQ,CACN+S,GAAI,+BACJ2M,GAAI,+BACJloB,GAAI,+BACJmoB,KAAK,GAAD,OAAK3zD,IAAL,+EAEN+zD,MAAO,CACLC,KAAK,GAAD,OAAKh0D,IAAL,8EACJi0D,IAAI,GAAD,OAAKj0D,IAAL,8EAEL4kB,WAAY,wBACZjhB,GAAI,IAEN,CACE+L,KAAM,sBACNsT,YAAa,0CACbgxB,OAAQ,CACN+S,GAAI,4BACJ2M,GAAI,4BACJloB,GAAI,4BACJmoB,KAAK,GAAD,OAAK3zD,IAAL,qEAEN4kB,WAAY,eACZjhB,GAAI,IAEN,CACE+L,KAAM,qBACNsT,YAAa,8CACbgxB,OAAQ,CACN+S,GAAI,2BACJ2M,GAAI,2BACJloB,GAAI,2BACJmoB,KAAK,GAAD,OAAK3zD,IAAL,uEAEN4kB,WAAY,iBACZjhB,GAAI,IAEN,CACE+L,KAAM,oBACNsT,YAAa,kDACbgxB,OAAQ,CACN+S,GAAI,0BACJ2M,GAAI,0BACJloB,GAAI,0BACJmoB,KAAK,GAAD,OAAK3zD,IAAL,qEAEN4kB,WAAY,eACZjhB,GAAI,IAEN,CACE+L,KAAM,UACNsT,YAAa,+EACbgxB,OAAQ,CACN+S,GAAI,iBACJ2M,GAAI,iBACJloB,GAAI,iBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,gEAEN+zD,MAAO,CACLC,KAAK,GAAD,OAAKh0D,IAAL,gEACJi0D,IAAI,GAAD,OAAKj0D,IAAL,gEAEL4kB,WAAY,UACZjhB,GAAI,IAEN,CACE+L,KAAM,SACNsT,YAAa,sEACbgxB,OAAQ,CACN+S,GAAI,gBACJ2M,GAAI,gBACJloB,GAAI,gBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,+DAEN4kB,WAAY,SACZjhB,GAAI,IAEN,CACE+L,KAAM,SACNsT,YAAa,uEACbgxB,OAAQ,CACN+S,GAAI,gBACJ2M,GAAI,gBACJloB,GAAI,gBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,8DACJk0D,KAAM,mBAERtvC,WAAY,SACZjhB,GAAI,GAEN,CACE+L,KAAM,QACNsT,YAAa,kEACbgxB,OAAQ,CACN+S,GAAI,eACJ2M,GAAI,eACJloB,GAAI,eACJmoB,KAAK,GAAD,OAAK3zD,IAAL,6DACJk0D,KAAM,kBAERtvC,WAAY,QACZjhB,GAAI,GAEN,CACE+L,KAAM,SACNsT,YAAa,yEACbgxB,OAAQ,CACN+S,GAAI,gBACJ2M,GAAI,gBACJloB,GAAI,gBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,8DACJk0D,KAAM,mBAERtvC,WAAY,SACZjhB,GAAI,GAEN,CACE+L,KAAM,SACNsT,YAAa,8DACbgxB,OAAQ,CACN+S,GAAI,gBACJ2M,GAAI,gBACJloB,GAAI,gBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,8DACJk0D,KAAM,mBAERtvC,WAAY,SACZjhB,GAAI,GAEN,CACE+L,KAAM,UACNsT,YAAa,yEACbgxB,OAAQ,CACN+S,GAAI,iBACJ2M,GAAI,iBACJloB,GAAI,iBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,+DACJk0D,KAAM,oBAERtvC,WAAY,UACZjhB,GAAI,GAEN,CACE+L,KAAM,WACNsT,YAAa,6EACbgxB,OAAQ,CACN+S,GAAI,kBACJ2M,GAAI,kBACJloB,GAAI,kBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,gEACJk0D,KAAM,qBAERtvC,WAAY,WACZjhB,GAAI,GAEN,CACE+L,KAAM,UACNsT,YAAa,oFACbgxB,OAAQ,CACN+S,GAAI,iBACJ2M,GAAI,iBACJloB,GAAI,iBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,+DACJk0D,KAAM,oBAERtvC,WAAY,UACZjhB,GAAI,GAEN,CACE+L,KAAM,cACNsT,YAAa,oFACbgxB,OAAQ,CACN+S,GAAI,qBACJ2M,GAAI,qBACJloB,GAAI,qBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,mEACJk0D,KAAM,wBAERtvC,WAAY,cACZjhB,GAAI,GAEN,CACE+L,KAAM,WACNsT,YAAa,mFACbgxB,OAAQ,CACN+S,GAAI,kBACJ2M,GAAI,kBACJloB,GAAI,kBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,gEACJk0D,KAAM,qBAERtvC,WAAY,WACZjhB,GAAI,GAEN,CACE+L,KAAM,UACNsT,YAAa,6FACbgxB,OAAQ,CACN+S,GAAI,iBACJ2M,GAAI,iBACJloB,GAAI,iBACJmoB,KAAK,GAAD,OAAK3zD,IAAL,+DACJk0D,KAAM,oBAERtvC,WAAY,UACZjhB,GAAI,I,SCzROwwD,G,OAJC,eACbjT,IAAcC,QAAUiT,I,gBCMdC,EAAc,SAACC,GAC1B,OAAIA,EAAShN,WAAW,WAChB,GAAN,OAAUtnD,IAAV,YAA0Bs0D,EAASnoC,MAAM,IAGpCmoC,GAOIC,EAAkB,uCAAG,WAAOC,GAAP,qBAAAruE,EAAA,oEAExBsuE,EAAe5tE,aAAau3D,QAAQoW,IAFZ,uBAKtBrtE,EAAO65B,KAAKM,MAAMmzC,GALI,kBAMrBttE,GANqB,uBASA0/B,MAAM2tC,GATN,WASxBE,EATwB,QAWTztC,GAXS,uBAYtB,IAAI5+B,MAAM,2BAZY,yBAeRqsE,EAAgBvtC,OAfR,eAexBwtC,EAfwB,OAgB9B9tE,aAAaC,QAAQ0tE,EAAUxzC,KAAKC,UAAU0zC,IAhBhB,kBAiBvBA,GAjBuB,yCAmB9BtsD,QAAQD,MAAR,MAnB8B,kBAoBvB,MApBuB,0DAAH,sDAwBlBwsD,EAAe,uCAAG,WAAO3hB,EAAoBxuB,GAA3B,mBAAAt+B,EAAA,sEAErBi5B,EAAWhc,YAAkB6vC,GAFR,SAGJ7zB,EAASy1C,SAASpwC,GAHd,cAGrB6vC,EAHqB,gBAILC,EAAmBF,EAAYC,IAJ1B,UAIrBK,EAJqB,iDAOlB,MAPkB,iCAUpBA,GAVoB,yCAY3BtsD,QAAQD,MAAM,kBAAd,MAZ2B,kBAapB,MAboB,0DAAH,wDAiBfsc,EAAe,uCAAG,WAAOuuB,EAAoBxuB,GAA3B,eAAAt+B,EAAA,sEACPyuE,EAAgB3hB,EAAYxuB,GADrB,UACvBkwC,EADuB,gDAMpB,MANoB,gCAStBR,EAAKW,QAAQjxD,MAAK,SAAC6vC,GACxB,OAAOihB,EAAQpU,MAAMjrC,SAASo+B,EAAI9uB,gBAVP,2CAAH,yD,uFCtDbkiC,IANuB,SAAC,GAAD,IAAGnhE,EAAH,EAAGA,SAAawhB,EAAhB,wBACpC,cAAC,IAAD,yBAAK4tD,GAAI,CAAC,OAAQ,QAASh7D,GAAG,OAAOi7D,SAAS,UAAa7tD,GAA3D,aACGxhB,O,qGCAC8tB,EAAUjqB,IAAOU,IAAV,yOAQT,qBAAGy9C,MAAkB4D,aAAamoB,MAMhCuB,EAAgBzrE,YAAOw/D,IAAPx/D,CAAH,qOAEP,qBAAGm+C,MAAkBkJ,OAAOwd,cAoDzB6G,EArCA,WACb,IAAQjtE,EAAMC,cAAND,EACR,OACE,eAACwrB,EAAD,WACE,cAAC,IAAD,CAAM40C,cAAe,CAAC,SAAU,SAAU,OAAQiB,WAAW,SAA7D,SACE,cAAC,KAAD,CACElc,KAAK,IACL+U,GAAI,CAAC,EAAG,EAAG,QACXF,GAAI,CAAC,OAAQ,OAAQ,GACrByG,GAAI,CAAC,MAAO,MAAO,GAJrB,SAMGzgE,EAAE,0BAGP,cAAC,IAAD,CACEktE,SAAU,EACV7L,WAAW,SACX5/D,MAAO,CAAC,OAAQ,OAAQ,OAAQ,QAChC84D,eAAgB,CAAC,SAAU,SAAU,SAAU,YAJjD,SAME,cAACyS,EAAD,UACE,cAAC,IAAD,CACEtxD,GAAG,oBACHupC,GAAG,IACHC,UAAQ,EACRC,KAAK,IACLZ,QAAQ,SALV,SAOGvkD,EAAE,4B,gBC1DTmtE,EAAY5rE,IAAO6rE,IAAV,oDAmCAC,EAjBH,WACV,IAfsBrO,EAehBsO,EAAW3Z,cACT3zD,EAAMC,cAAND,EACR,OACE,cAACmtE,EAAD,UACE,eAAC,IAAD,CAAYI,aAnBMvO,EAmBsBsO,EAAStO,SAjBnDA,EAAS3xC,SAAS,UAClB2xC,EAAS3xC,SAAS,YAClB2xC,EAAS3xC,SAAS,SAClB2xC,EAAS3xC,SAAS,YAClB2xC,EAAS3xC,SAAS,UAClB2xC,EAAS3xC,SAAS,cAEX,EAEF,GAQyDqzC,MAAM,KAAKnc,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgB7oC,GAAG,gBAAgBw2C,GAAG,QAAQjN,GAAIsc,IAAlD,SACGvhE,EAAE,UAEL,cAAC,IAAD,CAAgB0b,GAAG,gBAAgBw2C,GAAG,QAAQjN,GAAIsc,IAAlD,SACGvhE,EAAE,qB,wBC3BP4+D,EAAar9D,IAAOU,IAAV,qYAQA,qBAAGy9C,MAAkBkJ,OAAO4kB,UAAUC,aAElD,qBAAG/tB,MAAkB4D,aAAaoqB,MAIlC,qBAAGhuB,MAAkB4D,aAAaC,MAKlC,qBAAG7D,MAAkB4D,aAAawb,MAoBvBY,IAd8C,SAAC,GAA4B,IAA1BhiE,EAAyB,EAAzBA,SAAawhB,EAAY,iBACvF,OACE,qCACE,cAAC,IAAD,IACA,eAAC0/C,EAAD,2BAAgB1/C,GAAhB,cACE,cAACyuD,EAAD,IACCjwE,EACD,cAAC,IAAD,CAAMwvE,SAAU,IAChB,cAAC,EAAD,a,qECtBOzX,IAXQ,WACrB,MAA2C93D,mBAAS2sC,KAAKoB,OAAzD,mBAAOgqB,EAAP,KAAoBkY,EAApB,KAOA,MAAO,CAAElY,cAAamY,oBANMC,YAAiBpY,GAMFC,eAJpB32D,uBAAY,WACjC4uE,EAAoBtjC,KAAKoB,SACxB,CAACkiC,O,6BCbN,WAiBeE,IAVU,SAAC/tE,GACxB,IAAMy9C,EAAM78C,mBAMZ,OAJA1C,qBAAU,WACRu/C,EAAIz8C,QAAUhB,IACb,CAACA,IAEGy9C,EAAIz8C,U,6BCdb,aAGMgtE,EAAUC,cAEDD,O,+BCLf,4BAKME,EAAiB,IAAIpoE,IAAMJ,IAAQD,QAAS2qC,IAAM,GAAG8Q,YAAYx7C,IAAQD,SAAU,GAAI2qC,IAAM,GAAG+Q,UAEhGgtB,EAAc,CAClB,CACExyD,GAAI,SACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,gBACN0mD,UAAW,CACTC,WAAY,eACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,IAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOvM,KACd6nE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,0FACZC,mBAAoB,EACpBzgC,QAAS,GAEX,CACEzyB,GAAI,WACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,uBACN0mD,UAAW,CACTC,WAAY,sBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,sBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOtM,SACd4nE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,iGACZC,mBAAoB,IACpBzgC,QAAS,GAEX,CACEzyB,GAAI,UACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,yBACN0mD,UAAW,CACTC,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOhE,IACds/D,mBAAoB,QACpBC,WAAY,YACZC,WAAY,mGACZC,mBAAoB,IACpBzgC,QAAS,GAEX,CACEzyB,GAAI,OACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,cACN+mD,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,GAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOrM,KACd2nE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpBzgC,QAAS,GAEX,CACEzyB,GAAI,QACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,qBACN+mD,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOpM,MACd0nE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,+FACZC,mBAAoB,KACpBzgC,QAAS,GAEX,CACEzyB,GAAI,QACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,cACN+mD,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOnM,IACdynE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpBzgC,QAAS,GAEX,CACEzyB,GAAI,UACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,kBACN+mD,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOlM,MACdwnE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpBzgC,QAAS,GAEX,CACEzyB,GAAI,SACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,yBACN+mD,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOjM,OACdunE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,sGACZC,mBAAoB,KACpBzgC,QAAS,GAEX,CACEzyB,GAAI,QACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,cACN+mD,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAOhM,IACdsnE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpBzgC,QAAS,GAEX,CACEzyB,GAAI,QACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,gBACN+mD,cAAe,CACbJ,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAO/L,MACdqnE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,gGACZC,mBAAoB,KACpBzgC,QAAS,GAEX,CACEzyB,GAAI,QACJ7H,QAAS,6CACTo3C,UAAU,EACVxjC,KAAM,cACN+mD,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBr3D,SAAU+2D,EACVlqD,MAAO5Q,IAAO9L,MACdonE,mBAAoB,QACpBC,WAAY,YACZC,WAAY,oFACZC,mBAAoB,KACpBzgC,QAAS,IAIE+/B,O,iFC3OTW,EAA6B,oBAAqBC,SAExD,SAASxpB,IACP,OAAKupB,GAI+B,YAA7BC,SAASC,gBAMH,SAASxpB,IACtB,MAAkC5nD,mBAAS2nD,KAA3C,mBAAO0pB,EAAP,KAAkBC,EAAlB,KAeA,OAbAhxE,qBAAU,WACR,GAAK4wE,EAAL,CAEA,IAAMK,EAAyB,WAC7BD,EAAa3pB,MAIf,OADAwpB,SAASK,iBAAiB,mBAAoBD,GACvC,WACLJ,SAASM,oBAAoB,mBAAoBF,OAElD,CAACD,IAEGD,I,oGCxBM,SAASK,IACtB,IAAM1rB,EAAMjiC,aAA8B,SAAC3jB,GAAD,OAAWA,EAAM4jB,KAAKiC,gBAC1D0rD,ECJO,WAA4D,IAAD,IAClEvoD,EAAY3F,cAClB,iBAAOyN,YAAoB9H,EAAW,mCAAtC,iBAAO,EAA4DoB,cAAnE,aAAO,EAAqE,GDErDonD,GACvB,OAAO7vD,mBAAQ,WACb,GAAI4vD,GAAkB3rB,EAAK,OAAO2rB,EAAe/5D,IAAIouC,KAEpD,CAAC2rB,EAAgB3rB,M,wszBECT6rB,EAAoB,SAAC/0B,GAChC,MAAO,CACLvI,UAAWuI,EAAW,IAAIh4C,IAAUg4C,EAASvI,WAAa1vC,IAC1Dq5C,oBAAqBpB,EAAW,IAAIh4C,IAAUg4C,EAASoB,qBAAuBr5C,IAC9Es5C,cAAerB,EAAW,IAAIh4C,IAAUg4C,EAASqB,eAAiBt5C,IAClE22C,cAAesB,EAAW,IAAIh4C,IAAUg4C,EAAStB,eAAiB32C,MAIzDitE,EAAgB,SAAC5zD,GAC5B,IAAQ+5B,EAA6E/5B,EAA7E+5B,YAAa2B,EAAgE17B,EAAhE07B,aAAckD,EAAkD5+B,EAAlD4+B,SAAU7D,EAAwC/6B,EAAxC+6B,aAAc2E,EAA0B1/B,EAA1B0/B,aAAiB2mB,EAA5E,YAAqFrmD,EAArF,GAEA,OAAO,2BACFqmD,GADL,IAEEtrB,aAAc5wB,YAAiB4wB,GAC/B2E,aAAcv1B,YAAiBu1B,GAC/Bd,SAAU+0B,EAAkB/0B,GAC5B7E,YAAa,IAAInzC,IAAUmzC,GAC3B2B,aAAc,IAAI90C,IAAU80C,MAInBuD,EAAyB,SAAC3K,GACrC,OAAOA,EAAM/8B,QAAO,SAACynC,EAAQgG,GAC3B,IAAM6uB,EAAoB7uB,EAAKY,WAAW5tC,QAAQ87D,oBAC5CrvD,EAAeugC,EAAK98B,MAAMlQ,QAAQ87D,oBASxC,OAPK90B,EAAO60B,KACV70B,EAAO60B,GAAqB,IAAIjtE,IAAUo+C,EAAKU,qBAAqB99C,YAEjEo3C,EAAOv6B,KACVu6B,EAAOv6B,GAAgB,IAAI7d,IAAUo+C,EAAKW,gBAAgB/9C,YAGrDo3C,IACN,M,8BCjDL,iEAIA,IAAMqL,EAAkB,IAAI9+B,IAAU7G,GAEN,IAAI6G,IAAUpG,GAE/BklC,O,6BCRf,0EAeA,IAAM0pB,EAAgB,IAAIC,YAMX,SAAS7L,EAAiBe,GACvC,IAAM+K,EAlBR,SAAyBC,GAGvB,IADAA,EAAMA,EAAI1Q,WAAW,MAAQ0Q,EAAIrX,OAAO,GAAKqX,GACrC1hD,OAAS,IAAM,EAAG,MAAM,IAAIjuB,MAAM,8CAE1C,IADA,IAAM4vE,EAAM,IAAIC,WAAWF,EAAI1hD,OAAS,GAC/BvG,EAAI,EAAGA,EAAIkoD,EAAI3hD,OAAQvG,IAC9BkoD,EAAIloD,GAAK9mB,SAAS+uE,EAAIrX,OAAW,EAAJ5wC,EAAO,GAAI,IAE1C,OAAOkoD,EAUME,CAAgBnL,GACvBoL,EAAQC,mBAASN,GACvB,OAAQK,GACN,IAAK,UACH,IAAMjxE,EAAOmxE,mBAASP,GAChBQ,EAAM,IAAIC,IAAIrxE,GACpB,MAAM,UAAN,OAAiBsxE,sBAAYF,EAAIG,YAEnC,IAAK,UACH,IAAMvxE,EAAOmxE,mBAASP,GAChBQ,EAAM,IAAIC,IAAIrxE,GACduxE,EAAYC,iBAAOJ,EAAIG,WAC7B,MAAuB,aAAnBA,EAAUhpD,KACN,UAAN,OAAiBmoD,EAAcc,OAAOD,EAAUE,QAAQhH,QAEpD,UAAN,OAAiB6G,sBAAYF,EAAIG,YAEnC,QACE,MAAM,IAAIrwE,MAAJ,8BAAiC+vE,O,8JCnCvClc,EAAiBsS,IAAMhpE,cAAc,CAAE22D,KAAM,EAAGr8B,KAAM,IAsBtD+4C,EAAyB,SAAC,GAAkB,IAAhBlzE,EAAe,EAAfA,SAChC,EAAwBC,mBAAS,GAAjC,mBAAOu2D,EAAP,KAAa2c,EAAb,KACA,EAAwBlzE,mBAAS,GAAjC,mBAAOk6B,EAAP,KAAai5C,EAAb,KACMC,EAtBsB,WAC5B,IAAMA,EAAwBpwE,kBAAO,GAcrC,OAZA1C,qBAAU,WACR,IAAM+yE,EAAqB,WACzBD,EAAsBhwE,SAAW+tE,SAASmC,QAK5C,OAFAjtB,OAAOmrB,iBAAiB,mBAAoB6B,GAErC,WACLhtB,OAAOorB,oBAAoB,mBAAoB4B,MAEhD,IAEID,EAOuBG,GAoB9B,OAlBAjzE,qBAAU,WACR,IAAMkzE,EAAW3rB,YAAW,sBAAC,sBAAAtnD,EAAA,sDACvB6yE,EAAsBhwE,SACxB+vE,GAAQ,SAACjc,GAAD,OAAUA,EAAO,KAFA,2CA/BX,KAoClB,OAAO,kBAAMnP,cAAcyrB,MAC1B,CAACJ,IAEJ9yE,qBAAU,WACR,IAAMkzE,EAAW3rB,YAAW,sBAAC,sBAAAtnD,EAAA,sDACvB6yE,EAAsBhwE,SACxB8vE,GAAQ,SAAChc,GAAD,OAAUA,EAAO,KAFA,2CAvCX,KA4ClB,OAAO,kBAAMnP,cAAcyrB,MAC1B,CAACJ,IAEG,cAAC9c,EAAen0D,SAAhB,CAAyBC,MAAO,CAAEm0D,OAAMr8B,QAAxC,SAAiDn6B,M,6KClCpD0zE,EAAgB7vE,IAAOU,IAAV,6NAMR,qBAAGy9C,MAAkBkJ,OAAO3L,QACjB,qBAAGyC,MAAkBkJ,OAAOyoB,oBAI5CC,EAAoC,SAAC,GAA+B,IAA7B7qB,EAA4B,EAA5BA,WAAYmT,EAAgB,EAAhBA,UAC/Cp5D,EAAYH,cAAZG,QACF2S,EACJ3S,GAAWimD,EACPA,EAAWlhC,KAAI,SAACrO,GACd,OAAOkR,YAAgBlR,EAAU1W,MAEnC,GAEA49D,EAAkD9wC,cAExD,OACE,cAAC,KAAD,CAAOuN,MAAM,qBAAqBkyC,SAAS,QAAQnT,UAAWA,EAA9D,SACE,eAAC,IAAD,CAAY13D,IAAI,KAAhB,UACGiR,EAAOoS,KAAI,SAACxB,GAAW,IAAD,EACrB,OACEA,GACAq6C,GACA9+D,OAAOC,KAAK6+D,GAAmB/wC,SAAStJ,EAAMlQ,UAC5C,eAAC,IAAD,CAAyD3R,IAAI,OAA7D,UACE,eAAC,IAAD,CAASA,IAAI,MAAMR,MAAM,SAAzB,UACE,cAAC,IAAD,CAAcwV,SAAU6M,EAAO8H,KAAK,SACpC,cAAC,KAAD,UAAO9H,EAAMiL,YAEdxuB,GACC,cAAC,KAAD,CAAM0kD,UAAQ,EAACuU,OAAK,EAAC56C,MAAM,cAAcsmC,KAAMjwC,YAAe6O,EAAMlQ,QAAS,UAAWrT,GAAxF,SACGujB,EAAMlQ,YAPb,UAAiBkQ,EAAMlQ,eAAvB,aAAiB,EAAeqS,OAAO,qBAc7C,cAAC,IAAD,CAAYhkB,IAAI,KAAhB,SACE,cAAC,KAAD,uLAUK,SAASqvE,EAAT,GAA8F,IAAzD9qB,EAAwD,EAAxDA,WAClD,EAAyBma,aAAS,cAAC0Q,EAAD,CAAkB7qB,WAAYA,KAAzD+qB,EAAP,oBAEA,OACE,cAACJ,EAAD,UACE,cAAC,IAAD,CAAQ7sB,QAAQ,OAAOtlC,QAASuyD,EAAhC,oD,6FCzEAC,EAA6C,GA+BpCvlD,IAtBmB,SAAC,GAA4B,IAA1BI,EAAyB,EAAzBA,KAAMD,EAAmB,EAAnBA,IAAQ61C,EAAW,iBAC5D,EAAoBvkE,mBAAiB,GAA5Bk4D,EAAT,oBAEM6b,EAA0BplD,EAAK1Q,MAAK,SAACmzB,GAAD,OAAQ0iC,EAAS1iC,MAE3D,OAAI2iC,EAEA,+CACMxP,GADN,IAEE71C,IAAKA,EACLqlD,IAAKA,EACLC,QAAS,WACHD,IAAKD,EAASC,IAAO,GACzB7b,GAAQ,SAAC/tC,GAAD,OAAOA,EAAI,SAMpB,cAAC,IAAD,eAAco6C,M,8HC6ER0P,IA3Ff,YAAqE,IAA9Cz+D,EAA6C,EAA7CA,OAAQ0+D,EAAqC,EAArCA,qBACrBrxE,EAAYH,cAAZG,QAEAR,EAAMC,cAAND,EAER,EAAkCrC,oBAAS,GAA3C,mBAAO4iE,EAAP,KAAkBuR,EAAlB,KAEMC,EAAWjuD,cAGXkuD,EAAoB7kD,cAE1B,OACE,eAAC,IAAD,CAAYjrB,IAAI,KAAhB,UACE,cAAC,KAAD,CAASqiD,QAAQ,UAAjB,SACE,eAAC,KAAD,WACGvkD,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAINmT,EAAOoS,KAAI,SAACxB,GAAW,IAAD,IACfwwB,EAAO/zC,IAAO,OAAIwxE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoBxxE,UAAxB,iBAAI,EAA+BujB,EAAMlQ,gBAAzC,aAAI,EAA+C0gC,MACjE1gC,EAAUkQ,EAAMlQ,QAAN,UAAmBuxC,YAAarhC,EAAMlQ,UAAa,KACnE,OACE,eAAC,IAAD,CAA0Bo+D,iBAAiB,cAAcC,QAAQ,MAAjE,eACY10E,IAAT+2C,EACC,eAAC,KAAD,CACEgQ,QAAQ,UACR4tB,SAAO,EACPzR,MAAM,KACN0R,UAAW79B,EAAKnoB,SAAW,cAAC,IAAD,CAAUA,QAASmoB,EAAKnoB,QAASP,KAAK,SAJnE,UAMG7rB,EAAE,OANL,IAMcu0C,EAAK9sB,QAGnB,cAAC,KAAD,CAAK88B,QAAQ,UAAU4tB,SAAO,EAACzR,MAAM,KAAK0R,UAAW,cAAC,IAAD,CAAWvzD,MAAM,YAAtE,SACG7e,EAAE,oBAGP,eAAC,IAAD,CAAMqhE,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMC,GAAG,MAAT,SAAgBv9C,EAAM0D,OACtB,eAAC,KAAD,eAAQ1D,EAAMiL,OAAd,UAEDxuB,GACC,eAAC,IAAD,CAAM+5D,eAAe,gBAAgB94D,MAAM,OAA3C,UACE,cAAC,KAAD,CAAM6/D,GAAG,MAAT,SAAgBztD,IAChB,eAAC,KAAD,CAAMsxC,KAAMjwC,YAAe6O,EAAMlQ,QAAS,UAAWrT,GAAU0kD,UAAQ,EAAvE,cACIllD,EAAE,mBADN,YAtBK+jB,EAAMlQ,YA+BrB,eAAC,IAAD,CAAM0mD,eAAe,gBAAgB8G,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAASpiD,QAAS,kBAAM6yD,GAAcvR,IAAvD,UACE,cAAC,IAAD,CACEG,MAAM,KACNj5C,KAAK,YACLtS,KAAK,WACLk9D,QAAS9R,EACTkG,SAAU,kBAAMqL,GAAcvR,MAEhC,cAAC,KAAD,CAAMrG,GAAG,MAAMnuC,MAAO,CAAEumD,WAAY,QAApC,SACGtyE,EAAE,qBAGP,cAAC,IAAD,CACEukD,QAAQ,SACRguB,UAAWhS,EACXthD,QAAS,WACP9L,EAAOoS,KAAI,SAACxB,GAAD,OAAWguD,EAAShuD,MAC3B8tD,GACFA,EAAqB1+D,EAAO,KAGhC21D,UAAU,wBATZ,SAWG9oE,EAAE,oB,6BCrGb,qDAOO,SAASwyE,EAAelqD,GAC7B,GAAKA,EACL,OAAIA,EAAepR,WAAaC,IAC1BxB,IAAK88D,YAAYnqD,EAAerS,IAAK+C,KAChCulC,IAAeC,MAAM7oC,IAAKgoC,SAASr1B,EAAerS,IAAK+C,MAEzDulC,IAAeC,MAAM7oC,IAAKC,OAAO,IAEnC0S,I,kCCTJoqD,EAMAC,E,+EANAD,K,4BAAAA,E,oBAAAA,E,uBAAAA,M,cAMAC,K,6BAAAA,M,KAIL,IAmKeC,EAnKM,WACnB,IAWIC,EAWAC,EAtBJ,EAA0DtwD,cAA1D,mBAAOC,EAAP,KAA8BswD,EAA9B,KACA,EAAsBpvD,cAAtB,mBAAOggC,EAAP,KAAYqvB,EAAZ,KACA,EAA0Cr1E,mBAAS,IAAnD,mBAAOs1E,EAAP,KAAsBC,EAAtB,KACA,EAA0Cv1E,mBAAS,IAAnD,mBAAOw1E,EAAP,KAAsBC,EAAtB,KAEQpzE,EAAMC,cAAND,EAEFqzE,EACc,KAAlBJ,IAAyBxwD,EAAwB,KAAK7e,QAAQ,KAAO8rB,OAAOO,WAAWgjD,GAAervE,QAAQ,GAC1G0vE,EAAyC,KAAlBH,IAAyBxvB,EAAM,IAAI9jD,aAAeszE,EAM7EN,EAHoB,KAAlBI,GAAyBI,EAElBA,GAAwB5wD,EAAwB,GACzCiwD,EAAca,SACrBF,GAAwB5wD,EAAwB,IACzCiwD,EAAcc,eAEdh2E,EANAk1E,EAAce,aAa9BX,EAHoB,KAAlBK,GAAyBG,OAGX91E,EAFAm1E,EAAcc,aAKhC,IAAMC,EAAsB,SAAC3zE,GAC3BmzE,EAAiBnzE,GAEjB,IACE,IAAM4zE,EAA6BjkD,OAAO1uB,UAAqC,IAA3B0uB,OAAOO,WAAWlwB,IAAcF,aAC/E6vB,OAAOC,MAAMgkD,IAA+BA,EAA6B,KAC5EZ,EAAyBY,GAE3B,MAAOxzD,GACPC,QAAQD,MAAMA,KAIZyzD,EAAsB,SAAC7zE,GAC3BqzE,EAAiBrzE,GAEjB,IACE,IAAM8zE,EAA8C,GAAzBnkD,OAAO1uB,SAASjB,IACtC2vB,OAAOC,MAAMkkD,IAAeA,EAAa,GAC5Cb,EAAOa,GAET,MAAO1zD,GACPC,QAAQD,MAAMA,KAIlB,OACE,eAAC,IAAD,CAAMigD,cAAc,SAApB,UACE,eAAC,IAAD,CAAMA,cAAc,SAASK,GAAG,OAAhC,UACE,eAAC,IAAD,CAAMA,GAAG,OAAT,UACE,cAAC,KAAD,UAAOzgE,EAAE,wBACT,cAACg9C,EAAA,EAAD,CACEC,KAAMj9C,EACJ,6HAEFk9C,UAAU,YACVgd,GAAG,WAGP,eAAC,IAAD,CAAM4Z,SAAS,OAAf,UACE,cAAC,IAAD,CACE9Z,GAAG,MACHsH,GAAG,MACHZ,MAAM,KACNzhD,QAAS,WACPi0D,EAAiB,IACjBH,EAAyB,KAE3BxuB,QAAmC,KAA1B9hC,EAA+B,UAAY,WARtD,kBAYA,cAAC,IAAD,CACEu3C,GAAG,MACHsH,GAAG,MACHZ,MAAM,KACNzhD,QAAS,WACPi0D,EAAiB,IACjBH,EAAyB,KAE3BxuB,QAAmC,KAA1B9hC,EAA+B,UAAY,WARtD,kBAYA,cAAC,IAAD,CACE6+C,GAAG,MACHtH,GAAG,MACH0G,MAAM,KACNzhD,QAAS,WACPi0D,EAAiB,IACjBH,EAAyB,MAE3BxuB,QAAmC,MAA1B9hC,EAAgC,UAAY,WARvD,kBAYA,eAAC,IAAD,CAAM4+C,WAAW,SAAjB,UACE,cAAC,IAAD,CAAK5/D,MAAM,OAAOu4D,GAAG,MAArB,SACE,cAAC,KAAD,CACE0G,MAAM,KACN8F,aAAc/jD,EAAwB,KAAK7e,QAAQ,GACnD7D,MAAOkzE,EACPc,OAAQ,WACNL,GAAqBjxD,EAAwB,KAAK7e,QAAQ,KAE5D6iE,SAAU,SAACuN,GAAD,OAAON,EAAoBM,EAAEpN,OAAO7mE,QAC9Ck0E,WAAYZ,EACZa,WAAY,CAAC,GAAI,GAAI,KAAK7mD,SAAS5K,OAGvC,cAAC,KAAD,CAAM5D,MAAM,UAAU26C,MAAI,EAACU,GAAG,MAA9B,uBAKD2Y,GACD,cAAC,KAAD,CAAMtZ,SAAS,OAAO16C,MAAOg0D,IAAkBH,EAAce,aAAe,MAAQ,UAAWzZ,GAAG,MAAlG,SACG6Y,IAAkBH,EAAce,aAC7BzzE,EAAE,qCACF6yE,IAAkBH,EAAca,SAChCvzE,EAAE,6BACFA,EAAE,yCAIZ,eAAC,IAAD,CAAMu6D,eAAe,gBAAgB8G,WAAW,SAASZ,GAAG,OAA5D,UACE,eAAC,IAAD,CAAMY,WAAW,SAAjB,UACE,cAAC,KAAD,UAAOrhE,EAAE,wBACT,cAACg9C,EAAA,EAAD,CACEC,KAAMj9C,EAAE,oFACRk9C,UAAU,YACVgd,GAAG,WAGP,cAAC,IAAD,UACE,cAAC,IAAD,CAAKz4D,MAAM,OAAOu4D,GAAG,MAArB,SACE,cAAC,KAAD,CACE0G,MAAM,KACN7hD,MAAOi0D,EAAgB,WAAQt1E,EAC/Bu2E,OAAQ,WACNH,GAAqBjwB,EAAM,IAAI9jD,aAEjC2mE,aAAc7iB,EAAM,IAAI9jD,WACxBE,MAAOozE,EACP1M,SAAU,SAACuN,GAAD,OAAOJ,EAAoBI,EAAEpN,OAAO7mE,qBClG7Co0E,EA9DiC,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,0BAA2BC,EAAuC,EAAvCA,iCAC5E,EAA6BtyD,cAApBuyD,EAAT,oBACA,EAAkD32E,oBAAS,GAA3D,mBAAO42E,EAAP,KAA0BC,EAA1B,KAEQx0E,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,CACE66B,MAAO76B,EAAE,eACTy0E,OAAQ,kBAAML,GAA0B,IACxCxa,UAAW,kBAAMwa,GAA0B,IAC3CtZ,iBAAiB,uBACjB/uC,MAAO,CAAEghD,SAAU,SALrB,UAOE,cAAC,KAAD,CAASxoB,QAAQ,UAAUkc,GAAG,OAA9B,SACE,cAAC,KAAD,UACGzgE,EACC,8IAIN,cAAC,KAAD,CAAMygE,GAAG,OAAT,SAAiBzgE,EAAE,4DACnB,eAAC,IAAD,CAAMqhE,WAAW,SAASZ,GAAG,OAA7B,UACE,cAAC,IAAD,CACEh5C,KAAK,YACLtS,KAAK,WACLk9D,QAASkC,EACT9N,SAAU,kBAAM+N,GAAsBD,IACtC7T,MAAM,OAER,cAAC,KAAD,CAAMxG,GAAG,OAAOr7C,MAAM,aAAakN,MAAO,CAAEumD,WAAY,QAAxD,SACGtyE,EAAE,mCAGP,cAAC,IAAD,CACEygE,GAAG,MACH/kD,GAAG,sBACHuD,QAAS,WAEwE,YAA3E+kC,OAAO0wB,OAAP,2DACFJ,IACAF,GAA0B,GACtBG,GACFF,GAAiC,KATzC,SAcGr0E,EAAE,yBAEL,cAAC,IAAD,CACEukD,QAAQ,YACRtlC,QAAS,WACPm1D,GAA0B,IAH9B,SAMGp0E,EAAE,gB,QCJI20E,EAvDK,WAClB,IAAQ30E,EAAMC,cAAND,EACR,EAAgCukB,cAAhC,mBAAOH,EAAP,KAAiBwwD,EAAjB,KAEA,OACE,eAAC,IAAD,CAAMxU,cAAc,SAApB,UACE,eAAC,IAAD,CAAMK,GAAG,OAAOY,WAAW,SAA3B,UACE,cAAC,KAAD,UAAOrhE,EAAE,sCACT,cAACg9C,EAAA,EAAD,CACEC,KAAMj9C,EACJ,0GAEFk9C,UAAU,YACVgd,GAAG,WAGP,eAAC,IAAD,CAAM4Z,SAAS,OAAf,UACE,cAAC,IAAD,CACE9Z,GAAG,MACHsH,GAAG,MACHZ,MAAM,KACNzhD,QAAS,WACP21D,EAAYvwD,IAAc,UAE5BkgC,QAASngC,IAAaC,IAAc,QAAW,UAAY,WAP7D,SASGrkB,EAAE,wBAAyB,CAAEokB,SAAUqT,IAAS,YAEnD,cAAC,IAAD,CACEuiC,GAAG,MACHsH,GAAG,MACHZ,MAAM,KACNzhD,QAAS,WACP21D,EAAYvwD,IAAewT,OAE7B0sB,QAASngC,IAAaC,IAAewT,KAAO,UAAY,WAP1D,SASG73B,EAAE,oBAAqB,CAAEokB,SAAUqT,IAAUI,SAEhD,cAAC,IAAD,CACEypC,GAAG,MACHtH,GAAG,MACH0G,MAAM,KACNzhD,QAAS,WACP21D,EAAYvwD,IAAeyT,UAE7BysB,QAASngC,IAAaC,IAAeyT,QAAU,UAAY,WAP7D,SASG93B,EAAE,uBAAwB,CAAEokB,SAAUqT,IAAUK,mBC6C5C+8C,EAlFqC,SAAC,GAAmB,IAAjBjb,EAAgB,EAAhBA,UACrD,EAA4Dj8D,oBAAS,GAArE,mBAAOm3E,EAAP,KAA+BV,EAA/B,KACA,EAA0E5wD,cAA1E,mBAAOuxD,EAAP,KAAsCV,EAAtC,KACA,EAAuCtyD,cAAvC,mBAAOC,EAAP,KAAmBsyD,EAAnB,KACA,EAA0CjyD,cAA1C,mBAAOs7C,EAAP,KAAsBqX,EAAtB,KACQ5jB,EAAsBJ,cAAtBI,kBAEApxD,EAAMC,cAAND,EACA0/C,EAAUD,cAAVC,MAER,GAAIo1B,EACF,OACE,cAAC,EAAD,CACEV,0BAA2BA,EAC3Bxa,UAAWA,EACXya,iCAAkCA,IAiBxC,OACE,cAAC,KAAD,CACEx5C,MAAO76B,EAAE,YACT86D,iBAAiB,uBACjBlB,UAAWA,EACX7tC,MAAO,CAAEghD,SAAU,QAASkI,UAAW,QAJzC,SAME,eAAC,IAAD,CAAM7U,cAAc,SAApB,UACE,eAAC,IAAD,CAAM8U,GAAG,OAAO9U,cAAc,SAA9B,UACE,cAAC,KAAD,CAAM5G,MAAI,EAAC2b,cAAc,YAAY5b,SAAS,OAAO16C,MAAM,YAAY4hD,GAAG,OAA1E,SACGzgE,EAAE,YAEL,cAAC,EAAD,OAEF,eAAC,IAAD,CAAMw6D,GAAG,OAAO4F,cAAc,SAASgV,UAAS,cAAS11B,EAAMkJ,OAAOK,WAAtB,UAAhD,UACE,cAAC,KAAD,CAAMuQ,MAAI,EAAC2b,cAAc,YAAY5b,SAAS,OAAO16C,MAAM,YAAY4hD,GAAG,OAA1E,SACGzgE,EAAE,uBAEL,cAACq1E,EAAD,OAEF,eAAC,IAAD,CAAM9a,eAAe,gBAAgB8G,WAAW,SAASZ,GAAG,OAA5D,UACE,eAAC,IAAD,CAAMY,WAAW,SAAjB,UACE,cAAC,KAAD,UAAOrhE,EAAE,iBACT,cAACg9C,EAAA,EAAD,CACEC,KAAMj9C,EAAE,uFACRk9C,UAAU,YACVgd,GAAG,WAGP,cAAC,KAAD,CAAQx+C,GAAG,4BAA4BglD,MAAM,KAAK2R,QAASrwD,EAAYykD,SAzChD,WACzBzkD,GACFovC,EAAkB,MAClBkjB,KACUS,EAIVX,GAA0B,IAH1BhjB,EAAkB,MAClBkjB,WAqCE,eAAC,IAAD,CAAM/Z,eAAe,gBAAgB8G,WAAW,SAASZ,GAAG,OAA5D,UACE,eAAC,IAAD,CAAMY,WAAW,SAAjB,UACE,cAAC,KAAD,UAAOrhE,EAAE,uBACT,cAACg9C,EAAA,EAAD,CAAgBC,KAAMj9C,EAAE,yCAA0Ck9C,UAAU,YAAYgd,GAAG,WAE7F,cAAC,KAAD,CACEx+C,GAAG,iCACH22D,QAAS1U,EACT+C,MAAM,KACN+F,SAAU,WACRuO,GAAkBrX,eC3EjB8D,IAZQ,WACrB,MAAiCb,aAAS,cAAC,EAAD,KAAnC0U,EAAP,oBAEA,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYr2D,QAASq2D,EAAwB/wB,QAAQ,OAAOmc,MAAM,KAAKY,GAAG,MAAM5lD,GAAG,8BAAnF,SACE,cAAC,IAAD,CAAS65D,OAAQ,GAAI9zE,MAAO,GAAIod,MAAM,qB,sICJ/B,SAAS0N,EAAiBksC,GACvC,IAAM+c,EAAM91D,mBAAQ,kBAAO+4C,EAAM0K,YAAgB1K,QAAOj7D,IAAY,CAACi7D,IAC/Dgd,ECCO,SAA2B5Z,GAA4E,IAAD,MAC7GV,EAAkBz7C,mBAAQ,WAC9B,IAAKm8C,EAAS,MAAO,MAACr+D,GACtB,IACE,OAAOq+D,EAAU,CAACT,mBAASS,IAAY,MAACr+D,GACxC,MAAO2iB,GACP,MAAO,MAAC3iB,MAET,CAACq+D,IACER,EAAoB16C,aAAwB,GAC5C46C,EAAwB1sC,YAAoBwsC,EAAmB,WAAYF,GAC3EG,EAAe,UAAGC,EAAsBpzC,cAAzB,aAAG,EAA+B,GACjDqzC,EAAmB36C,YACvBy6C,GAAmBrF,YAAOqF,QAAmB99D,EAAY89D,GACzD,GAEIyJ,EAAcl2C,YAAoB2sC,EAAkB,cAAeL,GAEzE,MAAO,CACL4J,YAAW,oBAAEA,EAAY58C,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxC+G,QAASqsC,EAAsBrsC,SAAW61C,EAAY71C,SDrB5BwmD,CAAiB,OAACF,QAAD,IAACA,OAAD,EAACA,EAAK3Z,SACnD,OAAOn8C,mBAAQ,WACb,OAAI81D,EACKC,EAAoB1Q,YAAcvM,YAAUwL,YAAiByR,EAAoB1Q,cAAgB,GAEnGtM,EAAMD,YAAUC,GAAO,KAC7B,CAAC+c,EAAKC,EAAoB1Q,YAAatM,M,sDEd5C,wEAEYv3D,EAFZ,S,SAEYA,K,sCAAAA,E,sBAAAA,E,wBAAAA,E,yBAAAA,M,KAOL,IAAMC,EAAYC,YAAmD,uB,+sICItEu0E,EAAOhgE,IAAKC,OAAO,GAElB,SAASggE,IACd,OAAOl0D,aAAwC,SAAC3jB,GAAD,OAAWA,EAAMozC,Q,sDCkDnD0kC,MA1Df,YAcI,IAAD,gBAbD1oC,EAaC,EAbDA,YACAiS,EAYC,EAZDA,MACAqH,EAWC,EAXDA,WACAqvB,EAUC,EAVDA,cACAC,EASC,EATDA,oBACAC,EAQC,EARDA,MASQh2E,EAAMC,cAAND,EACR,OACE,qCACE,eAACsB,EAAA,EAAD,WACE,cAAC,KAAD,UAAOtB,EAAE,oBAAqB,CAAEi6D,MAAK,UAAExT,EAAWvlD,IAAM+rC,mBAAnB,aAAE,EAA8Bje,WACrE,eAAC1tB,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4V,SAAUuvC,EAAWvlD,IAAM+rC,YAAalhB,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO8pD,EAAc50E,IAAM+rC,mBAA3B,aAAO,EAAiCgS,cAAc,WAG1D,eAAC39C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOtB,EAAE,oBAAqB,CAAEi6D,MAAK,UAAExT,EAAWvlD,IAAM+0E,mBAAnB,aAAE,EAA8BjnD,WACrE,eAAC1tB,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4V,SAAUuvC,EAAWvlD,IAAM+0E,YAAalqD,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO8pD,EAAc50E,IAAM+0E,mBAA3B,aAAO,EAAiCh3B,cAAc,WAG1D,eAAC39C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOtB,EAAE,WACT,cAAC,KAAD,gCACQymD,EAAWvlD,IAAM+rC,mBADzB,aACQ,EAA8Bje,OADtC,qBACkDowB,QADlD,IACkDA,OADlD,EACkDA,EAAOH,cAAc,GADvE,sBAEIwH,EAAWvlD,IAAM+0E,mBAFrB,aAEI,EAA8BjnD,aAIpC,cAAC1tB,EAAA,EAAD,CAAYyqB,MAAO,CAAEwuC,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQ9T,EAAWvlD,IAAM+0E,mBADzB,aACQ,EAA8BjnD,OADtC,qBACkDowB,QADlD,IACkDA,OADlD,EACkDA,EAAOJ,SAASC,cAAc,GADhF,sBAEIwH,EAAWvlD,IAAM+rC,mBAFrB,aAEI,EAA8Bje,YAIpC,eAAC1tB,EAAA,EAAD,WACE,eAAC,KAAD,WAAOtB,EAAE,iBAAT,OACA,eAAC,KAAD,WAAOmtC,EAAc,MAAH,OAAW4oC,QAAX,IAAWA,OAAX,EAAWA,EAAqB92B,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQhgC,QAAS+2D,EAAOhc,GAAG,OAA3B,SACiBh6D,EAAdmtC,EAAgB,uBAA4B,wB,SCFtC+oC,MAjDf,YAUI,IAAD,wBATDzvB,EASC,EATDA,WACAtZ,EAQC,EARDA,YACA4oC,EAOC,EAPDA,oBACA32B,EAMC,EANDA,MAOQp/C,EAAMC,cAAND,EACR,OACE,cAAC,IAAD,CAAYkC,IAAI,KAAhB,SACE,eAAC,IAAD,CAASP,QAAQ,eAAeO,IAAI,MAApC,UACE,eAAC,IAAD,CAAYP,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAOy9C,QAAP,IAAOA,OAAP,EAAOA,EAAOH,cAAc,UAA5B,QAAkC,MAClC,cAAC,KAAD,CAAMsa,SAAS,OAAOiB,GAAI,EAA1B,SACGx6D,EAAE,wBAAyB,CAC1Bm2E,OAAM,oBAAE1vB,EAAWvlD,IAAM+0E,mBAAnB,aAAE,EAA8BjnD,cAAhC,QAA0C,GAChDonD,OAAM,oBAAE3vB,EAAWvlD,IAAM+rC,mBAAnB,aAAE,EAA8Bje,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYrtB,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAOy9C,QAAP,IAAOA,GAAP,UAAOA,EAAOJ,gBAAd,aAAO,EAAiBC,cAAc,UAAtC,QAA4C,MAC5C,cAAC,KAAD,CAAMsa,SAAS,OAAOiB,GAAI,EAA1B,SACGx6D,EAAE,wBAAyB,CAC1Bm2E,OAAM,oBAAE1vB,EAAWvlD,IAAM+rC,mBAAnB,aAAE,EAA8Bje,cAAhC,QAA0C,GAChDonD,OAAM,oBAAE3vB,EAAWvlD,IAAM+0E,mBAAnB,aAAE,EAA8BjnD,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYrtB,QAAQ,SAApB,UACE,eAAC,KAAD,WACGwrC,GAAeiS,EACZ,MADH,WAEuB,OAAnB22B,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBnjC,SAASn6B,MAAY,QAA1C,OAAoDs9D,QAApD,IAAoDA,OAApD,EAAoDA,EAAqBnyE,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAM21D,SAAS,OAAOiB,GAAI,EAA1B,SACGx6D,EAAE,4B,SCTA,SAASq2E,EAAT,GAK0D,IAAD,2CAJtEj3E,MACEsoB,OAAU4uD,GAG0D,GAH1DA,YAAaC,GAG6C,GAH7CA,YAEzBxI,GACsE,EADtEA,QAEA,GAAsC1tE,cAA9B+V,GAAR,GAAQA,QAAS5V,GAAjB,GAAiBA,QAASD,GAA1B,GAA0BA,QACpBghB,GAAWC,cACTxhB,GAAMC,cAAND,EACFokB,GAAWF,cAEXijC,GAAYh4B,YAAYmnD,IACxBlvB,GAAYj4B,YAAYonD,IAE9Bt4E,qBAAU,WACHq4E,IAAgBC,IACnBh1D,GAASlgB,iBAEV,CAACkgB,GAAU+0D,GAAaC,KAE3B,IAAMC,GAAoBp/D,QACxB5W,KACI2mD,IAAap5B,YAAeo5B,GAAW1mC,IAAKjgB,MAC3C4mD,IAAar5B,YAAeq5B,GAAW3mC,IAAKjgB,OAG7CwhB,GAAaH,cAGnB,GAA0D+zD,IAAlDppC,GAAR,GAAQA,iBAAkBE,GAA1B,GAA0BA,WAAYQ,GAAtC,GAAsCA,gBACtC,GH3BK,SACLia,EACAC,GAaC,IAAD,MAoGIjnC,EAKiC,EAIqC,EA5G1E,EAA6B9f,cAArB+V,EAAR,EAAQA,QAAS5V,EAAjB,EAAiBA,QAEjB,EAA0Do1E,IAAlDppC,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYQ,EAAtC,EAAsCA,gBAEhCupC,EAAiBjqC,IAAqBtrC,IAAM+rC,WAAa/rC,IAAM+0E,WAAa/0E,IAAM+rC,WAGlFwZ,EAA8C/mC,mBAClD,2CACGxe,IAAM+rC,WADT,OACsBka,QADtB,IACsBA,SAAa3pD,GADnC,cAEG0D,IAAM+0E,WAFT,OAEsB7uB,QAFtB,IAEsBA,SAAa5pD,GAFnC,IAIA,CAAC2pD,EAAWC,IAId,EAA0BQ,YAAQnB,EAAWvlD,IAAM+rC,YAAawZ,EAAWvlD,IAAM+0E,aAAjF,mBAAOS,EAAP,KAAkBjyD,EAAlB,KAEMuwC,EAAcD,YAAc,OAACtwC,QAAD,IAACA,OAAD,EAACA,EAAMktC,gBAEnCxkB,EACJupC,IAAc1vB,IAAUQ,YAAcpwC,QAAQ49C,GAAer/C,IAAKghE,MAAM3hB,EAAY/+C,IAAK0/D,IAGrF1vB,EAAWO,YAAmB,OAACpwC,QAAD,IAACA,SAAW5Y,EAAW,CACzDipD,EAAWvlD,IAAM+rC,YACjBwZ,EAAWvlD,IAAM+0E,cAEbtjB,GAAuD,mBAC1DzxD,IAAM+rC,WAAagZ,EAAS,IAD8B,cAE1D/kD,IAAM+0E,WAAahwB,EAAS,IAF8B,GAMvD2wB,EAAgDvlB,YAAe3kB,EAAY+Z,EAAWja,IACtFqqC,EAA8Cn3D,mBAAQ,WAC1D,GAAIytB,EACF,OAAID,GAAmBuZ,EAAWgwB,GACzBplB,YAAenkB,EAAiBuZ,EAAWgwB,SAEpD,EAEF,GAAIG,EAAJ,CAEE,IAAME,EAA2BzuD,YAAsBuuD,EAAmBp2E,GAC1E,EAAyB,CAAC4nB,YAAgB++B,EAAW3mD,GAAU4nB,YAAgBg/B,EAAW5mD,IAAnFukB,EAAP,KAAeC,EAAf,KACA,GAAID,GAAUC,GAAU8xD,GAA4BryD,EAAM,CACxD,IAAMsyD,EAAoBN,IAAmBv1E,IAAM+0E,WAAa7uB,EAAYD,EACtE6vB,EACJP,IAAmBv1E,IAAM+0E,WACrBxxD,EAAKwyD,QAAQlyD,GAAQmyD,MAAMJ,GAC3BryD,EAAKwyD,QAAQjyD,GAAQkyD,MAAMJ,GACjC,OAAOC,IAAsB5/D,IAAQonC,IAAeC,MAAMw4B,EAAqB/gE,KAAO+gE,MAKzF,CAAC7pC,EAAaD,EAAiBuZ,EAAYgwB,EAAgBG,EAAmBzvB,EAAW3mD,EAAS4mD,EAAW3iC,IAE1GqxD,EAAkEp2D,mBACtE,2CACGxe,IAAM+rC,WAAaT,IAAqBtrC,IAAM+rC,WAAa2pC,EAAoBC,GADlF,cAEG31E,IAAM+0E,WAAazpC,IAAqBtrC,IAAM+rC,WAAa4pC,EAAkBD,GAFhF,IAIA,CAACC,EAAiBD,EAAmBpqC,IAGjC4S,EAAQ1/B,mBAAQ,WACpB,GAAIytB,EAAa,CACf,IAA4BgqC,EAAyDrB,EAA5E50E,IAAM+rC,YAAkDmqC,EAAoBtB,EAAvC50E,IAAM+0E,YACpD,OAAIkB,GAAmBC,EACd,IAAIC,IAAMF,EAAgBjgE,SAAUkgE,EAAgBlgE,SAAUigE,EAAgBlhE,IAAKmhE,EAAgBnhE,UAE5G,EAEF,IAAMqhE,EAAmBlvD,YAAgB++B,EAAW3mD,GACpD,OAAOikB,GAAQ6yD,EAAmB7yD,EAAKwyD,QAAQK,QAAoB95E,IAClE,CAACgD,EAAS2mD,EAAWha,EAAa1oB,EAAMqxD,IAGrCyB,EAAkB73D,mBAAQ,WAC9B,IAA4By3D,EAAyDrB,EAA5E50E,IAAM+rC,YAAkDmqC,EAAoBtB,EAAvC50E,IAAM+0E,YACpD,EAAqC,CACnC5tD,YAAsB8uD,EAAiB32E,GACvC6nB,YAAsB+uD,EAAiB52E,IAFlCg3E,EAAP,KAAqBC,EAArB,KAIA,GAAIhzD,GAAQuwC,GAAewiB,GAAgBC,EACzC,OAAOhzD,EAAKizD,mBAAmB1iB,EAAawiB,EAAcC,KAG3D,CAAC3B,EAAet1E,EAASikB,EAAMuwC,IAE5B+gB,EAAsBr2D,mBAAQ,WAClC,GAAI63D,GAAmBviB,EACrB,OAAO,IAAIt/C,IAAQ6hE,EAAgBthE,IAAK++C,EAAYz/C,IAAIgiE,GAAiBthE,OAG1E,CAACshE,EAAiBviB,IAGhB5+C,IACH+J,EAAQ,kBAGNu2D,IAAc1vB,IAAUO,UAC1BpnC,EAAK,UAAGA,SAAH,QAAY,gBAGd21D,EAAc50E,IAAM+rC,aAAgB6oC,EAAc50E,IAAM+0E,cAC3D91D,EAAK,UAAGA,SAAH,QAAY,mBAGnB,IAEwF,EAIA,EAN5Dg3D,EAAyDrB,EAA5E50E,IAAM+rC,YAAkDmqC,EAAoBtB,EAAvC50E,IAAM+0E,YAUpD,OARIkB,IAAe,OAAIxkB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBzxD,IAAM+rC,mBAA7B,aAAI,EAAsC2F,SAASukC,MACpEh3D,EAAK,iCAAmBsmC,EAAWvlD,IAAM+rC,mBAApC,aAAmB,EAA8Bje,OAAjD,aAGHooD,IAAe,OAAIzkB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBzxD,IAAM+0E,mBAA7B,aAAI,EAAsCrjC,SAASwkC,MACpEj3D,EAAK,iCAAmBsmC,EAAWvlD,IAAM+0E,mBAApC,aAAmB,EAA8BjnD,OAAjD,aAGA,CACLynD,iBACAhwB,aACAhiC,OACAiyD,YACA/jB,mBACAmjB,gBACA12B,QACAjS,cACAoqC,kBACAxB,sBACA51D,SG9GEw3D,CAAkB,OAACxwB,SAAD,IAACA,WAAa3pD,EAAd,OAAyB4pD,SAAzB,IAAyBA,WAAa5pD,GAX1Di5E,GADF,GACEA,eACAhwB,GAFF,GAEEA,WACAhiC,GAHF,GAGEA,KACAiyD,GAJF,GAIEA,UACA/jB,GALF,GAKEA,iBACAmjB,GANF,GAMEA,cACA12B,GAPF,GAOEA,MACAjS,GARF,GAQEA,YACAoqC,GATF,GASEA,gBACAxB,GAVF,GAUEA,oBACA51D,GAXF,GAWEA,MAGF,GHlEK,SAA+BgtB,GAIpC,IAAM5rB,EAAWC,cAejB,MAAO,CACLo2D,cAdoB54E,uBACpB,SAAC0tC,GACCnrB,EAASpgB,YAAU,CAAE0rC,MAAO3rC,IAAM+rC,WAAYP,aAAYS,aAA6B,IAAhBA,OAEzE,CAAC5rB,EAAU4rB,IAWX0qC,cAToB74E,uBACpB,SAAC0tC,GACCnrB,EAASpgB,YAAU,CAAE0rC,MAAO3rC,IAAM+0E,WAAYvpC,aAAYS,aAA6B,IAAhBA,OAEzE,CAAC5rB,EAAU4rB,KGkD4B2qC,CAAsB3qC,IAAvDyqC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,cAEjB14C,IAAWhf,GAGjB,GAA0CxiB,oBAAkB,GAA5D,qBAAOg9D,GAAP,MAAsBod,GAAtB,MAGMl0D,GAAWwrD,cACjB,GAA0B7sD,cAAnBgxB,GAAP,qBACA,GAA4B71C,mBAAiB,IAA7C,qBAAOqnD,GAAP,MAAegzB,GAAf,MAGMC,IAAgB,mBACnBzrC,GAAmBE,IADA,cAEnB+pC,GAAiBtpC,GAAcD,GAAH,oBAAqB4oC,GAAcW,WAAnC,aAAqB,EAA+Bx3B,cAAc,UAAlE,QAAwE,IAFjF,GAMhBi5B,GAAiD,CAACh3E,IAAM+rC,WAAY/rC,IAAM+0E,YAAY7iE,QAC1F,SAAC+kE,EAAatrC,GACZ,OAAO,2BACFsrC,GADL,kBAEGtrC,EAAQ2lC,YAAe7f,GAAiB9lB,QAG7C,IAGIurC,GAAmD,CAACl3E,IAAM+rC,WAAY/rC,IAAM+0E,YAAY7iE,QAC5F,SAAC+kE,EAAatrC,GAAW,IAAD,IACtB,OAAO,2BACFsrC,GADL,kBAEGtrC,EAFH,UAEWqrC,GAAWrrC,UAFtB,aAEW,EAAmByvB,QAAnB,UAA2BwZ,GAAcjpC,UAAzC,QAAmD,SAGhE,IAIF,GAAsCsF,YAAmB2jC,GAAc50E,IAAM+rC,YAAar2B,KAA1F,qBAAOyhE,GAAP,MAAkBC,GAAlB,MACA,GAAsCnmC,YAAmB2jC,GAAc50E,IAAM+0E,YAAar/D,KAA1F,qBAAO2hE,GAAP,MAAkBC,GAAlB,MAEM7sC,GAAiBoH,cAlF+C,SAoFvDijC,KApFuD,8EAoFtE,0DAAA93E,EAAA,yDACOsC,IAAYD,IAAY6V,GAD/B,oDAEQqiE,EAAS/hE,YAAkBlW,GAASD,GAAS6V,IAEvBsiE,EAAqD5C,GAAxE50E,IAAM+rC,YAAgD0rC,EAAkB7C,GAArC50E,IAAM+0E,YAC7CyC,GAAkBC,GAAkBxxB,IAAcC,IAAcvjC,GALvE,2EAUK3iB,IAAM+rC,WAAap3B,YAAwB6iE,EAAevrC,GAAc,EAAIqG,IAAiB,IAVlG,cAWKtyC,IAAM+0E,WAAapgE,YAAwB8iE,EAAexrC,GAAc,EAAIqG,IAAiB,IAF1FolC,EATR,EAkBMzxB,KAAchwC,KAASiwC,KAAcjwC,KACjC0hE,EAAczxB,KAAcjwC,IAClC2hE,EAAWL,EAAOvlC,YAAY6lC,gBAC9BvjD,EAASijD,EAAOM,gBAChBC,EAAO,qBACL5wD,YAAgBywD,EAAc1xB,GAAYC,GAAW5mD,WADhD,aACL,EAA+DqT,eAD1D,QACqE,IACzEglE,EAAcH,EAAgBC,GAAe1iE,IAAIpW,WAClD+4E,EAAWC,EAAc33E,IAAM+rC,WAAa/rC,IAAM+0E,YAAYp2E,WAC9D+4E,EAAWC,EAAc33E,IAAM+0E,WAAa/0E,IAAM+rC,YAAYptC,WAC9DuW,GACAyN,GAASo1D,eAEXl5E,EAAQ0C,IAAUgC,MAAMo0E,EAAcF,EAAgBD,GAAeziE,IAAIpW,cAEzEi5E,EAAWL,EAAOvlC,YAAYgmC,aAC9B1jD,EAASijD,EAAOS,aAChBF,EAAO,qBACL5wD,YAAgB++B,GAAW3mD,WADtB,aACL,EAAqCqT,eADhC,QAC2C,GAD3C,oBAELuU,YAAgBg/B,GAAW5mD,WAFtB,aAEL,EAAqCqT,eAFhC,QAE2C,GAChD6kE,EAAcziE,IAAIpW,WAClB84E,EAAc1iE,IAAIpW,WAClB+4E,EAAW13E,IAAM+rC,YAAYptC,WAC7B+4E,EAAW13E,IAAM+0E,YAAYp2E,WAC7BuW,GACAyN,GAASo1D,eAEXl5E,EAAQ,MAGVg4E,IAAiB,GA/CnB,UAgDQe,EAAQ,WAAR,cAAYE,GAAZ,QAAkBj5E,EAAQ,CAAEA,SAAU,MACzCuzC,MAAK,SAAC6lC,GAAD,OACJ3jD,EAAM,WAAN,cAAUwjD,GAAV,mCACMj5E,EAAQ,CAAEA,SAAU,IAD1B,IAEEszC,SAAUh+B,YAAmB8jE,GAC7B/0D,iBACCkvB,MAAK,SAACjf,GAAc,IAAD,QACpB0jD,IAAiB,GAEjBpsC,GAAetX,EAAU,CACvBwX,QAAQ,OAAD,iBAASiqC,GAAc50E,IAAM+rC,mBAA7B,aAAS,EAAiCgS,cAAc,GAAxD,sBACLwH,GAAWvlD,IAAM+rC,mBADZ,aACL,EAA8Bje,OADzB,0BAEC8mD,GAAc50E,IAAM+0E,mBAFrB,aAEC,EAAiCh3B,cAAc,GAFhD,sBAEsDwH,GAAWvlD,IAAM+0E,mBAFvE,aAEsD,EAA8BjnD,UAG7FgpD,GAAU3jD,EAAStE,YAfnB,OAkBG,SAACqpD,GACNrB,IAAiB,GAEC,QAAX,OAAHqB,QAAG,IAAHA,OAAA,EAAAA,EAAK3uB,OACPrqC,QAAQD,MAAMi5D,MAtEtB,6CApFsE,sBA+JtE,IAAMC,GAAc,WAAO,IAAD,QACxB,OAAOlsC,GACL,eAAC,IAAD,CAAMk0B,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM9H,SAAS,OAAOvtC,YAAY,OAAlC,6BACMy6B,GAAWvlD,IAAM+rC,mBADvB,aACM,EAA8Bje,OADpC,sBAC8Cy3B,GAAWvlD,IAAM+0E,mBAD/D,aAC8C,EAA8BjnD,UAE5E,cAAC,IAAD,CACErD,UAAW86B,GAAWvlD,IAAM+rC,YAC5BrhB,UAAW66B,GAAWvlD,IAAM+0E,YAC5BpqD,KAAM,QAIV,eAAC,IAAD,WACE,eAAC,IAAD,CAAMw1C,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM9H,SAAS,OAAOvtC,YAAY,OAAlC,gBACGurD,SADH,IACGA,QADH,EACGA,GAAiBt4B,cAAc,KAElC,cAAC,IAAD,CACEtzB,UAAW86B,GAAWvlD,IAAM+rC,YAC5BrhB,UAAW66B,GAAWvlD,IAAM+0E,YAC5BpqD,KAAM,QAGV,cAACvqB,EAAA,EAAD,UACE,cAAC,KAAD,CAAMi4D,SAAS,OAAf,6BACM9S,GAAWvlD,IAAM+rC,mBADvB,aACM,EAA8Bje,OADpC,sBAC8Cy3B,GAAWvlD,IAAM+0E,mBAD/D,aAC8C,EAA8BjnD,OAD5E,oBAIF,cAAC,KAAD,CAAMyqC,OAAK,EAACC,UAAU,OAAO4f,GAAG,OAAhC,SACGt5E,GAAE,mGAAoG,CACrG8V,SAAU09B,GAAkB,YAOhC+lC,GAAc,WAClB,OACE,cAAC,EAAD,CACEn6B,MAAOA,GACPqH,WAAYA,GACZqvB,cAAeA,GACf3oC,YAAaA,GACb6oC,MAAOA,GACPD,oBAAqBA,MAKrBzc,GAAct5D,GAAE,wDAAyD,CAC7Ew5E,QAAO,oBAAE1D,GAAc50E,IAAM+rC,mBAAtB,aAAE,EAAiCgS,cAAc,UAAjD,QAAuD,GAC9Dw6B,QAAO,oBAAEhzB,GAAWvlD,IAAM+rC,mBAAnB,aAAE,EAA8Bje,cAAhC,QAA0C,GACjD0qD,QAAO,sBAAE5D,GAAc50E,IAAM+0E,mBAAtB,cAAE,GAAiCh3B,cAAc,UAAjD,UAAuD,GAC9D06B,QAAO,sBAAElzB,GAAWvlD,IAAM+0E,mBAAnB,cAAE,GAA8BjnD,cAAhC,UAA0C,KAG7C4qD,GAAwB56E,uBAC5B,SAAC66E,GACC,IAAMC,EAAiB1qD,YAAWyqD,GAC9BC,IAAmBvD,GACrBxI,GAAQxyC,KAAR,eAAqBg7C,GAArB,YAAoCD,KAC3BC,GACTxI,GAAQxyC,KAAR,eAAqBu+C,EAArB,YAAuCvD,KAEvCxI,GAAQxyC,KAAR,eAAqBu+C,MAGzB,CAACvD,GAAaxI,GAASuI,KAEnByD,GAAwB/6E,uBAC5B,SAACg7E,GACC,IAAMC,EAAiB7qD,YAAW4qD,GAC9B1D,KAAgB2D,EACd1D,GACFxI,GAAQxyC,KAAR,eAAqBg7C,GAArB,YAAoC0D,IAEpClM,GAAQxyC,KAAR,eAAqB0+C,IAGvBlM,GAAQxyC,KAAR,eAAqB+6C,IAAe,MAApC,YAA6C2D,MAGjD,CAAC3D,GAAavI,GAASwI,KAGnB2D,GAA4Bl7E,uBAAY,WAExCgmD,IACF4yB,GAAc,IAEhBI,GAAU,MACT,CAACJ,GAAe5yB,KAEbm1B,GAAmBhc,YAA2B,OAAC1X,SAAD,IAACA,QAAD,EAACA,GAAYxZ,WAAb,OAAyBwZ,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAYwvB,YAEzF,GAAqCrV,aACnC,cAACnG,EAAA,EAAD,CACE5/B,MAAqB76B,GAAdmtC,GAAgB,0BAA+B,oBACtDutB,gBAAiBwf,GACjBvf,cAAeA,GACf5qC,KAAMi1B,GACN4V,QAAS,kBAAM,cAAC,IAAD,CAA0BP,WAAYgf,GAAajf,cAAemf,MACjFjgB,YAAaA,GACbO,cAAa,OAAEp1C,SAAF,IAAEA,QAAF,EAAEA,GAAMktC,kBAEvB,GACA,EACA,qBAZKyoB,GAAP,qBAeA,OACE,eAAC1a,EAAA,EAAD,WACE,eAAC2a,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEx/C,MAAO76B,GAAE,iBACTihE,SAAUjhE,GAAE,sCACZkhE,OAAQlhE,GACN,2IAEFmhE,OAAO,UAET,cAAC,IAAD,UACE,eAAC,IAAD,CAAYj/D,IAAI,OAAhB,UACGirC,IACC,cAAC15B,EAAA,EAAD,UACE,cAAC,KAAD,CAAS8wC,QAAQ,UAAjB,SACE,gCACE,cAAC,KAAD,CAAMiV,MAAI,EAACiH,GAAG,MAAd,SACGzgE,GAAE,2CAEL,cAAC,KAAD,CAAMygE,GAAG,MAAT,SAAgBzgE,GAAE,kEAClB,cAAC,KAAD,UAAOA,GAAE,qEAKjB,cAAC8nE,EAAA,EAAD,CACE/nE,MAAOk4E,GAAiB/2E,IAAM+rC,YAC9BkkB,YAAaymB,GACb7P,MAAO,WAAO,IAAD,IACX6P,GAAa,oBAACM,GAAWh3E,IAAM+rC,mBAAlB,aAAC,EAA8BqtC,iBAA/B,QAA4C,KAE3DpS,iBAAkB0R,GAClB5R,eAAgBoQ,GAAal3E,IAAM+rC,YACnC/1B,SAAUuvC,GAAWvlD,IAAM+rC,YAC3BvxB,GAAG,6BACH4sD,iBAAe,IAEjB,cAAC70D,EAAA,EAAD,UACE,cAAC,IAAD,CAAShS,MAAM,WAEjB,cAACqmE,EAAA,EAAD,CACE/nE,MAAOk4E,GAAiB/2E,IAAM+0E,YAC9B9kB,YAAa0mB,GACb3P,iBAAkB6R,GAClBhS,MAAO,WAAO,IAAD,IACX8P,GAAa,oBAACK,GAAWh3E,IAAM+0E,mBAAlB,aAAC,EAA8BqE,iBAA/B,QAA4C,KAE3DtS,eAAgBoQ,GAAal3E,IAAM+0E,YACnC/+D,SAAUuvC,GAAWvlD,IAAM+0E,YAC3Bv6D,GAAG,6BACH4sD,iBAAe,IAEhB7hB,GAAWvlD,IAAM+rC,aAAewZ,GAAWvlD,IAAM+0E,aAAeS,KAAc1vB,IAAUO,SACvF,mCACE,eAAC,IAAD,CAAW3lD,QAAQ,MAAME,aAAa,OAAtC,UACE,cAACR,EAAA,EAAD,CAAYM,QAAQ,OAApB,SACE,cAAC,KAAD,CAAM23D,SAAS,OAAf,SACiBv5D,GAAdmtC,GAAgB,gCAAqC,6BAE5C,IACd,cAAC,IAAD,CAAWvrC,QAAQ,OAAOE,aAAa,OAAvC,SACE,cAAC,EAAD,CACE2kD,WAAYA,GACZsvB,oBAAqBA,GACrB5oC,YAAaA,GACbiS,MAAOA,YAOhB+6B,GACC,cAAC,IAAD,CAAQ5H,UAAQ,EAAC9R,GAAG,MAApB,SACGzgE,GAAE,uBAEFoW,GAGH,eAAC,IAAD,CAAYlU,IAAI,KAAhB,WACIm2E,KAActmC,IAAcc,cAC5BwlC,KAActmC,IAAc3P,SAC5Bm2C,KAAcxmC,IAAcc,cAC5B0lC,KAAcxmC,IAAc3P,UAC5BjD,IACE,eAAC79B,EAAA,EAAD,WACG+2E,KAActmC,IAAcY,UAC3B,cAAC,IAAD,CACE1zB,QAASq5D,GACT/F,SAAU8F,KAActmC,IAAc3P,QACtC3gC,MAAO82E,KAAcxmC,IAAcY,SAAW,MAAQ,OAHxD,SAKG0lC,KAActmC,IAAc3P,QAC3B,cAACuoC,EAAA,EAAD,UAAO3qE,GAAE,mBAAoB,CAAEi6D,MAAK,WAAExT,GAAWvlD,IAAM+rC,mBAAnB,cAAE,GAA8Bje,WAEpEhvB,GAAE,iBAAkB,CAAEi6D,MAAK,WAAExT,GAAWvlD,IAAM+rC,mBAAnB,cAAE,GAA8Bje,WAIhEupD,KAAcxmC,IAAcY,UAC3B,cAAC,IAAD,CACE1zB,QAASu5D,GACTjG,SAAUgG,KAAcxmC,IAAc3P,QACtC3gC,MAAO42E,KAActmC,IAAcY,SAAW,MAAQ,OAHxD,SAKG4lC,KAAcxmC,IAAc3P,QAC3B,cAACuoC,EAAA,EAAD,UAAO3qE,GAAE,mBAAoB,CAAEi6D,MAAK,WAAExT,GAAWvlD,IAAM+0E,mBAAnB,cAAE,GAA8BjnD,WAEpEhvB,GAAE,iBAAkB,CAAEi6D,MAAK,WAAExT,GAAWvlD,IAAM+0E,mBAAnB,cAAE,GAA8BjnD,cAMvE,cAAC,IAAD,CACEu1B,SACGplB,IAAa22C,GAAc50E,IAAM+rC,aAAiB6oC,GAAc50E,IAAM+0E,YACnE,SACA,UAENh3D,QAAS,WACH+C,GACFg0D,KAEAoE,MAGJ7H,UAAWpzC,IAAWk5C,KAActmC,IAAcY,UAAY4lC,KAAcxmC,IAAcY,SAb5F,gBAeGxyB,SAfH,IAeGA,MAASngB,GAAE,eApDhB,cAAC6nD,EAAA,EAAD,YA2DNsyB,GAOA,cAAC5I,EAAA,EAAD,CAA2B9qB,WAAY,CAACA,GAAWxZ,WAAYwZ,GAAWwvB,cAN1ExxD,KAAS0oB,IAAeupC,KAAc1vB,IAAUO,QAC9C,cAAC,IAAD,CAAYx7B,MAAO,CAAEwuD,SAAU,QAAS94E,MAAO,OAAQsrE,SAAU,QAASyN,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBC,cAAejE,GAAmB/xD,KAAMA,OAE7D,U,usBC3ZN5nB,EAAiC,CACrCg5B,OAAQrP,IAAiBqZ,QACzBzC,WAAW,EACXs9C,mBAAmB,EACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,cAAep0D,IAAcoN,IAC7BT,aAAc,EACdqC,gBAAiB,IACjBC,aAAc,iBACdE,cAAe,GACfklD,gBAAiBt4E,IAASO,SAC1B2zB,OAAQ,GACRq3C,QAAS,GACTgN,aAAc,EACdC,mBAAoB,EACpBC,kBAAkB,EAClBnkD,QAAS,GACTokD,kBAAmB,GACnBC,YAAa,CACXC,aAAc10D,IAAwBmZ,QACtCw7C,QAAS,CACPxnE,QAAS,KACT8gB,QAAS,SACT2mD,WAAY,OAEdrnD,KAAM,EACNsnD,gBAAgB,EAChBC,eAAgB,GAChBjhD,QAAS,KAgBAkhD,EAAwB3/C,YACnC,wBADmD,sBAEnD,sDAAA59B,EAAA,6DAAOkY,EAAP,+BAAiB,KAAjB,SAE2Bkf,cAF3B,cAEQomD,EAFR,OAGQnnD,EACJmnD,EAAWtoD,aAAei1B,IACtBszB,IAAMD,EAAWtoD,aAAcsoD,EAAWtoD,aAAei1B,KACzD,CAACqzB,EAAWtoD,cANpB,SAS+B2C,YAAcxB,GAT7C,UASQqnD,EATR,OAUQC,EAAsDD,EAAexoE,QAAO,SAACC,EAAOue,GACxF,IAAMkqD,EAAiB9kD,YAAmCpF,GAE1D,OAAO,2BACFve,GADL,kBAEGyoE,EAAehqD,MAAMjyB,WAAai8E,MAEpC,IAEGC,EAnBR,2BAoBOL,GApBP,IAqBIhlD,OAAQmlD,EACR/kD,QAAS,GACTokD,kBAAmB,KAGhB9kE,EA1BP,0CA2BW2lE,GA3BX,yBA+BgCznD,YAAcle,EAASme,GA/BvD,eA+BQynD,EA/BR,iBAkCkChnD,YAAiB5e,EAASme,GAlC5D,eAkCQ2mD,EAlCR,yBAoCSx6C,IAAM,GAAIq7C,EAAiB,CAChCjlD,QAASD,YAAezgB,EAAS4lE,EAAiBznD,GAClD2mD,uBAtCJ,6CA2CWe,EAAangD,YAAyC,yBAAzB,uCAAmD,WAAOhK,GAAP,iBAAA5zB,EAAA,6DACrFg+E,EAAqBp+D,cADgE,SAEpEo+D,EAAmBxlD,OAAO5E,GAF0C,cAErFuC,EAFqF,yBAGpF2C,YAAmC3C,IAHiD,2CAAnD,uDAM7B8nD,EAAcrgD,YACzB,0BADyC,uCAEzC,WAAOvH,GAAP,eAAAr2B,EAAA,sEACuB63B,YAAcxB,GADrC,cACQmC,EADR,yBAESA,EAAOtjB,QAAO,SAACC,EAAOyd,GAC3B,IAAKA,EACH,OAAOzd,EAGT,IAAMyoE,EAAiB9kD,YAAmClG,GAE1D,OAAO,2BACFzd,GADL,kBAEGyoE,EAAehqD,MAAMjyB,WAAai8E,MAEpC,KAbL,2CAFyC,uDAmB9BM,EAAkBtgD,YAA6B,8BAAb,sBAA4C,4BAAA59B,EAAA,sEAChEo3B,cADgE,cACnFomD,EADmF,yBAElFA,GAFkF,4CAK9EW,EAAkBvgD,YAC7B,8BAD6C,uCAE7C,iCAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAASme,EAAlB,EAAkBA,OAAlB,SACwBD,YAAcle,EAASme,GAD/C,cACQuC,EADR,yBAESD,YAAezgB,EAAS0gB,EAASvC,IAF1C,2CAF6C,uDAQlC+nD,EAAyBxgD,YAGpC,qCAHoD,uCAGd,iCAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAASme,EAAlB,EAAkBA,OAAlB,SAChBS,YAAiB5e,EAASme,GADV,cAChCuC,EADgC,yBAE/BA,GAF+B,2CAHc,uDAQzCylD,EAAezgD,YAC1B,2BAD0C,uCAE1C,mCAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAASia,EAAlB,EAAkBA,QAAlB,SACyByD,YAAc,CACnCnS,KAAMvL,EAAQmR,cACd8I,YAHJ,cACQgE,EADR,OAKQpB,EAAOoB,EAAS9O,IAAIqK,KAL5B,kBAOS,CAAExZ,UAAS6c,SAPpB,2CAF0C,uDAa/BupD,EAAmB1gD,YAG9B,+BAH8C,uCAGd,qDAAA59B,EAAA,6DAASkY,EAAT,EAASA,QAAT,IAAkBqmE,YAAlB,MAAyB,EAAzB,WACDvlD,YAAuB9gB,GADtB,UAC1BsmE,EAD0B,OAE1BC,EAAc,CAAE1pD,KAAM,GAAIioD,kBAAmB,GAAIH,aAAc2B,EAAiBj5E,YAChFm5E,EAAWF,EAAiBG,IAAItlD,KAAmB,EAAIpM,KAAK2xD,KAAKJ,EAAiBj5E,WAAa8zB,MAEjGmlD,EAAiB3lD,GAAG,GALQ,yCAMvB4lD,GANuB,YAS5BF,EAAOG,GATqB,0CAUvBD,GAVuB,eAa1BrlD,EAASolD,EAAiB/3E,IAAI4yB,IAAkBklD,GAGhD5wD,EACJ+wD,IAAaH,EACTC,EACG/3E,IAAI4yB,KAAmBklD,EAAO,IAC9Bh5E,WACH8zB,IArB0B,UAsBPF,YAAgBjhB,EAASkhB,EAAOylD,GAAG,GAAK,EAAIzlD,EAAO7zB,WAAYooB,GAtBxD,WAsB1BmxD,EAtB0B,iDAyBvBL,GAzBuB,eA4B1BpoD,EAASj1B,OAAOC,KAAKy9E,GAAYz3D,KAAI,SAAC03D,GAAD,OAAcvtD,OAAOutD,MA5BhC,UA6BRlnD,YAAcxB,GA7BN,eA6B1B2oD,EA7B0B,iBA8BAloD,YAAiB5e,EAASme,GA9B1B,eA8B1B2mD,EA9B0B,OAiC1BjoD,EAAciqD,EAAU9pE,QAAO,SAACC,EAAOyd,GAC3C,IAAMqsD,EAAanmD,YAAmClG,GAChDssD,EAASJ,EAAWG,EAAWrrD,OAC/BurD,EAAe74E,IAAO/B,UAAUgC,KAAK24E,EAAOn6E,QAC5CyvB,EAAa5B,EAAM4B,WAAazC,WAAWvrB,sBAAYosB,EAAM4B,WAAY,IAAM,KAC/EL,EAAYvB,EAAMuB,UAAYpC,WAAWvrB,sBAAYosB,EAAMuB,UAAW,IAAM,KAclF,MAAM,GAAN,mBACKhf,GADL,CAEE,CACEqI,GAAI,KACJqU,KAAM,KACN9sB,OAAQgtB,WAAWvrB,sBAAY24E,IAC/BntD,SAAUktD,EAAOltD,SACjBG,QAAS+sD,EAAO/sD,QAChBC,UAAW,KACXE,YAAa,KACbC,WAAY,EACZC,cAAe,EACfC,UAAW,KACXC,UAAW,KACXZ,MAAO,EACPc,MAAO,CACLpV,GAAI,KACJoW,MAAOhB,EAAMgB,MAAMruB,WACnBsuB,QAAQ,EACRjH,WAAY,KACZkH,QAASlB,EAAMmF,eAAiBnF,EAAMmF,eAAexyB,WAAa,KAClEwuB,UAAW,KACXC,OAAQpB,EAAMoF,cAAgBpF,EAAMoF,cAAczyB,WAAa,KAC/D0uB,UAAW,KACXE,YACAD,SAAU,KACVE,YAAaxB,EAAMyF,aAAezF,EAAMyF,aAAa12B,WAAa,KAClE8yB,aAAc7B,EAAM0F,cAAgB1F,EAAM0F,cAAc32B,WAAa,KACrE4yB,UAAW,KACXF,QAAS,KACTG,aACAF,WAAY,KACZvB,UAAW,EACX2B,YAAa3C,WAAWvrB,sBAAYosB,EAAM8B,cAC1CC,SAAU,EACVC,WAAY7C,WAAWvrB,sBAAYosB,EAAMgC,aACzCC,SAAU,EACVC,WAAY/C,WAAWvrB,sBAAYosB,EAAMkC,aACzC9C,SAjDCwC,EAID5B,EAAM4B,WAAWqE,GAAGjG,EAAMuB,WACrB9L,IAAY2M,MAGdpC,EAAM4B,WAAWrI,GAAGyG,EAAMuB,WAAa9L,IAAY4J,KAAO5J,IAAY6J,KAPpE,WAoDV,IA9F6B,kBAgGzB,CAAE6C,OAAMioD,oBAAmBuB,OAAM1B,aAAc2B,EAAiBj5E,aAhGvC,4CAHc,uDAuGnC65E,EAAoBxhD,YAC/B,gCAD+C,uCAE/C,+BAAA59B,EAAA,6DAASm9E,EAAT,EAASA,QAAT,SAC8BxmD,YAAmB,CAC7CZ,KAAM,EACNU,QAAS0mD,EAAQ1mD,QACjBZ,MAAM,aAAGwpD,cAAeh1B,KAAnB,UAAsD8yB,EAAQ1mD,QAA9D,OAA6E,KAJtF,cACQ6oD,EADR,yBAOS,CAAEjjD,QAASijD,EAAcj4D,IAAIsL,OAPtC,2CAF+C,uDAapC4sD,EAAqB3hD,YAIhC,iCAJgD,uCAId,WAAO1lB,EAAP,oBAAAlY,EAAA,6DAAkBw/E,EAAlB,EAAkBA,gBAAlB,SACP3oD,YAAkB3e,GADX,UAC5B4a,EAD4B,gDAIzB0sD,EAAgBtnE,IAJS,gCAO3B,CAAEA,UAASlX,KAAM2xB,YAAsBG,KAPZ,2CAJc,yDAcrC2sD,EAA4B7hD,YAIvC,wCAJuD,uCAId,WAAO7H,EAAP,sBAAA/1B,EAAA,6DAAekiC,EAAf,EAAeA,SAClDriC,EAAQqiC,IAD2B,SAEbvL,YAAmB,CAC7CZ,OACAU,QAAS52B,EAAMuyC,YAAY6qC,YAAYE,QAAQ1mD,QAC/CZ,MAAM,aAAGwpD,cAAeh1B,KAAnB,UAAsDxqD,EAAMuyC,YAAY6qC,YAAYE,QAAQ1mD,QAA5F,OAA2G,KALzE,cAEnC6oD,EAFmC,yBAQlC,CAAEjjD,QAASijD,EAAcj4D,IAAIsL,KAAwBoD,SARnB,2CAJc,yDAe5C2pD,EAAmBziD,YAAY,CAC1C1T,KAAM,cACN5qB,eACAu+B,SAAU,CACRyiD,qBAAsB,SAAC9/E,EAAOu9B,GAC5Bv9B,EAAMo9E,YAAYE,QAAlB,2BACKt9E,EAAMo9E,YAAYE,SAClB//C,EAAOE,SAIZz9B,EAAMo9E,YAAYlnD,KAAO,EACzBl2B,EAAMo9E,YAAYI,gBAAiB,GAErCuC,oBAAqB,SAAC//E,EAAOu9B,GAC3Bv9B,EAAM83B,OAASyF,EAAOE,SAExBuiD,oBAAqB,SAAChgF,EAAOu9B,GAC3Bv9B,EAAM28E,kBAAoBp/C,EAAOE,QACjCz9B,EAAM88E,cAAgBp0D,IAAcoN,KAEtCmqD,kBAAmB,SAACjgF,EAAOu9B,GACzBv9B,EAAM48E,gBAAkBr/C,EAAOE,SAEjCyiD,iBAAkB,SAAClgF,EAAOu9B,GACxBv9B,EAAM88E,cAAgBv/C,EAAOE,SAE/B0iD,gBAAiB,SAACngF,EAAOu9B,GACvBv9B,EAAMq1B,aAAekI,EAAOE,SAE9B2iD,mBAAoB,SAACpgF,EAAOu9B,GAC1Bv9B,EAAM+8E,gBAAkBx/C,EAAOE,SAEjC4iD,gBAAiB,SAACrgF,EAAOu9B,GACvBv9B,EAAMm9E,kBAAN,2BAA+Bn9E,EAAMm9E,mBAAsB5/C,EAAOE,WAGtE6B,cAAe,SAACC,GAEdA,EAAQC,QAAQ+/C,EAAkB9/C,SAAS,SAACz/B,GAEtCA,EAAMo9E,YAAYC,eAAiB10D,IAAwBia,OAC7D5iC,EAAMo9E,YAAYC,aAAe10D,IAAwB+Z,YAG7DnD,EAAQC,QAAQ+/C,EAAkB7/C,WAAW,SAAC1/B,EAAOu9B,GACnD,IAAQf,EAAYe,EAAOE,QAAnBjB,QAERx8B,EAAMo9E,YAAYC,aAAe10D,IAAwBia,KACzD5iC,EAAMo9E,YAAY5gD,QAAUA,EAExBA,EAAQlM,OAASoG,MACnB12B,EAAMo9E,YAAYI,gBAAiB,GAIrCx9E,EAAMo9E,YAAYK,eAAlB,2BACKz9E,EAAMo9E,YAAYK,gBAClBjhD,EAAQnnB,QAAO,SAACC,EAAO8U,GACxB,OAAO,2BACF9U,GADL,kBAEG8U,EAAOzM,GAAKyM,MAEd,QAKPmV,EAAQC,QAAQkgD,EAAmBjgD,SAAS,SAACz/B,GAC3CA,EAAMo9E,YAAYC,aAAe10D,IAAwB+Z,WAE3DnD,EAAQC,QAAQkgD,EAAmBhgD,WAAW,SAAC1/B,EAAOu9B,GACpD,MAA0BA,EAAOE,QAAzBplB,EAAR,EAAQA,QAASlX,EAAjB,EAAiBA,KACjBnB,EAAMo9E,YAAYC,aAAe10D,IAAwBia,KACzD5iC,EAAMo9E,YAAYK,eAAeplE,GAAWlX,KAE9Co+B,EAAQC,QAAQkgD,EAAmBnvC,UAAU,SAACvwC,EAAOu9B,GACnDv9B,EAAMo9E,YAAYC,aAAe10D,IAAwBia,KACzD5iC,EAAMo9E,YAAYK,eAAelgD,EAAOE,SAAW,QAIrD8B,EAAQC,QAAQogD,EAA0BngD,SAAS,SAACz/B,GAClDA,EAAMo9E,YAAYC,aAAe10D,IAAwB+Z,WAE3DnD,EAAQC,QAAQogD,EAA0BlgD,WAAW,SAAC1/B,EAAOu9B,GAC3D,MAA0BA,EAAOE,QAAzBjB,EAAR,EAAQA,QAAStG,EAAjB,EAAiBA,KAEjBl2B,EAAMo9E,YAAYC,aAAe10D,IAAwBia,KACzD5iC,EAAMo9E,YAAY5gD,QAAlB,sBAAgCx8B,EAAMo9E,YAAY5gD,SAAlD,YAA8DA,IAC9Dx8B,EAAMo9E,YAAYlnD,KAAOA,EAErBsG,EAAQlM,OAASoG,MACnB12B,EAAMo9E,YAAYI,gBAAiB,MAKvCj+C,EAAQC,QAAQ++C,EAAuB7+C,WAAW,SAAC1/B,EAAOu9B,GACxDv9B,EAAMm9E,kBAAoBx6C,IAAM,GAAI3iC,EAAMm9E,kBAAmB5/C,EAAOE,YAItE8B,EAAQC,QAAQ8+C,EAAgB5+C,WAAW,SAAC1/B,EAAOu9B,GACjDv9B,EAAM+4B,QAAU4J,IAAM,GAAI3iC,EAAM+4B,QAASwE,EAAOE,YAIlD8B,EAAQC,QAAQ6+C,EAAgB3+C,WAAW,SAAC1/B,EAAOu9B,GACjD,MAAgEA,EAAOE,QAA/D3F,EAAR,EAAQA,OAAQzC,EAAhB,EAAgBA,aAAcqC,EAA9B,EAA8BA,gBAAiBC,EAA/C,EAA+CA,aAG/C,GAAI33B,EAAMq1B,eAAiBA,EAAc,CACvC,IAAMirD,EAAcC,IAAMh/E,OAAOuuB,OAAO9vB,EAAM24B,QAAS,SACjD6nD,EAAcvoD,YAClBqoD,EAAYvsD,MAAQ,EACpBusD,EAAYpoD,eAAiBR,EAAkB2yB,KAGjDrqD,EAAM24B,OAAO6nD,EAAYzsD,OAASysD,EAGpCxgF,EAAM83B,OAASA,EACf93B,EAAMq1B,aAAeA,EACrBr1B,EAAM03B,gBAAkBA,EACxB13B,EAAM23B,aAAeA,KAIvB4H,EAAQC,QAAQk+C,EAAsBh+C,WAAW,SAAC1/B,EAAOu9B,GAMvD,IALA,MACEA,EAAOE,QADD3F,EAAR,EAAQA,OAAQzC,EAAhB,EAAgBA,aAAcqC,EAA9B,EAA8BA,gBAAiBG,EAA/C,EAA+CA,cAAec,EAA9D,EAA8DA,OAAQwkD,EAAtE,EAAsEA,kBAAmBpkD,EAAzF,EAAyFA,QAEnF0nD,EAAiC,GACjCp3C,EAAe1Q,EAAOtD,GAEnBtL,EAAI,EAAGA,GAAKwgC,IAAoBxgC,IACvC02D,EAAajjD,KAAKvF,YAAwB5C,EAAetL,EAAGsf,EAAanR,eAAiBR,EAAkB3N,IAG9G,OAAO,2BACF/pB,GADL,IAEE83B,SACAzC,eACAqC,kBACAG,gBACAslD,oBACApkD,UACAJ,OAAQgK,IAAM,GAAIhK,EAAQD,YAAc+nD,SAK5ClhD,EAAQC,QAAQ0+C,EAAWx+C,WAAW,SAAC1/B,EAAOu9B,GAC5Cv9B,EAAM24B,OAASgK,IAAM,GAAI3iC,EAAM24B,OAAX,eACjB4E,EAAOE,QAAQ1J,MAAMjyB,WAAay7B,EAAOE,aAK9C8B,EAAQC,QAAQ4+C,EAAY1+C,WAAW,SAAC1/B,EAAOu9B,GAC7Cv9B,EAAM24B,OAASgK,IAAM,GAAI3iC,EAAM24B,OAAQ4E,EAAOE,YAIhD8B,EAAQC,QAAQg/C,EAAa/+C,SAAS,SAACz/B,GACrCA,EAAM68E,mBAAoB,KAE5Bt9C,EAAQC,QAAQg/C,EAAajuC,UAAU,SAACvwC,GACtCA,EAAM68E,mBAAoB,KAE5Bt9C,EAAQC,QAAQg/C,EAAa9+C,WAAW,SAAC1/B,EAAOu9B,GAAY,IAAD,EACzD,EAA0BA,EAAOE,QAAzBplB,EAAR,EAAQA,QAAS6c,EAAjB,EAAiBA,KAEjBl1B,EAAM68E,mBAAoB,EAC1B78E,EAAMgwE,QAAQ33D,GAAWsqB,IAAM,GAAD,UAAK3iC,EAAMgwE,QAAQ33D,UAAnB,QAA+B,GAAI6c,MAInEqK,EAAQC,QAAQi/C,EAAiBh/C,SAAS,SAACz/B,GACzCA,EAAM68E,mBAAoB,KAE5Bt9C,EAAQC,QAAQi/C,EAAiBluC,UAAU,SAACvwC,GAC1CA,EAAM68E,mBAAoB,KAE5Bt9C,EAAQC,QAAQi/C,EAAiB/+C,WAAW,SAAC1/B,EAAOu9B,GAClD,MAAwDA,EAAOE,QAAvDvI,EAAR,EAAQA,KAAMioD,EAAd,EAAcA,kBAAmBuB,EAAjC,EAAiCA,KAAM1B,EAAvC,EAAuCA,aAEvCh9E,EAAM68E,mBAAoB,EAC1B78E,EAAMgwE,QAAmB,IAAT0O,EAAaxpD,EAAb,sBAAwBl1B,EAAMgwE,SAA9B,YAA0C96C,IAC1Dl1B,EAAMm9E,kBAAN,2BAA+Bn9E,EAAMm9E,mBAAsBA,GAC3Dn9E,EAAMk9E,iBAAmBl9E,EAAMgwE,QAAQ1/C,SAAW0sD,GAAgC,IAAhB9nD,EAAK5E,OACvEtwB,EAAMg9E,aAAeA,EACrBh9E,EAAMi9E,mBAAqByB,QAM1B,EASHmB,EAAiBhiD,QARnBoiD,EADK,EACLA,kBAEAC,GAHK,EAELC,gBAFK,EAGLD,kBACAF,EAJK,EAILA,oBAEAI,GANK,EAKLL,oBALK,EAMLK,oBACAC,EAPK,EAOLA,gBACAP,EARK,EAQLA,qBAGaD,MAAf,S,8JChiBMa,EAAe94E,IAAcU,KACrBq4E,EAASvrE,IAAfvN,KAMO,SAAS+4E,EAAaznE,GACnC,IAAQ1W,EAAYH,cAAZG,QACFo+E,EAAUx2D,YAAgBlR,EAAU1W,GACpCq+E,EAA6Dn/D,mBACjE,iBAAM,CACJ,CAAClf,GAAWo+E,GAAW7wD,YAAe2wD,EAAME,QAAWphF,EAAY0Z,EAAU1W,EAAUk+E,OAAOlhF,GAC9F,EAAQ,OAAPohF,QAAO,IAAPA,OAAA,EAAAA,EAASn2D,OAAOg2D,SAAgBjhF,EAAYohF,EAASp+E,IAAYiF,IAAQD,QAAUi5E,OAAejhF,GACnG,CAACgD,EAAUk+E,OAAOlhF,EAAWgD,IAAYiF,IAAQD,QAAUi5E,OAAejhF,MAE5E,CAACgD,EAAS0W,EAAU0nE,IAEtB,EAA8F13B,YAAS23B,GAAvG,yCAAQC,EAAR,KAAsBC,EAAtB,2BAAiCC,EAAjC,KAAgDC,EAAhD,2BAA4DC,EAA5D,KAA8EC,EAA9E,KAEA,OAAOz/D,mBAAQ,WACb,GAAKxI,GAAa0nE,GAAYp+E,EAI9B,GAAIo+E,EAAQn2D,OAAOi2D,IACjB,GAAIO,EAAU,CACZ,IAAM7/B,EAAQ6/B,EAAShI,QAAQyH,GAC/B,OAAO,IAAIrH,IAAMngE,EAAUunE,EAAcr/B,EAAMhB,YAAagB,EAAMjB,gBAHtE,CAQA,GAAIygC,EAAQn2D,OAAOg2D,GACjB,OAAO,IAAIpH,IAAMoH,EAAcA,EAAc,IAAK,KAGpD,IAAMW,EAAgB,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAASM,UAAUX,GACtCY,EACJF,GAAoBD,EAAcA,EAAYlI,QAAQyH,GAAMxH,MAAMkI,GAAkBnpE,IAAMN,IAAKC,OAAO,GAIxG,GACEopE,IAAkBh4B,IAAUW,QAC5Bs3B,GACAA,EAASI,UAAUZ,GAAchM,YAAY6M,GAC7C,CACA,IAAMlgC,EAAQ6/B,EAAShI,QAAQ2H,GAC/B,OAAO,IAAIvH,IAAMngE,EAAUunE,EAAcr/B,EAAMhB,YAAagB,EAAMjB,WAEpE,GAAI2gC,IAAiB93B,IAAUW,QAAUo3B,GAAWG,IAAqBl4B,IAAUW,QAAUw3B,GACvFA,EAAYE,UAAUZ,GAAchM,YAAY,MAAQsM,EAAQM,UAAUX,GAAMjM,YAAY,KAAM,CACpG,IAAM8M,EAAeJ,EAAYlI,QAAQwH,GACnCe,EAAmBT,EAAQ9H,QAAQyH,GACnCe,EAAYF,EAAavpE,SAASwpE,GAAkBxgC,SAC1D,OAAO,IAAIq4B,IAAMngE,EAAUunE,EAAcgB,EAAUrhC,YAAaqhC,EAAUthC,eAK7E,CAAC39C,EAAS0W,EAAU6nE,EAASD,EAAcK,EAAaD,EAAkBD,EAAUD,EAAeJ,IAGjG,IAAM1f,EAAmB,WAE9B,OADsByf,EAAaxrE,IAAOpN,OAI/B25E,EAAkB,WAE7B,OADqBf,EAAaxrE,IAAOvN,Q,wSC9CrC+5E,EAAiBp+E,YAAOQ,IAAPR,CAAH,6CASb,SAASq+E,EAAT,GAAkF,IAAnDn7D,EAAkD,EAAlDA,KAAkD,IAA5Cg2D,qBAA4C,SAC9ErkE,EAAY/V,cAAZ+V,QAEApW,EAAMC,cAAND,EAEF2rB,EAAY8uD,EAAgBh2D,EAAKC,OAAS8D,YAAe/D,EAAKC,QAC9DkH,EAAY6uD,EAAgBh2D,EAAKE,OAAS6D,YAAe/D,EAAKE,QAEpE,EAAgChnB,oBAAS,GAAzC,mBAAOkiF,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBx5B,YAAe,OAACnwC,QAAD,IAACA,SAAW5Y,EAAWinB,EAAKktC,gBAC7DquB,EAAkBjrB,YAAetwC,EAAKktC,gBAEtCokB,EACFgK,GAAqBC,GAAmBrqE,IAAKsqE,mBAAmBD,EAAgB/pE,IAAK8pE,EAAgB9pE,KACnG,IAAIP,IAAQqqE,EAAgB9pE,IAAK+pE,EAAgB/pE,UACjDzY,EAEN,EACIinB,GACAu7D,GACAD,GAEFpqE,IAAKsqE,mBAAmBD,EAAgB/pE,IAAK8pE,EAAgB9pE,KACzD,CACEwO,EAAKy7D,kBAAkBz7D,EAAKC,OAAQs7D,EAAiBD,GAAiB,GACtEt7D,EAAKy7D,kBAAkBz7D,EAAKE,OAAQq7D,EAAiBD,GAAiB,IAExE,MAACviF,OAAWA,GAVlB,mBAAO2iF,EAAP,KAAwBC,EAAxB,KAYA,OACE,mCACGL,GAAmBpqE,IAAK88D,YAAYsN,EAAgB9pE,IAAKN,IAAKC,OAAO,IACpE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY1T,IAAI,OAAhB,UACE,cAACy9E,EAAD,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9gE,MAAM,YAAY26C,MAAI,EAA5B,SACGx5D,EAAE,kCAIT,eAAC2/E,EAAD,CAAgB1gE,QAAS,kBAAM6gE,GAAaD,IAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAoBl0D,UAAWA,EAAWC,UAAWA,EAAWH,QAAM,EAACI,KAAM,KAC7E,eAAC,KAAD,CAAM4tC,OAAK,EAAC56C,MAAM,aAAlB,UACG8M,EAAUqD,OADb,IACsBpD,EAAUoD,OADhC,YAIF,cAAC,IAAD,UACE,cAAC,KAAD,UAAO+wD,EAAkBA,EAAgB9gC,cAAc,GAAK,WAGhE,eAAC,IAAD,CAAY/8C,IAAI,MAAhB,UACE,eAACy9E,EAAD,WACE,eAAC,KAAD,CAAM9gE,MAAM,aAAa46C,OAAK,EAA9B,UACGz5D,EAAE,iBADL,OAGA,cAAC,KAAD,UAAO+1E,EAAmB,UAAMA,EAAoBnyE,QAAQ,GAAlC,KAA0C,SAEtE,eAAC+7E,EAAD,WACE,eAAC,KAAD,CAAM9gE,MAAM,aAAa46C,OAAK,EAA9B,UACGz5D,EAAE,iBAAkB,CAAEi6D,MAAOtuC,EAAUqD,SAD1C,OAGCmxD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMjmB,GAAG,MAAT,gBAAgBimB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBlhC,cAAc,OAGjD,OAGJ,eAAC0gC,EAAD,WACE,eAAC,KAAD,CAAM9gE,MAAM,aAAa46C,OAAK,EAA9B,UACGz5D,EAAE,iBAAkB,CAAEi6D,MAAOruC,EAAUoD,SAD1C,OAGCoxD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMlmB,GAAG,MAAT,gBAAgBkmB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBnhC,cAAc,OAGjD,iBAQZ,cAAC,IAAD,UACE,eAAC,KAAD,CAAMsa,SAAS,OAAOxtC,MAAO,CAAE2tC,UAAW,UAA1C,UACE,sBAAM2mB,KAAK,MAAM,aAAW,eAA5B,0BAEQ,IACPrgF,EACC,qNASC,SAASsgF,EAAT,GAAkE,IAAtC77D,EAAqC,EAArCA,KAASvF,EAA4B,iBACtE9I,EAAY/V,cAAZ+V,QAEFuV,EAAYnD,YAAe/D,EAAKC,QAChCkH,EAAYpD,YAAe/D,EAAKE,QAEtC,EAAgChnB,oBAAS,GAAzC,mBAAOkiF,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBx5B,YAAe,OAACnwC,QAAD,IAACA,SAAW5Y,EAAWinB,EAAKktC,gBAC7DquB,EAAkBjrB,YAAetwC,EAAKktC,gBAEtCokB,EACFgK,GAAqBC,GAAmBrqE,IAAKsqE,mBAAmBD,EAAgB/pE,IAAK8pE,EAAgB9pE,KACnG,IAAIP,IAAQqqE,EAAgB9pE,IAAK+pE,EAAgB/pE,UACjDzY,EAEN,EACIinB,GACAu7D,GACAD,GAEFpqE,IAAKsqE,mBAAmBD,EAAgB/pE,IAAK8pE,EAAgB9pE,KACzD,CACEwO,EAAKy7D,kBAAkBz7D,EAAKC,OAAQs7D,EAAiBD,GAAiB,GACtEt7D,EAAKy7D,kBAAkBz7D,EAAKE,OAAQq7D,EAAiBD,GAAiB,IAExE,MAACviF,OAAWA,GAVlB,mBAAO2iF,EAAP,KAAwBC,EAAxB,KAYA,OACE,eAAC,IAAD,yBAAMr0D,MAAO,CAAEjqB,aAAc,SAAcod,GAA3C,cACE,eAAC,IAAD,CAAMq7C,eAAe,gBAAgB8lB,KAAK,SAASphE,QAAS,kBAAM6gE,GAAaD,IAAWn6D,EAAE,OAA5F,UACE,eAAC,IAAD,CAAM06C,cAAc,SAApB,UACE,eAAC,IAAD,CAAMiB,WAAW,SAASZ,GAAG,MAA7B,UACE,cAAC,IAAD,CAAoB90C,UAAWA,EAAWC,UAAWA,EAAWC,KAAM,KACtE,cAAC,KAAD,CAAM2tC,MAAI,EAACU,GAAG,MAAd,SACIvuC,GAAcC,EAAf,UAAqDD,EAAUqD,OAA/D,YAAyEpD,EAAUoD,QAAxD,cAAC,IAAD,2BAGhC,cAAC,KAAD,CAAMuqC,SAAS,OAAO16C,MAAM,aAA5B,gBACGkhE,QADH,IACGA,OADH,EACGA,EAAiB9gC,cAAc,QAGnC4gC,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,OAGjCA,GACC,eAAC,IAAD,CAAY39E,IAAI,MAAM6pB,MAAO,CAAEnqB,QAAS,QAAxC,UACE,eAAC+9E,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAc9zD,KAAK,OAAO3U,SAAUyU,IACpC,eAAC,KAAD,CAAM9M,MAAM,aAAaq7C,GAAG,MAA5B,oBACUvuC,EAAUqD,aAGrBmxD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMjmB,GAAG,MAAT,gBAAgBimB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBlhC,cAAc,OAGjD,OAIJ,eAAC0gC,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAc9zD,KAAK,OAAO3U,SAAU0U,IACpC,eAAC,KAAD,CAAM/M,MAAM,aAAaq7C,GAAG,MAA5B,oBACUtuC,EAAUoD,aAGrBoxD,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMlmB,GAAG,MAAT,gBAAgBkmB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBnhC,cAAc,OAGjD,OAIJ,eAAC0gC,EAAD,WACE,cAAC,KAAD,CAAM9gE,MAAM,aAAZ,2BACA,cAAC,KAAD,UACGk3D,EAAmB,UACsB,SAAnCA,EAAoBnyE,QAAQ,GAAgB,QAAUmyE,EAAoBnyE,QAAQ,GADrE,KAEhB,SAIPm8E,GAAmBpqE,IAAK88D,YAAYsN,EAAgB9pE,IAAKuC,MACxD,eAAC,IAAD,CAAM4nD,cAAc,SAApB,UACE,cAAC,IAAD,CACEnb,GAAIsc,IACJrP,GAAE,kBAAa9iC,YAAWzD,GAAxB,YAAsCyD,YAAWxD,IACnD24B,QAAQ,UACR9iD,MAAM,OACNg/D,GAAG,MALL,oBASA,cAAC,IAAD,CACExb,GAAIsc,IACJrP,GAAE,eAAU9iC,YAAWzD,GAArB,YAAmCyD,YAAWxD,IAChD24B,QAAQ,OACR6tB,UAAW,cAAC,IAAD,CAASvzD,MAAM,YAC1Bpd,MAAM,OALR,+C,kFC/OR+pB,EAAUjqB,YAAOm+D,IAAPn+D,CAAH,kGAcEg/E,IARc,WAC3B,OACE,cAAC/0D,EAAD,UACE,cAAC,KAAD,Q,8BCdN,IACMg1D,EAAkB,KAClBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAkB,SAgDTC,IAzCQ,SAACC,GACtB,IAAIC,EAAQ31D,KAAK41D,IAAIF,GACfG,EAAW,CACfC,MAAO,EACPC,OAAQ,EACRv3B,KAAM,EACNw3B,MAAO,EACPC,QAAS,EACTP,QAAS,GA8BX,OA3BIC,GAASH,IACXK,EAASC,MAAQ91D,KAAKk2D,MAAMP,EAAQH,GACpCG,GAASE,EAASC,MAAQN,GAGxBG,GAASJ,IACXM,EAASE,OAAS/1D,KAAKk2D,MAAMP,EAAQJ,GACrCI,GAASE,EAASE,OAASR,GAGzBI,GAASL,IACXO,EAASr3B,KAAOx+B,KAAKk2D,MAAMP,EAAQL,GACnCK,GAASE,EAASr3B,KAAO82B,GAGvBK,GAASN,IACXQ,EAASG,MAAQh2D,KAAKk2D,MAAMP,EAAQN,GACpCM,GAASE,EAASG,MAAQX,GAGxBM,GA1CoB,KA2CtBE,EAASI,QAAUj2D,KAAKk2D,MAAMP,EA3CR,IA4CtBA,GA5CsB,GA4CbE,EAASI,SAGpBJ,EAASH,QAAUC,EAEZE,I,uLC7CHM,EAAiB//E,IAAOU,IAAV,8RAOJ,qBAAGy9C,MAAkBkoB,QAAQC,SACvB,qBAAGnoB,MAAkBkJ,OAAO24B,kBAElC,qBAAG7hC,MAAkBkJ,OAAOud,SAItCqb,EAAwBjgF,IAAOU,IAAV,wTAKX,qBAAGy9C,MAAkBkJ,OAAOud,SAC/B,qBAAGzmB,MAAkB+hC,SAASt4B,YAOvC,qBAAGzJ,MAAkB4D,aAAaC,MAKhCm+B,EAAoBngF,YAAOC,IAAPD,CAAH,2WAIP,qBAAGm+C,MAAkBkJ,OAAOud,SAOxC,qBAAGzmB,MAAkB4D,aAAaC,MAIlC,SAACrkC,GAAD,OACAA,EAAMyiE,QACNC,YADA,+XAEIN,GAC2B,qBAAG5hC,MAAkBkJ,OAAO24B,kBACzC,qBAAG7hC,MAAkBpC,QAAQukC,YAI3CL,GAIoB,qBAAG9hC,MAAkBkJ,OAAO24B,kBAGlC,qBAAG7hC,MAAkBpC,QAAQukC,gBAY7CC,EAAevgF,IAAOwgF,GAAV,qGAIL,qBAAGriC,MAAkB+hC,SAASt4B,YAGrC64B,EAAWzgF,IAAO0gF,GAAV,+GAII,qBAAGviC,MAAkBkJ,OAAO24B,kBAiE/BW,IAnDsC,SAAC,GAA2C,IAAzCj+E,EAAwC,EAAxCA,QAASk+E,EAA+B,EAA/BA,eAAmBjjE,EAAY,iBACxFkjE,EAAczhF,iBAAO,MAC3B,EAA4BhD,oBAAS,GAArC,mBAAOgkF,EAAP,KAAeU,EAAf,KACA,EAAsD1kF,mBAAS,GAA/D,mBAAO2kF,EAAP,KAA4BC,EAA5B,KAEMC,EAAW,SAAC9b,GAChB2b,GAAWV,GACXjb,EAAM+b,mBAuBR,OAXAxkF,qBAAU,WACR,IAAMykF,EAAqB,WACzBL,GAAU,IAIZ,OADAvT,SAASK,iBAAiB,QAASuT,GAC5B,WACL5T,SAASM,oBAAoB,QAASsT,MAEvC,IAGD,eAAChB,EAAD,yBAAmBC,OAAQA,GAAYziE,GAAvC,cACE,cAACoiE,EAAD,CAAgBriE,QAASujE,EAAzB,SACE,cAAC,KAAD,UAAOv+E,EAAQq+E,GAAqBra,UAEtC,cAAC,IAAD,CAAmBppD,MAAM,OAAOI,QAASujE,IACzC,cAAChB,EAAD,UACE,cAACM,EAAD,CAActkC,IAAK4kC,EAAnB,SACGn+E,EAAQshB,KAAI,SAACo9D,EAAQvtD,GAAT,OACXA,IAAUktD,EACR,cAACN,EAAD,CAAU/iE,SA9BG2jE,EA8BsBxtD,EA9BI,WACjDmtD,EAAuBK,GACvBP,GAAU,GAENF,GACFA,EAAel+E,EAAQ2+E,MAyBf,SACE,cAAC,KAAD,UAAOD,EAAO1a,SADgC0a,EAAO1a,OAGrD,KAjCU,IAAC2a,e,0CChHrBC,E,KAAUthF,EAAOU,IAAV,miBA4BE4gF,O,iOClBTC,EAAcvhF,IAAOU,IAAV,uPACK,gBAAGy9C,EAAH,EAAGA,MAAH,SAAUqjC,QAAyB,cAAgBrjC,EAAMkJ,OAAOO,YAOxE,qBAAG45B,SAA0B,aACnB,gBAAGrjC,EAAH,EAAGA,MAAH,SAAUqjC,SAA0BrjC,EAAMkJ,OAAOC,cAGnD,gBAAGnJ,EAAH,EAAGA,MAAH,SAAUqjC,SAAyBrjC,EAAMkJ,OAAOO,YACzD,qBAAG45B,SAAyB,SAG1B,SAASC,EAAT,GAQX,IAPFxiF,EAOC,EAPDA,QACAyiF,EAMC,EANDA,SACAva,EAKC,EALDA,iBAMQ1oE,EAAMC,cAAND,EACR,OACE,eAAC,IAAD,CAAYkC,IAAI,KAAhB,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMq3D,SAAS,OAAf,SAAuBv5D,EAAE,kBACzB,cAACg9C,EAAA,EAAD,CAAgBC,KAAMj9C,EAAE,uDAAwDk6D,GAAG,WAErF,eAAC,IAAD,CAASh4D,IAAI,OAAb,UACE,eAAC4gF,EAAD,CACE7jE,QAAS,WACFypD,GAAqB36C,YAAe26C,EAAkBvxD,MACzD8rE,EAAS9rE,MAGb4rE,QAASra,IAAqBvxD,IANhC,UAQE,cAAC,IAAD,CAAcD,SAAUC,IAAO4U,MAAO,CAAEC,YAAa,KACrD,cAAC,KAAD,sBAEAxrB,EAAU2X,IAAgB3X,GAAW,IAAI+kB,KAAI,SAACxB,GAC9C,IAAMsjD,EAAWqB,aAA4B7iE,KAAS6iE,EAAiB70D,UAAYkQ,EAAMlQ,QACzF,OACE,eAACivE,EAAD,CAAa7jE,QAAS,kBAAOooD,GAAY4b,EAASl/D,IAAQg/D,QAAS1b,EAAnE,UACE,cAAC,IAAD,CAAcnwD,SAAU6M,EAAOgI,MAAO,CAAEC,YAAa,KACrD,cAAC,KAAD,UAAOjI,EAAMiL,WAFmEjL,EAAMlQ,kB,qFC9C9FqvE,EAAe3hF,IAAOU,IAAV,0MAQL,qBAAGkhF,IAAiB,MAAQ,OAGnCC,EAAY7hF,YAAO8hF,IAAP9hF,CAAH,mGAIH,qBAAGm+C,MAAkBkJ,OAAO3uB,WAGlCqpD,EAAe/hF,IAAOU,IAAV,8IAQH,SAASshF,EAAT,GAYX,IAAD,IAXDx/D,EAWC,EAXDA,MACAgI,EAUC,EAVDA,MACAo3D,EASC,EATDA,IACAK,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQjjF,EAAYH,cAAZG,QAEAR,EAAMC,cAAND,EAGFgyE,EAAoB7kD,cACpBonB,EAAO/zC,IAAO,OAAIwxE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoBxxE,UAAxB,iBAAI,EAA+BujB,EAAMlQ,gBAAzC,aAAI,EAA+C0gC,MAGjEmvC,EAAU51D,YAAoB/J,GAC9BknC,EAAWz9B,YAAiBzJ,GAElC,OACE,eAACm/D,EAAD,CAAcn3D,MAAOA,EAArB,UACE,cAACD,EAAA,EAAD,CAAc5U,SAAU6M,EAAO8H,KAAK,OAAOE,MAAO,CAAE43D,QAASR,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAYjhF,IAAI,MAAM6pB,MAAO,CAAE43D,QAASR,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAOp/D,EAAMiL,SACb,cAAC,KAAD,CAAMnQ,MAAM,eAAeq7C,GAAG,MAA9B,SACE,cAACopB,EAAD,CAAczoD,MAAO9W,EAAM0D,KAA3B,SAAkC1D,EAAM0D,YAG3C8sB,GAAQA,EAAKnoB,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAMqtC,OAAK,EAAC6H,GAAG,MAAMziD,MAAM,aAA3B,UACG7e,EAAE,OADL,IACcu0C,EAAK9sB,QAEnB,cAAC,IAAD,CAAU2E,QAASmoB,EAAKnoB,QAASP,KAAK,eAI1Co/B,GAAay4B,EAab,eAAC,IAAD,CAAU33D,MAAO,CAAEwuD,SAAU,eAA7B,UACE,cAAC6I,EAAD,IACA,cAAC,KAAD,CAAMvkE,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEpd,MAAM,cACNwd,QAAS,WACHwkE,GACFA,EAAe1/D,GAEjBy/D,KANJ,SASGxjF,EAAE,eC1Eb,SAAS4jF,EAAY1sE,GACnB,OAAOA,aAAoBrR,IAAQqR,EAASrD,QAAUqD,IAAaC,IAAQ,QAAU,GAGvF,IAAM0sE,EAAoBtiF,YAAOuiF,KAAPviF,CAAH,yHAOjBwiF,EAAkBxiF,IAAOU,IAAV,gIAQrB,SAAS2c,EAAT,GAA4D,IAAzCpb,EAAwC,EAAxCA,QACjB,OAAO,cAACqgF,EAAD,CAAmBhpD,MAAOr3B,EAAQ82E,UAAlC,SAA8C92E,EAAQy7C,cAAc,KAG7E,IAAM+kC,EAAWziF,YAAOQ,IAAPR,CAAH,+QAMF,qBAAGgxE,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAG7yB,EAAH,EAAGA,MAAH,SAAU6yB,UAA4B7yB,EAAMkJ,OAAOC,cAE9D,gBAAG0pB,EAAH,EAAGA,SAAUlL,EAAb,EAAaA,SAAb,OAA6BkL,GAAYlL,EAAW,GAAM,KAGvE,SAAS4c,EAAT,GAYI,IAXF/sE,EAWC,EAXDA,SACA+rE,EAUC,EAVDA,SACAiB,EASC,EATDA,WACAC,EAQC,EARDA,cACAp4D,EAOC,EAPDA,MAQQ3V,EAAY/V,cAAZ+V,QACFnX,EAAM2kF,EAAY1sE,GAClBktE,EAAoBp3D,cACpBq3D,EAAmBrtE,YAAcotE,EAAmBltE,GACpDotE,EAAcx2D,YAAoB5W,GAClC1T,EAAUsjD,YAAkB,OAAC1wC,QAAD,IAACA,SAAW5Y,EAAW0Z,GAGzD,OACE,eAAC8sE,EAAD,CACEj4D,MAAOA,EACP+8C,UAAS,qBAAgB7pE,GACzBggB,QAAS,kBAAOilE,EAAa,KAAOjB,KACpC1Q,SAAU2R,EACV7c,SAAU8c,EALZ,UAOE,cAAC,IAAD,CAAcjtE,SAAUA,EAAU2U,KAAK,SACvC,eAACpY,EAAA,EAAD,WACE,cAAC,KAAD,CAAM+lD,MAAI,EAAV,SAAYtiD,EAAS8X,SACrB,eAAC,KAAD,CAAMnQ,MAAM,aAAa46C,OAAK,EAAC8qB,UAAQ,EAACxX,SAAS,QAAjD,WACIsX,GAAoBC,GAAe,uBADvC,IAC2DptE,EAASuQ,WAGtE,cAAC,IAAD,CAAUsE,MAAO,CAAEy4D,YAAa,YAAhC,SACGhhF,EAAU,cAACob,EAAD,CAASpb,QAASA,IAAc4S,EAAU,cAAC4pD,EAAA,EAAD,IAAmB,UAMjE,SAASykB,EAAT,GAsBX,IArBFlP,EAqBC,EArBDA,OACA9uB,EAoBC,EApBDA,WACAiiB,EAmBC,EAnBDA,iBACAR,EAkBC,EAlBDA,iBACAG,EAiBC,EAjBDA,cACAqc,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACAnB,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACAmB,EAYC,EAZDA,WAaMC,EAAqCnlE,mBAAQ,WACjD,IAAIolE,EAAsCH,EAAO,CAAII,IAAS5tE,OAAb,mBAAuBsvC,IAAcA,EAItF,YAHmBjpD,IAAfonF,IACFE,EAAS,sBAAOA,EAAU5gD,MAAM,EAAG0gD,IAA1B,MAAuCpnF,GAAvC,YAAqDsnF,EAAU5gD,MAAM0gD,EAAYE,EAAUz2D,WAE/Fy2D,IACN,CAACF,EAAYn+B,EAAYk+B,IAEpBnkF,EAAYH,cAAZG,QAEAR,EAAMC,cAAND,EAEFktB,EAEFD,cAEE3rB,EAAMtC,uBACV,YAA6B,IAA1BE,EAAyB,EAAzBA,KAAMk2B,EAAmB,EAAnBA,MAAOrJ,EAAY,EAAZA,MACR7U,EAAqBhY,EAAKk2B,GAC1B8uD,EAAa9sE,QAAQsxD,GAAoB36C,YAAe26C,EAAkBxxD,IAC1EitE,EAAgB/sE,QAAQixD,GAAiBt6C,YAAes6C,EAAenxD,IAGvE6M,EAAQqE,YAAgBlR,EAAU1W,GAElCwkF,EAAa93D,GAAkBnJ,GAASzkB,OAAOC,KAAK2tB,GAAgBG,SAAStJ,EAAMlQ,SAEzF,OAAIuhB,IAAUwvD,GAAe1lF,EAkBzB8lF,GAAcjhE,EAEd,cAACw/D,EAAD,CAAWx3D,MAAOA,EAAOhI,MAAOA,EAAOy/D,eAAgBA,EAAgBC,eAAgBA,EAAgBN,KAAG,IAI5G,cAACc,EAAD,CACEl4D,MAAOA,EACP7U,SAAUA,EACVgtE,WAAYA,EACZjB,SAlCiB,kBAAM/a,EAAiBhxD,IAmCxCitE,cAAeA,IA3Bf,cAACJ,EAAD,CAAiBh4D,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAenqB,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM23D,OAAK,EAAX,SAAaz5D,EAAE,gDACf,cAACg9C,EAAA,EAAD,CACEC,KAAMj9C,EACJ,sGAEFk6D,GAAG,iBAuBjB,CACE15D,EACA0sB,EACAg7C,EACAG,EACAK,EACA+a,EACAD,EACAoB,EACA5kF,IAIEilF,EAAUjmF,uBAAY,SAACo2B,EAAel2B,GAAhB,OAA8B0kF,EAAY1kF,EAAKk2B,MAAS,IAEpF,OACE,cAAC,IAAD,CACEmgD,OAAQA,EACR/3B,IAAKknC,EACLjjF,MAAM,OACNojF,SAAUA,EACVK,UAAWL,EAASx2D,OACpB82D,SAAU,GACVF,QAASA,EAPX,SASG3jF,I,aC7JQ8jF,MAXf,SAA4BtmC,GAC1B,IAAMmH,EAAWc,cACXs+B,EAAa3lE,mBAAQ,kBAxB7B,SAA4BumC,GAG1B,OAAO,SAAoBlhC,EAAeC,GAKxC,IArBuBsgE,EAAwBC,EAwBzCC,GAxBiBF,EAqBNr/B,EAASlhC,EAAOlR,SArBc0xE,EAsB9Bt/B,EAASjhC,EAAOnR,SArB/ByxE,GAAYC,EACPD,EAAS7S,YAAY8S,IAAa,EAAID,EAAShpB,QAAQipB,GAAY,EAAI,EAE5ED,GAAYA,EAAS7S,YAAY,MAC3B,EAEN8S,GAAYA,EAAS9S,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhB+S,EAA0BA,EAE1BzgE,EAAOiK,QAAUhK,EAAOgK,OAEnBjK,EAAOiK,OAAOzH,cAAgBvC,EAAOgK,OAAOzH,eAAiB,EAAI,EAEnExC,EAAOiK,QAAchK,EAAOgK,QAAX,EAAyB,GAMlBy2D,CAAkB,OAACx/B,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOvmC,mBAAQ,WACb,OAAIo/B,EACK,SAAC/5B,EAAeC,GAAhB,OAAgE,EAA9BqgE,EAAWtgE,EAAQC,IAEvDqgE,IACN,CAACvmC,EAAUumC,KCpBVK,EAAY,IAAIC,MAAM,YAkJbC,IC9KHC,GD8KGD,GAhJf,YAOyB,IANvBld,EAMsB,EANtBA,iBACAR,EAKsB,EALtBA,iBACAS,EAIsB,EAJtBA,sBACAL,EAGsB,EAHtBA,gBACAkb,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQzjF,EAAMC,cAAND,EACAQ,EAAYH,cAAZG,QAGFslF,EAAYnlF,mBAElB,EAAsChD,mBAAiB,IAAvD,mBAAOgwB,EAAP,KAAoBo4D,EAApB,KACMC,EAAiBtuB,YAAY/pC,EAAa,KAEhD,EAA4BhwB,oBAAkB,GAAvCsoF,EAAP,oBAEMlxC,EAAY5vB,cAGZ+gE,EAAcz3D,YAASu3D,GACvBG,EAAqBr4D,YAAoBo4D,GAE/C,EAAoB5kE,cAAbG,EAAP,oBAEMkjE,EAAmBjlE,mBAAQ,WAC/B,IAAMqvB,EAAIi3C,EAAez+D,cAAcoiD,OACvC,MAAa,KAAN56B,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAACi3C,IAEEI,EAAkBhB,EAAmBa,GAErCI,EAA0B3mE,mBAAQ,WACtC,OAAOkO,YAAatuB,OAAOuuB,OAAOknB,GAAYixC,KAC7C,CAACjxC,EAAWixC,IAETM,EAAwB5mE,mBAAQ,WACpC,OAAO2mE,EAAeltD,KAAKitD,KAC1B,CAACC,EAAgBD,IAEdG,EAAuBhd,YAAuB+c,EAAcN,GAE5DnU,EAAuB7yE,uBAC3B,SAACkY,GACCgxD,EAAiBhxD,GACbuK,GACFikE,EAAUc,SAGd,CAAC/kE,EAAWymD,IAIRue,EAAW9lF,mBAEjB1C,qBAAU,WACRwoF,EAAS1lF,QAAQ2lF,UAChB,IAEH,IAAMC,EAAc3nF,uBAAY,SAAC0nE,GAAW,IAAD,EACnCP,EAAQO,EAAME,OAAO7mE,MACrB6mF,EAAmB3xE,YAAUkxD,GACnC4f,EAAea,GAAoBzgB,GACnC,UAAA2f,EAAU/kF,eAAV,SAAmB8lF,SAAS,KAC3B,IAEGC,EAAc9nF,uBAClB,SAACg1E,GACC,GAAc,UAAVA,EAAE/0E,IAEJ,GAAU,QADA+mF,EAAez+D,cAAcoiD,OAErCkI,EAAqB16D,UAChB,GAAIovE,EAAqBl4D,OAAS,EAAG,CAAC,IAAD,GAExC,UAAAk4D,EAAqB,GAAGv3D,cAAxB,eAAgCzH,iBAAkBy+D,EAAerc,OAAOpiD,eACxC,IAAhCg/D,EAAqBl4D,QAErBwjD,EAAqB0U,EAAqB,OAKlD,CAACA,EAAsB1U,EAAsBmU,IAIzC94D,EAAiBQ,YAAuBs4D,GACxCe,EAAkCxd,YAAuBr8C,EAAgB84D,GAE/E,OACE,mCACE,gCACE,eAAC,IAAD,CAAY9jF,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEwZ,GAAG,qBACH8qD,YAAaxmE,EAAE,gCACf0gE,MAAM,KACNoG,aAAa,MACb/mE,MAAO4tB,EACP6vB,IAAKipC,EACLhgB,SAAUkgB,EACVK,UAAWF,MAGdxe,GACC,cAAC0a,EAAD,CAAaxiF,QAASA,EAASyiF,SAAUpR,EAAsBnJ,iBAAkBA,OAGpFwd,IAAgBC,EACf,cAAC1yE,EAAA,EAAD,CAAQsY,MAAO,CAAEnqB,QAAS,SAAU2zE,OAAQ,QAA5C,SACE,cAACgO,EAAD,CAAWx/D,MAAOmiE,EAAa1C,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApB8C,QAAoB,IAApBA,OAAA,EAAAA,EAAsBl4D,QAAS,IAA2B,OAAtB04D,QAAsB,IAAtBA,OAAA,EAAAA,EAAwB14D,QAAS,EACvE,cAAC,IAAD,CAAK5C,OAAO,aAAZ,SACE,cAACg5D,EAAD,CACElP,OAAQ,IACRoP,QAASA,EACTl+B,WACEsgC,EAAyBR,EAAqBrgE,OAAO6gE,GAA0BR,EAEjF3B,WAAY13D,GAAkBq5D,EAAuBA,EAAqBl4D,YAAS7wB,EACnF0qE,iBAAkB2J,EAClBxJ,cAAeM,EACfD,iBAAkBA,EAClBgc,aAAcoB,EACdtC,eAAgBA,EAChBC,eAAgBA,MAIpB,cAAChwE,EAAA,EAAD,CAAQsY,MAAO,CAAEnqB,QAAS,OAAQ2zE,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAM12D,MAAM,aAAa66C,UAAU,SAAS+G,GAAG,OAA/C,SACGzgE,EAAE,+B,yGCrKL6lF,O,mBAAAA,I,mBAAAA,I,6BAAAA,I,4BAAAA,Q,KAOGA,I,SCkBf,IAAMr6D,GAAUjqB,YAAOkS,IAAPlS,CAAH,+DAKP0lF,GAAa1lF,YAAOD,IAAPC,CAAH,4LACM,gBAAG2lF,EAAH,EAAGA,OAAQxnC,EAAX,EAAWA,MAAX,OAAwBwnC,EAAM,UAAMxnC,EAAMkJ,OAAO3uB,QAAnB,MAAiC,iBAEnE,gBAAGitD,EAAH,EAAGA,OAAQxnC,EAAX,EAAWA,MAAX,OAAwBwnC,EAASxnC,EAAMkJ,OAAO3uB,QAAUylB,EAAMkJ,OAAOu+B,YAOvF,SAASC,GAAiBz5C,GACxB,MAAM,YAAN,OAAmBA,EAAQ/tC,QAAQ,MAAO,MAG5C,IAAMynF,GAAUjhE,gBAAK,YAAoD,IAvB/C+nB,EAuBcR,EAAgC,EAAhCA,QAChC25C,EAAa5lE,cAAkD,SAAC3jB,GAAD,OAAWA,EAAMszC,MAAM5D,SACtFlsB,EAAWC,eACjB,EAAkD8lE,EAAW35C,GAA5C4G,EAAjB,EAAQxzC,QAA8By8B,EAAtC,EAAuB8P,cAEjB2d,EAAWzV,YAAgB7H,GAEzB3tC,EAAMC,cAAND,EAEFunF,EAAyBvoF,uBAAY,WACpCw+B,GACLjc,EAASstB,aAAiBlB,MACzB,CAACpsB,EAAUosB,EAASnQ,IAEjBgqD,EAAmBxoF,uBAAY,WAE/BglD,OAAOyjC,QAAQ,sDACjBlmE,EAASktB,aAAWd,MAErB,CAACpsB,EAAUosB,IAER+5C,EAAmB1oF,uBAAY,WACnCuiB,EAASotB,aAAWhB,MACnB,CAACpsB,EAAUosB,IAERg6C,EAAoB3oF,uBAAY,WACpCuiB,EAASqtB,aAAYjB,MACpB,CAACpsB,EAAUosB,IAEd,EAA+CwP,aAC7C,gCACE,cAAC,KAAD,UAAO5I,IAtDapG,EAsDYoG,EAAKpG,QArDnC,IAAN,OAAWA,EAAQy5C,MAAnB,YAA4Bz5C,EAAQ05C,MAApC,YAA6C15C,EAAQ25C,UAsDjD,cAAC,KAAD,CAAc5iC,UAAQ,EAACC,KAAI,gDAA2CxX,GAAtE,SACG3tC,EAAE,SAEL,cAAC,IAAD,CAAQukD,QAAQ,SAASmc,MAAM,KAAKzhD,QAASuoE,EAAkBjV,SAA6C,IAAnCjzE,OAAOC,KAAK+nF,GAAYj5D,OAAjG,SACGruB,EAAE,YAEJw9B,GACC,cAAC,IAAD,CAAQ+mB,QAAQ,OAAOtlC,QAASsoE,EAAwBx7D,MAAO,CAAEwtC,SAAU,QAA3E,SACGv5D,EAAE,oBAIT,CAAEk9C,UAAW,YAAaE,QAAS,UAf7BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAkB5B,OAAKhJ,EAGH,eAAC0yC,GAAD,CAAYC,OAAQj8B,EAAwBvvC,GAAI0rE,GAAiBz5C,GAAjE,UACG4P,GAAkBD,EAClB/I,EAAKnoB,QACJ,cAAC,IAAD,CAAUP,KAAK,OAAOE,MAAO,CAAEC,YAAa,QAAUI,QAASmoB,EAAKnoB,QAASC,IAAG,UAAKkoB,EAAK9sB,KAAV,gBAEhF,qBAAKsE,MAAO,CAAEtqB,MAAO,OAAQ8zE,OAAQ,OAAQvpD,YAAa,UAE5D,eAACvY,EAAA,EAAD,CAAQsY,MAAO,CAAEg8D,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAMvuB,MAAI,EAAV,SAAYjlB,EAAK9sB,SAEnB,eAAC,IAAD,CAAUuyC,GAAG,MAAb,UACE,eAAC,KAAD,CAAMT,SAAS,OAAO+H,GAAG,MAAM6T,cAAc,YAA7C,UACG5gC,EAAKphC,OAAOkb,OADf,IACwBruB,EAAE,aAE1B,sBAAMw9C,IAAKH,EAAX,SACE,cAAC,IAAD,CAASx+B,MAAM,OAAOpd,MAAM,iBAIlC,cAAC,KAAD,CACE4wE,QAASpnB,EACTwb,SAAU,WACJxb,EACF08B,IAEAD,SA1B2B/5C,GAHnB,QAqCdq6C,GAAgBzmF,IAAOU,IAAV,sFAqKJgmF,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwCzqF,mBAAiB,IAAzD,mBAAO0qF,EAAP,KAAqBC,EAArB,KAEQtoF,EAAMC,cAAND,EAEFqxC,EAAQoD,cAGR7G,EAAiBsH,cACvB,EAAoCv3C,qBAApC,mBAAO4qF,EAAP,KAAmBC,EAAnB,KACAvqF,qBAAU,YACHsqF,GAAc36C,GACjB46C,EAAc56C,KAEf,CAAC26C,EAAY36C,IAEhB,IAAM+4C,EAAc3nF,uBAAY,SAACg1E,GAC/BsU,EAAgBtU,EAAEpN,OAAO7mE,SACxB,IAEG0oF,EAAYzjB,eAEZ0jB,EAAoBhpE,mBAAQ,WAChC,OAAO84C,aAAU6vB,GAAch6D,OAAS,GAAKjX,QAAQ+rD,aAAgBklB,MACpE,CAACA,IAEEM,EAAcjpE,mBAAQ,WAE1B,OADiBpgB,OAAOC,KAAK8xC,GAE1B5rB,QAAO,SAACkoB,GAEP,OAAOv2B,QAAQi6B,EAAM1D,GAAS5sC,WAAa2sC,KAAsBrgB,SAASsgB,MAE3ExU,MAAK,SAACyvD,EAAIC,GACT,IAAiBC,EAAOz3C,EAAMu3C,GAAtB7nF,QACSgoF,EAAO13C,EAAMw3C,GAAtB9nF,QAGR,OAAc,OAAVwnF,QAAU,IAAVA,OAAA,EAAAA,EAAYl7D,SAASu7D,OAAO,OAACL,QAAD,IAACA,OAAD,EAACA,EAAYl7D,SAASw7D,KAC5C,IAEN,OAACN,QAAD,IAACA,OAAD,EAACA,EAAYl7D,SAASu7D,MAAtB,OAA6BL,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAYl7D,SAASw7D,IAC7C,EAGLC,GAAMC,EACDD,EAAGrhE,KAAKF,cAAgBwhE,EAAGthE,KAAKF,eAClC,EACDuhE,EAAGrhE,KAAKF,gBAAkBwhE,EAAGthE,KAAKF,cAClC,EACA,EAEFuhE,GAAY,EACZC,EAAW,EACR,OAEV,CAAC13C,EAAOk3C,IAGX,EAAgC5qF,qBAAhC,mBAAOqrF,EAAP,KAAiBC,EAAjB,KACA,EAAgCtrF,qBAAhC,mBAAOurF,EAAP,KAAiBC,EAAjB,KAEAlrF,qBAAU,WAAM,8CACd,uBAAAC,EAAA,sDACEuqF,EAAUJ,GAAc,GACrB/0C,MAAK,SAACiB,GAAD,OAAU00C,EAAY10C,MAD9B,OAES,kBAAM40C,EAAY,2BAH7B,4CADc,sBAOVT,EAPW,WAAD,wBAQZU,IAEAH,OAAYzrF,GACS,KAAjB6qF,GACFc,EAAY,8BAKK,KAAjBd,GACFc,OAAY3rF,KAEb,CAACirF,EAAWJ,EAAcK,IAG7B,IAAMW,EAAa/pF,OAAOC,KAAK8xC,GAAOhkB,SAASg7D,GAGzCiB,EAAetqF,uBAAY,WAC1BgqF,IACLb,EAAca,GACdd,EAAarC,GAAkB0D,YAC/BnB,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAcc,IAE3D,OACE,eAACx9D,GAAD,WACE,eAAC,IAAD,CAAYtpB,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEwZ,GAAG,iBACHglD,MAAM,KACN8F,YAAaxmE,EAAE,mCACfD,MAAOsoF,EACP5hB,SAAUkgB,MAGbuC,EACC,cAAC,KAAD,CAAMrqE,MAAM,UAAUkN,MAAO,CAAEy9D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,QAELF,GACC,cAAC,IAAD,CAAYj9D,MAAO,CAAE29D,WAAY,GAAjC,SACE,cAAC/gC,EAAA,EAAD,CAAM/mD,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACGonF,EAAS58D,SAAW,cAAC,IAAD,CAAUA,QAAS48D,EAAS58D,QAASP,KAAK,SAC/D,eAAC,IAAD,CAAY3pB,IAAI,MAAM6pB,MAAO,CAAE49D,WAAY,QAA3C,UACE,cAAC,KAAD,CAAMnwB,MAAI,EAAV,SAAYwvB,EAASvhE,OACrB,eAAC,KAAD,CAAM5I,MAAM,aAAa46C,OAAK,EAAC0b,cAAc,YAA7C,UACG6T,EAAS71E,OAAOkb,OADnB,IAC4BruB,EAAE,mBAIjCqpF,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAe5nF,MAAM,OAAO6/D,GAAG,SAC/B,cAAC,KAAD,UAAOthE,EAAE,eAGX,cAAC,IAAD,CAAQyB,MAAM,cAAcwd,QAASqqE,EAArC,SACGtpF,EAAE,mBAOf,cAACgoF,GAAD,UACE,cAAC,IAAD,CAAY9lF,IAAI,KAAhB,SACGymF,EAAYpjE,KAAI,SAACooB,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,UC7QpBniB,GAAUjqB,IAAOU,IAAV,4HAOPgrE,GAAS1rE,IAAOU,IAAV,gKASG,SAAS2nF,GAAT,GAMX,IALF1B,EAKC,EALDA,aACAzE,EAIC,EAJDA,eAKQjjF,EAAYH,cAAZG,QAEAR,EAAMC,cAAND,EAER,EAAsCrC,mBAAiB,IAAvD,mBAAOgwB,EAAP,KAAoBo4D,EAApB,KAGMU,EAAW9lF,mBACXgmF,EAAc3nF,uBAAY,SAAC0nE,GAC/B,IAAMP,EAAQO,EAAME,OAAO7mE,MACrB6mF,EAAmB3xE,YAAUkxD,GACnC4f,EAAea,GAAoBzgB,KAClC,IAGG+f,EAAcz3D,YAASd,GAGvBhB,EAA2BC,eAC3Bi9D,EAAc5lE,cAEd6lE,EAAkB9qF,uBAAY,WAC9BwB,GAAWmsB,GACbA,EAAgBpH,KAAI,SAACxB,GACnB,OAAO8lE,EAAYrpF,EAASujB,EAAMlQ,cAGrC,CAACg2E,EAAal9D,EAAiBnsB,IAE5BytC,EAAYvuB,mBAAQ,WACxB,OACElf,GACAmsB,EAAgBpH,KAAI,SAACxB,GAAD,OAClB,eAAC,IAAD,CAAgCtiB,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcyV,SAAU6M,EAAO8H,KAAK,SACpC,cAAC,KAAD,CAAMq5B,UAAQ,EAACC,KAAMjwC,YAAe6O,EAAMlQ,QAAS,UAAWrT,GAAUqe,MAAM,aAAaq7C,GAAG,OAA9F,SACGn2C,EAAMiL,YAGX,eAAC,IAAD,WACE,cAAC,IAAD,CAAYu1B,QAAQ,OAAOtlC,QAAS,kBAAM4qE,EAAYrpF,EAASujB,EAAMlQ,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,KAAD,CAAcsxC,KAAMjwC,YAAe6O,EAAMlQ,QAAS,UAAWrT,UAXhDujB,EAAMlQ,cAgB1B,CAAC8Y,EAAiBnsB,EAASqpF,IAExBE,EAAiC,KAAhBp8D,GAAsB1Y,YAAU0Y,GAEvD,OACE,cAAC,GAAD,UACE,eAACla,EAAA,EAAD,CAAQsY,MAAO,CAAEtqB,MAAO,OAAQsmF,KAAM,OAAtC,UACE,eAAC,IAAD,CAAY7lF,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEwZ,GAAG,qBACHglD,MAAM,KACN8F,YAAY,SACZzmE,MAAO4tB,EACPm5C,aAAa,MACbtpB,IAAKipC,EACLhgB,SAAUkgB,EACV1S,WAAY8V,OAGdA,GAAkB,cAAC,KAAD,CAAMlrE,MAAM,UAAZ,SAAuB7e,EAAE,+BAC5CkmF,GACC,cAAC3C,EAAD,CACEx/D,MAAOmiE,EACP1C,eAAgB,kBAAM0E,EAAarC,GAAkBmE,cACrDvG,eAAgBA,EAChB13D,MAAO,CAAEwpD,OAAQ,oBAItBtnC,EACD,eAACg/B,GAAD,WACE,eAAC,KAAD,CAAMzT,MAAI,EAAC36C,MAAM,aAAjB,iBACG8N,QADH,IACGA,OADH,EACGA,EAAiB0B,OADpB,IACwD,IAA3B1B,EAAgB0B,OAAeruB,EAAE,gBAAkBA,EAAE,oBAEjF2sB,EAAgB0B,OAAS,GACxB,cAAC,IAAD,CAAQk2B,QAAQ,WAAWtlC,QAAS6qE,EAApC,SACG9pF,EAAE,uBCnHjB,IAAMiqF,GAAmB1oF,YAAO2oF,IAAP3oF,CAAH,8CAIP,SAAS4oF,GAAT,GAUX,IATFjC,EASC,EATDA,aACAC,EAQC,EARDA,cACA1E,EAOC,EAPDA,eACA2E,EAMC,EANDA,WAOA,EAAkCzqF,oBAAS,GAA3C,mBAAOysF,EAAP,KAAkBC,EAAlB,KAEQrqF,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,WACE,eAACiqF,GAAD,CACE1c,YAAa6c,EAAY,EAAI,EAC7BE,YAAa,kBAAMD,GAAa,SAACx1B,GAAD,OAAWA,MAC3C6L,MAAM,KACNnc,QAAQ,SACRkc,GAAG,OALL,UAOE,cAAC,IAAD,CAAgBh/D,MAAM,MAAtB,SAA6BzB,EAAE,WAC/B,cAAC,IAAD,CAAgByB,MAAM,MAAtB,SAA6BzB,EAAE,eAEhCoqF,EACC,cAAC,GAAD,CAAalC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAACwB,GAAD,CAAc1B,aAAcA,EAAczE,eAAgBA,O,mBCtB5Dj4D,GAAUjqB,IAAOU,IAAV,qEAKPsoF,GAAUhpF,IAAOU,IAAV,8GAGS,qBAAGy9C,MAAkBkJ,OAAO3L,QA4GnCutC,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAASl2C,EAA+B,EAA/BA,KAAMm2C,EAAyB,EAAzBA,SAC3BhrC,EAAUD,eAAVC,MACFn+B,EAAWC,eAETxhB,EAAMC,cAAND,EAGR,EAAkCrC,oBAAS,GAA3C,mBAAO4iE,EAAP,KAAkBuR,EAAlB,KAEMzgC,EAAQoD,cACRg0C,EAAYzjB,eAGZ2lB,EAASvzE,QAAO,UAACi6B,EAAMo5C,UAAP,aAAC,EAAgBp9C,kBACvC,EAAgC1vC,mBAAwB,MAAxD,mBAAOurF,EAAP,KAAiBC,EAAjB,KAEMyB,EAAgB5rF,uBAAY,WAC5B2rF,IACJxB,EAAY,MACZV,EAAUgC,GACPn3C,MAAK,WACJ/xB,EAASotB,aAAW87C,IACpBC,OAHJ,OAKS,SAACvqE,GACNgpE,EAAYhpE,EAAMo3C,SAClBh2C,EAASktB,aAAWg8C,UAEvB,CAACE,EAAQppE,EAAUknE,EAAWgC,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAYxoF,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAACymD,EAAA,EAAD,CAAM/mD,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACG2yC,EAAKnoB,SAAW,cAAC,IAAD,CAAUA,QAASmoB,EAAKnoB,QAASP,KAAK,SACvD,eAAC,IAAD,CAAY3pB,IAAI,KAAK6pB,MAAO,CAAE49D,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMnwB,MAAI,EAAC8H,GAAG,MAAd,SACG/sB,EAAK9sB,OAER,cAAC8iE,GAAD,IACA,eAAC,KAAD,CAAM9wB,OAAK,EAAC56C,MAAM,aAAaq7C,GAAG,MAAlC,UACG3lB,EAAKphC,OAAOkb,OADf,gBAIF,cAAC,KAAD,CACEorC,OAAK,EACLvU,UAAQ,EACRq/B,UAAQ,EACRxX,SAAS,MACT5nB,KAAI,gDAA2CslC,GALjD,SAOGA,cAOX,cAAC,KAAD,CAASlmC,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAM6b,cAAc,SAApB,UACE,cAAC,KAAD,CAAM7G,SAAS,OAAOG,UAAU,SAAS76C,MAAO6gC,EAAMkJ,OAAOkX,QAASW,GAAG,OAAzE,SACGzgE,EAAE,6BAEL,cAAC,KAAD,CAAM6e,MAAO6gC,EAAMkJ,OAAOkX,QAASW,GAAG,MAAtC,SACGzgE,EACC,6NAGJ,cAAC,KAAD,CAAMw5D,MAAI,EAAC36C,MAAO6gC,EAAMkJ,OAAOkX,QAASW,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAMY,WAAW,SAAjB,UACE,cAAC,IAAD,CACE55C,KAAK,YACLtS,KAAK,WACLk9D,QAAS9R,EACTkG,SAAU,kBAAMqL,GAAcvR,IAC9BG,MAAM,OAER,cAAC,KAAD,CAAMxG,GAAG,OAAOnuC,MAAO,CAAEumD,WAAY,QAArC,SACGtyE,EAAE,0BAMX,cAAC,IAAD,CAAQuyE,UAAWhS,EAAWthD,QAAS2rE,EAAvC,SACG5qF,EAAE,YAEJkpF,EACC,cAAC,KAAD,CAAMrqE,MAAM,UAAUkN,MAAO,CAAEy9D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,aC7GRjc,GAAS1rE,IAAOU,IAAV,+FAEU,qBAAGy9C,MAAkBkJ,OAAOG,iBAI5C8hC,GAAuBtpF,YAAOupF,KAAPvpF,CAAH,mEAKpBwpF,GAAkBxpF,YAAOypF,KAAPzpF,CAAH,gDAWN,SAASknE,GAAT,GAMe,IAAD,MAL3B7O,iBAK2B,MALf,kBAAM,MAKS,EAJ3BsO,EAI2B,EAJ3BA,iBACAQ,EAG2B,EAH3BA,iBACAC,EAE2B,EAF3BA,sBAE2B,IAD3BL,uBAC2B,SAC3B,EAAkC3qE,mBAA4BkoF,GAAkBnyB,QAAhF,mBAAOu3B,EAAP,KAAkB/C,EAAlB,KAEMrW,EAAuB7yE,uBAC3B,SAACkY,GACC0iD,IACAsO,EAAiBhxD,KAEnB,CAAC0iD,EAAWsO,IAIRgjB,EAAWC,YAAYF,GAG7B,EAAsCttF,qBAAtC,mBAAOqsF,EAAP,KAAoBvG,EAApB,KAGA,EAAoC9lF,qBAApC,mBAAO4rF,EAAP,KAAmBpB,EAAnB,KACA,EAA8BxqF,qBAA9B,mBAAO8sF,EAAP,KAAgBrC,EAAhB,KAEQpoF,EAAMC,cAAND,EAEFqX,GAAM,mBACTwuE,GAAkBnyB,OAAS,CAAE74B,MAAO76B,EAAE,kBAAmBy0E,YAAQj3E,IADxD,cAETqoF,GAAkBuF,OAAS,CAAEvwD,MAAO76B,EAAE,UAAWy0E,OAAQ,kBAAMyT,EAAarC,GAAkBnyB,WAFrF,cAGTmyB,GAAkBmE,YAAc,CAC/BnvD,MAAO76B,EAAE,iBACTy0E,OAAQ,kBACNyT,EAAagD,GAAYA,IAAarF,GAAkBmE,YAAckB,EAAWrF,GAAkBnyB,WAN7F,cAQTmyB,GAAkB0D,WAAa,CAAE1uD,MAAO76B,EAAE,eAAgBy0E,OAAQ,kBAAMyT,EAAarC,GAAkBnyB,WAR9F,GAWZ,OACE,eAACm3B,GAAD,CAAsBtQ,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACGljE,EAAO4zE,GAAWxW,QAAU,cAAC,KAAD,CAAiBA,OAAQp9D,EAAO4zE,GAAWxW,SACxE,cAAC,IAAD,UAAUp9D,EAAO4zE,GAAWpwD,WAE9B,cAAC,KAAD,CAAkB++B,UAAWA,OAE/B,eAACmxB,GAAD,WACGE,IAAcpF,GAAkBnyB,OAC/B,cAAC,GAAD,CACEwU,iBAAkB2J,EAClBnJ,iBAAkBA,EAClBC,sBAAuBA,EACvBL,gBAAiBA,EACjBkb,eAAgB,kBAAM0E,EAAarC,GAAkBmE,cACrDvG,eAAgBA,IAEhBwH,IAAcpF,GAAkBmE,aAAeA,EACjD,cAACpY,GAAA,EAAD,CAAaz+D,OAAQ,CAAC62E,GAAcnY,qBAAsBA,IACxDoZ,IAAcpF,GAAkB0D,YAAcA,GAAckB,EAC9D,cAAC,GAAD,CAAYl2C,KAAMg1C,EAAYkB,QAASA,EAASC,SAAU,kBAAMxC,EAAarC,GAAkBuF,WAC7FH,IAAcpF,GAAkBuF,OAClC,cAACjB,GAAD,CACEjC,aAAcA,EACdzE,eAAgBA,EAChB0E,cAAeA,EACfC,WAAYA,IAGd,GAED6C,IAAcpF,GAAkBnyB,QAC/B,cAAC,GAAD,Y,+JCjHJ23B,EAAQ9pF,YAAOC,IAAPD,CAAH,gDACK,gBAAGm+C,EAAH,EAAGA,MAAH,SAAUmJ,YAA+BnJ,EAAMkJ,OAAO4kB,UAAUC,aAG1E6d,EAAQ/pF,YAAOs9D,IAAPt9D,CAAH,2EAWIgqF,EANuC,SAAC,GAAD,IAAG1iC,EAAH,EAAGA,WAAYnrD,EAAf,EAAeA,SAAawhB,EAA5B,wBACpD,cAACmsE,EAAD,yBAAOxiC,WAAYA,GAAgB3pC,GAAnC,aACE,cAACosE,EAAD,UAAQ5tF,S,o1kNCFG,SAAS8tF,IACtB,IAAQjrF,EAAY0kE,cAAZ1kE,QACFghB,EAAWC,cACX8jC,EAAkBC,cAGlBlU,EAAQoD,cACR7G,EAAiBsH,cAGvBjoB,cAEA,IAAMw7D,EAAYzjB,cAmDlB,OC3Ea,SAAqBymB,EAAsB9zB,GAAuC,IAAjB+zB,IAAgB,yDACxFC,EAAgBhrF,mBAGtB1C,qBAAU,WACR0tF,EAAc5qF,QAAU0qF,IACvB,CAACA,IAGJxtF,qBAAU,WACR,SAAS2tF,IACP,IAAQ7qF,EAAY4qF,EAAZ5qF,QACJA,GACFA,IAIJ,GAAc,OAAV42D,EAAgB,CACd+zB,GAASE,IACb,IAAMlwE,EAAK8pC,YAAYomC,EAAMj0B,GAC7B,OAAO,kBAAMjS,cAAchqC,OAG5B,CAACi8C,EAAO+zB,IDUXG,CAR8B7sF,uBAAY,WACnCsmD,GACLhmD,OAAOC,KAAK8xC,GAAO7xC,SAAQ,SAACwuC,GAAD,OACzBy6C,EAAUz6C,GAAV,OAAqB,SAAC7tB,GAAD,OAAWC,QAAQ8Z,MAAM,+BAAgC/Z,WAE/E,CAACsoE,EAAWnjC,EAAiBjU,IAGG9wC,EAAU,IAAiB,MAG9DtC,qBAAU,WACRqB,OAAOC,KAAK8xC,GAAO7xC,SAAQ,SAACmuC,GAC1B,IAAM4G,EAAOlD,EAAM1D,GACd4G,EAAKxzC,SAAYwzC,EAAKlH,kBAAqBkH,EAAKp0B,OACnDsoE,EAAU96C,GAAV,OAAyB,SAACxtB,GAAD,OAAWC,QAAQ8Z,MAAM,4BAA6B/Z,WAGlF,CAACoB,EAAUknE,EAAWloF,EAAS8wC,IAGlCpzC,qBAAU,WACRqB,OAAOC,KAAKmuC,KAAuBluC,SAAQ,SAACmuC,GAC1C,IAAM4G,EAAOlD,EAAM1D,GACd4G,IAAUA,EAAKxzC,SAAYwzC,EAAKlH,kBAAqBkH,EAAKp0B,QAC7DsoE,EAAU96C,GAAV,OAAyB,SAACxtB,GAAD,OAAWC,QAAQ8Z,MAAM,4BAA6B/Z,WAGlF,CAACoB,EAAUknE,EAAWloF,EAAS8wC,IAGlCpzC,qBAAU,WACRqB,OAAOC,KAAK8xC,GAAO7xC,SAAQ,SAACmuC,GAC1B,IAAM4G,EAAOlD,EAAM1D,GACnB,GAAI4G,EAAKxzC,SAAWwzC,EAAKjH,cAGvB,OAFaY,YAAkBqG,EAAKxzC,QAAQotC,QAASoG,EAAKjH,cAAca,UAGtE,KAAKC,IAAeC,KAClB,MAAM,IAAIjuC,MAAM,8BAElB,KAAKguC,IAAe09C,MACpB,KAAK19C,IAAe29C,MACpB,KAAK39C,IAAe49C,MAClBzqE,EAASstB,YAAiBlB,UAIjC,CAACpsB,EAAU8vB,EAAOzD,IAEd,K,6FEvET,SAASq+C,EAAWC,EAAa9gE,GAC/B,OALY+gE,EAKAD,EAAM/gE,KAAK2F,MAAM3F,KAAKihE,SAAWjhE,KAAKC,IAAI,EAAGA,EAAM8gE,IAJxD,IAAIrvD,SAAQ,SAAC0C,GAAD,OAAa0kB,WAAW1kB,EAAS4sD,MADtD,IAAcA,EAWP,IAAME,EAAb,kDACE,aAAe,uCACP,aAFV,sBAAoCjsF,QASvBksF,EAAb,wIAAoClsF,Q,gECKpC,WACEwmD,EACA2lC,EACAC,GAHF,qBAAAtuF,EAAA,6DAKEkiB,QAAQ8Z,MAAM,iBAAkB0sB,EAAmB2lC,EAAOC,GAL5D,kBAU6C5lC,EAAkBj/B,UACzD4kE,EAAMhnE,KAAI,SAACknE,GAAD,MAAS,CAACA,EAAI54E,QAAS44E,EAAIhyD,cAX3C,mCAUKiyD,EAVL,KAUyB9kE,EAVzB,6DAcIxH,QAAQ8Z,MAAM,qCAAd,MAdJ,kBAiBMwyD,EAAmBjpF,WAAa+oF,GAjBtC,uBAkBIpsE,QAAQ8Z,MAAR,gDAAuDwyD,EAAmB7sF,WAA1E,gBAA4F2sF,IACtF,IAAIF,EAAe,gCAnB7B,iCAqBS,CAAE/xD,QAAS3S,EAAY6Q,YAAai0D,EAAmBjpF,aArBhE,2D,sBAyFe,SAAS+nF,IACtB,IAAMjqE,EAAWC,cACXzjB,EAAQ2jB,aAA6C,SAACqtB,GAAD,OAAOA,EAAEhoB,aAE9D4lE,EAAqBj1B,YAAY35D,EAAMsxC,cAAe,KACpDxkB,EAAiB6P,cAAjB7P,aACArqB,EAAYH,cAAZG,QACFomD,EAAoBxlC,cACpBwrE,EAAgBjsF,mBAEhBksF,EAA+CntE,mBAAQ,WAC3D,OAtEG,SACLotE,EACAtsF,GAEA,IAAKssF,IAAiBtsF,EAAS,MAAO,GACtC,IAAM4uC,EAAY09C,EAAatsF,GAC/B,OAAK4uC,EAEE9vC,OAAOC,KAAK6vC,GAAWh8B,QAAsC,SAACgT,EAAMkpB,GACzE,IAAMy9C,EAAe39C,EAAUE,GAW/B,OATAlpB,EAAKkpB,GAAWhwC,OAAOC,KAAKwtF,GACzBtnE,QAAO,SAACxmB,GACP,IAAMy5B,EAAiB13B,SAAS/B,GAChC,QAAIy5B,GAAkB,IACfq0D,EAAar0D,GAAkB,KAEvCtlB,QAAO,SAAC45E,EAAajsF,GACpB,OAAOoqB,KAAK+gE,IAAIc,EAAahsF,SAASD,MACrC43B,KACEvS,IACN,IAfoB,GAgEd6mE,CAAoBN,EAAoBnsF,KAC9C,CAACmsF,EAAoBnsF,IAElB0sF,EAA+BxtE,mBAAQ,WAC3C,OA3CG,SACLmZ,EACAg0D,EACArsF,EACAqqB,GAEA,OAAKrqB,GAAYqqB,EACDgO,EAAYr4B,GAIrBlB,OAAOC,KAAKstF,GAAepnE,QAAO,SAAC6pB,GACxC,IAAM5W,EAAiBm0D,EAAcv9C,GAE/BpwC,EAAO25B,EAAYr4B,GAAS8uC,GAElC,IAAKpwC,EAAM,OAAO,EAElB,IAAMiuF,EAAqBtiE,GAAgB6N,EAAiB,GAG5D,QAAIx5B,EAAKswC,qBAAuBtwC,EAAKswC,qBAAuB29C,MAGpDjuF,EAAKu5B,aAAev5B,EAAKu5B,YAAc00D,MAf5B7tF,OAAOC,KAAKstF,GAHK,GAqC7BO,CAAsBrvF,EAAM86B,YAAag0D,EAAersF,EAASqqB,KACvE,CAACrqB,EAASzC,EAAM86B,YAAag0D,EAAehiE,IAEzCwiE,EAA6B3tE,mBACjC,kBAAMqZ,KAAKC,UAAUk0D,EAA6B/zD,UAClD,CAAC+zD,IAwEH,OArEAjvF,qBAAU,WAAO,IAAD,EACd,GAAK4sB,GAAiBrqB,GAAYomD,EAAlC,CAEA,IAAM0mC,EAA6Bv0D,KAAKM,MAAMg0D,GAC9C,GAAgC,IAA5BC,EAAiBj/D,OAArB,CACA,IAIyD,IAJnDrH,EAAQsmE,EAAiB/nE,KAAI,SAACtmB,GAAD,OAASq6B,YAAar6B,MAEnDsuF,EChJK,SAAuBC,EAAYC,GAChD,GAAIA,EAAe,EAAG,MAAM,IAAIrtF,MAAM,8BACtC,GAAIotF,EAAMn/D,QAAUo/D,EAAc,MAAO,CAACD,GAE1C,IAAME,EAAoBviE,KAAK2xD,KAAK0Q,EAAMn/D,OAASo/D,GAC7CE,EAAYxiE,KAAK2xD,KAAK0Q,EAAMn/D,OAASq/D,GAE3C,OAAO,YAAIv1D,MAAMu1D,GAAWnuF,QAAQgmB,KAAI,SAACqoE,GAAD,OAAQJ,EAAMtpD,MAAM0pD,EAAKD,EAAWC,EAAKD,EAAYA,MDyItEE,CAAW7mE,EA/HZ,KAiIpB,IAAI,UAAA4lE,EAAc7rF,eAAd,eAAuB03B,eAAgB5N,EACzC,UAAA+hE,EAAc7rF,eAAd,mBAAuB6rF,qBAAvB,SAAsCptF,SAAQ,SAACy5B,GAAD,OAAOA,OAGvD1X,EACEguB,YAAyB,CACvBvoB,QACAxmB,UACAgvC,oBAAqB3kB,KAIzB+hE,EAAc7rF,QAAU,CACtB03B,YAAa5N,EACb+hE,cAAeW,EAAahoE,KAAI,SAACgnE,EAAOn3D,GACtC,MDpID,SACL04D,EADK,GAGyC,IAE1CC,EAHFC,EAC2C,EAD3CA,EAAGC,EACwC,EADxCA,QAASC,EAC+B,EAD/BA,QAEVC,GAAY,EA2BhB,MAAO,CACLC,QA1Bc,IAAIvxD,QAAJ,uCAAe,WAAO0C,EAASC,GAAhB,eAAAthC,EAAA,sDAC7B6vF,EAAkBvuD,EADW,cAGvBrX,OAHuB,oBAKV2lE,IALU,cAKzB3lE,EALyB,OAMpBgmE,IACH5uD,EAAQpX,GACRgmE,GAAY,GARW,2DAYrBA,EAZqB,0DAerBH,GAAK,IAAO,gBAAiB1B,EAfR,wBAgBvB9sD,EAAO,EAAD,IACN2uD,GAAY,EAjBW,6BAoBzBH,IApByB,yBAsBrB/B,EAAWgC,EAASC,GAtBC,iFAAf,yDA2BdG,OAAQ,WACFF,IACJA,GAAY,EACZJ,EAAgB,IAAI1B,MCgGUiC,EAAM,kB,+CAAMC,CAAW3nC,EAAmB2lC,EAAO1hE,KAAe,CAC1FmjE,EAAGr1D,IACHs1D,QAAS,KACTC,QAAS,OAHHG,EAAR,EAAQA,OAwCR,OAxCA,EAAgBD,QAMb96C,MAAK,YAA6D,IAAjD1rB,EAAgD,EAAzD2S,QAAkCi0D,EAAuB,EAApC/1D,YAC5Bm0D,EAAc7rF,QAAU,CAAE6rF,cAAe,GAAIn0D,YAAa5N,GAG1D,IAAM4jE,EAAoBlB,EAAarpD,MAAM,EAAG9O,GAAOhiB,QAAe,SAACgT,EAAMm3C,GAAP,OAAgBn3C,EAAOm3C,EAAKlvC,SAAQ,GACpGqgE,EAAmBD,EAAoB7mE,EAAWyG,OAExD9M,EACEmuB,YAAuB,CACrBlvC,UACA+5B,QAAS+yD,EACNppD,MAAMuqD,EAAmBC,GACzBt7E,QAA6C,SAACgT,EAAMkpB,EAASxnB,GAAO,IAAD,EAElE,OADA1B,EAAKkpB,GAAL,UAAgB1nB,EAAWE,UAA3B,QAAiC,KAC1B1B,IACN,IACLqS,YAAa+1D,QAjBrB,OAqBS,SAACruE,GACFA,aAAiBksE,EACnBjsE,QAAQ8Z,MAAM,kCAAmCrP,IAGnDzK,QAAQD,MAAM,kCAAmCosE,EAAO/rF,EAAS2f,GACjEoB,EACEkuB,YAA8B,CAC5BzoB,MAAOulE,EACP/rF,UACAgvC,oBAAqB3kB,SAItBwjE,UAGV,CAAC7tF,EAASomD,EAAmBrlC,EAAU8rE,EAA4BxiE,IAE/D,K,2CEjLM,SAAS2gE,IACtB,MAA6BnrF,cAArBE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAETqqB,EAAiB6P,cAAjB7P,aAEFtJ,EAAWC,cACXzjB,EAAQ2jB,aAAgD,SAACqtB,GAAD,OAAOA,EAAExF,gBAEjEA,EAAe7pB,mBAAQ,wBAAOlf,GAAO,UAAGzC,EAAMyC,UAAT,QAA0B,KAAK,CAACA,EAASzC,IAEpF,EAAqCmiD,cAA7BuW,EAAR,EAAQA,WAAYsP,EAApB,EAAoBA,aAmDpB,OAjDA9nE,qBAAU,WACHuC,GAAYD,GAAYsqB,GAE7BvrB,OAAOC,KAAKgqC,GACT9jB,QAAO,SAACsK,GAAD,OArCP,SACLlF,EACAshB,GAEA,GAAIA,EAAGG,QAAS,OAAO,EACvB,IAAKH,EAAGC,uBAAwB,OAAO,EACvC,IAAMuiD,EAAmB9jE,EAAeshB,EAAGC,uBAC3C,GAAIuiD,EAAmB,EAAG,OAAO,EACjC,IAAMC,IAAkB,IAAItkD,MAAOC,UAAY4B,EAAGH,WAAa,IAAO,GACtE,OAAI4iD,EAAiB,GAEZD,EAAmB,IAExBC,EAAiB,IAEZD,EAAmB,EAsBNE,CAAYhkE,EAAc0e,EAAaxZ,OACxDvwB,SAAQ,SAACuwB,GACRxvB,EACGuuF,sBAAsB/+D,GACtBujB,MAAK,SAAChH,GACS,IAAD,IAATA,GACF/qB,EACE8qB,YAAoB,CAClB7rC,UACAuvB,OACAuc,QAAS,CACPyiD,UAAWziD,EAAQyiD,UACnBt2D,YAAa6T,EAAQ7T,YACrBtc,gBAAiBmwB,EAAQnwB,gBACzB1X,KAAM6nC,EAAQ7nC,KACdoxB,OAAQyW,EAAQzW,OAChBq8B,GAAI5lB,EAAQ4lB,GACZ88B,gBAAiB1iD,EAAQ0iD,gBACzBC,iBAAkB3iD,EAAQ2iD,sBAKC,IAAnB3iD,EAAQzW,OAAekwC,EAAetP,GAElD,sBACA,eAAC,IAAD,CAAM2J,cAAc,SAApB,UACE,cAAC,KAAD,8BAAO72B,EAAaxZ,UAApB,aAAO,EAAoB8b,eAA3B,wBAA+C9b,EAAKmU,MAAM,EAAG,GAA7D,cAAqEnU,EAAKmU,MAAM,GAAI,OACnF1jC,GACC,cAAC,KAAD,CAAM0kD,UAAQ,EAACC,KAAMjwC,YAAe6a,EAAM,cAAevvB,GAAzD,kCAON+gB,EAAS2qB,YAAmB,CAAE1rC,UAASuvB,OAAM0I,YAAa5N,QAlChE,OAqCS,SAAC1K,GACNC,QAAQD,MAAR,4CAAmD4P,GAAQ5P,WAGlE,CAAC3f,EAASD,EAASgpC,EAAc1e,EAActJ,EAAUwkD,EAActP,IAEnE,K,wBCxEGy4B,E,sCChBNC,GAAqB,uCAAG,sBAAAjxF,EAAA,+EAC5B,IAAI2+B,SAAc,SAAC0C,GAAD,OAChBjgC,OAAO8vF,eAAeprC,OAAQ,eAAgB,CAC5C5lD,IAD4C,WAE1C,OAAO81C,KAAKm7C,KAEdlyF,IAJ4C,SAIxCkyF,GACFn7C,KAAKm7C,IAAMA,EAEX9vD,WATsB,2CAAH,qDAqCZ+vD,GAvBS,WACtB,IAAQvnC,EAAUD,eAAVC,MAER9pD,qBAAU,WACR,IAAMsxF,EAAcvrC,OAAOplD,aAAau3D,QAAQa,MAEhD,GAAIu4B,EAAa,CACf,IAAMC,EAA0BD,IAAgBllB,IAAeG,IACzDilB,EAAwBC,QAAQ/wF,IAAIqlD,OAAQ,gBAIlD,GAAIwrC,IAA4BC,EAG9B,YAFAN,KAAwB77C,MAAK,kBAAMyU,EAAMwnC,MAK3CxnC,EAAMwnC,MAEP,CAACxnC,K,oECnCA4nC,GAAyBpuF,KAAOU,IAAV,yoGAOV,qBAAGy9C,MAAkBkwC,KAAK/mC,cACxB,qBAAGnJ,MAAkBkJ,OAAOK,cACnC,qBAAGvJ,MAAkBkJ,OAAO3L,QAKvB,qBAAGyC,MAAkBkJ,OAAOud,SAC1B,qBAAGzmB,MAAkBkJ,OAAOK,cASnC,qBAAGvJ,MAAkBkJ,OAAO3L,QAOjB,qBAAGyC,MAAkBkJ,OAAOK,cAKzB,qBAAGvJ,MAAkBkJ,OAAOK,cAe/B,qBAAGvJ,MAAkBkJ,OAAOgX,WAe5B,qBAAGlgB,MAAkBkJ,OAAOinC,iBAO5B,qBAAGnwC,MAAkBkJ,OAAOknC,aAQ5B,qBAAGpwC,MAAkBkJ,OAAOknC,aA2BrCC,GAJU,WACvB,OAAO,cAACJ,GAAD,CAAwBj0E,GAAG,qB,SCrFrBs0E,GAdKC,aAAH,4LAKO,qBAAGvwC,MAAkBkJ,OAAOC,c,mBCmFrCxxC,GA9FqC,SAACrX,GAAD,MAAO,CACzD,CACEioE,MAAOjoE,EAAE,QACTkwF,KAAM,WACN/qC,KAAM,KAER,CACE8iB,MAAOjoE,EAAE,SACTkwF,KAAM,YACN1C,MAAO,CACL,CACEvlB,MAAOjoE,EAAE,YACTmlD,KAAM,SAER,CACE8iB,MAAOjoE,EAAE,aACTmlD,KAAM,gBAIZ,CACE8iB,MAAOjoE,EAAE,cACTkwF,KAAM,kBACN/qC,KAAM,eAER,CACE8iB,MAAOjoE,EAAE,UACTkwF,KAAM,WACN1C,MAAO,CACL,CACEvlB,MAAOjoE,EAAE,eACTmlD,KAAM,4BAER,CACE8iB,MAAOjoE,EAAE,UACTmlD,KAAM,yBAIZ,CACE8iB,MAAOjoE,EAAE,YACTkwF,KAAM,gBACN1C,MAAO,CACL,CACEvlB,MAAOjoE,EAAE,iBACTmlD,KAAM,8BAER,CACE8iB,MAAOjoE,EAAE,aACTmlD,KAAM,8BAER,CACE8iB,MAAOjoE,EAAE,cACTmlD,KAAM,4BAIZ,CACE8iB,MAAOjoE,EAAE,4BACTkwF,KAAM,aACN/qC,KAAM,KAER,CACE8iB,MAAOjoE,EAAE,QACTkwF,KAAM,WACN1C,MAAO,CACL,CACEvlB,MAAOjoE,EAAE,WACTmlD,KAAM,KAER,CACE8iB,MAAOjoE,EAAE,UACTmlD,KAAM,uBAER,CACE8iB,MAAOjoE,EAAE,QACTmlD,KAAM,kCAER,CACE8iB,MAAOjoE,EAAE,iBACTmlD,KAAM,KAER,CACE8iB,MAAOjoE,EAAE,WACTmlD,KAAM,KAER,CACE8iB,MAAOjoE,EAAE,cACTmlD,KAAM,S,uEClFR35B,GAAUjqB,aAAOw/D,IAAPx/D,CAAH,8HAES,qBAAGm+C,MAAkBkJ,OAAOO,YAK5CgnC,GAAU5uF,KAAOU,IAAV,6iBAQA,qBAAGy9C,MAAkBkJ,OAAO3L,QAejC,qBAAGyC,MAAkBkJ,OAAOC,cAC5B,qBAAGnJ,MAAkBkJ,OAAOC,cAY9BunC,GAAU7uF,KAAOU,IAAV,4OACA,qBAAGouF,mBAA+C,eAAiB,UAM1D,qBAAG3wC,MAAkBkJ,OAAO0nC,YACvC,qBAAG5wC,MAAkBkJ,OAAOyoB,oBA8CxBkf,GAxCiC,SAAC,GAA2B,IAAzBn6E,EAAwB,EAAxBA,QAAY8I,EAAY,mBACzE,EAAoDvhB,oBAAS,GAA7D,mBAAO0yF,EAAP,KAA2BG,EAA3B,KACQxwF,EAAMC,eAAND,EAgBR,SAASywF,IACPD,GAAsB,GACtBvsC,YAAW,WACTusC,GAAsB,KACrB,KAGL,OACE,eAAC,IAAD,2BAAKtgE,SAAS,YAAehR,GAA7B,cACE,eAACsM,GAAD,WACE,cAAC2kE,GAAD,CAASt1D,MAAOzkB,EAAhB,SACE,uBAAOjB,KAAK,OAAOu7E,UAAQ,EAAC3wF,MAAOqW,MAErC,cAAC,IAAD,CAAYmuC,QAAQ,OAAOtlC,QA3Bb,WAClB,GAAI0xE,UAAUC,WAAaD,UAAUE,YACnCF,UAAUC,UAAUE,UAAU16E,GAASk9B,MAAK,kBAAMm9C,YAC7C,GAAI3hB,SAASiiB,sBAAsB,QAAS,CACjD,IAAMC,EAAMliB,SAASmiB,cAAc,YACnCD,EAAIjxF,MAAQqW,EACZ04D,SAAS/vC,KAAKmyD,YAAYF,GAC1BA,EAAIG,SACJriB,SAASsiB,YAAY,QACrBtiB,SAAS/vC,KAAKsyD,YAAYL,GAC1BP,MAiBE,SACE,cAAC,IAAD,CAAU5xE,MAAM,UAAUpd,MAAM,cAGpC,cAAC2uF,GAAD,CAASC,mBAAoBA,EAA7B,SAAkDrwF,EAAE,iBCjC3CsxF,GApD+B,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,iBAAkB33B,EAAgB,EAAhBA,UACzD55D,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QACR,EAAiCm/C,eAAzB/xD,EAAR,EAAQA,QAASkxD,EAAjB,EAAiBA,YACjB,EAA+DnO,aAAgBpzC,KAAOpN,KAAK8N,SAA1E29E,EAAjB,EAAQhuF,QAAmCiuF,EAA3C,EAA8B/8B,YACtB1M,EAAWF,eAAXE,OAOR,OACE,qCACE,cAAC,KAAD,CAAMnpC,MAAM,YAAY06C,SAAS,OAAO4b,cAAc,YAAYuc,WAAW,OAAOjxB,GAAG,MAAvF,SACGzgE,EAAE,kBAEL,cAAC,GAAD,CAAaoW,QAASA,EAASqqD,GAAG,SACjC8wB,GACC,cAAC,KAAD,CAAShtC,QAAQ,UAAUkc,GAAG,OAA9B,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMixB,WAAW,OAAjB,SAAyB1xF,EAAE,qBAC3B,cAAC,KAAD,CAAMilD,GAAG,IAAT,SAAcjlD,EAAE,6CAItB,eAAC,IAAD,CAAMqhE,WAAW,SAAS9G,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAM17C,MAAM,aAAZ,SAA0B7e,EAAE,iBAC3B00D,IAAgBH,KAAYxR,QAC3B,cAAC,KAAD,CAAUwyB,OAAO,OAAO9zE,MAAM,SAE9B,cAAC,KAAD,UAAO4C,aAAgBb,EAAS,QAGpC,eAAC,IAAD,CAAM69D,WAAW,SAAS9G,eAAe,gBAAgBkG,GAAG,OAA5D,UACE,cAAC,KAAD,CAAM5hD,MAAM,aAAZ,SAA0B7e,EAAE,iBAC3ByxF,IAAoBl9B,KAAYxR,QAC/B,cAAC,KAAD,CAAUwyB,OAAO,OAAO9zE,MAAM,SAE9B,cAAC,KAAD,UAAOiC,aAAsB8tF,EAAa,GAAI,QAGlD,cAAC,IAAD,CAAMnwB,WAAW,SAAS9G,eAAe,MAAMkG,GAAG,OAAlD,SACE,cAAC,KAAD,CAActb,KAAMjwC,YAAekB,EAAS,WAA5C,SAAyDpW,EAAE,uBAE7D,cAAC,IAAD,CAAQukD,QAAQ,YAAY9iD,MAAM,OAAOwd,QAtCxB,WACnB26C,IACA5R,KAoCE,SACGhoD,EAAE,2B,oBCnDL2xF,GAAUpwF,aAAOw/D,IAAPx/D,CAAH,oFAMPqwF,GAAUrwF,KAAOU,IAAV,4DAKP4vF,GAAUtwF,aAAOggE,KAAPhgE,CAAH,8KAEF,qBAAGm+C,MAAkBkJ,OAAO3L,QAUjC60C,GAAa,SAACC,GAA6B,IAAD,IAC9C,OAAKA,EAAIzlD,QAIsB,KAAxB,UAAAylD,EAAIzlD,eAAJ,eAAazW,SAA+C,qBAA/B,UAAOk8D,EAAIzlD,eAAX,aAAO,EAAazW,QACtD,cAAC,IAAD,CAAqBhX,MAAM,UAAUpd,MAAM,SAE3C,cAAC,IAAD,CAAWod,MAAM,UAAUpd,MAAM,SAN1B,cAAC,KAAD,CAAauwF,MAAI,EAACvwF,MAAM,UA4BpBwwF,GAlBuC,SAAC,GAAa,IAAD,EAAVF,EAAU,EAAVA,IAC/CvxF,EAAYH,cAAZG,QAER,OAAKuxF,EAKH,eAACF,GAAD,CAAS1sC,KAAMjwC,YAAe68E,EAAIhiE,KAAM,cAAevvB,GAAU0kD,UAAQ,EAAzE,UACE,cAACysC,GAAD,UAAUG,GAAWC,KACrB,cAACH,GAAD,oBAAUG,EAAIlmD,eAAd,QAAyBkmD,EAAIhiE,OAC7B,cAAC4hE,GAAD,UACE,cAAC,KAAD,CAAalwF,MAAM,OAAOod,MAAM,iBAR7B,MCLIqzE,GAlCsB,WACnC,IAAQ1xF,EAAYH,cAAZG,QACF+gB,EAAWC,cACTxhB,EAAMC,eAAND,EACF0oD,EAAkBF,eAClB2pC,EAAqBx9D,mBAAQ+zB,EAAiB,YAAa,QAQjE,OACE,eAAC,IAAD,CAAK0pC,UAAU,QAAf,UACE,eAAC,IAAD,CAAM/wB,WAAW,SAAS9G,eAAe,gBAAgBkG,GAAG,OAA5D,UACE,cAAC,KAAD,CAAM5hD,MAAM,YAAY06C,SAAS,OAAO4b,cAAc,YAAYuc,WAAW,OAA7E,SACG1xF,EAAE,yBAEJmyF,EAAmB9jE,OAAS,GAC3B,cAAC,IAAD,CAAQqyC,MAAM,KAAKzhD,QAbJ,WACjBze,GACF+gB,EAAS0qB,YAAqB,CAAEzrC,cAWgB+jD,QAAQ,OAAOuoB,GAAG,IAA9D,SACG9sE,EAAE,kBAIRmyF,EAAmB9jE,OAAS,EAC3B8jE,EAAmB5sE,KAAI,SAACwsE,GAAD,OAAS,cAAC,GAAD,CAA+BA,IAAKA,GAAfA,EAAIhiE,SAEzD,cAAC,KAAD,CAAM2pC,UAAU,SAAhB,SAA0B15D,EAAE,iC,SRnBxBkvF,O,6BAAAA,I,gCAAAA,M,KASL,I,kBSPKmD,GAMAC,GTCCC,GAAkB36D,sBAAW,IAAK,QAEzC46D,GAAcjxF,aAAOkxF,KAAPlxF,CAAH,iDACD,qBAAGm+C,MAAkBkJ,OAAO4kB,UAAUC,aAGhDilB,GAAOnxF,KAAOU,IAAV,+GACY,qBAAGy9C,MAAkBkJ,OAAOO,YACrB,qBAAGzJ,MAAkBkJ,OAAOK,cAsC1C0pC,GAlCiC,SAAC,GAAyD,IAAD,IAAtDC,mBAAsD,MAAxC1D,EAAW2D,YAA6B,EAAhBj5B,EAAgB,EAAhBA,UACvF,EAAwBj8D,mBAASi1F,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACQ/yF,EAAMC,eAAND,EACR,EAAiCu1D,eAAzB/xD,EAAR,EAAQA,QACF+tF,EADN,EAAiB78B,cACwBH,KAAYxR,SAAWv/C,EAAQq5E,IAAI0V,IAM5E,OACE,eAAC,KAAD,CAAgB13D,MAAO76B,EAAE,YAAau6E,SAAS,QAA/C,UACE,eAACiY,GAAD,WACE,cAAC,KAAD,UACE,cAAC,IAAD,UAAUxyF,EAAE,mBAEd,cAAC,IAAD,CAAYukD,QAAQ,OAAOtlC,QAAS26C,EAApC,SACE,cAAC,IAAD,CAAWn4D,MAAM,OAAOod,MAAM,cAGlC,cAAC6zE,GAAD,UACE,eAAC,IAAD,CAAYhyB,MAAM,KAAKnc,QAAQ,SAAS+lC,YAf1B,SAAC0I,GACnBD,EAAQC,IAc8DzlB,YAAaulB,EAAMG,WAAS,EAA9F,UACE,cAAC,IAAD,UAAiBjzF,EAAE,YACnB,cAAC,IAAD,UAAiBA,EAAE,uBAGvB,eAAC,KAAD,CAAW0lB,EAAE,OAAOqnD,SAAS,QAAQtrE,MAAM,OAA3C,UACGqxF,IAAS5D,EAAW2D,aAAe,cAAC,GAAD,CAAYtB,iBAAkBA,EAAkB33B,UAAWA,IAC9Fk5B,IAAS5D,EAAWgE,cAAgB,cAAC,GAAD,W,UU1DvCC,GAAM5xF,KAAOU,IAAV,+GACa,qBAAGy9C,MAAkBkJ,OAAOkX,WAuCnCszB,GAjCiD,SAAC,GAA+B,IAA7Bh2D,EAA4B,EAA5BA,UAAWqhC,EAAiB,EAAjBA,WACpEz+D,EAAMC,eAAND,EAEFqzF,EAAc,WAClBtlB,KAAQxyC,KAAK,UAGf,OAAI6B,EAEA,cAAC,KAAD,UACE,cAAC,KAAD,CAAUm4C,OAAO,OAAO9zE,MAAM,UAK/Bg9D,EAYH,cAAC,KAAD,CAAcxZ,GAAG,SAAShmC,QAASo0E,EAAnC,SACGrzF,EAAE,kBAXH,cAAC,KAAD,CAAcilD,GAAG,SAAShmC,QAASo0E,EAAnC,SACE,eAAC,IAAD,CAAMhyB,WAAW,SAAS9G,eAAe,gBAAgB94D,MAAM,OAA/D,UACGzB,EAAE,gBACH,cAACmzF,GAAD,UChBKG,GAb+C,SAAC,GAAgD,IAA9C/B,EAA6C,EAA7CA,iBAAkBgC,EAA2B,EAA3BA,qBACzEvzF,EAAMC,eAAND,EAER,OACE,cAAC,KAAD,CAAcilD,GAAG,SAAShmC,QAASs0E,EAAnC,SACE,eAAC,IAAD,CAAMlyB,WAAW,SAAS9G,eAAe,gBAAgB94D,MAAM,OAA/D,UACGzB,EAAE,UACFuxF,GAAoB,cAAC,KAAD,CAAa1yE,MAAM,UAAUpd,MAAM,eCsCjD+xF,GAnCE,WACf,IAAQxzF,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QACA4xC,EAAWF,eAAXE,OACR,EAAiCuN,eAAzB/xD,EAAR,EAAQA,QAASkxD,EAAjB,EAAiBA,YACjB,EAA8C8J,eAAtCrhC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,UAAWoT,EAAlC,EAAkCA,QAClC,EAA+BowB,aAAS,cAAC,GAAD,CAAagyB,YAAa1D,EAAW2D,eAAtEU,EAAP,oBACA,EAAoC3yB,aAAS,cAAC,GAAD,CAAagyB,YAAa1D,EAAWgE,gBAA3EO,EAAP,oBACMh1B,EAAathC,KAAmBqT,EAChCkjD,EAAYljD,GAAWA,EAAQib,IAAnB,uBAAyCjb,EAAQib,IAAIM,OAAOxI,SAAO/lD,EAC/E+zF,EAAmB78B,IAAgBH,KAAYxR,SAAWv/C,EAAQq5E,IAAI0V,IAE5E,OAAKn8E,EAKH,eAAC,KAAD,CAAeA,QAASA,EAASs9E,UAAWA,EAA5C,UACE,cAAC,GAAD,CAAoBnC,iBAAkBA,EAAkBgC,qBAAsBA,IAC9E,cAAC,KAAD,CAActuC,GAAG,SAAShmC,QAASw0E,EAAnC,SACGzzF,EAAE,kBAEL,cAAC,KAAD,IACA,cAAC,GAAD,CAAqBo9B,UAAWA,EAAWqhC,WAAYA,IACvD,cAAC,KAAD,IACA,cAAC,KAAD,CAAcxZ,GAAG,SAAShmC,QAAS+oC,EAAnC,SACE,eAAC,IAAD,CAAMqZ,WAAW,SAAS9G,eAAe,gBAAgB94D,MAAM,OAA/D,UACGzB,EAAE,cACH,cAAC,KAAD,YAfC,cAAC6nD,GAAA,EAAD,CAAqB6Y,MAAM,Q,UCQvBizB,GA7BF,SAACz0E,GAAW,IAAD,EACtB,EAAgCugC,eAAxBt9B,EAAR,EAAQA,OAAQjI,EAAhB,EAAgBA,YACV+kD,EAAerc,eACbpS,EAAYguB,eAAZhuB,QACR,EAA4CvwC,eAApClD,EAAR,EAAQA,gBAAiB0B,EAAzB,EAAyBA,YAAauB,EAAtC,EAAsCA,EAEtC,OACE,cAAC,KAAD,cACE4zF,SAAU,cAAC,GAAD,IACVC,WAAY,cAACpyB,GAAA,EAAD,IACZt/C,OAAQA,EACRjI,YAAaA,EACb45E,YAAa/2F,EAAgB0tD,KAC7BspC,MAAOrpC,KACPspC,QAASv1F,EACTwgE,aAAcA,EAAax7D,WAC3BwwF,MAAO58E,GAAOrX,GACdwwC,QAAS,CACP6a,SAAQ,OAAE7a,QAAF,IAAEA,OAAF,EAAEA,EAAS6a,SACnBiN,OAAc,OAAP9nB,QAAO,IAAPA,OAAA,EAAAA,EAASib,KAAT,iCAA+Bjb,EAAQib,WAAvC,aAA+B,EAAaM,OAAOxI,SAAO/lD,EACjE02F,YAAa,WACbC,cAAe,WACfC,UAAS,OAAC5jD,QAAD,IAACA,OAAD,EAACA,EAAS6a,YAEjBnsC,K,SCcKm1E,G,kDA1Cb,WAAYn1E,GAAQ,IAAD,8BACjB,cAAMA,IACDnhB,MAAQ,CAAEu2F,UAAU,GAFR,E,sDAUnB,SAAkBn0E,GAAQ,IAAD,EACjBo0E,EAAoC,mBAAfp0E,EAAMsH,KAC3B+sE,EAAqC,0BAAfr0E,EAAMsqC,KAC5BgqC,EAAmBF,GAAsBC,EAIzCE,KAA8B,UAAC1wC,OAAO+pB,QAAQhwE,aAAhB,aAAC,EAAsB22F,4BAG3D,GAAID,IAAqBC,EAA4B,CACnD,IAAMC,EAAS,6BAAQ3wC,OAAO+pB,QAAQhwE,OAAvB,IAA8B22F,4BAA4B,IAGzE,OAFA1wC,OAAO+pB,QAAQ6mB,aAAaD,EAAW,SACvC3wC,OAAOspB,SAASunB,SAIlB,MAAM10E,I,oBAGR,WACE,IAAQm0E,EAAapgD,KAAKn2C,MAAlBu2F,SACAQ,EAAa5gD,KAAKh1B,MAAlB41E,SAER,OAAIR,EACKQ,EAGF,cAAC,WAAD,gBAAc5gD,KAAKh1B,W,uCAjC5B,WAEE,MAAO,CAAEo1E,UAAU,O,GARc/tB,IAAMwuB,W,oBCHrCC,GAA2C,SAAC91E,GAChD,MAAwBvhB,oBAAS,GAAjC,mBAAO6jE,EAAP,KAAayzB,EAAb,KACMC,EAAel2F,uBAAY,kBAAMi2F,GAAQ,KAAO,CAACA,IAGvD,OAFAE,aAAmBD,GAEf1zB,EAEA,qBAAK4zB,eAAgB,kBAAMH,GAAQ,IAAnC,SACE,cAAC,IAAD,gBAAoB/1E,MAInB,MAGMqnD,OAAMngD,KAAK4uE,I,mDCcXK,GA9BiB,WAC9B,IAAMC,EAAc30F,iBAAuB,MACrC40F,EAA0B50F,iBAA6B,MAC7D,EAA0ChD,oBAAS,GAAnD,mBAAO63F,EAAP,KAAsBC,EAAtB,KACA,EAA4C93F,oBAAS,GAArD,mBAAO+3F,EAAP,KAAuBC,EAAvB,KAuBA,OArBA13F,qBAAU,WAcR,OATKu3F,IACHD,EAAwBx0F,QAAU,IAAI60F,sBALJ,SAAC,GAA0C,IAAzC36C,EAAwC,oBAC5E06C,EAAkB16C,EAAMy6C,kBAIgE,CACtFG,WAAY,MACZC,UAAW,IAEbP,EAAwBx0F,QAAQg1F,QAAQT,EAAYv0F,SACpD00F,GAAiB,IAGZ,WACDF,EAAwBx0F,SAAWy0F,GACrCD,EAAwBx0F,QAAQi1F,gBAGnC,CAACR,IAEG,CAAEF,cAAaI,mB,+CCwCXO,GAAe,WAC1B,MAcIv0E,aAAY,SAAC3jB,GAAD,OAAkBA,EAAMyrC,MAAM+Q,aAb/B27C,EADf,EACEv8C,YACmBw8C,EAFrB,EAEEjsE,kBACkBksE,EAHpB,EAGEx8C,iBAC2By8C,EAJ7B,EAIE/8C,0BACyBg9C,EAL3B,EAKE/8C,wBALF,IAMEiB,KAAQ9wB,EANV,EAMUA,eAAgBowB,EAN1B,EAM0BA,QAASC,EANnC,EAMmCA,cAAeC,EANlD,EAMkDA,oBANlD,IAOES,SACErd,EARJ,EAQIA,UACYm5D,EAThB,EASItsE,WACsBusE,EAV1B,EAUIxsE,qBACAowB,EAXJ,EAWIA,kBACAC,EAZJ,EAYIA,mBAIEf,EAA4B55B,mBAAQ,WACxC,OAAO,IAAIjd,KAAU4zF,KACpB,CAACA,IAEE98C,EAA0B75B,mBAAQ,WACtC,OAAO,IAAIjd,KAAU6zF,KACpB,CAACA,IAsBJ,MAAO,CACL38C,YArBkBj6B,mBAAQ,WAC1B,OAAO,IAAIjd,KAAUyzF,KACpB,CAACA,IAoBFhsE,kBAlBwBxK,mBAAQ,WAChC,OAAO,IAAIjd,KAAU0zF,KACpB,CAACA,IAiBFv8C,iBAfuBl6B,mBAAQ,WAC/B,OAAO,IAAIjd,KAAU2zF,KACpB,CAACA,IAcF98C,4BACAC,0BACAiB,KAAM,CACJ9wB,iBACAowB,UACAC,gBACAC,uBAEFS,SAAU,CACRrd,YACAnT,WAtBevK,mBAAQ,WACzB,OAAO,IAAIjd,KAAU8zF,KACpB,CAACA,IAqBAvsE,qBAnByBtK,mBAAQ,WACnC,OAAO,IAAIjd,KAAU+zF,KACpB,CAACA,IAkBAp8C,oBACAC,wBCnIOo8C,GAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,GAAW,SAAC1wB,GACvB,OAAOA,EAAMvmE,QAAQ,qBAAqB,SAACo4B,GAAD,OAAOy+D,GAASC,UAAU1+D,IAAMA,MCO7D8+D,GAbIv1F,KAAOU,IAAV,+N,yCCIVikE,GAAc3kE,aAAO+kE,KAAP/kE,CAAH,6EAKXw1F,GAAex1F,KAAOU,IAAV,yFAEd,qBAAGy9C,MAAkB4D,aAAaC,MAgCvByzC,GAtBsB,SAAC,GAA4D,IAAhDC,EAA+C,EAAzDxwB,SAAyD,IAA7BD,mBAA6B,MAAf,SAAe,EAC/F,EAAoC7oE,mBAAS,IAA7C,mBAAOu5F,EAAP,KAAmBC,EAAnB,KAEQn3F,EAAMC,eAAND,EAEFo3F,EAAoB13E,mBACxB,kBAAM23E,MAAS,SAACrjB,GAAD,OAA4CijB,EAAiBjjB,KAAI,OAChF,CAACijB,IAQH,OACE,cAACF,GAAD,UACE,cAAC7wB,GAAD,CAAanmE,MAAOm3F,EAAYzwB,SAPnB,SAACuN,GAChBmjB,EAAcnjB,EAAEpN,OAAO7mE,OACvBq3F,EAAkBpjB,IAKoCxN,YAAaxmE,EAAEwmE,Q,kEClCnEyG,GAAS1rE,aAAOw/D,IAAPx/D,CAAH,mEAEI,qBAAGm+C,MAAkBkJ,OAAOO,YAGtCmuC,GAAa/1F,KAAOwgF,GAAV,4QAWH,qBAAGriC,MAAkBkJ,OAAOwd,cA4I1BmxB,GA1HiD,SAAC,GAS1D,IARLC,EAQI,EARJA,OACA5tE,EAOI,EAPJA,IACA6tE,EAMI,EANJA,WACA5tE,EAKI,EALJA,sBACAw3B,EAII,EAJJA,WACAq2C,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACAjuE,EACI,EADJA,eAEA,EAAoC/rB,oBAAS,GAA7C,mBAAOi6F,EAAP,KAAmBC,EAAnB,KACQ73F,EAAMC,eAAND,EACR,EAIIm9C,aACF,qCACE,cAAC,KAAD,UACGn9C,EACC,mIAGJ,cAAC,KAAD,CAAMs5E,GAAG,OAAT,SACGt5E,EAAE,sGAEL,cAAC,KAAD,UAAOA,EAAE,8EAEX,CAAEk9C,UAAW,UAAW46C,cAAe,CAAC,GAAI,MAfjCC,EADb,EACE16C,UACS26C,EAFX,EAEE16C,QACgB26C,EAHlB,EAGE16C,eAgBI26C,EAAeV,EAAS,EAAI,EAC5BW,GAAiG,IAA1FruE,aAAOF,EAAKC,EAAwB,EAAIA,EAAwB,EAAG,IAAKH,IAAuB9lB,QAAQ,GAEpH,OACE,eAAC,GAAD,CAAQ8hB,EAAE,OAAO06C,cAAc,SAA/B,UACE,cAAC,IAAD,CAAiBg4B,SAAUR,EAAY34E,QAAS,kBAAM44E,GAAc,SAAChjC,GAAD,OAAWA,MAA/E,SACgB70D,EAAb43F,EAAe,OAAY,aAE7BA,GACC,eAAC,IAAD,CAAK9qB,GAAG,MAAR,UACE,eAAC,IAAD,CAAMurB,oBAAoB,YAAYC,WAAW,MAAMrmB,iBAAgB,iBAAYimB,EAAZ,WAAvE,UACGV,GACC,qCACE,cAAC,KAAD,CAAM34E,MAAM,aAAa46C,OAAK,EAA9B,SACGz5D,EAAE,4BAEL,eAAC,KAAD,CAAMy5D,OAAK,EAACC,UAAU,QAAtB,UACG+9B,EADH,UAKJ,cAAC,KAAD,CAAM54E,MAAM,aAAa46C,OAAK,EAA9B,SACYz5D,EAATw3F,EAAW,6BAAkC,SAEhD,eAAC,KAAD,CAAM/9B,OAAK,EAACC,UAAU,QAAtB,UACG9vC,EAAIhmB,QAAQ,GADf,OAGA,cAAC,KAAD,CAAMib,MAAM,aAAa46C,OAAK,EAA9B,SACGz5D,EAAE,wCAAyC,CAC1Cu4F,cAAe1uE,EAAwB,EAAIA,EAAwB,MAGvE,eAAC,KAAD,CAAM4vC,OAAK,EAACC,UAAU,QAAtB,UACGy+B,EADH,OAGCX,GACC,qCACE,cAAC,KAAD,CAAM34E,MAAM,aAAa46C,OAAK,EAA9B,SACGz5D,EAAE,qBAEL,eAAC,IAAD,CAAMu6D,eAAe,WAAW8G,WAAW,WAA3C,UACE,cAAC,KAAD,CAAM5H,OAAK,EAACC,UAAU,QAAQ4H,GAAG,MAAjC,SACGjgB,IAEH,sBAAM7D,IAAKu6C,EAAX,SACE,cAAC,IAAD,CAAUl5E,MAAM,aAAapd,MAAM,OAAO8zE,OAAO,WAElD0iB,GAA4BD,WAKrC,eAACV,GAAD,WACE,6BACE,cAAC,KAAD,CAAM/9B,SAAS,OAAOG,UAAU,SAAS76C,MAAM,aAAagqD,QAAQ,SAApE,SACG7oE,EAAE,0CAGNw3F,GACC,6BACE,cAAC,KAAD,CAAMj+B,SAAS,OAAOG,UAAU,SAAS76C,MAAM,aAAagqD,QAAQ,SAApE,SACG7oE,EAAE,0FAIT,6BACE,cAAC,KAAD,CAAMu5D,SAAS,OAAOG,UAAU,SAAS76C,MAAM,aAAagqD,QAAQ,SAApE,SACG7oE,EACC,mHAIL0pB,EAAiB,GAChB,6BACE,cAAC,KAAD,CAAMswC,GAAG,OAAOT,SAAS,OAAOG,UAAU,SAAS76C,MAAM,aAAagqD,QAAQ,SAA9E,SACG7oE,EAAE,gFAA4E,CAC7Ew4F,IAAK9uE,WAMf,cAAC,IAAD,CAAM6wC,eAAe,SAASP,GAAG,OAAjC,SACE,cAAC,KAAD,CAAc7U,KAAMwyC,EAApB,SAA+BD,aZ/IrCe,GAA8B,CAClC,EAAG,EACH,EAAG,WACH,EAAG,WACH,EAAG,a,SAOOpG,O,iBAAAA,I,cAAAA,Q,cAMAC,O,mDAAAA,I,oDAAAA,Q,KAuBZ,I,qNAAMz1F,GAA0C,CAC9C67F,SAAU,CACRC,aAAa,EACb1uC,qBAAsB,EACtB2uC,uBAAwB,EACxBC,gBAAiB,EACjBC,KAAMxG,GAAeyG,uBACrBC,gBAAiB3G,GAAgB4G,KAEnC/5F,KAAM,CACJg6F,iBAAkB,OAClBC,eAAgB,GAChBC,OAAQ,EACRC,UAAW,EACXC,cAAe,IAIbC,GAAuB,SAC3Bx7F,EACAu9B,GAEA,OAAQA,EAAOnmB,MACb,IAAK,qBACH,IAAMujF,EAAQ,6BAAQ36F,EAAM26F,UAAd,IAAwBG,gBAAiBv9D,EAAOE,UAC9D,OAAO,6BACFz9B,GADL,IAEE26F,aAGJ,IAAK,oBACH,IAAMc,GAAsBz7F,EAAM26F,SAASC,YACrCD,EAAQ,6BAAQ36F,EAAM26F,UAAd,IAAwBC,YAAaa,IACnD,OAAO,6BACFz7F,GADL,IAEE26F,aAGJ,IAAK,0BACH,MAAyCp9D,EAAOE,QAAxCpG,EAAR,EAAQA,MAAOvL,EAAf,EAAeA,sBACf,GAAIA,EACF,OAAO,6BACF9rB,GADL,IAEE26F,SAAS,6BACJ36F,EAAM26F,UADH,IAENzuC,qBAAsBpgC,MAI5B,IAAMogC,EAAuBwuC,GAA4BrjE,GACnDsjE,EAAQ,6BAAQ36F,EAAM26F,UAAd,IAAwBzuC,uBAAsB2uC,uBAAwBxjE,IACpF,OAAO,6BACFr3B,GADL,IAEE26F,aAGJ,IAAK,eACH,MAA6Cp9D,EAAOE,QAA5C29D,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,iBAClBh6F,EAAI,6BAAQnB,EAAMmB,MAAd,IAAoBi6F,iBAAgBD,qBAE9C,MAAO,CACLR,SAFY,6BAAQ36F,EAAM26F,UAAd,IAAwBI,KAAMxG,GAAeyG,yBAGzD75F,QAGJ,IAAK,2BACH,MAA4Do8B,EAAOE,QAA3D29D,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,iBAAkBI,EAA1C,EAA0CA,cACpCp6F,EAAI,6BAAQnB,EAAMmB,MAAd,IAAoBi6F,iBAAgBD,mBAAkBI,kBAChE,OAAO,6BACFv7F,GADL,IAEEmB,SAGJ,IAAK,oBACH,IAAM45F,EAAOx9D,EAAOE,QACdk9D,EAAQ,6BAAQ36F,EAAM26F,UAAd,IAAwBI,SACtC,GAAIA,IAASxG,GAAemH,uBAAwB,CAClD,IAAML,EAASnpE,WAAWlyB,EAAMmB,KAAKk6F,OAAOx1F,QA7G9B,IA+Gd,MAAO,CAAE80F,WAAUx5F,KADT,6BAAQnB,EAAMmB,MAAd,IAAoBk6F,YAGhC,OAAO,6BAAKr7F,GAAZ,IAAmB26F,aAErB,IAAK,SACH,IAAMx5F,EAAI,6BAAQnB,EAAMmB,MAASo8B,EAAOE,SACxC,OAAO,6BAAKz9B,GAAZ,IAAmBmB,SAErB,IAAK,eACH,MAA8Bo8B,EAAOE,QAA7B49D,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACVn6F,EAAI,6BAAQnB,EAAMmB,MAAd,IAAoBk6F,SAAQC,cAEtC,MAAO,CAAEX,SADK,6BAAQ36F,EAAM26F,UAAd,IAAwBI,KAAMxG,GAAemH,yBACxCv6F,QAErB,IAAK,wBACH,IAAMw6F,EACJ37F,EAAM26F,SAASM,kBAAoB3G,GAAgB4G,IAAM5G,GAAgBsH,MAAQtH,GAAgB4G,IAC7FP,EAAQ,6BAAQ36F,EAAM26F,UAAd,IAAwBM,gBAAiBU,IACvD,OAAO,6BAAK37F,GAAZ,IAAmB26F,aAErB,QACE,OAAO36F,IA6IE67F,GAzIiB,SAC9BlkD,EACAvrB,EACAP,EACAC,EACAH,GAEA,MAA0BmwE,qBAAWN,GAAsB18F,IAA3D,mBAAOkB,EAAP,KAAcwjB,EAAd,KACA,EAAmCxjB,EAAMmB,KAAjCi6F,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,OACxB,EAAqEr7F,EAAM26F,SAAnEC,EAAR,EAAQA,YAAa1uC,EAArB,EAAqBA,qBAAsB4uC,EAA3C,EAA2CA,gBAAiBC,EAA5D,EAA4DA,KAG5D76F,qBAAU,WACJ4rB,EAAwB,GAC1BtI,EAAS,CAAEpM,KAAM,0BAA2BqmB,QAAS,CAAE3R,6BAExD,CAACA,IAGJ5rB,qBAAU,WACR,GAAI66F,IAASxG,GAAeyG,uBAAwB,CAClD,IAAMe,EAAyB7pE,WAAWkpE,GACpC5vC,EAAoBovC,EAAc1uC,EAAuB,EACzD8vC,EAAoB1wC,aAAqB,CAC7CC,eAAgBwwC,EAChBlwE,MACAO,oBACAo/B,oBACA7/B,mBAEIswE,GAAetqE,OAAOC,MAAMoqE,EAAkBlB,IAC9CQ,EAAYW,EAAcD,EAAkBlB,GAAmB,EAC/DoB,EAAWD,EAAcX,EAAYlvE,EAAoB,EACzDmvE,EAAgBU,EAClB3vC,aAAO,CACLC,aAAc2vC,EACd1vC,eAAgBuvC,IAElB,EACJv4E,EAAS,CAAEpM,KAAM,SAAUqmB,QAAS,CAAE49D,OAAQa,EAAUZ,YAAWC,sBAEpE,CAACH,EAAgBvvE,EAAKivE,EAAiB1uE,EAAmBT,EAAgBivE,EAAa1uC,EAAsB6uC,IAGhH76F,qBAAU,WACR,GAAI66F,IAASxG,GAAemH,uBAAwB,CAClD,IAAMS,EAA0BnwC,aAC9BqvC,EACAxvE,EACA+uE,EAAc1uC,EAAuB,EACrCvgC,GAEIywE,EAAgBzqE,OAAOC,MAAMuqE,EAAwBrB,IAEvD,EADAqB,EAAwBrB,GAEtBuB,EAAiB,IAAI33F,KAAU03F,GAAcl4F,IAAIyzC,GACjD4jD,EAAgBjvC,aAAO,CAC3BC,aAAc8uC,EACd7uC,eAAgB4vC,IAElB54E,EAAS,CACPpM,KAAM,2BACNqmB,QAAS,CACP29D,eAAgBgB,EAAav2F,QAvMjB,GAwMZs1F,iBAAkBkB,EAAex2F,QAzMnB,IA0Md01F,sBAIL,CAACT,EAAiBjvE,EAAK+uE,EAAa1uC,EAAsB6uC,EAAMM,EAAQ1jD,EAAmBhsB,IAuD9F,MAAO,CACL3rB,QACAs8F,yBAjD+B,SAACp3F,GAChC,IAAMq3F,EAAqB,IAAI73F,KAAUQ,GAAQhB,IAAIyzC,GAC/CwjD,EAAmBoB,EAAmBjwE,GAAG,GAAKiwE,EAAmB12F,QAxNnD,IAwN8E,OAClG2d,EAAS,CAAEpM,KAAM,eAAgBqmB,QAAS,CAAE29D,eAAgBl2F,EAAQi2F,uBA+CpEqB,2BA3CiCv7F,uBACjC,SAACiE,GACC,IAAMu3F,EAAmB,IAAI/3F,KAAUQ,GAAQE,MAAMuyC,GAC/C+kD,EAAuBD,EAAiBnwE,GAAG,GAAKmwE,EAAiB52F,QA/NvD,GA+NgF,OAChG2d,EAAS,CACPpM,KAAM,eACNqmB,QAAS,CAAE29D,eAAgBsB,EAAsBvB,iBAAkBj2F,OAGvE,CAACyyC,IAmCDglD,mBA/ByB,SAACC,GAC1Bp5E,EAAS,CAAEpM,KAAM,qBAAsBqmB,QAASm/D,KA+BhDC,kBA3BwB,WACxBr5E,EAAS,CAAEpM,KAAM,uBA2BjB0lF,sBAvB4B,WAC5Bt5E,EAAS,CAAEpM,KAAM,2BAuBjB2lF,wBA3D8B,SAAC1lE,GAC/B7T,EAAS,CAAEpM,KAAM,0BAA2BqmB,QAAS,CAAEpG,YA2DvD2lE,kBArBwB,SAACC,GACzBz5E,EAAS,CAAEpM,KAAM,oBAAqBqmB,QAASw/D,KAqB/CC,aAjBmB,SAACh4F,GACpB,IAAMi4F,EAAoB,IAAIz4F,KAAUQ,GAAQhB,IAAIkoB,GACpD5I,EAAS,CACPpM,KAAM,eACNqmB,QAAS,CAAE49D,OAAQn2F,EAAQo2F,UAAW6B,EAAkBvrE,QAAU,EAAIurE,EAAkBz3F,iBa7QxF03F,GAAU,IAGVC,GAAiB75F,aAAOC,IAAPD,CAAH,iJAID,qBAAGm+C,MAAkB27C,MAAN,WAG5BC,GAAe/5F,aAAOC,IAAPD,CAAH,8GAGC,qBAAGm+C,MAAkB27C,MAAN,WAClB,qBAAG37C,MAAkBkJ,OAAO4kB,UAAUC,aAGhD8tB,GAAoBh6F,aAAOC,IAAPD,CAAH,wOASV,qBAAGm+C,MAAkBkJ,OAAOwd,cAMnCo1B,GAAsBj6F,aAAOw/D,IAAPx/D,CAAH,wEAKnBk6F,GAAkBl6F,aAAOuiF,KAAPviF,CAAH,qIAOjB,gBAAGm6F,EAAH,EAAGA,QAASh8C,EAAZ,EAAYA,MAAZ,OACAg8C,GAAO,kGAKCh8C,EAAMkJ,OAAOC,WALd,0BAMCnJ,EAAMkJ,OAAOC,WANd,qMAwGI8yC,GA9EyB,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,mBAAoBC,EAAuD,EAAvDA,gBAAiBZ,EAAsC,EAAtCA,aAAcF,EAAwB,EAAxBA,kBACtFtU,EAAW9lF,iBAAgC,MACjD,EAA6Ck7F,EAAgB38F,KAArDk6F,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,cACnBR,EAAS+C,EAAgBnD,SAAzBI,KAEA94F,EAAMC,eAAND,EAER/B,qBAAU,WACJ66F,IAASxG,GAAemH,wBAA0BhT,EAAS1lF,SAC7D0lF,EAAS1lF,QAAQ2lF,UAElB,CAACoS,IAEJ,IAAMgD,EAAiB,WACrBf,EAAkBzI,GAAemH,yBASnC,OACE,cAAC2B,GAAD,UACE,eAACE,GAAD,WACE,cAAC,KAAD,CAAM/hC,SAAS,OAAO16C,MAAM,YAAY26C,MAAI,EAAC2b,cAAc,YAA3D,SACGn1E,EAAE,0BAEL,cAAC,IAAD,CAAMu6D,eAAe,gBAAgBP,GAAG,MAAMub,OAAO,OAArD,SACGujB,IAASxG,GAAemH,uBACvB,qCACE,cAAC8B,GAAD,UACE,cAAC,KAAD,CACE/9C,IAAKipC,EACLtxE,KAAK,SACL0xD,UAAU,UACVG,QAAQ,OACRtG,MAAM,KACN3gE,MAAOq5F,EACP5yB,YAAY,MACZC,SArBgB,SAACC,GAC/Bu0B,EAAav0B,EAAMq1B,cAAch8F,YAuBvB,cAAC,IAAD,CAAY2gE,MAAM,KAAKnc,QAAQ,OAAOtlC,QA3BzB,WACvB87E,EAAkBzI,GAAeyG,yBA0BvB,SACE,cAAC,IAAD,CAAel6E,MAAM,iBAIzB,qCACE,eAAC28E,GAAD,CAAqBv8E,QAAS68E,EAA9B,UAEE,cAAC,KAAD,CAAMviC,SAAS,OAAOC,MAAI,EAA1B,eAGA,cAACiiC,GAAD,CAAiBliC,SAAS,OAAOC,MAAI,EAACkiC,QAAStC,EA7H9C,KA6HD,SACGA,EAAOh1F,eAAe,KAAM,CAC3BF,sBAAuBk1F,EAAS+B,GAAU,EAAI,EAC9Ch3F,sBAAuBi1F,EAAS+B,GAAU,EAAI,SAIpD,cAAC,IAAD,CAAYz6B,MAAM,KAAKnc,QAAQ,OAAOtlC,QAAS68E,EAA/C,SACE,cAAC,KAAD,CAAYj9E,MAAM,mBAK1B,eAAC,KAAD,CAAM06C,SAAS,OAAO16C,MAAM,aAA5B,eACKw6E,EADL,IACiBuC,EADjB,KAEGtC,EAAcl1F,eAAe,KAAM,CAAEF,sBAAuB,EAAGC,sBAAuB,IAFzF,cC5IF09D,GAASC,aAAH,2NAeNk6B,GAAiBz6F,aAAOw/D,IAAPx/D,CAAH,yHAEEsgE,IACR,gBAAGniB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMkJ,OAAOgX,QAA/B,SAgCCq8B,GAvBqC,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,gBACrD,EAAsBl+F,mBAAS,cAA/B,mBAAOsB,EAAP,KAAYi9F,EAAZ,KACQpD,EAAS+C,EAAgBnD,SAAzBI,KAUR,OAPA76F,qBAAU,WACRi+F,GAAO,SAACC,GACN,IAAMC,EAASp7F,SAASm7F,EAAQp3F,MAAM,KAAK,GAAI,IAC/C,MAAM,YAAN,OAAmBq3F,EAAS,QAE7B,CAACP,IAGF,cAACG,GAAD,CAAgBzhC,eAAe,SAAS+e,GAAG,OAA3C,SACGwf,IAASxG,GAAeyG,uBACvB,cAAC,IAAD,CAAet3F,MAAM,OAAO8zE,OAAO,OAAO12D,MAAM,eAEhD,cAAC,IAAD,CAAapd,MAAM,OAAO8zE,OAAO,OAAO12D,MAAM,gBAJK5f,ICHrDo9F,GAAc96F,aAAO+6F,KAAP/6F,CAAH,6FAOXg7F,GAAsBh7F,KAAOU,IAAV,iIAIrB,qBAAGy9C,MAAkB4D,aAAaC,MAKhCi5C,GAAsBj7F,aAAO2oF,IAAP3oF,CAAH,2GAOZ,qBAAGgxE,SAA2B,GAAM,KAgMlCkqB,GA7L+C,SAAC,GAiBxD,IAhBL7iC,EAgBI,EAhBJA,UACA6a,EAeI,EAfJA,OACAtqD,EAcI,EAdJA,kBACAP,EAaI,EAbJA,IACA6tE,EAYI,EAZJA,WACAC,EAWI,EAXJA,UACAC,EAUI,EAVJA,SACA97C,EASI,EATJA,oBACA6gD,EAQI,EARJA,mBACAhnD,EAOI,EAPJA,kBACA2L,EAMI,EANJA,WACAs7C,EAKI,EALJA,aAKI,IAJJf,0BAII,MAJiB,OAIjB,MAHJ/xE,6BAGI,MAHoB,EAGpB,MAFJH,sBAEI,MAFa,EAEb,MADJ8tE,cACI,SACIx3F,EAAMC,eAAND,EACAoW,EAAY/V,cAAZ+V,QACFwmF,EAAkBj8F,iBAAgC,MAExD,EAUIi5F,GAAwBlkD,EAAmBvrB,EAAmBP,EAAKC,EAAuBH,GAT5F3rB,EADF,EACEA,MACAs8F,EAFF,EAEEA,yBACAE,EAHF,EAGEA,2BACAG,EAJF,EAIEA,mBACAE,EALF,EAKEA,kBACAC,EANF,EAMEA,sBACAC,EAPF,EAOEA,wBACAC,EARF,EAQEA,kBACAE,EATF,EASEA,aAGF,EAAkFl9F,EAAM26F,SAAhFC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,uBAAwBC,EAA7C,EAA6CA,gBAAiBG,EAA9D,EAA8DA,gBAC9D,EAA6Cj7F,EAAMmB,KAA3Ci6F,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,iBAGxBj7F,qBAAU,WACJ2+F,EAAgB77F,SAClB67F,EAAgB77F,QAAQ2lF,UAEzB,IAGHzoF,qBAAU,WACJ0+F,GACFpC,EAA2BoC,KAE5B,CAACA,EAAcpC,IAElB,MAA+Cp9C,aAC7Cq6C,EACIx3F,EAAE,kHACFA,EACE,yHACA,CAAE68F,YAAaH,IAErB,CAAEx/C,UAAW,UAAW46C,cAAe,CAAC,GAAI,MAPtCz6C,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eActBu/C,EAAc9D,IAAoB3G,GAAgBsH,MAAQ+C,EAAqB,MAC/EK,EAAe/D,IAAoB3G,GAAgBsH,MAAQT,EAAmBC,EAC9E6D,EAAiBhE,IAAoB3G,GAAgBsH,MAAQ,MAAQ+C,EACrEO,EAAkBjE,IAAoB3G,GAAgBsH,MAAQR,EAAiBD,EAC/E/nC,GAAc6nC,IAAoB3G,GAAgBsH,MAAQY,EAA6BF,EAE7F,OACE,eAACgC,GAAD,CACExhE,MAAO76B,EAAE,kBACT45D,UAAW6a,GAAU7a,EACrB6a,OAAM,OAAEA,QAAF,IAAEA,IAAU,KAClB3Z,iBAAiB,uBAJnB,UAME,eAACyhC,GAAD,WACE,eAAC,IAAD,CAAMn8B,cAAc,SAASK,GAAG,MAAhC,UACE,cAAC,KAAD,CAAM5hD,MAAM,YAAY26C,MAAI,EAACD,SAAS,OAAO4b,cAAc,YAA3D,SACGn1E,EAAE,iBAAkB,CAAEi6D,MAAOyiC,MAEhC,cAAC,IAAD,CACEQ,cAAa,UAAKD,EAAL,YAAwBD,GACrCG,SAAUP,EACVp2B,YAAY,OACZzmE,MAAOg9F,EACPh+E,KAAM+9E,EACN3rC,YAAaA,GACbisC,mBAAoBvC,EACpBwC,QA9Ba,WACrBtC,EAAkBzI,GAAeyG,2BA+B3B,eAAC,IAAD,CAAMx+B,eAAe,gBAAgBP,GAAG,MAAxC,UACE,cAAC,IAAD,CACE0G,MAAM,KACNh7C,EAAE,WACFjkB,MAAM,OACN8iD,QAAQ,WACRtlC,QAAS,kBAAMo7E,EAAyB,QAL1C,kBASA,cAAC,IAAD,CACE35B,MAAM,KACNh7C,EAAE,WACFjkB,MAAM,OACN8iD,QAAQ,WACRtlC,QAAS,kBAAMo7E,EAAyB,SAL1C,mBASA,cAAC,IAAD,CACE9nB,SAAU12B,EAAoBghC,IAAI,KAAOzmE,EACzCsqD,MAAM,KACNh7C,EAAE,WACFjkB,MAAM,QACN8iD,QAAQ,WACRtlC,QAAS,kBACPo7E,EAAyB92F,aAAiBs4C,EAAoB14C,MAAMuyC,IAAoB71C,aAP5F,SAUGG,EAAE,cAAcs9F,sBAEnB,sBAAM9/C,IAAKH,EAAX,SACE,cAAC,IAAD,CAAU57C,MAAM,OAAO8zE,OAAO,OAAO12D,MAAM,iBAE5C0+B,GAAkBD,KAErB,cAAC,KAAD,CAAM0c,GAAG,OAAOn7C,MAAM,YAAY26C,MAAI,EAACD,SAAS,OAAO4b,cAAc,YAArE,SACGn1E,EAAE,gBAEL,eAACw8F,GAAD,CAAqBjvB,YAAasrB,EAAiBvO,YAAaoQ,EAAoBh6B,MAAM,KAA1F,UACE,cAAC,IAAD,CAAgBnc,QAAQ,WAAxB,SAAoCvkD,EAAE,QACtC,cAAC,IAAD,CAAgBukD,QAAQ,WAAxB,SAAoCvkD,EAAE,QACtC,cAAC,IAAD,CAAgBukD,QAAQ,WAAxB,SAAoCvkD,EAAE,SACtC,cAAC,IAAD,CAAgBukD,QAAQ,WAAxB,SAAoCvkD,EAAE,QACtC,cAAC,IAAD,CAAgBukD,QAAQ,WAAxB,SAAoCvkD,EAAE,WAEb,IAA1B6pB,GACC,qCACE,cAAC,KAAD,CAAMmwC,GAAG,OAAOn7C,MAAM,YAAY26C,MAAI,EAACD,SAAS,OAAO4b,cAAc,YAArE,SACGn1E,EAAE,uBAEL,eAAC,IAAD,CAAMqhE,WAAW,SAAjB,UACE,cAAC,IAAD,CAAM0mB,KAAK,IAAX,SACE,cAAC,IAAD,CAAUrnB,MAAM,KAAK2R,QAASsmB,EAAalyB,SAAUm0B,MAEvD,cAAC,IAAD,CAAM7S,KAAK,IAAX,SACE,eAACyU,GAAD,CACEjqB,UAAWomB,EACXprB,YAAaqrB,EACbtO,YAAawQ,EACbp6B,MAAM,KAJR,UAME,cAAC,IAAD,UAAiB1gE,EAAE,QACnB,cAAC,IAAD,UAAiBA,EAAE,QACnB,cAAC,IAAD,UAAiBA,EAAE,SACnB,cAAC,IAAD,UAAiBA,EAAE,uBAO/B,cAAC,GAAD,CAAe67F,gBAAiB99F,IAChC,cAAC,IAAD,UACE,cAAC,GAAD,CACE69F,mBAAoBA,EACpBC,gBAAiB99F,EACjBk9F,aAAcA,EACdF,kBAAmBA,SAIzB,cAAC,GAAD,CACEvD,OAAQA,EACR5tE,IAAKA,EACL6tE,WAAYA,EACZ5tE,sBAAuBA,EACvBw3B,WAAYA,EACZq2C,UAAWA,EACXC,SAAUA,EACVjuE,eAAgBA,Q,SChPlB6zE,GAAoBh8F,aAAOw/D,IAAPx/D,CAAH,0FAuERi8F,GAzDuB,SAAC,GAAiD,IAA/C3hF,EAA8C,EAA9CA,KAAMigC,EAAwC,EAAxCA,cAAwC,IAAzBpyB,sBAAyB,MAAR,EAAQ,EAC7E1pB,EAAMC,eAAND,EACA42C,EACN/6B,EADM+6B,aAAc2E,EACpB1/B,EADoB0/B,aAAcvwB,EAClCnP,EADkCmP,WAAYpB,EAC9C/N,EAD8C+N,IAAKO,EACnDtO,EADmDsO,kBAAmBurB,EACtE75B,EADsE65B,kBAAmB+E,EACzF5+B,EADyF4+B,SAAU9wB,EACnG9N,EADmG8N,YAG/FkyB,GAA8B,OAARpB,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,qBAAsB,IAAIp5C,KAAUg4C,EAASoB,qBAAuBr5C,KAEpGi7F,EACFz9F,EADmB2pB,EACjB,iHACA,iFAEN,EAA+CwzB,aAAWsgD,EAAgB,CAAEvgD,UAAW,iBAA/EG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAE5B,EAAoE9zB,aAAW5N,EAAM6N,GAAxEg0E,EAAb,EAAQ9zE,IAAkCC,EAA1C,EAA0CA,sBAEpC8zE,EAAe/mD,EAAa/iC,QAAb,+BAA+C+iC,EAAa/iC,SAAY,QAE7F,EAA4B+sD,aAC1B,cAAC,GAAD,CACEz2C,kBAAmBA,EACnBurB,kBAAmBA,EACnB9rB,IAAKA,EACL8tE,UAAW13F,EAAE,eAAgB,CAAEgvB,OAAQ4nB,EAAa5nB,SACpD2oE,SAAUgG,EACV9hD,oBAAqBC,EAAc8hD,KAAK/hD,GACxC6gD,mBAAoB9lD,EAAa5nB,OACjC4sE,mBAAoBrgD,EAAavsB,OACjCnF,sBAAuBA,EACvBH,eAAgBA,KAXbm0E,EAAP,oBAeA,OACE,eAAC,IAAD,CAAMx8B,WAAW,SAAS9G,eAAe,gBAAzC,UACGhd,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAlB,SAAyC,UAAMr9C,EAAjB2pB,EAAmB,MAAiB,OAAzB,OACxCqB,IAAepB,EACd,cAAC,KAAD,CAAUnoB,MAAM,OAAO8zE,OAAO,SAE9B,eAACgoB,GAAD,CAAmBl8B,WAAW,SAASpiD,QAAS4+E,EAAhD,UACE,cAACj/E,GAAA,EAAD,CACE26C,SAAS,OACTz6C,WAAYkM,EACZjrB,MAAO29F,EACPx6F,SAAU,EACV6b,KAAK,IACLE,QAAS4+E,IAEX,cAAC,IAAD,CAAYt5C,QAAQ,OAAOmc,MAAM,KAAjC,SACE,cAAC,IAAD,CAAe7hD,MAAM,aAAapd,MAAM,kBCvEvCq8F,GAAav8F,aAAOonD,IAAPpnD,CAAH,iOAOZ,gBAAGypB,EAAH,EAAGA,WAAH,SAAe00B,MAAkBkJ,OAAO59B,EAAa,eAAiB,gBAE7E,qBAAG00B,MAAkB4D,aAAaC,MC6BhCw6C,GAAoC,SAAC7+E,GACzC,IAAQlf,EAAMC,eAAND,EACR,OACE,cAAC,KAAD,2BAAKukD,QAAQ,YAAY4tB,SAAO,EAACC,UAAW,cAAC,KAAD,CAAa3wE,MAAM,OAAOod,MAAM,YAAYyiD,GAAG,SAAcpiD,GAAzG,aACGlf,EAAE,cAKHg+F,GAAyC,SAAC9+E,GAC9C,IAAQlf,EAAMC,eAAND,EACR,OACE,cAAC,KAAD,2BAAKukD,QAAQ,UAAU4tB,SAAO,EAACC,UAAW,cAAC,IAAD,CAAe3wE,MAAM,OAAOod,MAAM,UAAUyiD,GAAG,SAAcpiD,GAAvG,aACGlf,EAAE,Y,4BCrBHi+F,GAAkB18F,aAAOw/D,IAAPx/D,CAAH,kFAOf28F,GAAgD,SAAC,GAAuB,IAAD,EAApBriF,EAAoB,EAApBA,KAAMzF,EAAc,EAAdA,QACrDpW,EAAMC,eAAND,EACA6qB,EAAiB6P,cAAjB7P,aACR,EAGIorE,KAFFr8C,EADF,EACEA,iBACQlwB,EAFV,EAEE8wB,KAAQ9wB,eAIRktB,EASE/6B,EATF+6B,aACA2E,EAQE1/B,EARF0/B,aACA3F,EAOE/5B,EAPF+5B,YACA9qB,EAMEjP,EANFiP,WACAC,EAKElP,EALFkP,SACAwsB,EAIE17B,EAJF07B,aACAp7B,EAGEN,EAHFM,gBACAL,EAEED,EAFFC,OACA6N,EACE9N,EADF8N,YAGIrJ,EAAei7B,EAAa1nC,SAAW,GACvCsqF,EAAsBvqF,aAAWuI,GACjCiiF,EAA2B1pF,eAC3B2pF,KAAqB,UAACr6C,OAAO+T,gBAAR,aAAC,EAAiBgC,YACvCukC,EAA8B,IAAXxiF,EAEzB,EACE8O,aAAiB/O,EAAMgP,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBG,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAGrF,EAA+C4xB,aAC7Cn9C,EAAE,gEACF,CAAEk9C,UAAW,iBAFPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAgB5B,EAIIJ,aAAWn9C,EAAE,+CAAgD,CAAEgvB,OAAQ4nB,EAAa5nB,SAAW,CACjGkuB,UAAW,WAJAqhD,EADb,EACElhD,UACSmhD,EAFX,EAEElhD,QACgBmhD,EAHlB,EAGElhD,eAKF,OACE,eAAC0gD,GAAD,CAAiB79B,cAAc,SAA/B,UACE,eAAC,IAAD,CAAMK,GAAG,MAAMlG,eAAe,gBAAgB8G,WAAW,SAAzD,UACE,eAAC,KAAD,CAAM5H,OAAK,EAAX,UAAaz5D,EAAE,gBAAf,OACA,eAAC,IAAD,CAAMqhE,WAAW,aAAjB,UACGzrB,GAAeA,EAAYnrB,IAAI,GAC9B,qCACE,cAAC7L,GAAA,EAAD,CAAS66C,OAAK,EAAC15D,MA1BG,WAC5B,GAAI4pB,EACF,OAAOpmB,aAAiBq2C,EAAkBhD,EAAa1zC,UAEzD,GAAIo7F,EAAkB,CACpB,IAAMI,EAAgC,IAAIj8F,KAAUmzC,GAAarrB,MAAMqvB,GACvE,OAAOr2C,aAAiBm7F,EAA+B9nD,EAAa1zC,UAEtE,OAAOK,aAAiBqyC,EAAagB,EAAa1zC,UAkBlBy7F,GAAyBz7F,SAAU,EAAG6b,KAAI,WAAM63B,EAAa5nB,UACnF,sBAAMwuB,IAAK+gD,EAAX,SACE,cAAC,IAAD,CAAU1/E,MAAM,aAAapd,MAAM,OAAOy4D,GAAG,MAAMF,GAAG,aAI1D,cAAC,KAAD,CAAUv4D,MAAM,OAAO8zE,OAAO,SAE/BkpB,GAA6BD,QAGjCjnD,GAAgBA,EAAaltB,GAAG,IAC/B,eAAC,IAAD,CAAMo2C,GAAG,MAAMlG,eAAe,gBAA9B,UACE,eAAC,KAAD,CAAMd,OAAK,EAAX,UAAaz5D,EAAE,uBAAf,OACA,cAAC,KAAD,CAAMy5D,OAAK,EAAX,mBAAgB/1D,aAAsB6zC,EAAcX,EAAa1zC,SAAU,GAA3E,YAAiF0zC,EAAa5nB,aAGjG/D,GACC,eAAC,IAAD,CAAMw1C,GAAG,MAAMlG,eAAe,gBAAgB8G,WAAW,SAAzD,UACE,eAAC,KAAD,CAAM5H,OAAK,EAAX,UAA8Bz5D,EAAjBsrB,EAAmB,UAAe,aAA/C,OACCD,GAAmBH,EAClB,cAAC,IAAD,CAAMm2C,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMnc,UAAQ,EAACC,KAAMjwC,YAAeoW,EAAiBP,EAAWD,EAAY,aAA5E,UACE,cAAClM,GAAA,EAAD,CAAS66C,OAAK,EAAC15D,MAAOwrB,EAAiBroB,SAAU,EAAG2b,MAAM,YAC1D,cAAC,KAAD,CAAM46C,OAAK,EAACS,GAAG,MAAMr7C,MAAM,UAAUs2D,cAAc,YAAnD,SACGn1E,EAAE,YAEL,cAAC,KAAD,CAAWk6D,GAAG,MAAMr7C,MAAM,iBAI9B,cAAC,KAAD,CAAUpd,MAAM,OAAO8zE,OAAO,YAInC5rD,GACC,eAAC,IAAD,CAAM82C,GAAG,MAAMlG,eAAe,gBAAgB8G,WAAW,SAAzD,UACG9jB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWoc,OAAK,EAAlC,SACGz5D,EAAE,qBAEL,cAAC,IAAD,CAAMqhE,WAAW,SAAjB,SACG33C,EACC,eAAC,KAAD,CAAMwwC,GAAG,MAAMT,OAAK,EAApB,UACG/vC,EAAiB,IADpB,OAIA,cAAC,KAAD,CAAUjoB,MAAM,OAAO8zE,OAAO,cAKtC,cAAC,IAAD,CAAM9U,GAAG,MAAMlG,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcpV,KAAI,sBAAiB5J,EAAa1nC,SAAW2lD,MAAM,EAAOC,OAAK,EAA7E,SACGz5D,EAAE,sBAGP,cAAC,IAAD,CAAMygE,GAAG,MAAMlG,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcpV,KAAM5J,EAAa7jB,YAAa8hC,MAAM,EAAOC,OAAK,EAAhE,SACGz5D,EAAE,yBAGNm+F,GACC,cAAC,IAAD,CAAM19B,GAAG,MAAMlG,eAAe,WAA9B,SACE,cAAC,KAAD,CACEpV,KAAI,UAAKvtC,KAAL,oBAAkC+R,EAAcy0E,EAA2BD,GAC/E3kC,MAAM,EACNC,OAAK,EAHP,SAKGz5D,EAAE,qBAIRoW,GAAWioF,GAAqB/9E,GAC/B,cAAC,IAAD,CAAMi6C,eAAe,WAArB,SACE,eAAC,IAAD,CACEhW,QAAQ,OACR7+B,EAAE,IACF6vD,OAAO,OACPt2D,QAAS,kBAAMo5C,aAAc/3C,EAAci7B,EAAavsB,OAAQusB,EAAar4C,WAJ/E,UAME,cAAC,KAAD,CAAM2b,MAAM,UAAU06C,SAAS,OAA/B,SACGv5D,EAAE,qBAEL,cAAC,KAAD,CAAck6D,GAAG,iBAQdqM,OAAMngD,KAAK83E,ICjLpBU,GAA0Br9F,aAAOw/D,IAAPx/D,CAAH,4HAyCd0rE,GAjCuB,SAAC,GAAuB,IAArBpxD,EAAoB,EAApBA,KAAMzF,EAAc,EAAdA,QACrCuT,EAAgB9N,EAAhB8N,YACA3pB,EAAMC,eAAND,EACR,EAAoCrC,oBAAS,GAA7C,mBAAOi6F,EAAP,KAAmBC,EAAnB,KAEMgH,EAAoB7+F,EAAE,wEACtB8+F,EAAkB9+F,EACtB,uGAGF,EAA+Cm9C,aAAWxzB,EAAcm1E,EAAkBD,EAAmB,CAC3G3hD,UAAW,WADLG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAI5B,OACE,eAAC,IAAD,WACE,eAACqhD,GAAD,WACE,eAAC,IAAD,CAAMv9B,WAAW,SAAjB,UACG13C,EAAc,cAAC,GAAD,IAAyB,cAAC,GAAD,IACvC4zB,GAAkBD,EACnB,cAAC,IAAD,CAAME,IAAKH,EAAX,SACE,cAAC,IAAD,CAAU6c,GAAG,MAAMz4D,MAAM,OAAO8zE,OAAO,OAAO12D,MAAM,oBAGxD,cAAC,IAAD,CAAiBu5E,SAAUR,EAAY34E,QAAS,kBAAM44E,GAAeD,IAArE,SACgB53F,EAAb43F,EAAe,OAAY,gBAG/BA,GAAc,cAAC,GAAD,CAAgB/7E,KAAMA,EAAMzF,QAASA,Q,qCCpCpD2oF,GAAuB,SAACh7E,GAC5B,IAAMlQ,EAA2B,QAAjBkQ,EAAMiL,OAAmB7b,KAAOvN,KAAKiO,QAAUkQ,EAAMlQ,QACrE,MAAM,kBAAN,OAAyBA,EAAzB,SAGWmrF,GAAgD,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,eAAmBhgF,EAAY,mBAC3G,OACE,cAAC,KAAD,cACEigF,WAAYJ,GAAqBE,GACjCG,aAAcL,GAAqBG,IAC/BhgF,KCfKmgF,GANoD,SAACngF,GAClE,IAAMogF,EAAe,yBAAqB35F,KAAcI,KAAK8N,QAAxC,QAErB,OAAO,cAAC,KAAD,cAAgBsrF,WAAYG,EAAiBF,aAAa,gCAAmClgF,KCChGsM,GAAUjqB,aAAOg+F,IAAPh+F,CAAH,0EACG,gBAAGypB,EAAH,EAAGA,WAAY69B,EAAf,EAAeA,WAAYnJ,EAA3B,EAA2BA,MAA3B,OACZ10B,EAAa00B,EAAMkJ,OAAO42C,mBAAqB9/C,EAAMkJ,OAAO4kB,UAAU3kB,MACvD,gBAAGnJ,EAAH,EAAGA,MAAH,gBAAkBA,EAAM27C,MAAMzL,KAA9B,YAAsClwC,EAAM27C,MAAMzL,KAAlD,WAwDJ6P,GA/CV,SAAC,GAAgG,IAA9FlkD,EAA6F,EAA7FA,aAAc3E,EAA+E,EAA/EA,aAA+E,IAAjE5rB,kBAAiE,aAA7CrB,mBAA6C,aAAxB+1E,iBAAwB,SAC3F1/F,EAAMC,eAAND,EACF2/F,EAAqC,SAAxBpkD,EAAavsB,QAA6C,SAAxB4nB,EAAa5nB,OAC5D65B,EAAa62C,EAAY,YAAc,aAyB7C,OACE,cAAC,GAAD,CAAS10E,WAAYA,EAAY69B,WAAYA,EAA7C,SACE,eAAC,IAAD,CAAMwY,WAAW,SAAS9G,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAM6F,cAAc,SAApB,UACE,cAAC,IAAD,CAASvhD,MAAOmM,EAAa,eAAiB,OAAQ01C,MAAM,KAA5D,mBAxBG1gE,EAFL2pB,EAEO,OAEPg2E,EAEO,SAGF,QAiBH,YAC4BpkD,EAAavsB,UAEzC,cAAC,KAAD,CAAMnQ,MAAOmM,EAAa,eAAiB,aAA3C,SAhBFrB,EACK3pB,EAAE,uBAEP2/F,EACK3/F,EAAE,yBAEJA,EAAE,iBAAkB,CAAEgvB,OAAQ4nB,EAAa5nB,cAY7CrF,EACC,cAAC,GAAD,CAAyBloB,MAAO,GAAI8zE,OAAQ,KAE5C,cAAC,GAAD,CAAgB0pB,aAAc1jD,EAAc2jD,eAAgBtoD,EAAcn1C,MAAO,GAAI8zE,OAAQ,W,oEChD1FqqB,GAAiB,SAACC,EAAsB/jF,EAAQ8/E,GAC3D,MAAkDj+F,oBAAS,GAA3D,mBAAOmiG,EAAP,KAA0BC,EAA1B,KACA,EAAqC7/C,cAA7B6lB,EAAR,EAAQA,aAActP,EAAtB,EAAsBA,WACdpkB,EAAqBC,eAArBD,iBACAryC,EAAMC,eAAND,EACFuhB,EAAWswB,eACTz7B,EAAY9V,eAAZ8V,QACF4pF,EAAmBngF,YAAY/D,GAuCrC,MAAO,CAAEmkF,cArCajhG,sBAAW,sBAAC,8BAAAd,EAAA,sEAE9B6hG,GAAqB,GAFS,SAGb1tD,EAAiBwtD,EAAY,UAAW,CAACG,EAAiBnsF,QAASrP,KAAO07F,UAAU/sD,aAHvE,cAGxBhH,EAHwB,gBAIRA,EAAGw2B,OAJK,OAIxBr2B,EAJwB,OAM9B/qB,EAASy6B,aAAoBlgC,EAAQ1F,IACjCk2B,EAAQzW,QACVkwC,EACE/lE,EAAE,oBACF,cAACwjD,GAAA,EAAD,CAAwBwB,OAAQ1Y,EAAQ0iD,gBAAxC,SACGhvF,EAAE,0CAA2C,CAAEgvB,OAAQ4sE,OAG5DmE,GAAqB,KAGrBtpC,EAAWz2D,EAAE,SAAUA,EAAE,uFACzB+/F,GAAqB,IAlBO,kDAqB9B3/E,QAAQD,MAAR,MACAs2C,EAAWz2D,EAAE,SAAUA,EAAE,uFAtBK,0DAwB/B,CACDoW,EACAmL,EACAs+E,EACAG,EACAlkF,EACA8/E,EACA57F,EACAy2D,EACAsP,EACA1zB,IAGsBytD,sBAIbK,GAAkB,SAACxqC,GAC9B,MAAkDh4D,oBAAS,GAA3D,mBAAOmiG,EAAP,KAA0BC,EAA1B,KACQ//F,EAAMC,eAAND,EACR,EAAqCkgD,cAA7B6lB,EAAR,EAAQA,aAActP,EAAtB,EAAsBA,WAChBxc,EAAoBl6B,cAClBsyB,EAAqBC,eAArBD,iBACF6iB,EAAev1C,cAqBrB,MAAO,CAAEsgF,cAnBU,uCAAG,8BAAA/hG,EAAA,sEACHm0C,EAAiB6iB,EAAc,UAAW,CAACjb,EAAkBpmC,QAASrP,KAAO07F,UAAU/sD,aADpF,cACdhH,EADc,OAEpB4zD,GAAqB,GAFD,SAGE5zD,EAAGw2B,OAHL,QAGdr2B,EAHc,QAIRzW,QACVkwC,EACE/lE,EAAE,oBACF,cAACwjD,GAAA,EAAD,CAAwBwB,OAAQ1Y,EAAQ0iD,gBAAxC,SACGhvF,EAAE,2CAA4C,CAAEgvB,OAAQ,YAG7D2mC,IACAoqC,GAAqB,KAErBtpC,EAAWz2D,EAAE,SAAUA,EAAE,uFACzB+/F,GAAqB,IAfH,2CAAH,qDAmBKD,sBAGbM,GAA8B,WACzC,MAA8CziG,oBAAS,GAAvD,mBAAO0iG,EAAP,KAAwBC,EAAxB,KACQlqF,EAAY9V,eAAZ8V,QACF8+C,EAAev1C,cACfs6B,EAAoBl6B,cAC1B,EAAwC01C,eAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAcrB,OAbA13D,qBAAU,YACiB,uCAAG,4BAAAC,EAAA,+EAEOg3D,EAAahjB,UAAU97B,EAAS6jC,EAAkBpmC,SAFzD,OAElB0+B,EAFkB,OAGxB+tD,EAAmB/tD,EAAiBloB,GAAG,IAHf,gDAKxBi2E,GAAmB,GALK,yDAAH,qDASzBC,KACC,CAACnqF,EAAS8+C,EAAcjb,EAAmByb,IAEvC,CAAE2qC,kBAAiB1qC,mBC1Eb6qC,GAzBuC,SAAC,GAAiC,IAA/B3kF,EAA8B,EAA9BA,KAA8B,IAAxBuhB,iBAAwB,SAC7EthB,EAAuCD,EAAvCC,OAAQ86B,EAA+B/6B,EAA/B+6B,aAAc2E,EAAiB1/B,EAAjB0/B,aACtBv7C,EAAMC,eAAND,EACFygG,EAAuBhhF,YAASm3B,EAAa/iC,SAAW,IAC9D,EAA6C+rF,GAAea,EAAsB3kF,EAAQy/B,EAAavsB,QAA/FixE,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACG1iE,EACC,cAAC,KAAD,CAAU37B,MAAM,OAAO8zE,OAAO,SAE9B,cAAC,IAAD,CACEn4C,UAAW0iE,EACXY,QAASZ,EAAoB,cAAC,IAAD,CAAe9N,MAAI,EAACnzE,MAAM,iBAAoB,KAC3E0zD,SAAUutB,EACV7gF,QAASghF,EACTx+F,MAAM,OALR,SAOGzB,EAAE,eCnBP2gG,GAAap/F,aAAOggE,KAAPhgE,CAAH,+CAuCDq/F,GAnCmD,SAAC,GAAgC,IAA9BryC,EAA6B,EAA7BA,YAAaqL,EAAgB,EAAhBA,UACxE55D,EAAMC,eAAND,EACA0/C,EAAUD,eAAVC,MAER,OACE,eAAC,KAAD,CACE7kB,MAAO76B,EAAE,oBAAqB,CAAEgvB,OAAQu/B,IACxCqL,UAAWA,EACXkB,iBAAkBpb,EAAMkJ,OAAO4kB,UAAUqzB,WAH3C,UAKE,cAAC,KAAD,CAAMhiF,MAAM,UAAU26C,MAAI,EAA1B,SACGx5D,EAAE,gCAAiC,CAAEgvB,OAAQu/B,MAEhD,cAAC,KAAD,CAAMyL,GAAG,OAAT,SAAiBh6D,EAAE,mDAA+C,CAAEgvB,OAAQu/B,MAC5E,cAAC,KAAD,UACGvuD,EAAE,kFAA8E,CAC/EgvB,OAAQu/B,MAGZ,eAAC,IAAD,CAAQyL,GAAG,OAAO/U,GAAG,IAAIC,UAAQ,EAACC,KAAK,QAAvC,UACGnlD,EAAE,OADL,IACcuuD,KAEd,cAACoyC,GAAD,CAAYx7C,KAAK,yBAAyBD,UAAQ,EAAlD,SACE,eAAC,IAAD,CAAQX,QAAQ,YAAYyV,GAAG,MAAMv4D,MAAM,OAA3C,UACGzB,EAAE,iBACH,cAAC,KAAD,CAAa6e,MAAM,UAAUq7C,GAAG,aAGpC,cAAC,IAAD,CAAQ3V,QAAQ,OAAOtlC,QAAS26C,EAAhC,SACG55D,EAAE,sBCpCL8gG,GAAev/F,aAAOgmE,IAAPhmE,CAAH,gDAYHw/F,GAR2C,SAAC,GAA2B,IAAzBrjG,EAAwB,EAAxBA,SAAUuhB,EAAc,EAAdA,QACrE,OACE,cAAC6hF,GAAD,CAAcpgC,MAAM,KAAK5uD,GAAG,MAAM4T,EAAE,WAAW6+B,QAAQ,WAAWtlC,QAASA,EAA3E,SACGvhB,K,oBCJDuG,GAAU,CACdovC,SAAUv7B,MAGNkpF,GAAS,uCAAG,WAAOhB,EAAkB/8F,GAAzB,iCAAA/E,EAAA,6DAAiCgF,EAAjC,+BAA4C,GACtDkhB,EAAWomC,eADD,SAECw1C,EAAiBp9B,QAAQ,IAAIngE,KAAUQ,GAAQE,MAAMR,KAAQS,IAAIF,IAAWrD,WAA5E,6BACZoE,IADY,IAEfmgB,cAJc,cAEV+nB,EAFU,gBAMMA,EAAGw2B,OANT,cAMVr2B,EANU,yBAOTA,EAAQzW,QAPC,2CAAH,wDAUTorE,GAAY,uCAAG,WAAOjB,EAAkB/8F,GAAzB,mBAAA/E,EAAA,6DACbkmB,EAAWomC,eADE,SAEFw1C,EAAiBp9B,QAAQ,IAAIngE,KAAUQ,GAAQE,MAAM0U,MAAuBhY,WAA5E,6BACZoE,IADY,IAEfmgB,cAJiB,cAEb+nB,EAFa,gBAMGA,EAAGw2B,OANN,cAMbr2B,EANa,yBAOZA,EAAQzW,QAPI,2CAAH,wDAkCHqrE,GAxBM,SAACplF,GAAwC,IAAxBqlF,EAAuB,wDACrD5/E,EAAWswB,eACjB,EAAoBvxC,eAAZ8V,EAAR,EAAQA,QACF4hC,EAAqBp4B,cACrBogF,EAAmBngF,YAAY/D,GAE/BslF,EAAcpiG,sBAAW,uCAC7B,WAAOiE,EAAgBC,GAAvB,SAAAhF,EAAA,yDACiB,IAAX4d,EADN,gCAEU2mD,aAAUzqB,EAAoB,EAAG/0C,GAF3C,kCAGak+F,EAHb,iCAIUF,GAAajB,EAAkB/8F,GAJzC,gDAMU+9F,GAAUhB,EAAkB/8F,EAAQC,GAN9C,QAQEqe,EAAS46B,aAAwBrgC,EAAQ1F,IACzCmL,EAAS26B,aAAkBpgC,EAAQ1F,IATrC,4CAD6B,wDAY7B,CAACA,EAASmL,EAAU4/E,EAAYnpD,EAAoBgoD,EAAkBlkF,IAGxE,MAAO,CAAEulF,QAASD,IC/CdE,GAAW,uCAAG,WAAOtB,EAAuB/8F,EAAgBC,GAA9C,qBAAAhF,EAAA,6DACZkmB,EAAWomC,eACX+2C,EAAQ3pE,sBAAW30B,EAAQC,GAFf,SAID88F,EAAiBj9B,SAASw+B,EAAM1hG,WAAY,CAC3DukB,aALgB,cAIZ+nB,EAJY,gBAOIA,EAAGw2B,OAPP,cAOZr2B,EAPY,yBAQXA,EAAQzW,QARG,2CAAH,0DAWX2rE,GAAoB,uCAAG,WAAOxB,GAAP,mBAAA9hG,EAAA,6DACrBkmB,EAAWomC,eADU,SAEVw1C,EAAiByB,kBAAkB,CAAEr9E,aAF3B,cAErB+nB,EAFqB,gBAGLA,EAAGw2B,OAHE,cAGrBr2B,EAHqB,yBAIpBA,EAAQzW,QAJY,2CAAH,sDAgCX6rE,GAzBQ,SAAC5lF,GAAqD,IAArCkkC,EAAoC,wDACpEz+B,EAAWswB,eACjB,EAAoBvxC,eAAZ8V,EAAR,EAAQA,QACF4hC,EAAqBp4B,cACrBogF,EAAmBngF,YAAY/D,GAE/B6lF,EAAgB3iG,sBAAW,uCAC/B,WAAOiE,EAAgBC,GAAvB,SAAAhF,EAAA,yDACiB,IAAX4d,EADN,gCAEU+mD,aAAY7qB,EAAoB,EAAG/0C,GAF7C,kCAGa+8C,EAHb,iCAIUwhD,GAAqBxB,GAJ/B,gDAMUsB,GAAYtB,EAAkB/8F,EAAQC,GANhD,QAQEqe,EAAS46B,aAAwBrgC,EAAQ1F,IACzCmL,EAAS26B,aAAkBpgC,EAAQ1F,IACnCmL,EAAS66B,aAAwBtgC,EAAQ1F,IAV3C,4CAD+B,wDAa/B,CAACA,EAASmL,EAAUy+B,EAAyBhI,EAAoBgoD,EAAkBlkF,IAGrF,MAAO,CAAE8lF,UAAWD,ICbhBhB,GAAap/F,aAAOggE,KAAPhgE,CAAH,+CAIVsgG,GAAqBtgG,aAAOw/D,IAAPx/D,CAAH,mDAIlBugG,GAAmBvgG,aAAOuiF,KAAPviF,CAAH,0IAyOPwgG,GAjO+B,SAAC,GAOxC,IANLC,EAMI,EANJA,UACAnmF,EAKI,EALJA,KACAggC,EAII,EAJJA,oBACAnG,EAGI,EAHJA,kBAGI,IAFJusD,uBAEI,SADJroC,EACI,EADJA,UAEQ99C,EAAuFD,EAAvFC,OAAQ86B,EAA+E/6B,EAA/E+6B,aAAczsB,EAAiEtO,EAAjEsO,kBAAmBP,EAA8C/N,EAA9C+N,IAAK6wB,EAAyC5+B,EAAzC4+B,SAAUlD,EAA+B17B,EAA/B07B,aAAcgE,EAAiB1/B,EAAjB0/B,aACtEv7C,EAAMC,eAAND,EACA0/C,EAAUD,eAAVC,MACA2hD,EAAYH,GAAaplF,EAAQkmF,GAAjCX,QACAO,EAAcF,GAAe5lF,EAAQD,EAAKmkC,yBAA1C4hD,UACR,EAAqC1hD,cAA7B6lB,EAAR,EAAQA,aAActP,EAAtB,EAAsBA,WACtB,EAAkC94D,oBAAS,GAA3C,mBAAOukG,EAAP,KAAkBC,EAAlB,KACA,EAAsCxkG,mBAAS,IAA/C,mBAAOykG,EAAP,KAAoBC,EAApB,KACA,EAAyD1kG,oBAAS,GAAlE,mBAAO2kG,EAAP,KAA6BC,EAA7B,KACA,EAA8B5kG,mBAAS,GAAvC,mBAAO6kG,EAAP,KAAgBC,EAAhB,KACA,EAAkD9kG,oBAAS,GAA3D,mBAAO+kG,EAAP,KAA0BC,EAA1B,KACMC,EAA4B,WAChC,OAAIX,EACKxnD,EAASqB,cAEXvE,EAAaltB,GAAG,IAAMwxB,EAAoBxxB,GAAGktB,GAAgBA,EAAesE,GAE/EgnD,EAAyB7/F,aAAiB,IAAIP,KAAU2/F,GAAcxrD,EAAa1zC,UACnF4/F,EAAqBb,EACvBxnD,EAASqB,cAAcihC,GAAG8lB,GAC1BpoD,EAASoB,oBAAoBkhC,GAAG8lB,GAE9BE,EAAiB,IAAItgG,KAAU2/F,GAAaj/F,MAAMuyC,GAClDstD,GAA2BD,EAAepzE,SAAW9rB,aAAak/F,EAAet/F,YAOjFw/F,GALoB55C,aAAqB,CAC7CC,eAAiBy5C,EAAepzE,QAAsC,EAA5BozE,EAAet/F,WACzDmmB,MACAO,sBAEkC,GAAKtO,EAAKsO,kBACxC+4E,GAAqBr/F,aAAao/F,GAAWA,GAAY,IAAQ,EAAI,EAAGA,GAAY,IAAQ,EAAI,GAEhGE,GAAevsD,EAAa/iC,QAAb,+BAA+C+iC,EAAa/iC,SAAY,QAE7F5V,qBAAU,WACJs5C,EAAaltB,GAAG,KAAO43E,GACzBM,EAAyBM,EAAuBjF,KAAKnjD,EAASqB,eAAezxB,GAAGktB,MAEjF,CACD6qD,EACA7qD,EACAkD,EACA7D,EACAqrD,EACAM,EACAM,IAGF,IAWMO,GAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBV,IAA4Bt/F,UAAU,KAAK0lB,aAAaq6E,GACjFE,EAAgB7/F,aAAsB4/F,EAAwB1sD,EAAa1zC,SAAU0zC,EAAa1zC,UACxGm/F,EAAekB,QAEflB,EAAe,IAEjBI,EAAWY,IAGPG,GAAkB,uCAAG,sBAAAtlG,EAAA,yDACzBikG,GAAa,GADY,UAGnBF,EAHmB,gCAKfL,EAAUQ,EAAaxrD,EAAa1zC,UALrB,OAMrB6iE,EAAa,GAAD,OACP/lE,EAAE,YADK,KAEVA,EAAE,kEAAmE,CACnEgvB,OAAQusB,EAAavsB,UATJ,wCAcfqyE,EAAQe,EAAaxrD,EAAa1zC,UAdnB,QAerB6iE,EAAa,GAAD,OACP/lE,EAAE,UADK,KAEVA,EAAE,oDAAqD,CACrDgvB,OAAQ4nB,EAAa5nB,UAlBJ,QAsBvBmzE,GAAa,GACbvoC,IAvBuB,kDAyBvBnD,EAAWz2D,EAAE,SAAUA,EAAE,uFACzBmiG,GAAa,GA1BU,0DAAH,qDA8BxB,OAAIO,EAEA,cAAC,GAAD,CACEv4E,kBAAmBA,EACnBurB,kBAAmBA,EACnB9rB,IAAKA,EACL8tE,UAAW13F,EAAE,eAAgB,CAAEgvB,OAAQ4nB,EAAa5nB,SACpD2oE,SAAUwL,GACVtnD,oBAAqBpB,EAASqB,cAAc8hD,KAAK/hD,GACjD6gD,mBAAoB9lD,EAAa5nB,OACjC4sE,mBAAoBrgD,EAAavsB,OACjCylD,OAAQ,kBAAMkuB,GAAqB,IACnChG,aAAcyF,IAMlB,eAAC,KAAD,CACE7nB,SAAS,QACT1/C,MAAyB76B,EAAlBiiG,EAAoB,UAAe,iBAC1CroC,UAAWA,EACXkB,iBAAkBpb,EAAMkJ,OAAO4kB,UAAUqzB,WAJ3C,UAMGtpD,EAAaltB,GAAG,KAAO43E,GACtB,cAAC,KAAD,CAAMpjF,MAAM,YAAY26C,MAAI,EAACiH,GAAG,OAAO10C,MAAO,CAAE2tC,UAAW,UAAYH,SAAS,OAAhF,SACGv5D,EAAE,4CAA6C,CAC9CiD,OAAQS,aAAsB6zC,EAAcX,EAAa1zC,SAAU,GACnE6gB,MAAO6yB,EAAa5nB,WAI1B,eAAC,IAAD,CAAMqyC,WAAW,SAAS9G,eAAe,gBAAgBkG,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMjH,MAAI,EAAV,UAA8Bx5D,EAAlBiiG,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAM5gC,WAAW,SAASkZ,SAAS,OAAnC,UACE,cAAC,IAAD,CAAO7I,IAAG,yBAAoB96B,EAAa/iC,QAAjC,QAAgDpS,MAAO,GAAI8zE,OAAQ,GAAIlpD,IAAKuqB,EAAa5nB,SACnG,cAAC,KAAD,CAAMkrC,GAAG,MAAMV,MAAI,EAAnB,SACG5iB,EAAa5nB,eAIpB,cAAC,IAAD,CACEjvB,MAAOqiG,EACPjxC,YA/FyB,SAACgV,GAC9B,GAAIA,EAAO,CACT,IAAMs9B,EAAiBzgG,aAAiB,IAAIP,KAAU0jE,GAAQvvB,EAAa1zC,UACrEwgG,EAAav4E,KAAKk2D,MAAMoiB,EAAengG,UAAUs/F,KAA6B55E,aAAa,KAAKvlB,YACtGg/F,EAAWt3E,KAAK+gE,IAAIwX,EAAY,WAEhCjB,EAAW,GAEbJ,EAAel8B,IAwFX+2B,cAAqC,IAAtBxnD,GAAA,WAA+BstD,GAA2B,EAA1D,QACf/uB,UAAWquB,GAAwBQ,EACnC5/F,SAAU0zC,EAAa1zC,WAExBo/F,GACC,cAAC,KAAD,CAAMzjF,MAAM,UAAU06C,SAAS,OAAOxtC,MAAO,CAAE2tC,UAAW,SAAWM,GAAG,MAAxE,SACGh6D,EAAE,wCAAyC,CAC1CiD,OAAQS,aAAsB,IAAIjB,KAAU80C,GAAeX,EAAa1zC,SAAU,GAClF6gB,MAAO6yB,EAAa5nB,WAIzB8zE,GACC,cAAC,KAAD,CAAMjkF,MAAM,UAAU06C,SAAS,OAAOxtC,MAAO,CAAE2tC,UAAW,SAAWM,GAAG,MAAxE,SACGh6D,EAAE,gCAAiC,CAClCgvB,OAAQ4nB,EAAa5nB,WAI3B,cAAC,KAAD,CAAMkrC,GAAG,OAAOr7C,MAAM,aAAa06C,SAAS,OAAOkH,GAAG,MAAtD,SACGzgE,EAAE,qBAAsB,CACvBwD,QAASE,aAAsBk/F,IAA6BhsD,EAAa1zC,cAG7E,cAAC,KAAD,CACEgpF,IAAK,EACL9gE,IAAK,IACLrrB,MAAOyiG,EACPmB,eAAgBP,GAChB37E,KAAK,QACLm8E,WAAU,UAAKpB,EAAL,KACVqB,KAAM,IAER,eAAC,IAAD,CAAMxiC,WAAW,SAAS9G,eAAe,gBAAgBP,GAAG,MAA5D,UACE,cAAC,GAAD,CAAkB/6C,QAAS,kBAAMmkF,GAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnkF,QAAS,kBAAMmkF,GAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnkF,QAAS,kBAAMmkF,GAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnkF,QAAS,kBAAMmkF,GAAoB,MAArD,SAA4DpjG,EAAE,aAE9DiiG,GACA,eAAC,IAAD,CAAMjoC,GAAG,OAAOqH,WAAW,SAAS9G,eAAe,gBAAnD,UACE,eAAC,KAAD,CAAM+G,GAAG,MAAMziD,MAAM,aAArB,UACG7e,EAAE,+BADL,OAGA,eAAC6hG,GAAD,CAAoBxgC,WAAW,SAASpiD,QAAS,kBAAM0jF,GAAqB,IAA5E,UACE,eAACb,GAAD,eAAoBoB,MACpB,cAAC,IAAD,CAAY3+C,QAAQ,OAAOmc,MAAM,KAAjC,SACE,cAAC,IAAD,CAAe7hD,MAAM,aAAapd,MAAM,iBAKhD,cAAC,IAAD,CACE27B,UAAW8kE,EACXxB,QAASwB,EAAY,cAAC,IAAD,CAAelQ,MAAI,EAACnzE,MAAM,iBAAoB,KACnEI,QAASukF,GACTjxB,UAAW6vB,GAA2C,IAA5BnyE,WAAWmyE,IAAsBE,GAAwBQ,EACnF9oC,GAAG,OALL,SAOeh6D,EAAZkiG,EAAc,aAAkB,cAEjCD,GACA,cAAC,GAAD,CAAY/8C,UAAQ,EAACC,KAAMg+C,GAA3B,SACE,cAAC,IAAD,CAAQ1hG,MAAM,OAAOu4D,GAAG,MAAMzV,QAAQ,YAAtC,SACGvkD,EAAE,eAAgB,CAAEgvB,OAAQ4nB,EAAa5nB,iBC1JvC80E,GAhGkC,SAAC,GAO3C,IANLjoF,EAMI,EANJA,KACAggC,EAKI,EALJA,oBACAC,EAII,EAJJA,cACAkmD,EAGI,EAHJA,UACA+B,EAEI,EAFJA,SAEI,IADJ3mE,iBACI,SACIwZ,EAAwE/6B,EAAxE+6B,aAAclB,EAA0D75B,EAA1D65B,kBAAmB6B,EAAuC17B,EAAvC07B,aAAcvsB,EAAyBnP,EAAzBmP,WAAYyvB,EAAa5+B,EAAb4+B,SAC3Dz6C,EAAMC,eAAND,EACFgkG,EAAqBzgG,aAAiBu4C,EAAelF,EAAa1zC,UAClE+gG,EAA2B1gG,aAC/Bu4C,EAAc9yB,aAAa0sB,GAC3BkB,EAAa1zC,UAGf,EAAiC09D,aAAS,cAAC,GAAD,CAAsBrS,YAAa3X,EAAa5nB,UAAnFk1E,EAAP,oBAEA,EAAyBtjC,aACvB,cAAC,GAAD,CACEohC,UAAWA,EACXnmF,KAAMA,EACNggC,oBAAqBA,EACrBnG,kBAAmBA,KALhByuD,EAAP,oBASA,EAA2BvjC,aACzB,cAAC,GAAD,CACE/kB,oBAAqBA,EACrBmmD,UAAWA,EACXnmF,KAAMA,EACN65B,kBAAmBA,EACnBusD,iBAAe,KANZmC,EAAP,oBAUA,EAA+CjnD,aAC7Cn9C,EAAE,6EACF,CAAEk9C,UAAW,WAFPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtB8mD,EAAoB9sD,EAAaltB,GAAG,IAAMowB,EAASqB,cAAcrxB,IAAI8sB,GAmD3E,OAAO,cAAC,IAAD,CAAM6oB,cAAc,SAApB,SAA8BhjC,EAAY,cAAC,KAAD,CAAU37B,MAAM,OAAO8zE,OAAO,SAhDtEwuB,EACL,eAAC,IAAD,CAAMxpC,eAAe,gBAAgB8G,WAAW,SAAhD,UACE,cAAC,IAAD,CAAMjB,cAAc,SAApB,SACE,qCACE,cAACxhD,GAAA,EAAD,CAAS46C,MAAI,EAACD,SAAS,OAAOr2D,SAAU,EAAGnD,MAAOikG,IAC3B,IAAtBtuD,GACC,cAAC,KAAD,CAAM6jB,SAAS,OAAO16C,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACE26C,SAAS,OACT16C,MAAM,aACN3b,SAAU,EACVnD,MAAOkkG,EACPjlF,OAAO,IACPD,KAAK,gBAMf,eAAC,IAAD,WACE,cAAC,IAAD,CAAYwlC,QAAQ,YAAYtlC,QAASmlF,EAAkB9iC,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWziD,MAAM,UAAUpd,MAAM,WAElC4iG,EACC,sBAAM7mD,IAAKH,EAAX,SACE,cAAC,IAAD,CAAYkH,QAAQ,YAAYguB,UAAQ,EAAxC,SACE,cAAC,IAAD,CAAS1zD,MAAM,eAAepd,MAAM,OAAO8zE,OAAO,aAItD,cAAC,IAAD,CACEhxB,QAAQ,YACRtlC,QAAS48B,EAAoBxxB,GAAG,GAAK85E,EAAiBD,EACtD3xB,SAAUvnD,EAHZ,SAKE,cAAC,IAAD,CAASnM,MAAM,UAAUpd,MAAM,OAAO8zE,OAAO,cAIlDh4B,GAAkBD,KAGrB,cAAC,IAAD,CAAQi1B,SAAUvnD,EAAY/L,QAAS48B,EAAoBxxB,GAAG,GAAK85E,EAAiBD,EAApF,SACGlkG,EAAE,cCjGLiE,GAAU,CACdovC,SAAUv7B,MAGNwsF,GAAW,uCAAG,WAAOtE,GAAP,mBAAA9hG,EAAA,6DACZkmB,EAAWomC,eADC,SAEDw1C,EAAiBp9B,QAAQ,IAAzB,6BAAmC3+D,IAAnC,IAA4CmgB,cAF3C,cAEZ+nB,EAFY,gBAGIA,EAAGw2B,OAHP,cAGZr2B,EAHY,yBAIXA,EAAQzW,QAJG,2CAAH,sDAOX0uE,GAAc,uCAAG,WAAOvE,GAAP,mBAAA9hG,EAAA,6DACfkmB,EAAWomC,eADI,SAEJw1C,EAAiBp9B,QAAjB,6BAA8B3+D,IAA9B,IAAuClE,MAAOyC,KAAU4hB,cAFpD,cAEf+nB,EAFe,gBAGCA,EAAGw2B,OAHJ,cAGfr2B,EAHe,yBAIdA,EAAQzW,QAJM,2CAAH,sDA4BL2uE,GArBQ,SAAC1oF,GAAgC,IAAxBqlF,EAAuB,wDAC/C5/E,EAAWswB,eACjB,EAAoBvxC,eAAZ8V,EAAR,EAAQA,QACF4pF,EAAmBngF,YAAY/D,GAC/Bk8B,EAAqBp4B,cAErB6kF,EAAgBzlG,sBAAW,sBAAC,sBAAAd,EAAA,yDACjB,IAAX4d,EAD4B,gCAExBknD,aAAYhrB,EAAoB,GAFR,kCAGrBmpD,EAHqB,iCAIxBoD,GAAevE,GAJS,gDAMxBsE,GAAYtE,GANY,QAQhCz+E,EAAS66B,aAAwBtgC,EAAQ1F,IACzCmL,EAAS26B,aAAkBpgC,EAAQ1F,IATH,4CAU/B,CAACA,EAASmL,EAAU4/E,EAAYnpD,EAAoBgoD,EAAkBlkF,IAEzE,MAAO,CAAE4oF,SAAUD,ICiGNE,GA/GmC,SAAC,GAS5C,IARLC,EAQI,EARJA,iBACAC,EAOI,EAPJA,YACAtpD,EAMI,EANJA,aACAupD,EAKI,EALJA,oBACAhpF,EAII,EAJJA,OACAkmF,EAGI,EAHJA,UAGI,IAFJ+C,sBAEI,SADJnrC,EACI,EADJA,UAEQ55D,EAAMC,eAAND,EACA0/C,EAAUD,eAAVC,MACR,EAAqCQ,cAA7B6lB,EAAR,EAAQA,aAActP,EAAtB,EAAsBA,WACdiuC,EAAaF,GAAe1oF,EAAQkmF,GAApC0C,SACArD,EAAYH,GAAaplF,EAAQkmF,GAAjCX,QACR,EAAkC1jG,oBAAS,GAA3C,mBAAOukG,EAAP,KAAkBC,EAAlB,KACA,EAA4CxkG,mBAASonG,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+C9nD,aAC7C,qCACE,cAAC,KAAD,CAAMsjB,GAAG,OAAT,SAAiBzgE,EAAE,mDACnB,cAAC,KAAD,UAAOA,EAAE,iDAEX,CAAEk9C,UAAW,aAAc46C,cAAe,CAAC,GAAI,MALzCz6C,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAQtB2nD,EAAoB,uCAAG,sBAAAhnG,EAAA,yDAC3BikG,GAAa,IAET6C,EAHuB,0CAKjB3D,EAAQwD,EAAatpD,EAAar4C,UALjB,OAMvB6iE,EAAa,GAAD,OACP/lE,EAAE,cADK,KAEVA,EAAE,8DAA+D,CAAEgvB,OAAQusB,EAAavsB,UAE1FmzE,GAAa,GACbvoC,IAXuB,kDAavBnD,EAAWz2D,EAAE,SAAUA,EAAE,uFACzBogB,QAAQD,MAAR,MACAgiF,GAAa,GAfU,2DAoBjBuC,IApBiB,QAqBvB3+B,EAAa,GAAD,OACP/lE,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAEgvB,OAAQusB,EAAavsB,UAEpFmzE,GAAa,GACbvoC,IA1BuB,mDA4BvBnD,EAAWz2D,EAAE,SAAUA,EAAE,uFACzBogB,QAAQD,MAAR,MACAgiF,GAAa,GA9BU,kEAAH,qDAmC1B,OACE,eAAC,KAAD,CACEtnE,MAAK,UAAK0gB,EAAavsB,OAAlB,YAA6ChvB,EAAjB+kG,EAAmB,UAAe,YACnEnrC,UAAWA,EACXkB,iBAAkBpb,EAAMkJ,OAAO4kB,UAAUqzB,WAH3C,UAKGkE,GACC,eAAC,IAAD,CAAMxqC,eAAe,SAAS8G,WAAW,SAASZ,GAAG,OAArD,UACE,eAAC,IAAD,CACE8M,YAAay3B,EAAiB,EAAI,EAClCtkC,MAAM,KACNnc,QAAQ,SACR+lC,YAAa,SAACl1D,GAAD,OAAW6vE,GAAmB7vE,IAJ7C,UAME,cAAC,IAAD,CAAgB6vB,GAAG,SAAnB,SAA6BjlD,EAAE,cAC/B,cAAC,IAAD,CAAgBilD,GAAG,SAAnB,SAA6BjlD,EAAE,gBAEjC,cAAC,IAAD,CAAMk6D,GAAG,OAAO1c,IAAKH,EAArB,SACE,cAAC,IAAD,CAAUx+B,MAAM,iBAEjB0+B,GAAkBD,KAIvB,eAAC,IAAD,CAAMid,eAAe,gBAAgB8G,WAAW,SAASZ,GAAG,OAA5D,UACE,eAAC,KAAD,WAAwBzgE,EAAjBglG,EAAmB,cAAmB,cAA7C,OACA,eAAC,IAAD,CAAM5kC,cAAc,SAApB,UACE,eAAC,IAAD,WACGwkC,EADH,IACsBrpD,EAAavsB,UAElC81E,EAAsB,GACrB,cAAC,KAAD,CAAMvrC,SAAS,OAAO16C,MAAM,aAA5B,oBAA8Chb,aAAaihG,GAA3D,gBAKN,cAAC,IAAD,CACE9qC,GAAG,MACH/6C,QAASimF,EACT9nE,UAAW8kE,EACXxB,QAASwB,EAAY,cAAC,IAAD,CAAelQ,MAAI,EAACnzE,MAAM,iBAAoB,KAJrE,SAMe7e,EAAZkiG,EAAc,aAAkB,aAEnC,cAAC,IAAD,CAAQ39C,QAAQ,OAAOtlC,QAAS26C,EAAWsb,GAAG,MAA9C,SACGl1E,EAAE,sBCjDImlG,GAtEuC,SAAC,GAOhD,IANLpkD,EAMI,EANJA,SACAxF,EAKI,EALJA,aACAz/B,EAII,EAJJA,OACAkmF,EAGI,EAHJA,UACA73E,EAEI,EAFJA,kBAEI,IADJiT,iBACI,SACIp9B,EAAMC,eAAND,EACFolG,EAAsB7hG,aAAiBw9C,EAAUxF,EAAar4C,UAC9D0hG,EAAmB/gG,aAAauhG,EAAqB,EAAG,GAExDC,EAA4B9hG,aAAiBw9C,EAAS/3B,aAAamB,GAAoBoxB,EAAar4C,UAEpG2hG,EAAcnhG,aAAsBq9C,EAAUxF,EAAar4C,UAC3DoiG,EAAcvkD,EAASt9C,WAAa,EACpCshG,EAA4B,IAAXjpF,EAEvB,EAA2B8kD,aACzB,cAAC,GAAD,CACEgkC,iBAAkBA,EAClBC,YAAaA,EACbtpD,aAAcA,EACdupD,oBAAqBO,EACrBvpF,OAAQA,EACRkmF,UAAWA,EACX+C,eAAgBA,KARbQ,EAAP,oBAYA,OACE,eAAC,IAAD,CAAMhrC,eAAe,gBAAgB8G,WAAW,SAASZ,GAAG,OAA5D,UACE,cAAC,IAAD,CAAML,cAAc,SAApB,SACGhjC,EACC,cAAC,KAAD,CAAU37B,MAAM,OAAO8zE,OAAO,SAE9B,mCACG+vB,EACC,qCACE,cAAC1mF,GAAA,EAAD,CAAS46C,MAAI,EAACD,SAAS,OAAOr2D,SAAU,EAAGnD,MAAOqlG,IACjDj7E,EAAoB,GACnB,cAACvL,GAAA,EAAD,CACEiqD,QAAQ,SACRtP,SAAS,OACT16C,MAAM,aACN3b,SAAU,EACV8b,OAAO,IACPjf,MAAOslG,EACPtmF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM06C,SAAS,OAAO16C,MAAM,eAA5B,0BAQV,cAAC,IAAD,CAAQ0zD,UAAW+yB,EAAarmF,QAASsmF,EAAzC,SACoBvlG,EAAjB+kG,EAAmB,UAAe,iBCtErCS,GAAajkG,aAAOuiF,KAAPviF,CAAH,mDAqEDkkG,GA5DiC,SAAC,GAA6B,IAA3B5pF,EAA0B,EAA1BA,KAAMigC,EAAoB,EAApBA,cAC/ChgC,EAA2FD,EAA3FC,OAAQ86B,EAAmF/6B,EAAnF+6B,aAAc2E,EAAqE1/B,EAArE0/B,aAAcuE,EAAuDjkC,EAAvDikC,QAAS/jC,EAA8CF,EAA9CE,aAAc0+B,EAAgC5+B,EAAhC4+B,SAAUtwB,EAAsBtO,EAAtBsO,kBAEvE63E,EAAYjmF,IAAiBrf,KAAasf,QACxChc,EAAMC,eAAND,EACFkyC,GAAoB,OAARuI,QAAQ,IAARA,OAAA,EAAAA,EAAUvI,WAAY,IAAIzvC,KAAUg4C,EAASvI,WAAa1vC,KACtEq5C,GAA8B,OAARpB,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,qBAAsB,IAAIp5C,KAAUg4C,EAASoB,qBAAuBr5C,KACpGu+C,GAAmB,OAARtG,QAAQ,IAARA,OAAA,EAAAA,EAAUtB,eAAgB,IAAI12C,KAAUg4C,EAAStB,eAAiB32C,KAC7EkjG,GAAiBxzD,EAAU7nB,GAAG,KAAO23E,EACrC+B,EAAWjoD,EAAczxB,GAAG,GAC5B+S,GAAaqd,EAEnB,OACE,cAAC,IAAD,CAAM2lB,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACGtgB,GACC,qCACE,eAAC,IAAD,CAAK+oB,QAAQ,SAAb,UACE,cAAC28B,GAAD,CAAY3mF,MAAM,YAAYs2D,cAAc,YAAY3b,MAAI,EAACD,SAAS,OAAtE,mBACMhe,EAAavsB,OADnB,OAGA,cAACw2E,GAAD,CAAY3mF,MAAM,aAAas2D,cAAc,YAAY3b,MAAI,EAACD,SAAS,OAAvE,SACGv5D,EAAE,eAGP,cAAC,GAAD,CACE+gD,SAAUA,EACVxF,aAAcA,EACdz/B,OAAQA,EACRqO,kBAAmBA,EACnB63E,UAAWA,EACX5kE,UAAWA,OAIjB,eAAC,IAAD,CAAKyrC,QAAQ,SAAb,UACE,eAAC28B,GAAD,CAAY3mF,MAAOklF,EAAW,YAAc,aAAc5uB,cAAc,YAAY3b,MAAI,EAACD,SAAS,OAAlG,UACGwqC,EAAWntD,EAAa5nB,OAAShvB,EAAE,SAAU,OAEhD,cAACwlG,GAAD,CAAY3mF,MAAOklF,EAAW,aAAe,YAAa5uB,cAAc,YAAY3b,MAAI,EAACD,SAAS,OAAlG,SACGwqC,EAAW/jG,EAAE,UAAL,UAAoB42C,EAAa5nB,aAG7C02E,EACC,cAAC,GAAD,CAAgB7pF,KAAMA,EAAMuhB,UAAWA,IAEvC,cAACuoE,GAAD,CACEvoE,UAAWA,EACXvhB,KAAMA,EACNggC,oBAAqBA,EACrBC,cAAeA,EACfkmD,UAAWA,EACX+B,SAAUA,UCvBP6B,GArCyD,SAAC,GAAuB,IAArB/pF,EAAoB,EAApBA,KAAMzF,EAAc,EAAdA,QACvE0F,EAA6DD,EAA7DC,OAAQ86B,EAAqD/6B,EAArD+6B,aAAc2E,EAAuC1/B,EAAvC0/B,aAAcvwB,EAAyBnP,EAAzBmP,WAAYyvB,EAAa5+B,EAAb4+B,SAChDz6C,EAAMC,eAAND,EACF87C,GAAwB,OAARrB,QAAQ,IAARA,OAAA,EAAAA,EAAUqB,eAAgB,IAAIr5C,KAAUg4C,EAASqB,eAAiBt5C,KAClFqjG,EAA0B/pD,EAAczxB,GAAG,GAEjD,OACE,eAACyzE,GAAD,CACE9yE,WAAYA,GAAyB,IAAXlP,EAC1BgqF,OAAQ96E,GAAc,cAAC,IAAD,CAAY+6E,aAAa,eAAe9oD,KAAMj9C,EAAE,cAFxE,UAIE,cAAC,GAAD,CACE0/F,UAAWmG,EACXtqD,aAAcA,EACd3E,aAAcA,EACd5rB,WAAYA,GAAyB,IAAXlP,IAE5B,eAAC,IAAD,WACE,cAAC,GAAD,CAAQD,KAAMA,EAAMigC,cAAeA,IACnC,cAAC,IAAD,CAAMke,GAAG,OAAOoG,cAAc,SAA9B,SACGhqD,EACC,cAAC,GAAD,CAAayF,KAAMA,EAAMigC,cAAeA,IAExC,qCACE,cAAC,KAAD,CAAM2kB,GAAG,OAAO0U,cAAc,YAAY5b,SAAS,OAAO16C,MAAM,aAAa26C,MAAI,EAAjF,SACGx5D,EAAE,mBAEL,cAAC6nD,GAAA,EAAD,YAKR,cAACm+C,GAAD,CAAYnqF,KAAMA,EAAMzF,QAASA,QCXxB6vF,GAxB4C,SAAC,GAA2C,IAAD,IAAxC7oE,iBAAwC,SAArBu4B,EAAqB,EAArBA,eACvE31D,EAAMC,eAAND,EAER,EAA6CmgG,GAAgBxqC,GAArDsqC,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACG1iE,EACC,cAAC,KAAD,CAAU37B,MAAM,OAAO8zE,OAAO,SAE9B,cAAC,IAAD,CACEn4C,UAAW0iE,EACXY,QAASZ,EAAoB,cAAC,IAAD,CAAe9N,MAAI,EAACnzE,MAAM,iBAAoB,KAC3E0zD,SAAUutB,EACV7gF,QAASghF,EACTx+F,MAAM,OALR,SAOGzB,EAAE,eCIEkmG,GA5Be,SAAC9rD,EAA2BnwB,GAAyD,IAAlC+vB,EAAiC,uDAAX,OACrG,EAAgDr8C,mBAAS,MAAzD,mBAAOwoG,EAAP,KAAyBC,EAAzB,KACA,EAA8CzoG,oBAAS,GAAvD,mBAAO0oG,EAAP,KAAwBC,EAAxB,KACA,EAA4C3oG,mBAASwtB,KAAKk2D,MAAM/2C,KAAKoB,MAAQ,MAA7E,mBAAO66D,EAAP,KAAuBC,EAAvB,KAsBA,OApBAvoG,qBAAU,WACR,IACMwoG,EADarsD,EAAoBJ,EACGusD,EACpCG,EAAwBz8E,EAAWI,GAAG,IAAMo8E,EAAuB,EAKnEE,EAAgBnhD,aAAY,WAFhCghD,GAAkB,SAACI,GAAD,OAAiBA,EAAc,OAEH,KAShD,OARIF,GACFN,EAAoBK,GACpBH,GAAmB,KAEnBA,GAAmB,GACnB5gD,cAAcihD,IAGT,kBAAMjhD,cAAcihD,MAC1B,CAACvsD,EAAmBJ,EAAqBosD,EAAqBG,EAAgBt8E,IAE1E,CAAEo8E,kBAAiBF,qB,UChBbU,GAPoD,SAAC,GAA0B,IAAxBV,EAAuB,EAAvBA,iBAC5DnmG,EAAMC,eAAND,EACR,EAAiC4gF,aAAeulB,GAAxCx8C,EAAR,EAAQA,KAAMw3B,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAErB,OAAO,cAAC,KAAD,CAAM7nB,SAAS,OAAf,SAAuBv5D,EAAE,+BAAgC,CAAE8mG,IAAKn9C,EAAMo9C,KAAM5lB,EAAO6lB,OAAQ5lB,OC8DrF6lB,GA3D2D,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnElnG,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QACR,EAGI6/E,KAHJ,IACEx7C,SAAYL,EADd,EACcA,kBAAmBnwB,EADjC,EACiCA,WADjC,IAEEuwB,KAAQT,EAFV,EAEUA,cAAeC,EAFzB,EAEyBA,oBAEnBmtD,EAAeptD,EAAgB,KAAO,IAC5C,EAA+CoD,aAC7C,qCACE,cAAC,KAAD,CAAMqc,MAAI,EAACiH,GAAG,MAAd,SACGzgE,EAAE,wBAAyB,CAAEw4F,IAAK2O,MAErC,cAAC,KAAD,UACGnnG,EACC,sJAIN,CAAEk9C,UAAW,iBAXPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,EAA8C2oD,GAC5CllG,SAASo5C,EAAmB,IAC5BnwB,EACA+vB,GAHMmsD,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,gBAOpBe,EAAahtD,IAAsBisD,GAAmBp8E,EAAWI,GAAG,GAGpEg9E,EAAkBjxF,GAAWgkC,GAAqBisD,EAYxD,OACE,eAAC,IAAD,CACEhlC,WAAY6lC,EAAiB,aAAe,SAC5C3sC,eAAe,gBACf6F,cAAe8mC,EAAiB,SAAW,MAH7C,UAKG3pD,GAAkBD,EACnB,eAAC,KAAD,CAAaE,IAAKH,EAAWoc,OAAK,EAAlC,UACG2tC,EAAa,IAAMD,EADtB,KAhBEC,EACKpnG,EAAE,iBAAiBunB,cAGnBvnB,EADLqnG,EACO,sBAEF,4CAaNA,GAAmB,cAAC,GAAD,CAAoBlB,iBAAkBA,QClBjDmB,GArC+B,SAAC,GAAyC,IAAvC5K,EAAsC,EAAtCA,mBAAoB0F,EAAkB,EAAlBA,YAC3DpiG,EAAMC,eAAND,EAIFmnG,EADFlR,KADFz7C,KAAQT,cAE2B,IAC/BwtD,GAAat3E,WAAWmyE,IAAgB+E,EAAe,MAAMvjG,QAAQ,GAC3E,EAA+Cu5C,aAC7C,qCACE,cAAC,KAAD,CAAMqc,MAAI,EAACiH,GAAG,MAAd,SACGzgE,EAAE,wBAAyB,CAAEw4F,IAAK2O,MAErC,cAAC,KAAD,UACGnnG,EACC,sJAIN,CAAEk9C,UAAW,cAXPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,OACE,qCACE,eAAC,IAAD,CAAMyc,GAAG,OAAOqH,WAAW,SAAS9G,eAAe,gBAAnD,UACGhd,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWoc,OAAK,EAAlC,SACGz5D,EAAE,mBAEL,eAAC,KAAD,CAAMu5D,SAAS,OAAf,UACG6oC,EAAcmF,EAAY,IAD7B,IACmC7K,QAGrC,cAAC,GAAD,QCAAoE,GAAev/F,aAAOgmE,IAAPhmE,CAAH,gDAIZsgG,GAAqBtgG,aAAOw/D,IAAPx/D,CAAH,mDAIlBugG,GAAmBvgG,aAAOuiF,KAAPviF,CAAH,0IAQhBimG,GAAc,CAClBn0D,SAAU,MAgQGo0D,GA7PyC,SAAC,GAMlD,IALL5rF,EAKI,EALJA,KACA6rF,EAII,EAJJA,WACAh+E,EAGI,EAHJA,eAGI,IAFJu4E,uBAEI,SADJroC,EACI,EADJA,UAEMr4C,EAAWswB,eACT+E,EAA0E/6B,EAA1E+6B,aAAc2E,EAA4D1/B,EAA5D0/B,aAAc3xB,EAA8C/N,EAA9C+N,IAAK8rB,EAAyC75B,EAAzC65B,kBAAmBvrB,EAAsBtO,EAAtBsO,kBACpD/T,EAAY9V,eAAZ8V,QACF6jC,EAAoBl6B,cAClBsyB,EAAqBC,eAArBD,iBACR,EAGI4jD,KAHJ,IACEx7C,SAAYL,EADd,EACcA,kBAAmBnwB,EADjC,EACiCA,WAC/BC,EAFF,EAEEA,kBAEMlqB,EAAMC,eAAND,EACA0/C,EAAUD,eAAVC,MACR,EAAqCQ,cAA7B6lB,EAAR,EAAQA,aAActP,EAAtB,EAAsBA,WACtB,EAAkC94D,oBAAS,GAA3C,mBAAOukG,EAAP,KAAkBC,EAAlB,KACA,EAAsCxkG,mBAAS,IAA/C,mBAAOykG,EAAP,KAAoBC,EAApB,KACA,EAA8B1kG,mBAAS,GAAvC,mBAAO6kG,EAAP,KAAgBC,EAAhB,KACA,EAAkD9kG,oBAAS,GAA3D,mBAAO+kG,EAAP,KAA0BC,EAA1B,KACQ0D,EAAoBH,GAAsBllG,SAASo5C,EAAmB,IAAKnwB,GAA3Eo8E,gBACFsB,EAAgB/kD,eAChBmgD,EAAiB,IAAItgG,KAAU2/F,GAAaj/F,MAAMwkG,GAClD3E,EAA0B2E,EAAct9E,GAAG,IAAM+3E,EAAcv+F,aAAak/F,EAAet/F,YAAc,GAEvGylB,GAAoBR,aAAoBuB,EAAYC,GAApDhB,gBAQF+5E,GANoB55C,aAAqB,CAC7CC,eAAiBy5C,EAAepzE,QAAsC,EAA5BozE,EAAet/F,WACzDmmB,MACAO,oBACAT,mBAEkC,GAAK7N,EAAKsO,kBACxC+4E,GAAqBr/F,aAAao/F,GAAWA,GAAY,IAAQ,EAAI,EAAGA,GAAY,IAAQ,EAAI,GAEhGE,GAAevsD,EAAa/iC,QAAb,+BAA+C+iC,EAAa/iC,SAAY,QAavFuvF,GAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBoE,EAAWpkG,UAAU,KAAK0lB,aAAaq6E,GAChEE,EAAgB7/F,aAAsB4/F,EAAwB1sD,EAAa1zC,SAAU0zC,EAAa1zC,UACxGm/F,EAAekB,QAEflB,EAAe,IAEjBI,EAAWY,IAGPuE,GAAgB,uCAAG,WAAOC,GAAP,2BAAA3pG,EAAA,yDACvBikG,GAAa,GACP2F,EAAuB1+E,aAAoBy+E,EAAsB39E,GAEjE69E,EAA8B,IAAItlG,KAAU,MAC5CulG,EAAkB/9E,EAAWM,MAAMu9E,EAAqBv+E,oBACrCy+E,EAAgBnrB,IAAIkrB,GANtB,0CAUF11D,EAAiB4H,EAAmB,mBAAez8C,EAAWgqG,IAV5D,cAUbr7D,EAVa,iBAWGA,EAAGw2B,OAXN,SAWbr2B,EAXa,QAYPzW,SACVkwC,EACE/lE,EAAE,aACF,cAACwjD,GAAA,EAAD,CAAwBwB,OAAQ1Y,EAAQ0iD,gBAAxC,SACGhvF,EAAE,4DAGPmiG,GAAa,GACbvoC,IACAr4C,EAASk7B,aAAuB,CAAErmC,cArBjB,kDAwBnBqgD,EAAWz2D,EAAE,SAAUA,EAAE,uFACzBmiG,GAAa,GAzBM,2DA+BF9vD,EACf4H,EACA,WACA,CAAC6tD,EAAqBv+E,kBAAkB1pB,YACxC2nG,IAnCiB,eA+Bbr7D,EA/Ba,iBAqCGA,EAAGw2B,OArCN,SAqCbr2B,EArCa,QAsCPzW,SACVkwC,EACE/lE,EAAE,aACF,cAACwjD,GAAA,EAAD,CAAwBwB,OAAQ1Y,EAAQ0iD,gBAAxC,SACGhvF,EAAE,4DAGPmiG,GAAa,GACbvoC,IACAr4C,EAASk7B,aAAuB,CAAErmC,cA/CjB,mDAkDnBqgD,EAAWz2D,EAAE,SAAUA,EAAE,uFACzBmiG,GAAa,GAnDM,kEAAH,sDAwDhB8F,GAAa,uCAAG,WAAOJ,GAAP,iBAAA3pG,EAAA,6DACpBikG,GAAa,GADO,kBAKD9vD,EAAiB4H,EAAmB,UAAW,CAAC4tD,EAAqBhoG,YAAa2nG,IALjF,cAKZr7D,EALY,gBAMIA,EAAGw2B,OANP,QAMZr2B,EANY,QAONzW,SACVkwC,EACE/lE,EAAE,WACF,cAACwjD,GAAA,EAAD,CAAwBwB,OAAQ1Y,EAAQ0iD,gBAAxC,SACGhvF,EAAE,8CAGPmiG,GAAa,GACbvoC,IACAr4C,EAASk7B,aAAuB,CAAErmC,cAhBlB,kDAmBlBqgD,EAAWz2D,EAAE,SAAUA,EAAE,uFACzBmiG,GAAa,GApBK,0DAAH,sDAwBbqB,GAAkB,uCAAG,4BAAAtlG,EAAA,sDACnB2pG,EAAuB7kG,aAAiB,IAAIP,KAAU2/F,GAAcxrD,EAAa1zC,UACnF++F,EAEF2F,GAAiBC,GAGjBI,GAAcJ,GAPS,2CAAH,qDAWxB,OAAInF,EAEA,cAAC,GAAD,CACEv4E,kBAAmBA,EACnBurB,kBAAmBA,EACnB9rB,IAAKA,EACL8tE,UAAW13F,EAAE,eAAgB,CAAEgvB,OAAQ4nB,EAAa5nB,SACpD2oE,SAAUwL,GACVtnD,oBAAqB3yB,GAAgB00E,KAAK8J,GAC1ChL,mBAAoB9lD,EAAa5nB,OACjC4sE,mBAAoBrgD,EAAavsB,OACjCylD,OAAQ,kBAAMkuB,GAAqB,IACnChG,aAAcyF,EACd14E,eAAgBA,IAMpB,eAAC,KAAD,CACEmR,MAAyB76B,EAAlBiiG,EAAoB,UAAe,iBAC1CroC,UAAWA,EACXkB,iBAAkBpb,EAAMkJ,OAAO4kB,UAAUqzB,WAH3C,UAKE,eAAC,IAAD,CAAMx/B,WAAW,SAAS9G,eAAe,gBAAgBkG,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMjH,MAAI,EAAV,UAA8Bx5D,EAAlBiiG,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAM5gC,WAAW,SAASkZ,SAAS,OAAnC,UACE,cAAC,IAAD,CAAO7I,IAAG,yBAAoB96B,EAAa/iC,QAAjC,QAAgDpS,MAAO,GAAI8zE,OAAQ,GAAIlpD,IAAKuqB,EAAa5nB,SACnG,cAAC,KAAD,CAAMkrC,GAAG,MAAMV,MAAI,EAAnB,SACG5iB,EAAa5nB,eAIpB,cAAC,IAAD,CACEjvB,MAAOqiG,EACPjxC,YApJyB,SAACgV,GAC9B,GAAIA,EAAO,CACT,IAAMs9B,EAAiB,IAAIhhG,KAAU0jE,GAAOn9C,aAAarmB,KAAQS,IAAIwzC,EAAa1zC,WAC5EwgG,EAAav4E,KAAKk2D,MAAMoiB,EAAengG,UAAUokG,GAAY1+E,aAAa,KAAKvlB,YACrFg/F,EAAWiB,EAAa,IAAM,IAAMA,QAEpCjB,EAAW,GAEbJ,EAAel8B,IA6IX+2B,cAAeyK,EAAct9E,GAAG,IAAjB,WAA2B24E,GAA2B,EAAtD,QACf9/F,SAAU0zC,EAAa1zC,WAEzB,cAAC,KAAD,CAAM82D,GAAG,MAAME,GAAG,OAAOr7C,MAAM,aAAa06C,SAAS,OAAOkH,GAAG,MAA/D,SACGzgE,EAAE,qBAAsB,CAAEwD,QAASE,aAAsBgkG,EAAY9wD,EAAa1zC,cAErF,cAAC,KAAD,CACEgpF,IAAK,EACL9gE,IAAK,IACLrrB,MAAOyiG,EACPmB,eAAgBP,GAChB37E,KAAK,QACLm8E,WAAU,UAAKpB,EAAL,KACVqB,KAAM,IAER,eAAC,IAAD,CAAMxiC,WAAW,SAAS9G,eAAe,gBAAgBP,GAAG,MAA5D,UACE,cAAC,GAAD,CAAc0G,MAAM,KAAK5uD,GAAG,MAAM4T,EAAE,WAAW6+B,QAAQ,WAAWtlC,QAAS,kBAAMmkF,GAAoB,KAArG,iBAGA,cAAC,GAAD,CAAc1iC,MAAM,KAAK5uD,GAAG,MAAM4T,EAAE,WAAW6+B,QAAQ,WAAWtlC,QAAS,kBAAMmkF,GAAoB,KAArG,iBAGA,cAAC,GAAD,CAAc1iC,MAAM,KAAK5uD,GAAG,MAAM4T,EAAE,WAAW6+B,QAAQ,WAAWtlC,QAAS,kBAAMmkF,GAAoB,KAArG,iBAGA,cAAC,GAAD,CAAc1iC,MAAM,KAAK5uD,GAAG,MAAM4T,EAAE,WAAW6+B,QAAQ,WAAWtlC,QAAS,kBAAMmkF,GAAoB,MAArG,SACGpjG,EAAE,YAGNiiG,GAAmBoE,GAClB,cAAC,GAAD,CAAY3J,mBAAoB9lD,EAAa5nB,OAAQozE,YAAaA,KAElEH,GACA,eAAC,IAAD,CAAMjoC,GAAG,OAAOqH,WAAW,SAAS9G,eAAe,gBAAnD,UACE,eAAC,KAAD,CAAM+G,GAAG,MAAMziD,MAAM,aAArB,UACG7e,EAAE,+BADL,OAGA,eAAC,GAAD,CAAoBqhE,WAAW,SAASpiD,QAAS,kBAAM0jF,GAAqB,IAA5E,UACE,eAAC,GAAD,eAAoBO,MACpB,cAAC,IAAD,CAAY3+C,QAAQ,OAAOmc,MAAM,KAAjC,SACE,cAAC,IAAD,CAAe7hD,MAAM,aAAapd,MAAM,iBAKhD,cAAC,IAAD,CACE27B,UAAW8kE,EACXxB,QAASwB,EAAY,cAAC,IAAD,CAAelQ,MAAI,EAACnzE,MAAM,iBAAoB,KACnEI,QAASukF,GACTjxB,UAAW6vB,GAA2C,IAA5BnyE,WAAWmyE,GACrCpoC,GAAG,OALL,SAOeh6D,EAAZkiG,EAAc,aAAkB,cAEjCD,GACA,cAAC,IAAD,CAAQjoC,GAAG,MAAM/U,GAAG,IAAIC,UAAQ,EAACC,KAAMg+C,GAAc5+C,QAAQ,YAA7D,SACGvkD,EAAE,eAAgB,CAAEgvB,OAAQ4nB,EAAa5nB,eCzPrCk5E,GA1CyC,SAAC,GAAmD,IAAjDrsF,EAAgD,EAAhDA,KAAMggC,EAA0C,EAA1CA,oBAAqBnyB,EAAqB,EAArBA,eACpF,EAGIusE,KAFUhsE,EADd,EACEwwB,SAAYxwB,WACZC,EAFF,EAEEA,kBAEM0sB,EAAiB/6B,EAAjB+6B,aACR,EAAiDluB,aAAoBuB,EAAYC,GAAzEhB,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnB0+E,EAAgB/kD,eAChBulD,EAAoBR,EAAct9E,GAAG,GACvC9mB,aAAiB2lB,EAAgBF,aAAa2+E,GAAgB/wD,EAAa1zC,UAC3E,EAEJ,EAAiC09D,aAAS,cAAC,GAAD,CAAsBrS,YAAa3X,EAAa5nB,UAAnFk1E,EAAP,oBACA,EAAyBtjC,aACvB,cAAC,GAAD,CAAiB8mC,WAAY7rD,EAAqBnyB,eAAgBA,EAAgB7N,KAAMA,KADnFsoF,EAAP,oBAGA,EAA2BvjC,aAAS,cAAC,GAAD,CAAiB8mC,WAAYx+E,EAAiBrN,KAAMA,EAAMomF,iBAAe,KAAtGmC,EAAP,oBAEA,OACE,eAAC,IAAD,CAAM7pC,eAAe,gBAAgB8G,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMjB,cAAc,SAApB,UACE,cAACxhD,GAAA,EAAD,CAAS26C,SAAS,OAAOC,MAAI,EAACz5D,MAAOkpB,EAAqB/lB,SAAU,IACpE,cAAC,KAAD,CAAMq2D,SAAS,OAAO16C,MAAM,aAA5B,SACG8oF,EAAct9E,GAAG,GAChB,cAACzL,GAAA,EAAD,CAAS7e,MAAOooG,EAAmB5uC,SAAS,OAAO16C,MAAM,aAAa3b,SAAU,EAAG8b,OAAO,IAAID,KAAK,SAEnG,cAAC,KAAD,CAAUi7C,GAAG,MAAMub,OAAQ,GAAI9zE,MAAO,UAI5C,eAAC,IAAD,WACE,cAAC,IAAD,CAAY8iD,QAAQ,YAAYtlC,QAASmlF,EAAkB9iC,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWziD,MAAM,UAAUpd,MAAM,WAEnC,cAAC,IAAD,CAAY8iD,QAAQ,YAAYtlC,QAAS48B,EAAoBxxB,GAAG,GAAK85E,EAAiBD,EAAtF,SACE,cAAC,IAAD,CAASrlF,MAAM,UAAUpd,MAAM,OAAO8zE,OAAO,kBCXxC6yB,GAzB6C,SAAC,GAMtD,IALLvsF,EAKI,EALJA,KACAggC,EAII,EAJJA,oBACAwsD,EAGI,EAHJA,uBACA3+E,EAEI,EAFJA,eAEI,IADJ0T,iBACI,SACIwZ,EAAiB/6B,EAAjB+6B,aACA52C,EAAMC,eAAND,EACR,EAAiC4gE,aAAS,cAAC,GAAD,CAAsBrS,YAAa3X,EAAa5nB,UAAnFk1E,EAAP,oBACA,EAAyBtjC,aACvB,cAAC,GAAD,CAAiB8mC,WAAY7rD,EAAqBhgC,KAAMA,EAAM6N,eAAgBA,KADzEy6E,EAAP,oBAYA,OAAO,cAAC,IAAD,CAAM/jC,cAAc,SAApB,SAA8BhjC,EAAY,cAAC,KAAD,CAAU37B,MAAM,OAAO8zE,OAAO,SAPtE8yB,EACL,cAAC,GAAD,CAAkBxsF,KAAMA,EAAMggC,oBAAqBA,EAAqBnyB,eAAgBA,IAExF,cAAC,IAAD,CAAQzK,QAAS48B,EAAoBxxB,GAAG,GAAK85E,EAAiBD,EAA9D,SAAuFlkG,EAAE,cCxBzFwlG,GAAajkG,aAAOuiF,KAAPviF,CAAH,mDAqDD+mG,GA5CV,SAAC,GAAiE,IAA/DzsF,EAA8D,EAA9DA,KAAMwsF,EAAwD,EAAxDA,uBAAwBjrE,EAAgC,EAAhCA,UAAW1T,EAAqB,EAArBA,eACvCktB,EAA2B/6B,EAA3B+6B,aAAc6D,EAAa5+B,EAAb4+B,SACdz6C,EAAMC,eAAND,EACF67C,GAA8B,OAARpB,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,qBAAsB,IAAIp5C,KAAUg4C,EAASoB,qBAAuBr5C,KAE1G,EAA4C49F,KAApCC,EAAR,EAAQA,gBAAiB1qC,EAAzB,EAAyBA,eAEzB,OACE,cAAC,IAAD,CAAMyK,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACE,eAAC,IAAD,CAAKyI,QAAQ,SAAb,UACE,eAAC,GAAD,CACEhqD,MAAOwpF,EAAyB,YAAc,aAC9ClzB,cAAc,YACd3b,MAAI,EACJD,SAAS,OAJX,UAMG8uC,EAAyBzxD,EAAa5nB,OAAShvB,EAAE,SAAU,OAE9D,cAAC,GAAD,CACE6e,MAAOwpF,EAAyB,aAAe,YAC/ClzB,cAAc,YACd3b,MAAI,EACJD,SAAS,OAJX,SAMG8uC,EAAyBroG,EAAE,wBAAL,UAAkC42C,EAAa5nB,aAGzEqxE,EACC,cAAC,GAAD,CACEjjE,UAAWA,EACXvhB,KAAMA,EACNggC,oBAAqBA,EACrBwsD,uBAAwBA,EACxB3+E,eAAgBA,IAGlB,cAAC,GAAD,CAAqB0T,UAAWA,EAAWu4B,eAAgBA,UCjBtD4yC,GA7ByD,SAAC,GAIlE,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,oBAEQ1oG,EAAMC,eAAND,EAER,EAA+Cm9C,aAC7C,qCACE,cAACv+B,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MAAOyoG,EAAetlG,SAAU,EAAGs2D,MAAI,EAACz6C,KAAK,UACtE,cAACH,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MAAO0oG,EAAsBvlG,SAAU,EAAGs2D,MAAI,EAACx6C,OAAO,OAC9Ehf,EAAE,iCACH,cAAC,KAAD,UAAO0oG,OAET,CACExrD,UAAW,eARPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAY5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWoc,OAAK,EAAlC,SACE,cAAC76C,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MAAOyoG,UCSzBG,GAlCsB,WACnC,IAAQ3oG,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QACR,EAGI6/E,KAFF/rE,EADF,EACEA,kBADF,IAEEuwB,SAAYzwB,EAFd,EAEcA,qBAAsBC,EAFpC,EAEoCA,WAAYowB,EAFhD,EAEgDA,mBAE1CstD,EAAgB/kD,eACtB,EAAiE74B,aAC/D3T,EACA4T,EACAC,EACAC,EACAy9E,EAAclkG,YALR2mB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCi+E,EAAiBvuD,GAAqD,IAA/Br5C,SAASq5C,GAEhDquD,EADqB,IAAIp+D,KAAKs+D,GACWxkG,iBAE/C,OACE,eAAC,IAAD,CAAMi9D,WAAW,SAAS9G,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMhB,SAAS,OAAf,mBAA0Bv5D,EAAE,sBAA5B,OACCoqB,GACC,cAAC,GAAD,CACEo+E,cAAeh+E,EACfi+E,qBAAsB99E,EACtB+9E,oBAAqBA,QClBzBG,GAAiBtnG,aAAOunG,IAAPvnG,CAAH,mDACJ,qBAAG67B,UAA6B,IAAM,WAkEvC2rE,GA1DiC,SAAC,GAA8B,IAA5BltF,EAA2B,EAA3BA,KAAMmtF,EAAqB,EAArBA,eAC/ChpG,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QACR,EAII6/E,KAJJ,IACEx7C,SAAYxwB,EADd,EACcA,WAAuBg/E,EADrC,EAC0B7rE,UAChB1T,EAFV,EAEE8wB,KAAQ9wB,eACRQ,EAHF,EAGEA,kBAGMhB,EAAoBR,aAAoBuB,EAAYC,GAApDhB,gBAEFm/E,EAAyBp+E,GAAcA,EAAWI,GAAG,GACrD+S,GAAavhB,EAAK4+B,UAAYwuD,EAC9B9+C,EAA0BzgC,GAAkBA,EAAiB,IAEnE,OAAIs/E,IAAmBX,EACd,KAIP,eAACvK,GAAD,CAAY7yC,UAAQ,EAApB,UACE,cAAC,GAAD,CACEy0C,UAAW2I,EACX1+E,aAAW,EACX4xB,aAAcpoC,KAAOpN,KACrB6wC,aAAczjC,KAAOpN,OAEvB,eAAC8iG,GAAD,CAAgBzrE,UAAWA,EAA3B,UACE,cAAC,GAAD,CAAQvhB,KAAMA,EAAMigC,cAAe5yB,EAAiBQ,eAAgBygC,IACpE,cAAC,IAAD,CAAK6P,GAAG,OAAR,SACE,cAACkvC,GAAD,MAEF,cAAC,IAAD,CAAKlvC,GAAG,MAAR,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAMA,GAAG,OAAOoG,cAAc,SAA9B,SACGhqD,EACC,cAAC+yF,GAAD,CACEttF,KAAMA,EACNwsF,uBAAwBA,EACxBjrE,UAAWA,EACX1T,eAAgBygC,IAGlB,qCACE,cAAC,KAAD,CAAMsW,GAAG,OAAO0U,cAAc,YAAY5b,SAAS,OAAO16C,MAAM,aAAa26C,MAAI,EAAjF,SACGx5D,EAAE,mBAEL,cAAC6nD,GAAA,EAAD,YAKR,cAACm+C,GAAD,CAAYnqF,KAAMA,EAAMzF,QAASA,Q,SCtEjCyoD,GAAYt9D,KAAOU,IAAV,yIAIX,qBAAGy9C,MAAkB4D,aAAaC,MAyBvB6lD,GAnB8C,SAAC,GAA4B,IAA1BrmF,EAAyB,EAAzBA,SAAUsmF,EAAe,EAAfA,SAClEC,EAAe,SAACxQ,GAChB/1E,IAAa+1E,GACfuQ,EAASvQ,IAIb,OACE,eAACj6B,GAAD,WACE,cAAC,IAAD,CAAYta,QAAQ,OAAOmc,MAAM,KAAKhlD,GAAG,oBAAoBuD,QAAS,kBAAMqqF,EAAa/vF,KAASgwF,OAAlG,SACE,cAAC,IAAD,CAAc1qF,MAAOkE,IAAaxJ,KAASgwF,KAAO,UAAY,mBAEhE,cAAC,IAAD,CAAYhlD,QAAQ,OAAOmc,MAAM,KAAKhlD,GAAG,qBAAqBuD,QAAS,kBAAMqqF,EAAa/vF,KAASuxB,QAAnG,SACE,cAAC,KAAD,CAAcjsB,MAAOkE,IAAaxJ,KAASuxB,MAAQ,UAAY,uBCzBjE0+D,GAAgBjoG,KAAOU,IAAV,qIAKf6hF,MAKE2lB,GAAeloG,KAAOU,IAAV,sSAWd,qBAAGy9C,MAAkB4D,aAAaC,MAUhC/3B,GAAUjqB,KAAOU,IAAV,8MAUT,qBAAGy9C,MAAkB4D,aAAaC,MA0CvBmmD,GArCQ,SAAC,GAAmF,IAAjF9mF,EAAgF,EAAhFA,WAAY+mF,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,wBAAyB7mF,EAA4B,EAA5BA,SAAU8mF,EAAkB,EAAlBA,YACtF,EAAyBC,cAAjB97D,EAAR,EAAQA,IAAK+7D,EAAb,EAAaA,QACL/pG,EAAMC,eAAND,EAEFgqG,EAAiB,cAAC,GAAD,CAAYjnF,SAAUA,EAAUsmF,SAAU,SAACvQ,GAAD,OAAoB+Q,EAAY/Q,MAE3FmR,EACJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAY18B,YAAaw8B,EAAU,EAAI,EAAGrpC,MAAM,KAAKnc,QAAQ,SAA7D,UACE,cAAC,IAAD,CAAgBU,GAAIsc,KAAMrP,GAAE,UAAKlkB,GAAjC,SACGhuC,EAAE,UAEL,cAAC,KAAD,CAAiBwhE,KAAMooC,EAAvB,SACE,cAAC,IAAD,CAAgBluF,GAAG,wBAAwBupC,GAAIsc,KAAMrP,GAAE,UAAKlkB,EAAL,YAAvD,SACGhuC,EAAE,qBAOPkqG,EACJ,eAACV,GAAD,WACE,cAAC,KAAD,CAAQn3B,QAASzvD,EAAY6jD,SAAU,kBAAMkjC,GAAe/mF,IAAa89C,MAAM,OAC/E,eAAC,KAAD,eAAQ1gE,EAAE,qBAId,OACE,eAACypG,GAAD,WACGO,EACAE,EACAD,MChEDE,GAAU5oG,KAAOU,IAAV,+GACS,qBAAGy9C,MAAkBkJ,OAAO42C,sBAsHnC4K,GAhHiC,SAAC,GAAqC,IAAnCxwC,EAAkC,EAAlCA,UAAWywC,EAAuB,EAAvBA,iBACpDrqG,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QACAspC,EAAUD,eAAVC,MACR,EAAqCQ,cAA7BuW,EAAR,EAAQA,WAAYsP,EAApB,EAAoBA,aACd9rB,EAAoBl6B,cAC1B,EAAkCpiB,oBAAS,GAA3C,mBAAOukG,EAAP,KAAkBC,EAAlB,KACA,EAIIlM,KAHF38C,EADF,EACEA,0BACAC,EAFF,EAEEA,wBACQO,EAHV,EAGEU,KAAQV,QAEFzH,EAAqBC,eAArBD,iBACFs1D,EAAgB/kD,eAChB0nD,EAAmBxwD,EAAU,IAC7BywD,EAAsBhnG,aAAiBg2C,EAAyB,IAEhEixD,EAA8B9qF,mBAAQ,WAC1C,OAAO,IAAIjd,KAAU62C,GAA2BtwB,aAAa2+E,KAC5D,CAACA,EAAeruD,IAEbmxD,EAAyBD,EAA4B//E,IAAI,GACzDigF,IAAuBpxD,GAA4BA,EAA0B7uB,IAAI,GACjFkgF,EAAwBF,EAAyBlnG,aAAiBinG,EAA6B,IAAM,EACrGI,EAAsBF,EAAuBnnG,aAAiB+1C,EAA2B,IAAM,EAErG,EAA+C6D,aAAW,cAACktD,EAAD,CAAkB7R,IAAK1+C,IAAa,CAC5FoD,UAAW,SACX2tD,eAAgB,CAAEC,MAAO,MAFnBztD,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBimD,EAAkB,uCAAG,8BAAAtlG,EAAA,6DACzBikG,GAAa,GADY,kBAGN9vD,EAAiB4H,EAAmB,eAAWz8C,EAAW,CAAE61C,SAAU,MAHhE,cAGjBlH,EAHiB,gBAIDA,EAAGw2B,OAJF,QAIjBr2B,EAJiB,QAKXzW,SACVkwC,EACE/lE,EAAE,qBACF,cAACwjD,GAAA,EAAD,CAAwBwB,OAAQ1Y,EAAQ0iD,gBAAxC,SACGhvF,EAAE,gDAGPmiG,GAAa,GACbvoC,KAbqB,kDAgBvBnD,EAAWz2D,EAAE,SAAUA,EAAE,uFACzBmiG,GAAa,GAjBU,0DAAH,qDAqBxB,OACE,eAAC,KAAD,CAAOtnE,MAAO76B,EAAE,gBAAiB45D,UAAWA,EAAWkB,iBAAkBpb,EAAMkJ,OAAO4kB,UAAUqzB,WAAhG,UACGtjD,GAAkBD,EACnB,eAAC,IAAD,CAAM+jB,WAAW,aAAa9G,eAAe,gBAA7C,UACE,cAAC,KAAD,UAAOv6D,EAAE,uBACT,eAAC,IAAD,CAAMogE,cAAc,SAApB,UACE,cAACxhD,GAAA,EAAD,CAAS46C,MAAI,EAACz5D,MAAO6qG,EAAqB1nG,SAAU,EAAG6b,KAAK,UAC5D,cAAC,KAAD,CAAMw6C,SAAS,OAAO16C,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACE26C,SAAS,OACT16C,MAAM,aACN9e,MAAO4qG,EACPznG,SAAU,EACV6b,KAAK,OACLC,OAAO,cAKf,cAACmrF,GAAD,IACA,eAAC,IAAD,CAAM9oC,WAAW,SAAS9G,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMhB,SAAS,OAAO16C,MAAM,aAA5B,SACG7e,EAAE,8BAEL,cAAC4e,GAAA,EAAD,CAASC,MAAM,aAAa9e,MAAOwqG,EAAqBxrF,KAAK,aAE/D,eAAC,IAAD,CAAMsiD,WAAW,SAAS9G,eAAe,gBAAgBkG,GAAG,OAA5D,UACE,cAAC,KAAD,CAAMlH,SAAS,OAAO16C,MAAM,aAA5B,SACG7e,EAAE,YAEL,eAAC,KAAD,CAAMu5D,SAAS,OAAO16C,MAAM,aAA5B,UACGyrF,EADH,UAIDl0F,EACC,cAAC,IAAD,CACEgnB,UAAW8kE,EACX3vB,UAAWo4B,IAA0BC,IAAwB9wD,EAC7D4mD,QAASwB,EAAY,cAAC,IAAD,CAAelQ,MAAI,EAACnzE,MAAM,iBAAoB,KACnEI,QAASukF,EACT/iC,GAAG,OACH/kD,GAAG,wBANL,SAQe1b,EAAZkiG,EAAc,aAAkB,aAGnC,cAACr6C,GAAA,EAAD,CAAqB4Y,GAAG,SAE1B,eAAC,IAAD,CAAMlG,eAAe,SAAS8G,WAAW,SAAzC,UACE,cAAC,KAAD,CAAM9H,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAayiD,GAAG,MAAjD,SACGthE,EAAE,uBAEL,sBAAMw9C,IAAKH,EAAX,SACE,cAAC,IAAD,CAAUx+B,MAAM,wBC/GpBi/E,GAAav8F,aAAOonD,IAAPpnD,CAAH,gGAGZ,qBAAGm+C,MAAkB4D,aAAaC,MA+FvBwnD,GA1FI,WACjB,IAAQ/qG,EAAMC,eAAND,EACR,EAGIi2F,KAFF38C,EADF,EACEA,0BACQQ,EAFV,EAEEU,KAAQV,QAEJ6tD,EAAgB/kD,eAEhB4nD,EAA8B9qF,mBAAQ,WAC1C,OAAO,IAAIjd,KAAU62C,GAA2BtwB,aAAa2+E,KAC5D,CAACA,EAAeruD,IAEbmxD,EAAyBD,EAA4B//E,IAAI,GACzDigF,IAAuBpxD,GAA4BA,EAA0B7uB,IAAI,GACjFkgF,EAAwBF,EAAyBlnG,aAAiBinG,EAA6B,IAAM,EACrGI,EAAsBF,EAAuBnnG,aAAiB+1C,EAA2B,IAAM,EAE/F+wD,EAAmB,SAAC,GAAD,IAAG7R,EAAH,EAAGA,IAAH,OACvB,qCACE,cAAC,KAAD,CAAM/3B,GAAG,OAAT,SAAiBzgE,EAAE,8EACnB,cAAC,KAAD,CAAMygE,GAAG,OAAT,SACGzgE,EACC,yJAGJ,cAAC,KAAD,CAAM+rB,MAAO,CAAE2lE,WAAY,QAA3B,SACG1xF,EAAE,yEAA0E,CAAEw4F,IAAKA,EAAM,YAKhG,EAA+B53B,aAAS,cAAC,GAAD,CAAaypC,iBAAkBA,KAAhEW,EAAP,oBAEA,EAA+C7tD,aAAW,cAACktD,EAAD,CAAkB7R,IAAK1+C,IAAa,CAC5FoD,UAAW,aACX46C,cAAe,CAAC,GAAI,MAFdz6C,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM8iB,cAAc,SAApB,SACE,eAAC,IAAD,CAAMiB,WAAW,SAASZ,GAAG,OAA7B,UACE,cAAC,KAAD,CAAMlH,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAayiD,GAAG,MAAjD,SACGthE,EAAE,sBAEL,cAAC,IAAD,CAAKw9C,IAAKH,EAAV,SACE,cAAC,IAAD,CAAUx+B,MAAM,sBAItB,eAAC,IAAD,CAAMwiD,WAAW,SAAS9G,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAM6F,cAAc,SAASkB,GAAG,OAAhC,UACE,cAAC,IAAD,UACGopC,EACC,cAAC9rF,GAAA,EAAD,CAAS26C,SAAS,OAAOC,MAAI,EAACz5D,MAAO6qG,EAAqB1nG,SAAU,IAEpE,cAAC,KAAD,CAAUqyE,OAAQ,GAAI9zE,MAAO,GAAIg/D,GAAG,UAGvCgqC,EACC,cAAC7rF,GAAA,EAAD,CACE26C,SAAS,OACT16C,MAAM,aACN9e,MAAO4qG,EACPznG,SAAU,EACV6b,KAAK,OACLC,OAAO,MAGT,cAAC,KAAD,CAAUu2D,OAAQ,GAAI9zE,MAAO,QAGjC,cAAC,IAAD,CACE8wE,UAAWo4B,IAA0BC,IAAwB9wD,EAC7D76B,QAAS+rF,EACTtqC,MAAM,KACNhlD,GAAG,wBAJL,SAMG1b,EAAE,uBC3GXirG,GAAa1pG,aAAOuiF,KAAPviF,CAAH,oFAEZ,qBAAGm+C,MAAkB4D,aAAaoqB,MAKhCizB,GAAap/F,aAAOggE,KAAPhgE,CAAH,kLAQZ,qBAAGm+C,MAAkB4D,aAAaC,MAmBvB2nD,GAdI,WACjB,IAAQlrG,EAAMC,eAAND,EACR,OACE,cAAC,GAAD,CAAYklD,UAAQ,EAACC,KAAK,0DAA1B,SACE,eAAC,IAAD,CAAQ2nB,GAAI,CAAC,OAAQ,KAAM,KAAM,KAAM,QAASvoB,QAAQ,SAAxD,UACE,cAAC0mD,GAAD,CAAYpsF,MAAM,gBAAgB26C,MAAI,EAACD,SAAS,OAAhD,SACGv5D,EAAE,UAEL,cAAC,IAAD,CAAU6e,MAAM,gBAAgBq7C,GAAI,CAAC,KAAM,KAAM,KAAM,EAAG,eCNnDixC,GAfW,SAACC,EAAoBC,GAC7C,MAAwC1tG,oBAAS,GAAjD,mBAAO2tG,EAAP,KAAqBC,EAArB,KAWA,OATAttG,qBAAU,WACR,IAAIutG,EAMJ,OALIJ,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBE,EAAYvnD,YAAW,kBAAMsnD,GAAgB,KAAQF,IAEhD,kBAAMtnD,aAAaynD,MACzB,CAACJ,EAAWC,EAAWC,IACnBA,GCrBHG,GAAWlqG,KAAOU,IAAV,uJAUDypG,GAAcnqG,aAAOw/D,IAAPx/D,CAAH,6IAIpBuiF,MAKW2nB,MCNTE,GAAapqG,aAAOkqG,GAAPlqG,CAAH,uJAIZ,qBAAGm+C,MAAkB4D,aAAaC,MA8DvBqoD,GAxD2B,SAAC,GAAc,IAAZ/vF,EAAW,EAAXA,KACnC7b,EAAMC,eAAND,EACA6rG,EAAaC,eAAbD,SACA/vF,EAA0ED,EAA1EC,OAAQ86B,EAAkE/6B,EAAlE+6B,aAAc2E,EAAoD1/B,EAApD0/B,aAAcd,EAAsC5+B,EAAtC4+B,SAAUzvB,EAA4BnP,EAA5BmP,WAAYrB,EAAgB9N,EAAhB8N,YAEpDM,EACVgsE,KADFx7C,SAAYxwB,WAER8hF,EAAiB9hF,GAAcA,EAAWI,GAAG,GAE7CqyE,EAAqB9lD,EAAa5nB,OAClC4sE,EAAqBrgD,EAAavsB,OAGlC+0E,IADwB,OAARtpD,QAAQ,IAARA,OAAA,EAAAA,EAAUqB,eAAgB,IAAIr5C,KAAUg4C,EAASqB,eAAiBt5C,MACzD6nB,GAAG,GAC5Bi0E,EAA8B,IAAXxiF,EAEnBkwF,EAAgBriF,EAAcoiF,EAAiBhI,EAEjDlpE,EAAK,UAAM76B,EAAE,QAAR,YAAmB47F,GACxB36B,EAAQ,UAAMjhE,EAAE,SAAR,YAAoB08F,GAC1BuP,EAA0B,IAAXnwF,GAA4B,IAAXA,IAAiB+vF,EAUvD,OARIliF,GACFkR,EAAQ76B,EAAE,aACVihE,EAAWjhE,EAAE,wBACJs+F,IACTzjE,EAAQ76B,EAAE,eACVihE,EAAQ,UAAMjhE,EAAE,QAAR,iBAAwBA,EAAE,SAAS2vE,oBAAnC,UAIR,eAACg8B,GAAD,CAAYtrB,KAAK,OAAjB,UACG12D,EACC,cAAC,GAAD,CAAyB23C,GAAG,MAAM7/D,MAAO,GAAI8zE,OAAQ,KAErD,cAAC,GAAD,CAAgB0pB,aAAc1jD,EAAc2jD,eAAgBtoD,EAAc0qB,GAAG,MAAM7/D,MAAO,GAAI8zE,OAAQ,KAExG,eAACm2B,GAAD,WACGM,GACC,cAAC,KAAD,CAAMzyC,SAAS,OAAOC,MAAI,EAAC36C,MAAOmM,EAAa,UAAY,YAAamqD,cAAc,YAAtF,SACGn1E,EAAE,YAGP,cAAC,KAAD,CAAMw5D,MAAOqyC,EAAUpyC,MAAOoyC,EAA9B,SACGhxE,IAEFoxE,GACC,cAAC,KAAD,CAAM1yC,SAAS,OAAO16C,MAAM,aAA5B,SACGoiD,WCvDP0qC,GAAapqG,aAAOkqG,GAAPlqG,CAAH,iFAEZ,qBAAGm+C,MAAkB4D,aAAaC,MAsFvB2oD,GAjFmC,SAAC,GAAuC,IAArCrwF,EAAoC,EAApCA,KAAMzF,EAA8B,EAA9BA,QAASkkC,EAAqB,EAArBA,eAC1Dt6C,EAAMC,eAAND,EACA6rG,EAAaC,eAAbD,SACA/vF,EAAoED,EAApEC,OAAQy/B,EAA4D1/B,EAA5D0/B,aAAcx/B,EAA8CF,EAA9CE,aAAc0+B,EAAgC5+B,EAAhC4+B,SAAUtwB,EAAsBtO,EAAtBsO,kBAChDm0E,EAA8B,IAAXxiF,EAEnBilC,GAAmB,OAARtG,QAAQ,IAARA,OAAA,EAAAA,EAAUtB,eAAgB,IAAI12C,KAAUg4C,EAAStB,eAAiB32C,KAC7E4iG,EAAsB7hG,aAAiBw9C,EAAUxF,EAAar4C,UAC9DmiG,EAA4B9hG,aAAiBw9C,EAAS/3B,aAAamB,GAAoBoxB,EAAar4C,UACpGoiG,EAAclvF,GAAW2qC,EAAS12B,GAAG,GACrCw6E,EAAcnhG,aAAsBq9C,EAAUxF,EAAar4C,UAC3D0hG,EAAmB/gG,aAAauhG,EAAqB,EAAG,GACxDpD,EAAYjmF,IAAiBrf,KAAasf,QAE1CmwF,EAAYnsG,EAAE,iBAAkB,CAAEi6D,MAAO1e,EAAavsB,SAE5D,EAA2B4xC,aACzB,cAAC,GAAD,CACEgkC,iBAAkBA,EAClBC,YAAaA,EACbtpD,aAAcA,EACdupD,oBAAqBO,EACrBvpF,OAAQA,EACRkmF,UAAWA,EACX+C,eAAgBzG,KARbiH,EAAP,oBAiBA,OACE,cAAC,GAAD,CAAYllB,KAAK,OAAjB,SACE,eAACqrB,GAAD,WACE,cAAC,KAAD,CAAMnyC,SAAS,OAAO16C,MAAM,aAAa66C,UAAU,OAAnD,SACGyyC,KAED7xD,GAAkBlkC,EAClB,cAAC,KAAD,CAAU3U,MAAM,OAAO8zE,OAAO,SAE9B,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAKjU,GAAG,MAAMiU,OAAO,OAAOt2D,QAASqmF,EAhBrB,SAAC5+B,GAC3BA,EAAM+b,kBACN8iB,UAcmF/nG,EAAzE,UACE,cAACohB,GAAA,EAAD,CACEo7C,GAAG,MACHR,MAAOqyC,EACPtyC,SAAUsyC,EAAW,OAAS,OAC9BhtF,MAAOymF,EAAc,UAAY,eACjCpiG,SAAUoiG,EAAc,EAAI,EAC5BvlG,MAAOulG,EAAcF,EAAsB,IAE5CE,EACC,mCACGn7E,EAAoB,GACnB,cAACvL,GAAA,EAAD,CACEiqD,QAAQ,SACRtP,SAAS,OACT16C,MAAM,aACN3b,SAAU,EACV8b,OAAO,IACPjf,MAAOslG,EACPtmF,KAAK,WAKX,cAAC,KAAD,CAAMi7C,GAAG,MAAMT,SAAS,OAAO16C,MAAM,eAArC,gC,wDCnFZutF,GAAoB7qG,aAAOw/D,IAAPx/D,CAAH,oEAoER8qG,GAvDiB,SAAC,GAAqE,IAAnExwF,EAAkE,EAAlEA,KAAMywF,EAA4D,EAA5DA,SAAUxwD,EAAkD,EAAlDA,cAAkD,IAAnCpyB,sBAAmC,MAAlB,EAAkB,EAAZxK,EAAY,mBAC3F03B,EAAgG/6B,EAAhG+6B,aAAc2E,EAAkF1/B,EAAlF0/B,aAAcvwB,EAAoEnP,EAApEmP,WAAYb,EAAwDtO,EAAxDsO,kBAAmBurB,EAAqC75B,EAArC65B,kBAAmB+E,EAAkB5+B,EAAlB4+B,SAAU7wB,EAAQ/N,EAAR+N,IACxF5pB,EAAMC,eAAND,EAER,EAAoEypB,aAAW5N,EAAM6N,GAAxEg0E,EAAb,EAAQ9zE,IAAkCC,EAA1C,EAA0CA,sBAEpCgyB,GAA8B,OAARpB,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,qBAAsB,IAAIp5C,KAAUg4C,EAASoB,qBAAuBr5C,KAEpGm7F,EAAe/mD,EAAa/iC,QAAb,+BAA+C+iC,EAAa/iC,SAAY,QAE7F,EAA4B+sD,aAC1B,cAAC,GAAD,CACEz2C,kBAAmBA,EACnBurB,kBAAmBA,EACnBmG,oBAAqBC,EAAc8hD,KAAK/hD,GACxCjyB,IAAKA,EACL8yE,mBAAoB9lD,EAAa5nB,OACjC0oE,UAAW13F,EAAE,eAAgB,CAAEgvB,OAAQ4nB,EAAa5nB,SACpD2oE,SAAUgG,EACV/B,mBAAoBrgD,EAAavsB,OACjCnF,sBAAuBA,EACvBH,eAAgBA,KAXbm0E,EAAP,oBAeM0O,EAAe,SAAC7lC,GACpBA,EAAM+b,kBACNob,KAGF,OACE,cAACuO,GAAD,2BAAmB/qC,WAAW,SAAS9G,eAAe,iBAAoBr7C,GAA1E,aACGw+E,GAA+B1yE,EAC9B,qCACE,cAACpM,GAAA,EAAD,CACEK,QAASstF,EACThzC,SAAS,OACTz6C,WAAYkM,EACZjrB,MAAOirB,EAAa,EAAI0yE,EACxBx6F,SAAU,EACV6b,KAAK,OAELiM,GAAcshF,GACd,cAAC,IAAD,CAAQrtF,QAASstF,EAAchoD,QAAQ,OAAO9iD,MAAM,OAAO8zE,OAAO,OAAO3zE,QAAQ,MAAM+nF,WAAW,MAAlG,SACE,cAAC,IAAD,CAAe9qE,MAAM,aAAapd,MAAM,cAK9C,cAAC,KAAD,CAAUA,MAAM,OAAO8zE,OAAO,aC3DhCo2B,GAAapqG,aAAOkqG,GAAPlqG,CAAH,sFAEZ,qBAAGm+C,MAAkB4D,aAAamoB,MAuBvB+gC,GAlByB,SAAC,GAAc,IAAZ3wF,EAAW,EAAXA,KACjC7b,EAAMC,eAAND,EACA6rG,EAAaC,eAAbD,SACApxD,EAAa5+B,EAAb4+B,SACFqB,GAAwB,OAARrB,QAAQ,IAARA,OAAA,EAAAA,EAAUqB,eAAgB,IAAIr5C,KAAUg4C,EAASqB,eAAiBt5C,KAExF,OACE,cAAC,GAAD,CAAY69E,KAAK,OAAjB,SACE,eAACqrB,GAAD,WACE,cAAC,KAAD,CAAMnyC,SAAS,OAAO16C,MAAM,aAAa66C,UAAU,OAAnD,SACG15D,EAAE,SAEL,cAAC,GAAD,CAAK6b,KAAMA,EAAMigC,cAAeA,EAAewwD,UAAWT,UClB5DF,GAAapqG,aAAOkqG,GAAPlqG,CAAH,mDAwCDkrG,GApCyC,SAAC,GAAc,IAAZ5wF,EAAW,EAAXA,KACjD7b,EAAMC,eAAND,EACA8b,EAAmDD,EAAnDC,OAAQ86B,EAA2C/6B,EAA3C+6B,aAAchB,EAA6B/5B,EAA7B+5B,YAAajsB,EAAgB9N,EAAhB8N,YACnCiwB,EAAqBq8C,KAArBr8C,iBAEF0kD,EAA8B,IAAXxiF,EAEnB4wF,EAAqBhtF,mBAAQ,WACjC,GAAIiK,EACF,OAAOpmB,aAAiBq2C,EAAkBhD,EAAa1zC,UAEzD,GAAIo7F,EAAkB,CACpB,IAAMI,EAAgC,IAAIj8F,KAAUmzC,GAAarrB,MAAMqvB,GACvE,OAAOr2C,aAAiBm7F,EAA+B9nD,EAAa1zC,UAEtE,OAAOK,aAAiBqyC,EAAagB,EAAa1zC,YACjD,CAACymB,EAAaiwB,EAAkB0kD,EAAkB1oD,EAAagB,EAAa1zC,WAE/E,OACE,cAAC,GAAD,CAAYm9E,KAAK,OAAjB,SACE,eAACqrB,GAAD,WACE,cAAC,KAAD,CAAMnyC,SAAS,OAAO16C,MAAM,aAAa66C,UAAU,OAAnD,SACG15D,EAAE,kBAEJ41C,GAAeA,EAAYnrB,IAAI,GAC9B,cAAC,IAAD,CAAM8qD,OAAO,OAAOlU,WAAW,SAA/B,SACE,cAACziD,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MAAO2sG,EAAoBxpG,SAAU,EAAG6b,KAAI,WAAM63B,EAAa5nB,YAG1F,cAAC,KAAD,CAAUvtB,MAAM,OAAO8zE,OAAO,eCjClCo2B,GAAapqG,aAAOkqG,GAAPlqG,CAAH,mDAqDDorG,GAjD+B,SAAC,GAAc,IAAZ9wF,EAAW,EAAXA,KACvCC,EAA0DD,EAA1DC,OAAQ85B,EAAkD/5B,EAAlD+5B,YAAa9qB,EAAqCjP,EAArCiP,WAAYC,EAAyBlP,EAAzBkP,SAAUC,EAAenP,EAAfmP,WAC3CH,EAAiB6P,cAAjB7P,aACA7qB,EAAMC,eAAND,EAER,EACE4qB,aAAiB/O,EAAMgP,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBG,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/Eo0E,EAAwB,IAAX7jF,EAEb8wF,EAAe3hF,EACnB,eAAC,IAAD,CAAMo2C,WAAW,SAAjB,UACE,eAAC,IAAD,CAAM0mB,KAAK,MAAX,UACE,cAACnpE,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MAAOwrB,EAAiBroB,SAAU,IAC3D,cAAC,KAAD,CAAMg3D,GAAG,MAAMib,cAAc,YAA7B,SACGn1E,EAAE,eAGP,cAAC,IAAD,CAAM+nF,KAAK,IAAX,SACE,cAAC,KAAD,CACE7iC,UAAQ,EACRC,KAAMjwC,YAAeoW,EAAiBP,EAAWD,EAAY,aAC7D7L,QAAS,SAAC+0D,GAAD,OAAOA,EAAEyO,mBAHpB,SAKE,cAAC,KAAD,CAAWvoB,GAAG,eAKpB,cAAC,KAAD,gBAOI2yC,IADuBj3D,EAAYvrB,GAAG,KAAOQ,IAAkBQ,IAAoBH,KAC7Cy0E,IAAe30E,EAC3D,OACE,cAAC,GAAD,CAAYq1D,KAAK,OAAjB,SACE,eAACqrB,GAAD,WACE,cAAC,KAAD,CAAMnyC,SAAS,OAAO16C,MAAM,aAAa66C,UAAU,OAAnD,SACiD15D,EAA9CsrB,IAAmBL,EAA6B,UAAe,eAEjE4hF,EAAc,cAAC,KAAD,CAAUprG,MAAM,OAAO8zE,OAAO,SAAYq3B,QCnD3DjB,GAAapqG,aAAOkqG,GAAPlqG,CAAH,6PAOZ,qBAAGm+C,MAAkB4D,aAAamoB,MAOhCqhC,GAAYvrG,aAAOwrG,IAAPxrG,CAAH,mEACA,qBAAGyrG,QAAyB,iBAAmB,eAkB/CP,GAd0C,SAAC,GAAgC,IAA9BrU,EAA6B,EAA7BA,SAAU6U,EAAmB,EAAnBA,aAC5DjtG,EAAMC,eAAND,EACR,OACE,eAAC,GAAD,CAAYqgF,KAAK,OAAjB,UACG4sB,GACC,cAAC,KAAD,CAAMpuF,MAAM,UAAU26C,MAAI,EAA1B,SACcx5D,EAAXo4F,EAAa,OAAY,aAG9B,cAAC0U,GAAD,CAAWjuF,MAAM,UAAUmuF,QAAS5U,QCrC7B8U,GAAkB3rG,KAAOU,IAAV,yUAEN,qBAAGy9C,MAAkBkJ,OAAOud,SAM9C,qBAAGzmB,MAAkB4D,aAAaC,MAIxB,qBAAG55B,YAAiC,QAAU,UAIxD,qBAAG+1B,MAAkB4D,aAAa6pD,MAMzBC,GAAe7rG,KAAOU,IAAV,wEAKZorG,GAAgB9rG,KAAOU,IAAV,4GC8FXqrG,GAzGoD,SAAC,GAO7D,IANLxxF,EAMI,EANJA,OACAC,EAKI,EALJA,aACAw/B,EAII,EAJJA,aACAd,EAGI,EAHJA,SACAH,EAEI,EAFJA,eACAnwB,EACI,EADJA,kBAEQnqB,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QAEF2qC,GAAmB,OAARtG,QAAQ,IAARA,OAAA,EAAAA,EAAUtB,eAAgB,IAAI12C,KAAUg4C,EAAStB,eAAiB32C,KAC7E4iG,EAAsB7hG,aAAiBw9C,EAAUxF,EAAar4C,UAC9DmiG,EAA4B9hG,aAAiBw9C,EAAS/3B,aAAamB,GAAoBoxB,EAAar4C,UACpGoiG,EAAcvkD,EAAS12B,GAAG,GAC1Bw6E,EAAcnhG,aAAsBq9C,EAAUxF,EAAar4C,UAC3D0hG,EAAmB/gG,aAAauhG,EAAqB,EAAG,GACxDL,EAA4B,IAAXjpF,EACjBkmF,EAAYjmF,IAAiBrf,KAAasf,QAEhD,EAA2B4kD,aACzB,cAAC,GAAD,CACEgkC,iBAAkBA,EAClBC,YAAaA,EACbtpD,aAAcA,EACdupD,oBAAqBO,EACrBvpF,OAAQA,EACRkmF,UAAWA,EACX+C,eAAgBA,KARbQ,EAAP,oBAYMgI,EACJ,qCACE,eAAC,KAAD,CAAMh0C,SAAS,OAAOC,MAAI,EAAC36C,MAAM,YAAYomC,GAAG,OAAOkwB,cAAc,YAArE,UACG55B,EAAavsB,OAAQ,OAExB,cAAC,KAAD,CAAMuqC,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAaomC,GAAG,OAAOkwB,cAAc,YAAtE,SACGn1E,EAAE,eAKT,OAAKoW,EAYAkkC,EAYH,eAAC4yD,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,CAAMtlB,KAAK,IAAIvtB,GAAG,OAAO4F,cAAc,SAASotC,UAAU,aAA1D,SACE,mCACGlI,EACC,qCACE,cAAC1mF,GAAA,EAAD,CAAS6uF,WAAW,IAAIj0C,MAAI,EAACD,SAAS,OAAOr2D,SAAU,EAAGnD,MAAOqlG,IAChEj7E,EAAoB,GACnB,cAACvL,GAAA,EAAD,CACEiqD,QAAQ,SACRtP,SAAS,OACT16C,MAAM,aACN3b,SAAU,EACV8b,OAAO,IACPjf,MAAOslG,EACPtmF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM06C,SAAS,OAAO16C,MAAM,eAA5B,0BAOR,cAAC,IAAD,CAAQ0zD,UAAW+yB,EAAarmF,QAASsmF,EAAzC,SACoBvlG,EAAjB+kG,EAAmB,UAAe,mBAzCvC,eAACmI,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,cAACF,GAAD,UACE,cAAC,KAAD,CAAU5rG,MAAO,IAAK8zE,OAAO,OAAOiF,UAAW,UAfnD,eAAC0yB,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAQ96B,UAAQ,EAAhB,SAAmCvyE,EAAjB+kG,EAAmB,UAAe,oBC9CxD2I,GAAoBnsG,KAAOU,IAAV,iDA+OR0rG,GAtO6C,SAAC,GAA8B,IAA5B9xF,EAA2B,EAA3BA,KAAMy+B,EAAqB,EAArBA,eAEjEx+B,EASED,EATFC,OACA86B,EAQE/6B,EARF+6B,aACA2E,EAOE1/B,EAPF0/B,aACAhE,EAME17B,EANF07B,aACAvsB,EAKEnP,EALFmP,WACAjP,EAIEF,EAJFE,aACA0+B,EAGE5+B,EAHF4+B,SACA/E,EAEE75B,EAFF65B,kBACA/rB,EACE9N,EADF8N,YAEM3pB,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QAEFqqF,EAAuBhhF,YAASm3B,EAAa/iC,SAAW,IAC9D,EAAuF+rF,GACrFa,EACA3kF,EACAy/B,EAAavsB,QAHQ4+E,EAAvB,EAAQ3N,cAAqD4N,EAA7D,EAA0C/N,kBAM1C,EAA4CM,KAApCC,EAAR,EAAQA,gBAAiB1qC,EAAzB,EAAyBA,eACzB,EACEwqC,GAAgBxqC,GADKm4C,EAAvB,EAAQ7N,cAAsD8N,EAA9D,EAA2CjO,kBAGrCG,EAAgBt2E,EAAcmkF,EAAqBF,EACnD9N,EAAoBn2E,EAAcokF,EAAyBF,EAE3D7L,EAAYjmF,IAAiBrf,KAAasf,QAC1Ck2B,GAAoB,OAARuI,QAAQ,IAARA,OAAA,EAAAA,EAAUvI,WAAY,IAAIzvC,KAAUg4C,EAASvI,WAAa1vC,KACtEs5C,GAAwB,OAARrB,QAAQ,IAARA,OAAA,EAAAA,EAAUqB,eAAgB,IAAIr5C,KAAUg4C,EAASqB,eAAiBt5C,KAClFwrG,GAAyBrkF,GAAemyB,EAAczxB,GAAG,GAEzDwxB,GAA8B,OAARpB,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,qBAAsB,IAAIp5C,KAAUg4C,EAASoB,qBAAuBr5C,KAEpGwhG,EAAqBzgG,aAAiBu4C,EAAelF,EAAa1zC,UAClE+gG,EAA2B1gG,aAC/Bu4C,EAAc9yB,aAAa0sB,GAC3BkB,EAAa1zC,UAGf,EAGI+yF,KAFUhsE,EADd,EACEwwB,SAAYxwB,WACZC,EAFF,EAEEA,kBAGF,EAAiDxB,aAAoBuB,EAAYC,GAAzEhB,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnBglF,EAAkBhkF,GAAcA,EAAWI,GAAG,GAC9C6jF,EAAoBvkF,GAAeskF,EACnCE,EAAwB5qG,aAAiB2lB,EAAgBF,aAAa0sB,GAAoBkB,EAAa1zC,UAEvGwiG,EAAgB/7E,GAAe02E,GAAmBnuD,EAAU7nB,GAAG,KAAO23E,EAE5E,EAAiCphC,aAAS,cAAC,GAAD,CAAsBrS,YAAa3X,EAAa5nB,UAAnFk1E,EAAP,oBAEA,EAAyBtjC,aACvB,cAAC,GAAD,CACEohC,UAAWA,EACXnmF,KAAMA,EACNggC,oBAAqBA,EACrBnG,kBAAmBA,KALhByuD,EAAP,oBASA,EAA8BvjC,aAAS,cAAC,GAAD,CAAiB8mC,WAAY7rD,EAAqBhgC,KAAMA,KAAxFuyF,EAAP,oBAEA,EAA2BxtC,aACzB,cAAC,GAAD,CACE/kB,oBAAqBA,EACrBmmD,UAAWA,EACXnmF,KAAMA,EACN65B,kBAAmBA,EACnBusD,iBAAe,KANZmC,GAAP,oBAUA,GAAgCxjC,aAAS,cAAC,GAAD,CAAiB8mC,WAAYx+E,EAAiBrN,KAAMA,EAAMomF,iBAAe,KAA3GoM,GAAP,qBAEMhN,GAAU,WACV13E,EACFykF,IAEAjK,KAYJ,GAA+ChnD,aAC7Cn9C,EAAE,wEACF,CAAEk9C,UAAW,WAFPG,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,QAASC,GAA5B,GAA4BA,eAKtB8mD,GAAoB9sD,EAAaltB,GAAG,IAAMowB,EAASqB,cAAcrxB,IAAI8sB,GAE3E,OAAKnhC,EAeAkkC,EAeDorD,EAEA,eAACwH,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM7zC,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAaomC,GAAG,OAAOkwB,cAAc,YAAtE,SACGn1E,EAAE,mBAGP,cAACqtG,GAAD,UACE,cAAC,IAAD,CAAQ5rG,MAAM,OAAO8wE,SAAUutB,EAAmB7gF,QAASghF,EAAe17C,QAAQ,YAAlF,SACGvkD,EAAE,iBAQTguG,GAAyBE,EAEzB,eAAChB,GAAD,CAAiBvjF,YAAaA,EAA9B,UACE,eAACyjF,GAAD,WACE,eAAC,KAAD,CAAM7zC,SAAS,OAAOC,MAAI,EAAC36C,MAAM,YAAYomC,GAAG,OAAOkwB,cAAc,YAArE,UACGv+B,EAAa5nB,OAAQ,OAExB,cAAC,KAAD,CAAMuqC,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAaomC,GAAG,OAAOkwB,cAAc,YAAtE,SACiBn1E,EAAd2pB,EAAgB,uBAA4B,eAGjD,eAAC0jF,GAAD,WACE,eAAC,IAAD,CAAMtlB,KAAK,IAAIvtB,GAAG,OAAO4F,cAAc,SAASotC,UAAU,aAA1D,UACE,cAAC5uF,GAAA,EAAD,CACE6uF,WAAW,IACXj0C,MAAI,EACJD,SAAS,OACTr2D,SAAU,EACVnD,MAAO4pB,EAAcV,EAAsB+6E,IAE7C,cAACplF,GAAA,EAAD,CACE26C,SAAS,OACTsP,QAAQ,SACRhqD,MAAM,aACN3b,SAAU,EACVnD,MAAO4pB,EAAcwkF,EAAwBlK,EAC7CllF,KAAK,OACLC,OAAO,SAGX,eAAC0uF,GAAD,WACE,cAAC,IAAD,CAAYnpD,QAAQ,YAAYtlC,QA9FxB,WACZ0K,EACF0kF,KAEAjK,MA0F0D9iC,GAAG,MAAvD,SACE,cAAC,KAAD,CAAWziD,MAAM,UAAUpd,MAAM,WAElC4iG,GACC,sBAAM7mD,IAAKH,GAAX,SACE,cAAC,IAAD,CAAYkH,QAAQ,YAAYguB,UAAQ,EAAxC,SACE,cAAC,IAAD,CAAS1zD,MAAM,eAAepd,MAAM,OAAO8zE,OAAO,aAItD,cAAC,IAAD,CACEhxB,QAAQ,YACRtlC,QAAS48B,EAAoBxxB,GAAG,GAAKg3E,GAAU6C,EAC/C3xB,SAAUvnD,EAHZ,SAKE,cAAC,IAAD,CAASnM,MAAM,UAAUpd,MAAM,cAIpC87C,IAAkBD,SAOzB,eAAC4vD,GAAD,WACE,eAACE,GAAD,WACE,eAAC,KAAD,CAAM7zC,SAAS,OAAOC,MAAI,EAAC36C,MAAM,YAAYomC,GAAG,OAAOkwB,cAAc,YAArE,UACGn1E,EAAE,SAAU,OAEf,cAAC,KAAD,CAAMu5D,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAaomC,GAAG,OAAOkwB,cAAc,YAAtE,SACGv+B,EAAa5nB,YAGlB,cAACq+E,GAAD,UACE,cAAC,IAAD,CACE5rG,MAAM,OACNwd,QAAS48B,EAAoBxxB,GAAG,GAAKg3E,GAAU6C,EAC/C3/C,QAAQ,YACRguB,SAAUvnD,EAJZ,SAMGhrB,EAAE,gBAxGP,eAACktG,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM7zC,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAaomC,GAAG,OAAOkwB,cAAc,YAAtE,SACGn1E,EAAE,qBAGP,cAACqtG,GAAD,UACE,cAAC,KAAD,CAAU5rG,MAAO,IAAK8zE,OAAO,OAAOiF,UAAW,UAtBnD,eAAC0yB,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM7zC,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAaomC,GAAG,OAAOkwB,cAAc,YAAtE,SACGn1E,EAAE,qBAGP,cAACqtG,GAAD,UACE,cAACxlD,GAAA,EAAD,CAAqBpmD,MAAM,eCrBtB6sG,GAxG4D,SAAC,GAA2C,IAAzCh0D,EAAwC,EAAxCA,eAAgBnwB,EAAwB,EAAxBA,kBACpFnqB,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QAER,EAII6/E,KAJJ,IACEx7C,SAAYzwB,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAClCC,EAFF,EAEEA,kBACQR,EAHV,EAGE8wB,KAAQ9wB,eAEV,EAAiEK,aAC/D3T,EACA4T,EACAC,EACAC,EACAC,GALMC,EAAR,EAAQA,gBAQFg7E,EARN,EAAyB56E,kBASnB66E,EATN,EAA4C16E,iBAUtC26E,EAAcl7E,EAEpB,EAA+C+yB,aAC7Cn9C,EAAE,gEACF,CAAEk9C,UAAW,iBAFPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBgwD,EACJ,cAAC,KAAD,CAAMh0C,SAAS,OAAOC,MAAI,EAAC36C,MAAM,YAAYomC,GAAG,OAAOkwB,cAAc,YAArE,SACGn1E,EAAE,wBAIP,OAAKoW,EAWAkkC,EAYH,eAAC4yD,GAAD,CAAiBvjF,aAAW,EAA5B,UACE,cAACyjF,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,CAAMtlB,KAAK,IAAIvtB,GAAG,OAAO4F,cAAc,SAASotC,UAAU,aAA1D,SACE,mCACGlI,EACC,qCACE,cAAC1mF,GAAA,EAAD,CAAS6uF,WAAW,IAAIj0C,MAAI,EAACD,SAAS,OAAOr2D,SAAU,EAAGnD,MAAOqlG,IAChEj7E,EAAoB,GACnB,cAACvL,GAAA,EAAD,CACEiqD,QAAQ,SACRtP,SAAS,OACT16C,MAAM,aACN3b,SAAU,EACV8b,OAAO,IACPjf,MAAOslG,EACPtmF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM06C,SAAS,OAAO16C,MAAM,eAA5B,0BAOR,eAAC,IAAD,CAAMkpE,KAAK,MAAM3nB,cAAc,SAASotC,UAAU,aAAansC,WAAW,aAA1E,UACE,cAAC,GAAD,CAA0B6lC,gBAAc,IACxC,eAAC,IAAD,CAAMzmC,GAAG,MAAMlG,eAAe,gBAAgB8G,WAAW,SAAzD,UACG9jB,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWoc,OAAK,EAAlC,SACGz5D,EAAE,qBAEL,cAAC,IAAD,CAAMqhE,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMnH,GAAG,MAAMT,OAAK,EAApB,UACG/vC,EAAiB,IADpB,qBAhDR,eAACwjF,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,cAACF,GAAD,UACE,cAAC,KAAD,CAAU5rG,MAAO,IAAK8zE,OAAO,OAAOiF,UAAW,UAdnD,eAAC0yB,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,cAACF,GAAD,UACE,cAAC,IAAD,sBCnBJkB,GAAkBzsC,aAAH,yGASf0sC,GAAoB1sC,aAAH,yGASjB2sC,GAAoBltG,KAAOU,IAAV,iQACR,qBAAGm2F,SAEVxW,aADI,2EAEA2sB,IAEJ3sB,aAJI,2EAKA4sB,OAGI,qBAAG9uD,MAAkBkJ,OAAOO,YAMxC,qBAAGzJ,MAAkB4D,aAAawb,MAMhCouC,GAAkB3rG,KAAOU,IAAV,uLAIjB,qBAAGy9C,MAAkB4D,aAAaC,MAyBhCmrD,GAAcntG,aAAOC,IAAPD,CAAH,oKAKb,qBAAGm+C,MAAkB4D,aAAawb,MAwMvB6vC,GAlMiC,SAAC,GAA8D,IAAD,EAA3Dv4F,EAA2D,EAA3DA,QAASyF,EAAkD,EAAlDA,KAAMy+B,EAA4C,EAA5CA,eAAgB89C,EAA4B,EAA5BA,SAAUwW,EAAkB,EAAlBA,YAExF9yF,EAUED,EAVFC,OACA86B,EASE/6B,EATF+6B,aACA2E,EAQE1/B,EARF0/B,aACA3F,EAOE/5B,EAPF+5B,YACA9qB,EAMEjP,EANFiP,WACAC,EAKElP,EALFkP,SACAwsB,EAIE17B,EAJF07B,aACAp7B,EAGEN,EAHFM,gBACAs+B,EAEE5+B,EAFF4+B,SACA9wB,EACE9N,EADF8N,YAEM3pB,EAAMC,eAAND,EACFm+F,EAAsBvqF,aAAWuI,GACjCiiF,EAA2B1pF,eACzBmW,EAAiB6P,cAAjB7P,aACAgkF,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KACd9C,GAAgB4C,GAAQC,IAAoB,IAAXhzF,EAEvC,EACE8O,aAAiB/O,EAAMgP,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBG,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/E8yE,KAAqB,UAACr6C,OAAO+T,gBAAR,aAAC,EAAiBgC,YACvCz5C,EAAei7B,EAAa1nC,SAAW,GAE7C,EAKIoiF,KAJFr8C,EADF,EACEA,iBACY3vB,EAFd,EAEEwwB,SAAYxwB,WACJP,EAHV,EAGE8wB,KAAQ9wB,eACRQ,EAJF,EAIEA,kBAGI2xB,GAA8B,OAARpB,QAAQ,IAARA,OAAA,EAAAA,EAAUoB,qBAAsB,IAAIp5C,KAAUg4C,EAASoB,qBAAuBr5C,KACpGs5C,GAAwB,OAARrB,QAAQ,IAARA,OAAA,EAAAA,EAAUqB,eAAgB,IAAIr5C,KAAUg4C,EAASqB,eAAiBt5C,KAChF0mB,EAAoBR,aAAoBuB,EAAYC,GAApDhB,gBACF8lF,EAA0BrlF,EAC5BT,EAAgB00E,KAAK/hD,GACrBC,EAAc8hD,KAAK/hD,GAEjBsO,EAA0BzgC,GAAkBA,EAAiB,IAC7D40E,EAA8B,IAAXxiF,EAazB,EAIIqhC,aAAWn9C,EAAE,+CAAgD,CAAEgvB,OAAQ4nB,EAAa5nB,SAAW,CACjGkuB,UAAW,WAJAqhD,EADb,EACElhD,UACSmhD,EAFX,EAEElhD,QACgBmhD,EAHlB,EAGElhD,eAKIshD,EAAoB7+F,EAAE,wEACtB8+F,EAAkB9+F,EACtB,uGAGF,GAIIm9C,aAAWxzB,EAAcm1E,EAAkBD,EAAmB,CAChE3hD,UAAW,iBAJA+xD,GADb,GACE5xD,UACS6xD,GAFX,GAEE5xD,QACgB6xD,GAHlB,GAGE5xD,eAKI6xD,GAAc73D,EAAaltB,GAAG,GAClC,eAAC,IAAD,CAAMo2C,GAAG,MAAMlG,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAOv6D,EAAE,uBAAT,OACA,cAAC,KAAD,oBAAU0D,aAAsB6zC,EAAcX,EAAa1zC,SAAU,GAArE,YAA2E0zC,EAAa5nB,aAExF,KAEEqgF,GACJhkF,GAAmBH,EACjB,eAAC,IAAD,CAAMu1C,GAAG,MAAMlG,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAwBv6D,EAAjBsrB,EAAmB,UAAe,aAAzC,OACA,cAAC,IAAD,UACE,eAAC,KAAD,CAAM45B,UAAQ,EAACC,KAAMjwC,YAAeoW,EAAiBP,EAAWD,EAAY,aAA5E,UACE,cAAClM,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MAAOwrB,EAAiBroB,SAAU,EAAG2b,MAAM,YACpE,cAAC,KAAD,CAAMq7C,GAAG,MAAMr7C,MAAM,UAAUs2D,cAAc,YAA7C,SACGn1E,EAAE,YAEL,cAAC,KAAD,CAAWk6D,GAAG,MAAMr7C,MAAM,oBAKhC,cAAC,KAAD,CAAUpd,MAAM,OAAO8zE,OAAO,SAG5B+5B,GACJ,eAAC,IAAD,CAAM/0C,eAAe,gBAAgB8G,WAAW,SAASZ,GAAG,MAA5D,UACE,eAAC,KAAD,WAAqBzgE,EAAd2pB,EAAgB,MAAW,OAAlC,OACA,cAAC,GAAD,CACE9N,KAAMA,EACNywF,UAAQ,EACRxwD,cAAekzD,EACftlF,eAAgBC,EAAcwgC,EAA0B,OAKxDolD,GACJ,eAAC,IAAD,CAAMh1C,eAAe,gBAAgB8G,WAAW,SAASZ,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMsM,SAAU,CAAC,OAAQ,QAAzB,UAAmC/sE,EAAE,gBAArC,OACA,eAAC,IAAD,CAAMqhE,WAAW,SAAjB,UACGzrB,GAAeA,EAAYnrB,IAAI,GAC9B,qCACE,cAAC7L,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MA3EL,WAC5B,GAAI4pB,EACF,OAAOpmB,aAAiBq2C,EAAkBhD,EAAa1zC,UAEzD,GAAIo7F,EAAkB,CACpB,IAAMI,EAAgC,IAAIj8F,KAAUmzC,GAAarrB,MAAMqvB,GACvE,OAAOr2C,aAAiBm7F,EAA+B9nD,EAAa1zC,UAEtE,OAAOK,aAAiBqyC,EAAagB,EAAa1zC,UAmEVy7F,GAAyBz7F,SAAU,EAAG6b,KAAI,WAAM63B,EAAa5nB,UAC7F,sBAAMwuB,IAAK+gD,EAAX,SACE,cAAC,IAAD,CAAU1/E,MAAM,aAAapd,MAAM,OAAOy4D,GAAG,aAIjD,cAAC,KAAD,CAAUz4D,MAAM,OAAO8zE,OAAO,SAE/BkpB,GAA6BD,QAKpC,OACE,eAACiQ,GAAD,CAAmBrW,SAAUA,EAA7B,UACE,eAACsW,GAAD,WACGU,IACCP,GAAQC,IAASQ,IACjBT,GAAQC,GAAQC,IAASQ,GAC1BtkF,GAA4BokF,GAC7B,cAAC,IAAD,CAAM5uC,GAAG,MAAMlG,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcpV,KAAI,sBAAiB5J,EAAa1nC,SAAW2lD,MAAM,EAAjE,SACGx5D,EAAE,sBAGP,cAAC,IAAD,CAAMygE,GAAG,MAAMlG,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcpV,KAAM5J,EAAa7jB,YAAa8hC,MAAM,EAApD,SACGx5D,EAAE,yBAGNm+F,GACC,cAAC,IAAD,CAAM19B,GAAG,MAAMlG,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CACEpV,KAAI,UAAKvtC,KAAL,oBAAkC+R,EAAcy0E,EAA2BD,GAC/E3kC,MAAM,EAFR,SAIGx5D,EAAE,qBAIRoW,GAAWioF,GAAqB/9E,GAC/B,cAAC,IAAD,CAAMmgD,GAAG,MAAMlG,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,eAAC,IAAD,CACEhW,QAAQ,OACR7+B,EAAE,IACF6vD,OAAO,OACPt2D,QAAS,kBAAMo5C,aAAc/3C,EAAci7B,EAAavsB,OAAQusB,EAAar4C,WAJ/E,UAME,cAAC,KAAD,CAAM2b,MAAM,UAAZ,SAAuB7e,EAAE,qBACzB,cAAC,KAAD,CAAck6D,GAAG,aAItBvwC,EAAc,cAAC,GAAD,IAAyB,cAAC,GAAD,IACvCwlF,IAAqBD,GACtB,sBAAM1xD,IAAKyxD,GAAX,SACE,cAAC,IAAD,CAAU/0C,GAAG,MAAMz4D,MAAM,OAAO8zE,OAAO,OAAO12D,MAAM,oBAGxD,eAAC,GAAD,WACGotF,GACC,cAAC,KAAD,CAAMjyC,GAAG,MAAMyG,GAAG,OAAO5hD,MAAM,aAA/B,SACG8K,EAAc3pB,EAAE,uBAAL,UAAiCA,EAAE,QAAnC,iBAAmDA,EAAE,SAAS2vE,oBAA9D,WAGf9zD,EAAK8N,YACJ,cAAC6lF,GAAD,6BAAiB3zF,GAAjB,IAAuBy+B,eAAgBA,KAEvC,cAACm1D,GAAD,6BAAa5zF,GAAb,IAAmBy+B,eAAgBA,KAErC,cAACo1D,GAAD,CAAO7zF,KAAMA,EAAMy+B,eAAgBA,WC9RrCqxD,GAAapqG,aAAOkqG,GAAPlqG,CAAH,iFAEZ,qBAAGm+C,MAAkB4D,aAAaC,MAKhCosD,GAAkBpuG,KAAOU,IAAV,sDA8FN2tG,GA1F2C,SAAC,GAAuC,IAArC/zF,EAAoC,EAApCA,KAAMzF,EAA8B,EAA9BA,QAASkkC,EAAqB,EAArBA,eAClEt6C,EAAMC,eAAND,EACA6rG,EAAaC,eAAbD,SACA1hF,EAAsBtO,EAAtBsO,kBAER,EAGI8rE,KAHJ,IACEx7C,SAAYzwB,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAAYowB,EADhD,EACgDA,mBAC9CnwB,EAFF,EAEEA,kBAEF,EAAiEH,aAC/D3T,EACA4T,EACAC,EACAC,EACAC,GALMC,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCwhF,EAAYnsG,EAAE,sBACdolG,EAAsB56E,EACtB86E,EAAcl7E,EACdi7E,EAA4B16E,EAE5Bi+E,EAAiBvuD,GAAqD,IAA/Br5C,SAASq5C,GAEhDquD,EADqB,IAAIp+D,KAAKs+D,GACWxkG,iBAE/C,EAA+C+4C,aAC7C,qCACE,cAACv+B,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MAAOyqB,EAAmBtnB,SAAU,EAAGs2D,MAAI,EAACz6C,KAAK,UAC1E,cAACH,GAAA,EAAD,CAAS26C,SAAS,OAAOx5D,MAAO4qB,EAAkBznB,SAAU,EAAGs2D,MAAI,EAACx6C,OAAO,OAC1Ehf,EAAE,iCACH,cAAC,KAAD,UAAO0oG,OAET,CAAExrD,UAAW,WAPPG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAU5B,OACE,cAAC,GAAD,CAAY8iC,KAAK,OAAjB,SACE,eAACqrB,GAAD,WACE,cAAC,KAAD,CAAMnyC,SAAS,OAAO16C,MAAM,aAAa66C,UAAU,OAAnD,SACGyyC,KAED7xD,GAAkBlkC,EAClB,cAAC,KAAD,CAAU3U,MAAM,OAAO8zE,OAAO,SAE9B,qCACGh4B,GAAkBD,EACnB,eAAC,IAAD,WACE,eAAC,IAAD,CAAKgkB,GAAG,MAAMiU,OAAO,OAArB,UACE,cAAC32D,GAAA,EAAD,CACEo7C,GAAG,MACHR,MAAOqyC,EACPtyC,SAAUsyC,EAAW,OAAS,OAC9BhtF,MAAOymF,EAAc,UAAY,eACjCpiG,SAAUoiG,EAAc,EAAI,EAC5BvlG,MAAOulG,EAAcF,EAAsB,IAE5CE,EACC,mCACGn7E,EAAoB,GACnB,cAACvL,GAAA,EAAD,CACEiqD,QAAQ,SACRtP,SAAS,OACT16C,MAAM,aACN3b,SAAU,EACV8b,OAAO,IACPjf,MAAOslG,EACPtmF,KAAK,WAKX,cAAC,KAAD,CAAMi7C,GAAG,MAAMT,SAAS,OAAO16C,MAAM,eAArC,sBAKHymF,IAAgBuG,GACf,cAAC8D,GAAD,CAAiBnyD,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUx+B,MAAM,6BC5F5B8sF,GAAapqG,aAAOkqG,GAAPlqG,CAAH,sFAEZ,qBAAGm+C,MAAkB4D,aAAamoB,MAmCvBokC,GA9B6B,SAAC,GAAc,IAAZh0F,EAAW,EAAXA,KACrC7b,EAAMC,eAAND,EACA6rG,EAAaC,eAAbD,SAER,EAII5V,KAHUhsE,EADd,EACEwwB,SAAYxwB,WACJP,EAFV,EAEE8wB,KAAQ9wB,eACRQ,EAHF,EAGEA,kBAGMhB,EAAoBR,aAAoBuB,EAAYC,GAApDhB,gBACFihC,EAA0BzgC,GAAkBA,EAAiB,IAEnE,OACE,cAAC,GAAD,CAAY22D,KAAK,OAAjB,SACE,eAACqrB,GAAD,WACE,cAAC,KAAD,CAAMnyC,SAAS,OAAO16C,MAAM,aAAa66C,UAAU,OAAnD,SACG15D,EAAE,SAEL,cAAC,GAAD,CACE6b,KAAMA,EACNigC,cAAe5yB,EACfQ,eAAgBygC,EAChBmiD,UAAWT,UCvBfiE,GAAYvuG,KAAOU,IAAV,uGA2CA8tG,GArCyB,SAAC,GAAuC,IAArCl0F,EAAoC,EAApCA,KAAMzF,EAA8B,EAA9BA,QAASkkC,EAAqB,EAArBA,eACxD,EAAqEwxD,eAA7D+C,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,KAAMiB,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,KAAMC,EAAtC,EAAsCA,MAAOC,EAA7C,EAA6CA,SAAUC,EAAvD,EAAuDA,UACjDC,EAAiBL,GAAQC,GAAQC,EACvC,EAAgCvyG,oBAAS,GAAzC,mBAAOy6F,EAAP,KAAiBkY,EAAjB,KACMC,EAA0BpF,GAAkB/S,EAAU,KAM5D,OACE,qCACE,eAAC0X,GAAD,CAAWzvB,KAAK,MAAMphE,QANH,WACrBqxF,GAAY,SAACz7C,GAAD,OAAWA,MAKrB,UACE,cAAC,GAAD,CAAUh5C,KAAMA,IACfA,EAAK8N,YACJ,cAAC,GAAD,CAAkB9N,KAAMA,EAAMzF,QAASA,EAASkkC,eAAgBA,IAEhE,cAAC,GAAD,CAAcz+B,KAAMA,EAAMzF,QAASA,EAASkkC,eAAgBA,IAE7Dz+B,EAAK8N,YAAc,cAAC,GAAD,CAAa9N,KAAMA,IAAW,cAAC,GAAD,CAASA,KAAMA,IAChEw0F,GAAkB,cAAC,GAAD,CAAiBx0F,KAAMA,IACzCu0F,GAAa,cAAC,GAAD,CAAYv0F,KAAMA,IAChC,cAAC20F,GAAD,CAAkBpY,SAAUA,EAAU6U,aAAckD,GAAYC,OAEjEG,GACC,cAAC,GAAD,CACEn6F,QAASA,EACTyF,KAAMA,EACNy+B,eAAgBA,EAChB89C,SAAUA,EACVwW,YAAa,CAAEC,OAAMC,OAAMC,OAAMiB,OAAMC,OAAMC,eC5CjDO,GAAclvG,KAAOU,IAAV,sJACE,qBAAGy9C,MAAkB27C,MAAMzL,QAExB,qBAAGlwC,MAAkBkwC,KAAK/mC,cAEjB,qBAAGnJ,MAAkBkJ,OAAO2pB,YAIrDm+B,GAAoBnvG,KAAOU,IAAV,4IACJ,qBAAGy9C,MAAkB27C,MAAMzL,QACxB,qBAAGlwC,MAAkBkJ,OAAOK,cAK5C0nD,GAAwBpvG,KAAOU,IAAV,0HAqCZ2uG,GA9B+B,SAAC,GAAwC,IAAtCpnE,EAAqC,EAArCA,MAAO8Q,EAA8B,EAA9BA,eAAgBlkC,EAAc,EAAdA,QAC9DpW,EAAMC,eAAND,EACF6wG,EAAiBlwG,iBAAuB,MAM9C,OACE,cAAC+vG,GAAD,UACE,eAACD,GAAD,CAAa/0F,GAAG,cAAc2kE,KAAK,QAAQ7iC,IAAKqzD,EAAhD,UACGrnE,EAAMjkB,KAAI,SAAC1J,GAAD,OACT,cAAC,GAAD,CAEEA,KAAMA,EACNzF,QAASA,EACTkkC,eAAgBA,GAHXz+B,EAAK8N,YAAc,YAAc9N,EAAKC,WAM/C,cAAC60F,GAAD,UACE,eAAC,IAAD,CAAQpsD,QAAQ,OAAOtlC,QAjBX,WAClB4xF,EAAe9vG,QAAQ+vG,eAAe,CACpCC,SAAU,YAeN,UACG/wG,EAAE,UACH,cAAC,IAAD,CAAe6e,MAAM,uBCpB3BmyF,GAAazvG,aAAOu1F,GAAPv1F,CAAH,2DAIV0vG,GAAe1vG,KAAOU,IAAV,wTAUd,qBAAGy9C,MAAkB4D,aAAaC,MAQhC2tD,GAAkB3vG,KAAOU,IAAV,iKAMjB,qBAAGy9C,MAAkB4D,aAAaC,MAMhC4tD,GAAe5vG,KAAOU,IAAV,oEACZ6hF,MAKAstB,GAAiB7vG,aAAOw/D,IAAPx/D,CAAH,6DA2QL8vG,GAnQS,WACtB,IAAM/jC,EAAW3Z,cACT3zD,EAAMC,eAAND,EACAoW,EAAY9V,eAAZ8V,QACR,EhE/CsB,WACtB,MAAkCsL,aAAY,SAAC3jB,GAAD,MAAmB,CAC/DyrC,MAAOzrC,EAAMyrC,MAAMtqC,KACnBo7C,eAAgBv8C,EAAMyrC,MAAM8Q,mBAFtB9Q,EAAR,EAAQA,MAAO8Q,EAAf,EAAeA,eAIf,MAAO,CAAE9Q,MAAOA,EAAMjkB,IAAIkqD,MAAgBn1B,kBgE0Ceg3D,GAA1CC,EAAf,EAAQ/nE,MAA8B8Q,EAAtC,EAAsCA,eACtC,EAAoC53B,eAApC,mBAAOE,EAAP,KAAmB+mF,EAAnB,KACA,EAAgC9mF,eAAhC,mBAAOE,EAAP,KAAiB8mF,EAAjB,KACA,EAAwDlsG,mBAT1B,IAS9B,mBAAO6zG,EAAP,KAA6BC,EAA7B,KACA,EAAwCpc,KAAhCC,EAAR,EAAQA,YAAaI,EAArB,EAAqBA,eACrB,EAAsC/3F,mBAAS,IAA/C,mBAAOgwB,EAAP,KAAoBo4D,EAApB,KACA,EAAoCpoF,mBAAS,OAA7C,mBAAO+zG,EAAP,KAAmBC,EAAnB,KACMC,EAAoBjxG,iBAAO,GACjC,EAKIs1F,KALJ,IACEx7C,SAAYzwB,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAC1BP,EAFV,EAEE8wB,KAAQ9wB,eACRQ,EAHF,EAGEA,kBACA0vB,EAJF,EAIEA,iBAEIi4D,EAAwB5nF,GAAcA,EAAWI,GAAG,GACpD8/B,EAA0BzgC,GAAkBA,EAAiB,IAE7D8f,EAAQ9pB,mBAAQ,WACpB,IAAMoyF,EAAWP,EAAsB31F,MAAK,SAACC,GAAD,OAA0B,IAAhBA,EAAKC,UAE3D,MAAM,CADa,6BAAQg2F,GAAR,IAAkBnoF,aAAa,KAClD,mBAA0B4nF,MACzB,CAACA,IAGJ,EAAmC7xF,mBAAQ,kBAAMqyF,KAAUvoE,GAAO,SAAC3tB,GAAD,OAAUA,EAAKmP,gBAAa,CAACwe,IAA/F,mBAAOwoE,EAAP,KAAsBC,EAAtB,KACMC,EAA0BxyF,mBAC9B,kBACEsyF,EAAcvsF,QAAO,SAAC5J,GACpB,OAAIA,EAAK8N,YACAkoF,EAEFh2F,EAAK4+B,UAAY,IAAIh4C,KAAUoZ,EAAK4+B,SAASqB,eAAeq2D,cAAc,QAErF,CAACH,EAAeH,IAEZO,GAAsB1yF,mBAC1B,kBACEuyF,EAAUxsF,QAAO,SAAC5J,GAChB,OAAIA,EAAK8N,YACAkoF,EAEFh2F,EAAK4+B,UAAY,IAAIh4C,KAAUoZ,EAAK4+B,SAASqB,eAAeq2D,cAAc,QAErF,CAACF,EAAWJ,IAERjI,GAA0BsI,EAAwB7jF,OAAS,EAEjE0zB,ehEtF+B,WAC/B,IAAQ3rC,EAAY9V,eAAZ8V,QACAqsC,EAAgBR,eAAhBQ,YACFlhC,EAAWswB,eAEjB5zC,qBAAU,WACRsjB,EAAS86B,kBACR,CAAC96B,EAAUkhC,IAEdxkD,qBAAU,WACRsjB,EAASk7B,aAAuB,CAAErmC,eACjC,CAACmL,EAAUkhC,EAAarsC,IAE3BnY,qBAAU,WACRsjB,EAASg7B,kBACR,CAACh7B,IgEwEJ8wF,GhExHqC,WACrC,IAAM9wF,EAAWswB,eACTqQ,EAAgBD,eAAhBC,YAERjkD,qBAAU,YACkB,uCAAG,4BAAAC,EAAA,sEACD0C,KAAkBw9B,iBADjB,OACrB3F,EADqB,OAE3BlX,EAASm5B,aAA0BjiB,IAFR,2CAAH,qDAK1B65E,GACA/wF,EAASk6B,kBACR,CAACl6B,EAAU2gC,IgE6GdqwD,GhE1G+B,SAACn8F,GAChC,IAAQqsC,EAAgBR,eAAhBQ,YACFlhC,EAAWswB,eACjB5zC,qBAAU,WACJmY,GACFmL,EAASo6B,aAAwBvlC,MAElC,CAACA,EAASmL,EAAUkhC,IgEoGvB+vD,CAAkBp8F,GAElBnY,qBAAU,WACJy3F,GACF+b,GAAwB,SAACgB,GACvB,OAAIA,GAAyBb,EAAkB7wG,QACtC0xG,EA9De,GAgEjBA,OAGV,CAAC/c,IAEJ,IAqEIgd,GArEEC,GAAoBrlC,EAAStO,SAAS3xC,SAAS,WA4ErD,GALEqlF,GADEC,GACY/vF,EAAasvF,EAA0BF,EAEvCpvF,EAAawvF,GAAsBH,EAG/CtkF,EAAa,CACf,IAAMilF,GAAiB/b,GAASlpE,EAAYpG,eAC5CmrF,GAAcA,GAAYjtF,QAAO,SAAC5J,GAAD,OAC/Bg7E,GAASh7E,EAAK0/B,aAAavsB,OAAOzH,eAAe8F,SAASulF,OAI9DF,GAzEkB,SAACG,GACjB,OAAQnB,GACN,IAAK,MAEH,OAAO/8E,KACLk+E,GACA,SAACh3F,GAAD,OAA6BA,EAAK+N,IAAMH,aAAW5N,EAAMsuC,GAAyBvgC,IAAM,IACxF,QAEJ,IAAK,SACH,OAAO+K,KACLk+E,GACA,SAACh3F,GACC,OAAKA,EAAK4+B,UAAa5+B,EAAKsO,kBAGrBtO,EAAK8N,YACRI,aACE3T,EACA4T,EACAC,EACAC,EACArO,EAAKsO,mBACLQ,iBACF9O,EAAK4+B,SAAStB,cAAch2C,MAAM0Y,EAAKsO,mBAAmB1mB,WAVrD,IAYX,QAEJ,IAAK,cACH,OAAOkxB,KACLk+E,GACA,SAACh3F,GAA4B,IAAD,EACtB+5B,EAAclmB,OAAOojF,IACzB,GAAIj3F,EAAK8N,YACHiwB,EAAiB5D,aACnBJ,GAAelxC,uBACbF,KAAO/B,UAAUgC,KAAKm1C,EAAiB/5C,YACvCgc,EAAK+6B,aAAa1zC,gBAGjB,GAAoB,IAAhB2Y,EAAKC,OAAc,CAAC,IAAD,EAC5B,IAAI,UAAAD,EAAK+5B,mBAAL,eAAkBI,aAAc4D,EAAiB5D,WAAY,CAC/D,IAAM0oD,EAAgCl6F,KAAO/B,UAAUgC,KAAKoX,EAAK+5B,YAAY/1C,YAAY8E,IACvFi1C,EAAiB/5C,YAEnB+1C,GAAelxC,uBAAYg6F,EAA+B7iF,EAAK+6B,aAAa1zC,gBAEzE,UAAI2Y,EAAK+5B,mBAAT,aAAI,EAAkBI,cAC3BJ,GAAelxC,uBAAYF,KAAO/B,UAAUgC,KAAKoX,EAAK+5B,YAAY/1C,YAAagc,EAAK+6B,aAAa1zC,WAEnG,OAAOwsB,OAAOsmB,SAASJ,GAAeA,EAAc,IAEtD,QAEJ,QACE,OAAOi9D,GAkBCE,CAAUL,IAAaxuE,MAAM,EAAGstE,GAC9CI,EAAkB7wG,QAAU2xG,GAAYrkF,OAExC,IAAM2kF,GACJ,cAAChC,GAAD,UACG0B,GAAYntF,KAAI,SAAC1J,GAAD,OACfA,EAAK8N,YACH,cAAC,GAAD,CAA+B9N,KAAMA,EAAMmtF,eAAgBpmF,GAAxC,aAEnB,cAAC,GAAD,CAA4B/G,KAAMA,EAAMzF,QAASA,GAAlCyF,EAAKC,aAMtBm3F,GAAc,cAAC,GAAD,CAAYzpE,MAAOkpE,GAAat8F,QAASA,EAASkkC,eAAgBA,IAEtF,OACE,qCACE,cAACixC,GAAA,EAAD,UACE,eAAC,IAAD,CAAMhxB,eAAe,gBAAgB6F,cAAe,CAAC,SAAU,KAAM,KAAM,OAA3E,UACE,eAAC,IAAD,CAAM2nB,KAAK,IAAI3nB,cAAc,SAASkB,GAAI,CAAC,MAAO,GAAlD,UACE,cAAC,IAAD,CAASrc,GAAG,KAAKyb,MAAM,MAAM7hD,MAAM,YAAY4hD,GAAG,OAAlD,SACGzgE,EAAE,iBAEL,cAAC,IAAD,CAAS0gE,MAAM,KAAK7hD,MAAM,OAA1B,SACG7e,EAAE,qCAEL,cAAC,IAAD,CAAS0gE,MAAM,KAAK7hD,MAAM,OAA1B,SACG7e,EAAE,4BAGP,eAAC,IAAD,CAAM+nF,KAAK,IAAIxS,OAAO,cAAchb,eAAe,SAAS8G,WAAW,SAASrH,GAAI,CAAC,OAAQ,KAAM,KAAnG,UACE,cAAC,GAAD,IACA,cAAC,GAAD,YAIN,eAAC0F,GAAA,EAAD,WACE,eAACuxC,GAAD,WACE,cAAC,GAAD,CACEruF,WAAYA,EACZ+mF,cAAeA,EACfC,wBAAyBA,GACzB7mF,SAAUA,EACV8mF,YAAaA,IAEf,eAACqH,GAAD,WACE,eAACC,GAAD,WACE,cAAC,KAAD,CAAM53C,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAas2D,cAAc,YAA5D,SACGn1E,EAAE,aAEL,cAACoxG,GAAD,UACE,cAAClvB,GAAA,EAAD,CACEj+E,QAAS,CACP,CACEgkE,MAAOjoE,EAAE,OACTD,MAAO,OAET,CACEkoE,MAAOjoE,EAAE,OACTD,MAAO,OAET,CACEkoE,MAAOjoE,EAAE,UACTD,MAAO,UAET,CACEkoE,MAAOjoE,EAAE,gBACTD,MAAO,gBAGXoiF,eArJe,SAACQ,GAC9BgvB,EAAchvB,EAAO5iF,eAwJb,eAACoxG,GAAD,CAAcplF,MAAO,CAAE49D,WAAY,IAAnC,UACE,cAAC,KAAD,CAAMpwB,SAAS,OAAOC,MAAI,EAAC36C,MAAM,aAAas2D,cAAc,YAA5D,SACGn1E,EAAE,YAEL,cAAC,GAAD,CAAaymE,SAjKO,SAACC,GAC/Bqf,EAAerf,EAAME,OAAO7mE,QAgK8BymE,YAAY,0BAIjEmsC,IACC,cAAC,KAAD,CAAMp5C,SAAS,OAAO16C,MAAM,UAAUq2D,GAAG,OAAzC,SACGl1E,EAAE,iFAGNoW,IAAYkkC,GAAkB13B,GAC7B,cAAC,IAAD,CAAM23C,eAAe,SAASkG,GAAG,MAAjC,SACE,cAACoiB,GAAA,EAAD,MAGH9/D,IAAaxJ,KAASgwF,KAAOyJ,GAAaC,GAC3C,qBAAKz1D,IAAK83C,IACV,cAAC,IAAD,CACExjF,GAAG,OACHkoD,GAAG,OACH0X,IAAI,2CACJrlD,IAAI,uBACJ5qB,MAAO,IACP8zE,OAAQ,e,qCC/UV7mE,GAAqByE,KAArBzE,OAWOwkG,GAL6B,CAC1CzgG,SAP2BU,KAAbV,SAQd/D,W,4BCDIg5D,GAAanmE,KAAOU,IAAV,yLAKM,qBAAGy9C,MAAkBkJ,OAAOG,iBAK5CoqD,GAAe5xG,KAAOU,IAAV,iPAKI,gBAAGke,EAAH,EAAGA,MAAOu/B,EAAV,EAAUA,MAAV,OAAuBv/B,EAAQu/B,EAAMkJ,OAAOkX,QAAUpgB,EAAMkJ,OAAOC,cACtD,qBAAG1oC,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAGu/B,MAAkBkJ,OAAOG,iBAG5CqqD,GAAiB7xG,KAAOU,IAAV,6DAKdqkE,GAAQ/kE,KAAO4kE,MAAV,gkBAKW,qBAAGzmB,MAAkBkJ,OAAOG,iBACtB,qBAAG5oC,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAOu/B,EAAV,EAAUA,MAAV,OAAuBv/B,EAAQu/B,EAAMkJ,OAAOkX,QAAUpgB,EAAMkJ,OAAOgX,WAMjE,qBAAGlgB,MAAkBkJ,OAAOyqD,gBAe5B,qBAAG3zD,MAAkBkJ,OAAOyqD,gBAI1B,SAASC,GAAT,GAUX,IATF53F,EASC,EATDA,GACA3b,EAQC,EARDA,MACA0mE,EAOC,EAPDA,SAQQjmE,EAAYH,cAAZG,QAEAR,EAAMC,eAAND,EAER,EAAmCiyD,aAAOlyD,GAAlC8T,EAAR,EAAQA,QAASqb,EAAjB,EAAiBA,QAASzH,EAA1B,EAA0BA,KAEpBk/D,EAAc3nF,uBAClB,SAAC0nE,GACC,IACM6sC,EADQ7sC,EAAME,OAAO7mE,MACCH,QAAQ,OAAQ,IAC5C6mE,EAAS8sC,KAEX,CAAC9sC,IAGGtmD,EAAQ/I,QAAQrX,EAAMsuB,OAAS,IAAMa,IAAYrb,GAEvD,OACE,cAAC6zD,GAAD,CAAYhsD,GAAIA,EAAhB,SACE,cAACy3F,GAAD,CAAchzF,MAAOA,EAArB,SACE,cAACizF,GAAD,UACE,eAAC,KAAD,CAAYlxG,IAAI,KAAhB,UACE,eAACZ,GAAA,EAAD,WACE,cAAC,KAAD,UAAOtB,EAAE,eACR6T,GAAWrT,GACV,eAAC,KAAD,CAAM0kD,UAAQ,EAACuU,OAAK,EAACtU,KAAMjwC,YAAc,OAACuS,QAAD,IAACA,IAAQ5T,EAAS,UAAWrT,GAAtE,cACIR,EAAE,mBADN,UAKJ,cAACsmE,GAAD,CACEwC,UAAU,0BACV3zD,KAAK,OACL2xD,aAAa,MACbC,YAAY,MACZysC,eAAe,MACfrsC,WAAW,QACXX,YAAaxmE,EAAE,8BACfmgB,MAAOA,EACP6mD,QAAQ,wBACRP,SAAUkgB,EACV5mF,MAAOA,a,8ECnHRyrB,GAAUjqB,KAAOU,IAAV,wEAKPwxG,GAAelyG,KAAOU,IAAV,yDAGrB,qBAAGyxG,UAEC9xB,aADK,iIAOL,QAGK+xB,GAAYpyG,aAAOuiF,KAAPviF,CAAH,8CACX,gBAAGm+C,EAAH,EAAGA,MAAOk0D,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACdl0D,EAAMkJ,OAAOkX,QACA,IAAb8zC,EACAl0D,EAAMkJ,OAAOirD,QACA,IAAbD,EACAl0D,EAAMkJ,OAAO3L,KACbyC,EAAMkJ,OAAO3uB,WAGR65E,GAAuBvyG,KAAOwyG,OAAV,qcAGX,qBAAGr0D,MAAkBkJ,OAAOC,cAQvC,qBAAGnJ,MAAkBkJ,OAAO3L,QAOf,qBAAGyC,MAAkBkJ,OAAOO,YAG5B,qBAAGzJ,MAAkBkJ,OAAOO,YAKvC6qD,GAAgBzyG,aAAOuiF,MAAMtc,MAAM,CAAE+c,UAAU,GAA/BhjF,CAAH,gDAIpB0yG,GAAyB1yG,KAAOU,IAAV,gUACN,gBAAGy9C,EAAH,EAAGA,MAAH,gBAAkBA,EAAMkJ,OAAOkX,QAA/B,SAQX,qBAAGpgB,MAAkBkJ,OAAOkX,WASjCo0C,GAAsC3yG,KAAOU,IAAV,mNACnB,gBAAGy9C,EAAH,EAAGA,MAAH,gBAAkBA,EAAMkJ,OAAOkX,QAA/B,SAUf,SAASq0C,GAAT,GAA0D,IAA7Bh0F,EAA4B,EAA5BA,MAClC,OACE,eAAC8zF,GAAD,WACE,cAACC,GAAD,UACE,cAAC,IAAD,CAAWzyG,MAAM,WAEnB,4BAAI0e,OAKH,I,GAAMi0F,GAAwB7yG,aAAOoS,KAAPpS,CAAH,yHACZ,gBAAGm+C,EAAH,EAAGA,MAAH,gBAAkBA,EAAMkJ,OAAOirD,QAA/B,SCjGP,SAASQ,GAAT,GAA2E,IAA3Cp2D,EAA0C,EAA1CA,YAC7C,OACE,cAAC01D,GAAD,CAAWp6C,SAAS,OAAOq6C,SAAUh1D,aAAgBX,GAArD,SACGA,EAAeA,EAAYrL,SAASn6B,KAAY,SAAjC,UAA+CwlC,EAAYr6C,QAAQ,GAAnE,KAA4E,MCMlG,IAAM0wG,GAA2B/yG,aAAOoS,KAAPpS,CAAH,iJAGX,qBAAGm+C,MAAkB27C,MAAN,WACZ,qBAAG37C,MAAkBkJ,OAAOK,cAC5B,qBAAGvJ,MAAkBkJ,OAAOC,cAGnC,SAAS0rD,GAAT,GAYX,IAAD,QAXD9mG,EAWC,EAXDA,MACA+mG,EAUC,EAVDA,UACAhhE,EASC,EATDA,gBACAihE,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAQQ10G,EAAMC,eAAND,EACR,EAAwCrC,oBAAkB,GAA1D,mBAAOg3G,EAAP,KAAqBC,EAArB,KACM/hD,EAA0BnzC,mBAC9B,kBAAM+zB,aAA+BhmC,EAAO+lC,KAC5C,CAACA,EAAiB/lC,IAEpB,EAAiDiS,mBAAQ,kBAAMk+B,aAA2BnwC,KAAQ,CAACA,IAA3FywC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzB+1D,EAAWh1D,aAAgBV,GAEjC,OACE,qCACE,eAACo2D,GAAD,WACE,eAAChzG,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC,KAAD,CAAM63D,SAAS,OAAf,SAAuBv5D,EAAE,WACzB,eAAC,KAAD,CACEu5D,SAAS,OACTxtC,MAAO,CACLwuC,eAAgB,SAChB8G,WAAY,SACZwH,QAAS,OACTnP,UAAW,QACXm7C,YAAa,QAPjB,UAUGh2D,aAAqBpxC,EAAOknG,GAC7B,cAACb,GAAD,CAAsB70F,QAAS,kBAAM21F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAelzG,MAAM,iBAK3B,eAACH,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAMi4D,SAAS,OAAf,SACG9rD,EAAM4uD,YAAcy4C,KAAUC,YAAc/0G,EAAE,oBAAsBA,EAAE,kBAEzE,cAACg9C,GAAA,EAAD,CACEC,KAAMj9C,EACJ,wGAEFk6D,GAAG,WAGP,eAAC54D,GAAA,EAAD,WACE,cAAC,KAAD,CAAMi4D,SAAS,OAAf,SACG9rD,EAAM4uD,YAAcy4C,KAAUC,YAA9B,oBACGliD,EAAwB3xD,KAAMyrC,eADjC,aACG,EAAuCsS,cAAc,UADxD,QAC8D,IAD9D,oBAEG4T,EAAwB3xD,KAAMurC,cAFjC,aAEG,EAAsCwS,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAMsa,SAAS,OAAOowB,WAAW,MAAjC,SACGl8E,EAAM4uD,YAAcy4C,KAAUC,YAC3BtnG,EAAMyxC,aAAahoC,SAAS8X,OAC5BvhB,EAAM4wC,YAAYnnC,SAAS8X,eAIrC,eAAC1tB,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAMi4D,SAAS,OAAf,SAAuBv5D,EAAE,kBACzB,cAACg9C,GAAA,EAAD,CACEC,KAAMj9C,EAAE,6EACRk6D,GAAG,WAGP,cAACm6C,GAAD,CAAsBp2D,YAAaC,OAErC,eAAC58C,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAMi4D,SAAS,OAAf,SAAuBv5D,EAAE,4BACzB,cAACg9C,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMwjB,GAAG,OAAT,SAAiBzgE,EAAE,wCAAyC,CAAEiD,OAAQ,YACtE,eAAC,KAAD,gBAASjD,EAAE,+BAAgC,CAAEiD,OAAQ,aACrD,eAAC,KAAD,gBAASjD,EAAE,2BAA4B,CAAEiD,OAAQ,aACjD,eAAC,KAAD,gBAASjD,EAAE,yCAA0C,CAAEiD,OAAQ,gBAGnEi3D,GAAG,WAGP,cAAC,KAAD,CAAMX,SAAS,OAAf,SACG1b,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAeoB,cAAc,GAAnC,YAAyCxxC,EAAM4wC,YAAYnnC,SAAS8X,QAAW,YAKnG,eAAC,KAAD,WACE,cAAC,IAAD,CACEu1B,QAASqvD,EAAW,EAAI,SAAW,UACnC30F,QAASu1F,EACTjiC,SAAUmiC,EACV16C,GAAG,OACHt+C,GAAG,uBACHja,MAAM,OANR,SAQkBzB,EAAf4zG,EAAW,EAAM,cAAmB,kBAGtCa,EAAmB,cAACN,GAAD,CAAmBh0F,MAAOs0F,IAAuB,W,uBC9H9D,SAASO,GAAT,GAYX,IAAD,IAXDvnG,EAWC,EAXDA,MACA+lC,EAUC,EAVDA,gBACA5G,EASC,EATDA,UACAqoE,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQQl1G,EAAMC,eAAND,EACF6yD,EAA0BnzC,mBAC9B,kBAAM+zB,aAA+BhmC,EAAO+lC,KAC5C,CAAC/lC,EAAO+lC,IAEF0K,EAA0Bx+B,mBAAQ,kBAAMk+B,aAA2BnwC,KAAQ,CAACA,IAA5EywC,sBACFi3D,EAAsBv2D,aAAgBV,GAEtCj7C,EACJwK,EAAM4uD,YAAcy4C,KAAUC,YAA9B,UACIliD,EAAwB3xD,KAAMyrC,eADlC,aACI,EAAuCsS,cAAc,GADzD,UAEI4T,EAAwB3xD,KAAMurC,cAFlC,aAEI,EAAsCwS,cAAc,GACpDjwB,EACJvhB,EAAM4uD,YAAcy4C,KAAUC,YAActnG,EAAMyxC,aAAahoC,SAAS8X,OAASvhB,EAAM4wC,YAAYnnC,SAAS8X,OAa9G,GAVEvhB,EAAM4uD,YAAcy4C,KAAUC,YAC1B/0G,EAAE,mGAAoG,CACpGiD,SACA+rB,WAEFhvB,EAAE,8FAA+F,CAC/FiD,SACA+rB,YAGqDjqB,MAAd,UAAuB9B,EAAvB,YAAiC+rB,IAAhF,mBAAOomF,EAAP,KAAsBC,EAAtB,KAEMC,EAAqB1oE,EAAYwY,aAAaxY,GAAa,GAMjE,EAJ0B5sC,EAAE,qCAAsC,CAChE4sC,UAAW0oE,IAGmDvwG,MAAMuwG,GAAtE,mBAAOC,EAAP,KAA4BC,EAA5B,KAEA,OACE,eAAC,KAAD,CAAYtzG,IAAI,KAAhB,UACE,eAACZ,GAAA,EAAD,CAAYI,MAAM,WAAlB,UACE,eAACJ,GAAA,EAAD,CAAUY,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgV,SAAUzJ,EAAM4wC,YAAYnnC,SAAU2U,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACtF,cAACgoF,GAAD,CACEz6C,SAAS,OACT16C,MAAOo2F,GAAqBxnG,EAAM4uD,YAAcy4C,KAAUW,aAAe,UAAY,OAFvF,SAIGhoG,EAAM4wC,YAAYY,cAAc,QAGrC,cAAC39C,GAAA,EAAD,CAAUY,IAAI,MAAd,SACE,cAAC,KAAD,CAAMq3D,SAAS,OAAOW,GAAG,OAAzB,SACGzsD,EAAM4wC,YAAYnnC,SAAS8X,cAIlC,cAAC1tB,GAAA,EAAD,UACE,cAAC,IAAD,CAAeG,MAAM,OAAOy4D,GAAG,UAEjC,eAAC54D,GAAA,EAAD,CAAYI,MAAM,WAAlB,UACE,eAACJ,GAAA,EAAD,CAAUY,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgV,SAAUzJ,EAAMyxC,aAAahoC,SAAU2U,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACvF,cAACgoF,GAAD,CACEz6C,SAAS,OACT16C,MACEs2F,EAAsB,EAClB,UACAF,GAAqBxnG,EAAM4uD,YAAcy4C,KAAUC,YACnD,UACA,OAPR,SAUGtnG,EAAMyxC,aAAaD,cAAc,QAGtC,cAAC39C,GAAA,EAAD,CAAUY,IAAI,MAAd,SACE,cAAC,KAAD,CAAMq3D,SAAS,OAAOW,GAAG,OAAzB,SACGzsD,EAAMyxC,aAAahoC,SAAS8X,cAIlCimF,EACC,cAACb,GAAD,CAAuBzyG,QAAQ,aAAaO,IAAI,MAAhD,SACE,eAACZ,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,IAAD,CAAWggE,GAAG,QACd,eAAC,KAAD,CAAM9H,MAAI,EAAV,cAAax5D,EAAE,uBAEjB,cAAC,IAAD,CAAQif,QAASi2F,EAAjB,SAAmCl1G,EAAE,iBAGvC,KACJ,cAAC,KAAD,CAAY2B,QAAQ,aAAaO,IAAI,KAAK6pB,MAAO,CAAEnqB,QAAS,gBAA5D,SACE,eAAC,KAAD,CAAM63D,OAAK,EAAC56C,MAAM,aAAa66C,UAAU,OAAO3tC,MAAO,CAAEtqB,MAAO,QAAhE,UACG2zG,EACD,8BACGnyG,EADH,IACY+rB,KAEXqmF,OAGU,OAAdzoE,EACC,cAAC,KAAD,CAAYjrC,QAAQ,aAAaO,IAAI,KAAK6pB,MAAO,CAAEnqB,QAAS,gBAA5D,SACE,eAAC,KAAD,CAAMid,MAAM,aAAZ,UACG02F,EACD,mBAAG16E,MAAO+R,EAAV,SAAsB0oE,IACrBE,OAGH,QC9FV,IA4EeE,GA5EgE,SAAC,GAYzE,IAAD,oBAXJjoG,EAWI,EAXJA,MACAkoG,EAUI,EAVJA,cACAT,EASI,EATJA,gBACA1hE,EAQI,EARJA,gBACAghE,EAOI,EAPJA,UACA56C,EAMI,EANJA,UACAc,EAKI,EALJA,gBACA9tB,EAII,EAJJA,UACA6nE,EAGI,EAHJA,iBACA95C,EAEI,EAFJA,cACA3V,EACI,EADJA,OAEMiwD,EAAoBv1F,mBACxB,kBAAMtI,QAAQ3J,GAASkoG,IApCsBx5C,EAoC2Bw5C,GApC1Cz5C,EAoCmCzuD,GAlC1D4uD,YAAcF,EAAOE,YAC3BtuC,aAAemuC,EAAO7d,YAAYnnC,SAAUilD,EAAO9d,YAAYnnC,YAC/DglD,EAAO7d,YAAYie,QAAQH,EAAO9d,eAClCtwB,aAAemuC,EAAOhd,aAAahoC,SAAUilD,EAAOjd,aAAahoC,YACjEglD,EAAOhd,aAAaod,QAAQH,EAAOjd,gBANxC,IAAkCgd,EAAeC,IAqC7C,CAACw5C,EAAeloG,IAGVzN,EAAMC,eAAND,EAEFq5E,EAAcr6E,uBAAY,WAC9B,OAAOyO,EACL,cAACunG,GAAD,CACEvnG,MAAOA,EACP+lC,gBAAiBA,EACjB5G,UAAWA,EACXqoE,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAAC1hE,EAAiB0hE,EAAiBtoE,EAAWqoE,EAAmBxnG,IAE9D8rE,EAAcv6E,uBAAY,WAC9B,OAAOyO,EACL,cAAC8mG,GAAD,CACEC,UAAWA,EACX/mG,MAAOA,EACPinG,gBAAiBO,EACjBR,iBAAkBA,EAClBjhE,gBAAiBA,IAEjB,OACH,CAACA,EAAiBghE,EAAWS,EAAmBR,EAAkBhnG,IAG/D6rD,EAAct5D,EAAE,uDAAwD,CAC5Ew5E,QAAO,iBAAE/rE,QAAF,IAAEA,GAAF,UAAEA,EAAO4wC,mBAAT,aAAE,EAAoBY,cAAc,UAApC,QAA0C,GACjDw6B,QAAO,iBAAEhsE,QAAF,IAAEA,GAAF,UAAEA,EAAO4wC,mBAAT,iBAAE,EAAoBnnC,gBAAtB,aAAE,EAA8B8X,cAAhC,QAA0C,GACjD0qD,QAAO,iBAAEjsE,QAAF,IAAEA,GAAF,UAAEA,EAAOyxC,oBAAT,aAAE,EAAqBD,cAAc,UAArC,QAA2C,GAClD06B,QAAO,iBAAElsE,QAAF,IAAEA,GAAF,UAAEA,EAAOyxC,oBAAT,iBAAE,EAAqBhoC,gBAAvB,aAAE,EAA+B8X,cAAjC,QAA2C,KAG9C4mF,EAAsB52G,uBAC1B,kBACEy1G,EACE,cAAC,KAAD,CAAyB76C,UAAWA,EAAWrC,QAASk9C,IAExD,cAAC,KAAD,CAA0Bp6C,WAAYgf,EAAajf,cAAemf,MAEtE,CAAC3f,EAAW2f,EAAaF,EAAao7B,IAGxC,OACE,cAACh6C,GAAA,EAAD,CACE5/B,MAAO76B,EAAE,gBACT45D,UAAWA,EACXc,gBAAiBA,EACjBC,cAAeA,EACf5qC,KAAMi1B,EACN4V,QAASg7C,EACTt8C,YAAaA,EACbO,cAAa,OAAEpsD,QAAF,IAAEA,OAAF,EAAEA,EAAOyxC,aAAahoC,Y,UCvFzC,SAAS2+F,GAAa79E,GACpB,OAAa,OAANA,QAAoBx6B,IAANw6B,EAWR89E,OAJf,SAA0B/1G,GACxB,OAxBF,SACEA,EACAg2G,GAEA,MAAwBp4G,mBAA+Bo4G,GAAYA,EAASh2G,GAASA,OAAQvC,GAA7F,mBAAOw4G,EAAP,KAAaC,EAAb,KAQA,OAPAh4G,qBAAU,WACRg4G,GAAQ,SAACphD,GAEP,OAD2BkhD,GAAWA,EAASh2G,GACzBA,EACf80D,OAER,CAACkhD,EAAUh2G,IACPi2G,EAYAE,CAAQn2G,EAAO81G,K,SC1BTzvF,mBAAK,YAAiD,IAA5B3Y,EAA2B,EAA3BA,MACvC,OACE,cAAC,IAAD,CAAMqmE,SAAS,OAAOryE,MAAM,OAAO84D,eAAe,WAAW8G,WAAW,SAAxE,SACG5zD,EAAMqwC,MAAM4T,KAAKnsC,KAAI,SAACxB,EAAO+D,EAAG4pC,GAC/B,IAAMykD,EAAsBruF,IAAM4pC,EAAKrjC,OAAS,EAC1CnX,EAAWsR,aAAezE,GAChC,OAEE,cADA,CACC,WAAD,WACE,cAAC,IAAD,CAAMs9C,WAAW,MAAjB,SACE,cAAC,KAAD,CAAM9H,SAAS,OAAOW,GAAG,WAAWoH,GAAG,WAAvC,SACGpqD,EAAS8X,YAGZmnF,GAAc,cAAC,IAAD,CAAkB10G,MAAM,WAN3BqmB,WCAzB,SAASsuF,GAAT,GAA8F,IAAD,QAArE3oG,EAAqE,EAArEA,MAAO+lC,EAA8D,EAA9DA,gBACrBxzC,EAAMC,eAAND,EACR,EAAiD49C,aAA2BnwC,GAApEywC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBuU,EAAY3kD,EAAM4uD,YAAcy4C,KAAUC,YAC1CliD,EAA0Bpf,aAA+BhmC,EAAO+lC,GAEtE,OACE,eAAC,KAAD,CAAYznB,MAAO,CAAEnqB,QAAS,UAA9B,UACE,eAACN,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAMi4D,SAAS,OAAO16C,MAAM,aAA5B,SACe7e,EAAZoyD,EAAc,mBAAwB,kBAEzC,cAACpV,GAAA,EAAD,CACEC,KAAMj9C,EACJ,wGAEFk6D,GAAG,WAGP,cAAC54D,GAAA,EAAD,UACE,cAAC,KAAD,CAAMi4D,SAAS,OAAf,SACGnH,EAAS,8BACHS,EAAwB3xD,KAAMyrC,eAD3B,aACH,EAAuCsS,cAAc,GADlD,YACwDxxC,EAAMyxC,aAAahoC,SAAS8X,eADpF,QAEN,IAFM,8BAGH6jC,EAAwB3xD,KAAMurC,cAH3B,aAGH,EAAsCwS,cAAc,GAHjD,YAGuDxxC,EAAM4wC,YAAYnnC,SAAS8X,eAHlF,QAG8F,WAI9G,eAAC1tB,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAMi4D,SAAS,OAAO16C,MAAM,aAA5B,SACG7e,EAAE,kBAEL,cAACg9C,GAAA,EAAD,CACEC,KAAMj9C,EAAE,kFACRk6D,GAAG,WAGP,cAACm6C,GAAD,CAAsBp2D,YAAaC,OAGrC,eAAC58C,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,WACE,cAAC,KAAD,CAAMi4D,SAAS,OAAO16C,MAAM,aAA5B,SACG7e,EAAE,4BAEL,cAACg9C,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMwjB,GAAG,OAAT,SAAiBzgE,EAAE,wCAAyC,CAAEiD,OAAQ,YACtE,eAAC,KAAD,gBAASjD,EAAE,+BAAgC,CAAEiD,OAAQ,aACrD,eAAC,KAAD,gBAASjD,EAAE,2BAA4B,CAAEiD,OAAQ,aACjD,eAAC,KAAD,gBAASjD,EAAE,yCAA0C,CAAEiD,OAAQ,gBAGnEi3D,GAAG,WAGP,cAAC,KAAD,CAAMX,SAAS,OAAf,SACG1b,EAAa,UAAMA,EAAcoB,cAAc,GAAlC,YAAwCxxC,EAAM4wC,YAAYnnC,SAAS8X,QAAW,YAW/F,SAASqnF,GAAT,GAAmE,IAApC5oG,EAAmC,EAAnCA,MAC5BzN,EAAMC,eAAND,EACR,EAA0BwiB,eAAnBgxB,EAAP,oBAEM8iE,EAAYl/F,QAAQ3J,GAASA,EAAMqwC,MAAM4T,KAAKrjC,OAAS,GAE7D,OACE,cAAC,KAAD,CAAYnsB,IAAI,MAAhB,SACGuL,GACC,qCACE,cAAC2oG,GAAD,CAAc3oG,MAAOA,EAAO+lC,gBAAiBA,IAC5C8iE,GACC,mCACE,eAACh1G,GAAA,EAAD,CAAYyqB,MAAO,CAAEnqB,QAAS,UAA9B,UACE,uBAAMmqB,MAAO,CAAE88C,QAAS,OAAQxH,WAAY,UAA5C,UACE,cAAC,KAAD,CAAM9H,SAAS,OAAO16C,MAAM,aAA5B,SACG7e,EAAE,WAEL,cAACg9C,GAAA,EAAD,CACEC,KAAMj9C,EAAE,2EACRk6D,GAAG,WAGP,cAAC,GAAD,CAAWzsD,MAAOA,c,oBCtG5B8oG,GAAwBh1G,KAAOU,IAAV,0PACX,qBAAGu/D,KAAmB,OAAS,KAMzB,qBAAG9hB,MAAkBkJ,OAAOyoB,oBAEnC,qBAAG7P,KAAmB,iBAAmB,uBAIzC,SAASg1C,GAAT,GAAoF,IAAD,EAA5C/oG,EAA4C,EAA5CA,MAAUy0D,EAAkC,mBAC1Fu0C,EAAYX,GAAcroG,GAEhC,OACE,cAAC8oG,GAAD,CAAuB/0C,KAAMpqD,QAAQ3J,GAArC,SACE,cAAC4oG,GAAD,6BAAyBn0C,GAAzB,IAA+Bz0D,MAAK,iBAAEA,QAAF,IAAEA,IAASgpG,SAAX,aAAwBj5G,OCZnD,SAASk5G,GAAT,GAAgF,IAAD,UAAzDt3D,EAAyD,EAAzDA,MAAOu1D,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClD+B,EAAiBhC,EAAY,OAAGv1D,QAAH,IAAGA,OAAH,EAAGA,EAAOH,cAAc,GAAxB,OAA6BG,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOJ,gBAApC,aAA6B,EAAiBC,cAAc,GAEzFuiB,EAAOpqD,SAAa,OAALgoC,QAAK,IAALA,OAAA,EAAAA,EAAOw3D,gBAAP,OAAuBx3D,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOy3D,gBAC7C5uC,EAAQ0sC,EAAY,iBACnBv1D,QADmB,IACnBA,GADmB,UACnBA,EAAOy3D,qBADY,aACnB,EAAsB7nF,OADH,uBACiBowB,QADjB,IACiBA,GADjB,UACiBA,EAAOw3D,oBADxB,aACiB,EAAqB5nF,QADtC,iBAEnBowB,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOw3D,oBAFY,aAEnB,EAAqB5nF,OAFF,uBAEgBowB,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOy3D,qBAFvB,aAEgB,EAAsB7nF,QAEhE,OACE,cAAC,KAAD,CAAMjD,MAAO,CAAEwuC,eAAgB,SAAU8G,WAAY,SAAUwH,QAAS,QAAxE,SACGrH,EACC,4CACGm1C,QADH,IACGA,IAAkB,IADrB,IAC2B1uC,EACzB,cAAC6rC,GAAD,CAAsB70F,QAAS,kBAAM21F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAelzG,MAAM,cAIzB,M,0BCAOq1G,GAlBkC,SAAC,GAAqC,IAAnC3jG,EAAkC,EAAlCA,OAAQymD,EAA0B,EAA1BA,UAAWm9C,EAAe,EAAfA,SAC7D/2G,EAAMC,eAAND,EACR,OACE,cAAC,KAAD,CACE66B,MAAO76B,EAAE,gBACT45D,UAAW,WACLA,GACFA,IAEFm9C,KAEFhrF,MAAO,CAAEghD,SAAU,SARrB,SAUE,cAAC6E,GAAA,EAAD,CAAaz+D,OAAQA,EAAQ0+D,qBAAsBjY,O,wBCnBnDo9C,GAAWz1G,aAAOQ,KAAPR,CAAH,8CAIR01G,GAAS11G,KAAOU,IAAV,2PAGU,gBAAGy9C,EAAH,EAAGA,MAAO6gB,EAAV,EAAUA,UAAV,SAAqBgS,SAC5B7yB,EAAMkJ,OAAO42C,mBAAqBj/B,EAAY7gB,EAAMkJ,OAAO3uB,QAAUylB,EAAMkJ,OAAOgX,WAU3Fs3C,GAAY31G,KAAOU,IAAV,sGAMTk1G,GAAY51G,KAAOU,IAAV,0KAKT,gBAAGy9C,EAAH,EAAGA,MAAO03D,EAAV,EAAUA,cAAV,SAAyB7kC,SACZ7yB,EAAMkJ,OAAO42C,mBAAqB4X,EAAgB13D,EAAMkJ,OAAO3uB,QAAUylB,EAAMkJ,OAAOgX,WAEnG,gBAAGlgB,EAAH,EAAGA,MAAO03D,EAAV,EAAUA,cAAV,SAAyB7kC,SAEnB7yB,EAAMkJ,OAAO42C,mBACb4X,EACA13D,EAAMkJ,OAAOgX,QACblgB,EAAMkJ,OAAO42C,sBAqBV,SAAS6X,GAAT,GAAsF,IAA3DC,EAA0D,EAA1DA,MAA0D,IAAnD/kC,gBAAmD,SAA9BrQ,EAA8B,mBAClG,OACE,cAAC,KAAD,2BAAYvgE,QAAQ,UAAaugE,GAAjC,aACE,eAAC80C,GAAD,WACGM,EAAM/xF,KAAI,SAACs+E,EAAM/7E,GAChB,OAEE,cADA,CACCovF,GAAD,WACE,cAACD,GAAD,CAAQ12C,UAAWsjC,EAAMtxB,SAAUA,IAAc+kC,EAAMxvF,EAAI,IAAY,IAANA,EAAjE,SACG+7E,EAAO,SAAM/7E,EAAI,IAEpB,cAACqvF,GAAD,CAAWC,cAAevT,EAAMtxB,SAAUA,MAJ5BzqD,MAQpB,cAACmvF,GAAD,CAAQ1kC,SAAUA,IAAa+kC,EAAMA,EAAMjpF,OAAS,GAApD,SAAyDipF,EAAMjpF,OAAS,U,IChEpEkpF,G,uCA6BZ,SAASC,GACP/pG,GAGa,IAFb+lC,EAEY,uDAFcl7B,IAC1Bm/F,EACY,uCACZ,EAAsCp3G,cAA9B+V,EAAR,EAAQA,QAAS5V,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAE1B,EAAsC0xD,aAAOwlD,GAA5BC,EAAjB,EAAQ7jG,QACF+4B,EAAuC,OAA3B6qE,EAAkCrhG,EAAUshG,EACxD7zF,EAAWwrD,eAEjB,OAAO3vD,mBAAQ,WACb,IAAKjS,IAAUm/B,IAAcrsC,IAAY6V,IAAY5V,IAAYqjB,EAAU,MAAO,GAElF,IAAMsT,EAA4BzgB,YAAkBlW,EAASD,EAAS6V,GACtE,IAAK+gB,EACH,MAAO,GAGT,IAAMwgF,EAAc,GAsBpB,OApBAA,EAAYp8E,KACVq8E,KAAOC,mBAAmBpqG,EAAO,CAC/BqqG,eAAe,EACftkE,gBAAiB,IAAI99B,KAAQC,KAAKC,OAAO49B,GAAkB96B,KAC3Dk0B,YACA/oB,SAAUA,EAASpgB,cAInBgK,EAAM4uD,YAAcy4C,KAAUC,aAChC4C,EAAYp8E,KACVq8E,KAAOC,mBAAmBpqG,EAAO,CAC/BqqG,eAAe,EACftkE,gBAAiB,IAAI99B,KAAQC,KAAKC,OAAO49B,GAAkB96B,KAC3Dk0B,YACA/oB,SAAUA,EAASpgB,cAKlBk0G,EAAYpyF,KAAI,SAACwyF,GAAD,MAAiB,CAAEA,aAAY5gF,iBACrD,CAAC/gB,EAASo9B,EAAiBhzC,EAASqjB,EAAUtjB,EAASqsC,EAAWn/B,K,SAvE3D8pG,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,SCLAS,G,8BAAAA,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMC,GAAiB,CAAEC,SAAUF,GAASC,gB,2CCI7BE,GAfS,WACtB,IAAQn4G,EAAMC,eAAND,EAER,OACE,qCACE,eAAC,KAAD,WAAOA,EAAE,gCAAT,OACA,eAAC,KAAD,qBAASA,EAAE,iCACX,eAAC,KAAD,CAAMygE,GAAG,OAAT,oBAAmBzgE,EAAE,0CACrB,cAAC,KAAD,UAAOA,EAAE,mEACT,eAAC,KAAD,qBAASA,EAAE,qDACX,eAAC,KAAD,qBAASA,EAAE,yCCJFo4G,GANO,WACpB,IAAQp4G,EAAMC,eAAND,EAER,OAAO,cAAC,KAAD,UAAOA,EAAE,yFC6BHq4G,GA5ByC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACjDt4G,EAAMC,eAAND,EACR,EAAsCrC,oBAAS,GAA/C,mBAAO46G,EAAP,KAAoBC,EAApB,KAEA,OACE,mCACE,eAAC,IAAD,CAAMj+C,eAAe,gBAArB,UACE,eAAC,IAAD,CAAM8G,WAAW,SAAjB,UACE,cAAC,IAAD,CACE55C,KAAK,YACLtS,KAAK,WACLk9D,QAASkmC,EACT9xC,SAAU,kBAAM+xC,GAAgBD,IAChC73C,MAAM,OAER,cAAC,KAAD,CAAMxG,GAAG,OAAOnuC,MAAO,CAAEumD,WAAY,QAArC,SACGtyE,EAAE,qBAIP,cAAC,IAAD,CAAQuyE,UAAWgmC,EAAat5F,QAASq5F,EAAzC,SACGt4G,EAAE,oBClBP6qF,GAAuBtpF,aAAOupF,KAAPvpF,CAAH,oDAIpBk3G,GAAmBl3G,aAAOm3G,KAAPn3G,CAAH,2FAgEPo3G,GAjC2C,SAAC,GAAiC,IAAD,EAA9BC,EAA8B,EAA9BA,aAAch/C,EAAgB,EAAhBA,UACjE55D,EAAMC,eAAND,EACA0/C,EAAUD,eAAVC,MArBRzhD,qBAAU,WACR,IAAM46G,EAAsB,SAAC7kC,GAG3B,OAFAA,EAAEyO,kBACFzO,EAAE8kC,kBACK,GAOT,OAJAhqC,SAASiqC,iBAAiB,yBAAyBv5G,SAAQ,SAACw5G,GAC1DA,EAAG7pC,iBAAiB,QAAS0pC,GAAqB,MAG7C,WACL/pC,SAASiqC,iBAAiB,yBAAyBv5G,SAAQ,SAACw5G,GAC1DA,EAAG5pC,oBAAoB,QAASypC,GAAqB,SAGxD,IAQH,IAWMI,GAXc,oBACjBC,GAAwBzmG,SAASoB,QAAU,CAC1Cmb,OAAQkqF,GAAwBzmG,SAASuc,OACzCmqF,UAAW,cAAC,GAAD,MAHK,eAKjBD,GAAwBxqG,OAAOmF,QAAU,CACxCmb,OAAQkqF,GAAwBxqG,OAAOsgB,OACvCmqF,UAAW,cAAC,GAAD,MAPK,GAWgBP,EAAa/kG,SAEjD,OACE,eAACg3E,GAAD,CAAsBtQ,SAAS,QAA/B,UACE,cAAC,KAAD,CAAa1xB,WAAYnJ,EAAMkJ,OAAO4kB,UAAUqzB,WAAhD,SACE,cAAC,IAAD,CAASn7E,EAAE,YAAX,SAAwB1lB,EAAE,8BAA+B,CAAEgvB,OAAQiqF,EAAajqF,aAElF,eAAC,KAAD,CAAWtJ,EAAE,OAAb,UACE,cAAC+yF,GAAD,CAAkBl0D,QAAQ,UAAUkc,GAAG,OAAvC,SACE,cAAC,IAAD,UAAMw4C,EAAaE,cAErB,cAAC,GAAD,CAAiBb,oBAAqB1+C,WC7BxCw/C,GAAQ73G,aAAOuiF,KAAPviF,CAAH,wFAGA,qBAAGm+C,MAAkBkJ,OAAOknC,aAGxB,SAASupB,GAAT,GAAiD,IAAD,sBAAhCtrC,EAAgC,EAAhCA,QACvBurC,EAAkB7lD,eAEhBzzD,EAAMC,eAAND,EAGR,EAAoD,CAClDmvB,YAAW,OAACmqF,QAAD,IAACA,OAAD,EAACA,EAAiBxsE,iBAC7B3d,YAAW,OAACmqF,QAAD,IAACA,OAAD,EAACA,EAAiBvsE,mBAFxBwsE,EAAP,KAA4BC,EAA5B,KAIMC,EAA2B/5F,mBAC/B,8CAAM,CAAC65F,EAAqBC,UAA5B,aAAM,EAA6C/zF,QAAO,SAACwT,GAAD,OAAmBA,aAAapzB,eAA1F,QAAoG,KACpG,CAAC0zG,EAAqBC,IAIlBviG,EAAgBkO,cAChBu0F,EACJD,GACAA,EAAgBh0F,QAAO,SAAC1B,GACtB,QAASA,EAAMlQ,WAAWoD,MAGtBb,EAAY/V,cAAZ+V,QAGR,EAAuB2L,eAAhB43F,EAAP,oBAGA,EAA0Bn3F,eAAnBgxB,EAAP,oBAGA,EAAoDud,eAA5CvkB,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYE,EAAtC,EAAsCA,UACtC,EAA4FglB,eAApFc,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBAAkBN,EAAnC,EAAmCA,aAAc5L,EAAjD,EAAiDA,WAAwBmzD,EAAzE,EAA6D/nD,WAE7D,EL/Da,SACbC,EACAC,EACArlB,GAEA,MAA6BrsC,cAArBG,EAAR,EAAQA,QAAS4V,EAAjB,EAAiBA,QACTi8B,EAAqBC,eAArBD,iBACFwnE,EAAer5F,cACfhd,EAAUsjD,aAAkB,OAAC1wC,QAAD,IAACA,SAAW5Y,EAAWs0D,GAEnDzT,EAAc3+B,mBAAQ,kBAAM2xC,aAAe3kB,EAAYolB,KAAgB,CAACA,EAAeplB,IACvFf,EAAiBoH,eAEvB,OAAOrzB,mBAAQ,WACb,IAAKm6F,IAAiBr5G,IAAYsxD,IAAkBC,EAAgB,OAAOkmD,GAE3E,IAAM6B,EAAoBz7D,GAAe76C,IAAYA,EAAQovC,SAASyL,GAEtE,OAAIyT,IAAkB36C,MAAS4W,aAAetN,KAAKjgB,GAAUuxD,GACpD,CACLmmD,SAAUF,GAAS+B,KACnBC,QACEF,GAAqBz7D,EAArB,sBACI,4BAAAngD,EAAA,+EAE4Bm0C,EAAiBwnE,EAAc,eAAWr8G,EAAW,CAC3EuC,MAAM,KAAD,OAAOs+C,EAAYpoC,IAAIpW,SAAS,OAH3C,OAEUo6G,EAFV,OAKItuE,EAAesuE,EAAW,CAAEpuE,QAAQ,QAAD,OAAUwS,EAAYY,cAAc,GAApC,kBALvC,gDAOI7+B,QAAQD,MAAM,oBAAd,MAPJ,8DAUA3iB,EACNq0D,WAAYioD,OAAoBt8G,EAAY,4BAG5CuwB,aAAetN,KAAKjgB,GAAUsxD,IAAkBC,IAAmB56C,KAC9D,CACL+gG,SAAUF,GAASkC,OACnBF,QACEF,GAAqBz7D,EAArB,sBACI,4BAAAngD,EAAA,+EAE4Bm0C,EAAiBwnE,EAAc,WAAY,CAAC,KAAD,OAC5Dx7D,EAAYpoC,IAAIpW,SAAS,OAHpC,OAEUo6G,EAFV,OAKItuE,EAAesuE,EAAW,CAAEpuE,QAAQ,UAAD,OAAYwS,EAAYY,cAAc,GAAtC,kBALvC,gDAOI7+B,QAAQD,MAAM,qBAAd,MAPJ,8DAUA3iB,EACNq0D,WAAYioD,OAAoBt8G,EAAY,6BAGzCy6G,KACN,CAAC4B,EAAcr5G,EAASsxD,EAAeC,EAAgB1T,EAAa76C,EAASmoC,EAAgB0G,IKU5F8nE,CAAgB1zD,EAAWvlD,KAAMurC,OAAQga,EAAWvlD,KAAMyrC,QAASD,GAHrEwrE,EADF,EACEA,SACSkC,EAFX,EAEEJ,QACYK,EAHd,EAGExoD,WAEIyoD,EAAoBpC,IAAaF,GAASC,eAC1CxqG,EAAQ6sG,OAAW98G,EAAYk1D,EAE/BojB,GAAgBwkC,GAAQ,oBAEvBp5G,KAAMurC,MAAQ4lB,GAFS,eAGvBnxD,KAAMyrC,OAAS0lB,GAHQ,wBAMvBnxD,KAAMurC,MAAQD,IAAqBtrC,KAAMurC,MAAQ4lB,EAAnC,OAAkD5kD,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAO4wC,aANhD,eAOvBn9C,KAAMyrC,OAASH,IAAqBtrC,KAAMyrC,OAAS0lB,EAApC,OAAmD5kD,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAOyxC,cAPlD,GAU9B,GAAgF8R,eAAxEE,GAAR,GAAQA,eAAgBD,GAAxB,GAAwBA,oBAAqBE,GAA7C,GAA6CA,YAAaC,GAA1D,GAA0DA,kBACpDjyB,IAAWy6E,EACXnjC,GAAwBjqC,IAAqBtrC,KAAMurC,MAAQvrC,KAAMyrC,OAASzrC,KAAMurC,MAEhF8tE,GAAkBv7G,uBACtB,SAACe,GACCoxD,GAAYjwD,KAAMurC,MAAO1sC,KAE3B,CAACoxD,KAEGqpD,GAAmBx7G,uBACvB,SAACe,GACCoxD,GAAYjwD,KAAMyrC,OAAQ5sC,KAE5B,CAACoxD,KAIH,GAAoFxzD,mBAKjF,CACD88G,oBAAgBj9G,EAChBm9D,eAAe,EACf85C,sBAAkBj3G,EAClBwnD,YAAQxnD,IATV,8BAASi9G,GAAT,GAASA,eAAgBhG,GAAzB,GAAyBA,iBAAkB95C,GAA3C,GAA2CA,cAAe3V,GAA1D,GAA0DA,OAAU01D,GAApE,MAYMziC,IAAgB,oBACnBzrC,EAAmBE,GADA,eAEnB+pC,GAAiB6jC,EAAQ,oBACtBxkC,GAActpC,UADQ,aACtB,EAAiC8tC,iBADX,QACwB,GADxB,oBAEtBxE,GAAcW,WAFQ,aAEtB,EAA+Bx3B,cAAc,UAFvB,QAE6B,IAJnC,GAOhBnB,GAAK,OAAGrwC,QAAH,IAAGA,OAAH,EAAGA,EAAOqwC,MACf68D,GAA8BvjG,QAClCqvC,EAAWvlD,KAAMurC,QAAUga,EAAWvlD,KAAMyrC,UAA5C,UAAuDmpC,GAActpC,UAArE,aAAuD,EAAiCimC,YAAY98D,KAAKC,OAAO,MAE5GglG,IAAW98D,GAGjB,GAAoCvK,aAA4B9lC,EAAO+lC,GAAvE,qBAAO5H,GAAP,MAAiBivE,GAAjB,MAGA,GAAkDl9G,oBAAkB,GAApE,qBAAOm9G,GAAP,MAA0BC,GAA1B,MAGA98G,qBAAU,WACJ2tC,KAAamG,KAAc3P,SAC7B24E,IAAqB,KAEtB,CAACnvE,GAAUkvE,KAEd,IAAME,GAA6CxoC,aAAe7f,EAAiBzxD,KAAMurC,QACnFwuE,GAAmB7jG,QAAQ4jG,KAAc,UAAIllC,GAAc50E,KAAMurC,cAAxB,aAAI,EAA4B6vB,QAAQ0+C,MAGvF,GNzEK,SACLvtG,GAG+F,IAF/F+lC,EAE8F,uDAFpEl7B,IAC1Bm/F,EAC8F,uCAC9F,EAAsCp3G,cAA9B+V,EAAR,EAAQA,QAAS5V,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QACpB6jB,EAAWF,eAEXg3F,EAAY1D,GAAqB/pG,EAAO+lC,EAAiBikE,GAEzD9rE,EAAiBoH,eAEN2kE,EAAqBzlD,aAAOwlD,GAArC5jG,QACF+4B,EAAuC,OAA3B6qE,EAAkCrhG,EAAUshG,EAE9D,OAAOh4F,mBAAQ,WACb,OAAKjS,GAAUlN,GAAY6V,GAAY5V,EAGlCosC,EAOE,CACL7uC,MAAOw5G,GAAkB4D,MACzB1vB,SAAS,WAAD,4BAAE,8CAAAvtF,EAAA,sEAC0C2+B,QAAQC,IACxDo+E,EAAU31F,KAAI,SAAC+B,GAAU,IAAD,EACtB,EAGIA,EAFFywF,WAAc39E,EADhB,EACgBA,WAAY4+C,EAD5B,EAC4BA,KAAMj5E,EADlC,EACkCA,MAChCo3B,EACE7P,EADF6P,SAEIlzB,GAAWlE,GAASk2D,aAAOl2D,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAAo3B,EAAS+b,aAAY9Y,GAArB,oBAAoC4+C,GAApC,QAA0C/0E,KAC9CqvC,MAAK,SAAC8nE,GACL,MAAO,CACL9zF,OACA8zF,kBAJC,OAOE,SAACC,GAAc,IAAD,EAGnB,OAFAj7F,QAAQD,MAAM,wDAAyDmH,IAEhE,EAAA6P,EAASmkF,YAAWlhF,GAApB,oBAAmC4+C,GAAnC,QAAyC/0E,KAC7CqvC,MAAK,SAACnrB,GAEL,OADA/H,QAAQD,MAAM,uDAAwDmH,EAAM+zF,EAAUlzF,GAC/E,CAAEb,OAAMnH,MAAO,IAAI/f,MAAM,mEAH7B,OAKE,SAACm7G,GAAe,IAAD,EACpBn7F,QAAQD,MAAM,mBAAoBmH,EAAMi0F,GACxC,IAAMC,EAAiBD,EAAUC,SAAV,UAAoBD,EAAUr8G,YAA9B,aAAoB,EAAgBq4D,UAAWgkD,EAAUhkD,QAC1EhpB,EAAY,8DAChBitE,QADgB,IAChBA,IAAU,gCADM,KAIlB,MAAO,CAAEl0F,OAAMnH,MAAO,IAAI/f,MAAMmuC,cA/BpC,UACFktE,EADE,OAsCFC,EAAuBD,EAAe7/F,MAC1C,SAACo9F,EAAIprB,EAAIr5C,GAAT,MACE,gBAAiBykE,IAAOprB,IAAOr5C,EAAKlmB,OAAS,GAAK,gBAAiBkmB,EAAKq5C,EAAK,OAxCzE,sBA4CA+tB,EAAaF,EAAeh2F,QAAO,SAAC6B,GAAD,MAA8B,UAAWA,MACnE+G,OAAS,GA7ClB,sBA6C2BstF,EAAWA,EAAWttF,OAAS,GAAGlO,MA7C7D,aA8CA,IAAI/f,MAAM,8EA9CV,gBAuDJs7G,EALFp0F,KACE6P,EAnDI,EAmDJA,SAnDI,IAoDJ4gF,WAAc39E,EApDV,EAoDUA,WAAY4+C,EApDtB,EAoDsBA,KAAMj5E,EApD5B,EAoD4BA,MAElCq7G,EACEM,EADFN,YAtDM,kBAyDDjkF,EAASiD,GAAT,MAAAjD,EAAQ,YAAgB6hD,GAAhB,sBACb3lC,SAAUh+B,YAAmB+lG,GAC7Bh3F,YACIrkB,IAAUk2D,aAAOl2D,GAAS,CAAEA,QAAO0E,KAAM2R,GAAY,CAAE3R,KAAM2R,OAEhEk9B,MAAK,SAACjf,GACL,IAAMunF,EAAcnuG,EAAM4wC,YAAYnnC,SAAS8X,OACzC6sF,EAAepuG,EAAMyxC,aAAahoC,SAAS8X,OAC3CqvB,EAAc5wC,EAAM4wC,YAAYY,cAAc,GAC9CC,EAAezxC,EAAMyxC,aAAaD,cAAc,GAEhDz5B,EAAI,eAAW64B,EAAX,YAA0Bu9D,EAA1B,gBAA6C18D,EAA7C,YAA6D28D,GACjEC,EACJlvE,IAAcx2B,EACVoP,EADJ,UAEOA,EAFP,eAGMiyF,GAA0BxiG,YAAUwiG,GAChCryD,aAAaqyD,GACbA,GAOZ,OAJA9rE,EAAetX,EAAU,CACvBwX,QAASiwE,IAGJznF,EAAStE,QAzBb,OA2BE,SAAC5P,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOsqC,MACH,IAAIrqD,MAAM,0BAGhBggB,QAAQD,MAAR,cAA6BA,EAAOia,EAAY4+C,EAAMj5E,GAChD,IAAIK,MAAJ,uBAA0B+f,EAAMo3C,eA3FpC,4CAAF,kDAAC,GA+FTp3C,MAAO,MAvGwB,OAA3Bs3F,EACK,CAAE15G,MAAOw5G,GAAkBhwD,QAASkkC,SAAU,KAAMtrE,MAAO,qBAE7D,CAAEpiB,MAAOw5G,GAAkB92E,QAASgrD,SAAU,KAAMtrE,MAAO,MAN3D,CAAEpiB,MAAOw5G,GAAkBhwD,QAASkkC,SAAU,KAAMtrE,MAAO,0BA4GnE,CAAC1S,EAAOlN,EAAS6V,EAAS5V,EAASosC,EAAW6qE,EAAwByD,EAAWvvE,EAAgBvnB,IMpDvC23F,CAAgBtuG,EAAO+lC,EAAiB5G,GAAnFovE,GAAlB,GAAQvwB,SAA+BwwB,GAAvC,GAAgC97F,MAExB+9B,GAA0BN,aAA2BnwC,GAArDywC,sBAER,GAAwB77B,eAAjBs7C,GAAP,qBAEMu+C,GAAal9G,uBAAY,WACzBk/C,KChKO,SAAsCA,EAAgCl+C,GACnF,IAAKk+C,EAAsBtL,SAAS95B,KAAuC,CACzE,IAAMqjG,EAAc,UACpB,OAEEn4D,OAAO0wB,OACL10E,EACE,gHACA,CACEiD,OAAQ6V,IAAqClV,QAAQ,GACrDw4G,KAAMD,OAGNA,EAGV,QAAKj+D,EAAsBtL,SAAS/5B,MAE3BmrC,OAAOyjC,QACZznF,EACE,qHACA,CACEiD,OAAQ4V,IAA0BjV,QAAQ,MD0IlBy4G,CAA6Bn+D,GAAuBl+C,IAG7Eg8G,KAGLtB,GAAa,CAAE//C,eAAe,EAAM8/C,kBAAgBhG,sBAAkBj3G,EAAWwnD,YAAQxnD,IACzFw+G,KACG1oE,MAAK,SAACvjB,GACL2qF,GAAa,CAAE//C,eAAe,EAAO8/C,kBAAgBhG,sBAAkBj3G,EAAWwnD,OAAQj1B,OAF9F,OAIS,SAAC5P,GACNu6F,GAAa,CACX//C,eAAe,EACf8/C,kBACAhG,iBAAkBt0F,EAAMo3C,QACxBvS,YAAQxnD,UAGb,CAAC0gD,GAAuB89D,GAAcvB,GAAgBz6G,IAGzD,GAAwCrC,oBAAkB,GAA1D,qBAAOg3G,GAAP,MAAqBC,GAArB,MAGMO,GAAsBv2D,aAAgBV,IAItCo+D,IACH1C,IACAhuE,KAAamG,KAAcc,cAC1BjH,KAAamG,KAAc3P,SAC1B04E,IAAqBlvE,KAAamG,KAAcY,aACjDwiE,GAAsB,IAAMwE,GAE1B4C,GAAuBv9G,uBAAY,WACvC07G,GAAa,CAAED,kBAAgB9/C,iBAAe85C,oBAAkBzvD,YAE5DA,IACFmM,GAAYjwD,KAAMurC,MAAO,MAE1B,CAACkuB,GAAexJ,GAAasjD,GAAkBgG,GAAgBz1D,KAE5Dw3D,GAAsBx9G,uBAAY,WACtC07G,GAAa,CAAED,eAAgBhtG,EAAOgnG,oBAAkBzvD,UAAQ2V,qBAC/D,CAACA,GAAe85C,GAAkBhnG,EAAOu3C,KAG5C,GAAsDrnD,mBAAS,MAA/D,qBAAO8+G,GAAP,MAA4BC,GAA5B,MACA,GAAoC97C,aAAS,cAAC,GAAD,CAAkBg4C,aAAc6D,MAAtEE,GAAP,qBAEMC,GAAwB,SAAChE,GAC7B,IAAMiE,EAAiBv9G,OAAOw9G,QAAQ5J,IAAmBt3F,MAAK,SAACmhG,GAC7D,IAAMC,EAAmBD,EAAmB,GAC5C,OAAOnE,EAAa/kG,UAAYmpG,EAAiBnpG,WAEnD,OAAOuD,QAAQylG,IAGjB5+G,qBAAU,WACJw+G,IACFE,OAGD,CAACF,KAEJ,IAAMQ,GAAoBj+G,uBACxB,SAAC8yD,GACCipD,IAAqB,GACrB9pD,GAAoB/vD,KAAMurC,MAAOqlB,GACjC,IAAMorD,EAAkBN,GAAsB9qD,GAE5C4qD,GADEQ,EACqBprD,EAEA,QAG3B,CAACb,KAGGksD,GAAiBn+G,uBAAY,WAC7Bg8G,IACF7pD,GAAYjwD,KAAMurC,MAAOuuE,GAAe1gC,aAEzC,CAAC0gC,GAAgB7pD,KAEdisD,GAAqBp+G,uBACzB,SAAC+yD,GACCd,GAAoB/vD,KAAMyrC,OAAQolB,GAClC,IAAMmrD,EAAkBN,GAAsB7qD,GAE5C2qD,GADEQ,EACqBnrD,EAEA,QAI3B,CAACd,KAGGosD,GAAoBl/C,aAA2B,OAAC1X,QAAD,IAACA,OAAD,EAACA,EAAYha,MAAb,OAAoBga,QAApB,IAAoBA,OAApB,EAAoBA,EAAY9Z,QAErF,GAA2Ci0B,aACzC,cAAC,GAAD,CAAyBztD,OAAQumG,EAA0B3C,SAAU,kBAAMhpC,EAAQxyC,KAAK,cADnF+hF,GAAP,qBAIAr/G,qBAAU,WACJy7G,EAAyBrrF,OAAS,GACpCivF,OAGD,CAAC5D,EAAyBrrF,SAE7B,OAAgCuyC,aAC9B,cAAC,GAAD,CACEnzD,MAAOA,EACPkoG,cAAe8E,GACfvF,gBAAiBsH,GACjB7hD,cAAeA,GACf3V,OAAQA,GACRpY,UAAWA,EACX4G,gBAAiBA,EACjBghE,UAAW0H,GACXzH,iBAAkBA,GAClB/5C,gBAAiB6hD,MAEnB,GACA,EACA,oBAfKgB,GAAP,qBAkBA,OACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAW1iF,MAAO76B,EAAE,YAAaihE,SAAUjhE,EAAE,gCAC7C,eAAC,GAAD,CAAS0b,GAAG,YAAZ,UACE,eAAC,KAAD,CAAYxZ,IAAI,KAAhB,UACE,cAAC4lE,GAAA,EAAD,CACEG,MAAOz7B,IAAqBtrC,KAAMyrC,SAAW2tE,GAAY7sG,EAAQzN,EAAE,oBAAsBA,EAAE,QAC3FD,MAAOk4E,GAAiB/2E,KAAMurC,OAC9Bu7B,eAAgBizC,GAChB/jG,SAAUuvC,EAAWvlD,KAAMurC,OAC3B0kB,YAAaopD,GACbxyC,MAAOo1C,GACPj1C,iBAAkB+0C,GAClB50C,cAAe5hB,EAAWvlD,KAAMyrC,QAChCjxB,GAAG,wBAEL,cAAC,KAAD,CAAY/Z,QAAQ,gBAApB,SACE,eAAC,KAAD,CAASA,QAASg4G,EAAe,gBAAkB,SAAU5tF,MAAO,CAAEnqB,QAAS,UAA/E,UACE,cAAC6xG,GAAD,CAAcC,WAAS,EAAvB,SACE,cAAC,IAAD,CACEjyG,MAAM,OACNwd,QAAS,WACP87F,IAAqB,GACrB7pD,MAEFryC,MAAO4nC,EAAWvlD,KAAMurC,QAAUga,EAAWvlD,KAAMyrC,QAAU,UAAY,WAG9D,OAAdC,IAAuB0tE,GAAYX,EAClC,cAAC,IAAD,CAAQp1D,QAAQ,OAAO7oC,GAAG,uBAAuBuD,QAAS,kBAAMmyC,GAAkB,KAAlF,SACGpxD,EAAE,6BAEH,UAGR,cAAC8nE,GAAA,EAAD,CACE/nE,MAAOk4E,GAAiB/2E,KAAMyrC,QAC9BwkB,YAAaqpD,GACbvyC,MAAOz7B,IAAqBtrC,KAAMurC,QAAU6tE,GAAY7sG,EAAQzN,EAAE,kBAAoBA,EAAE,MACxFgoE,eAAe,EACf9wD,SAAUuvC,EAAWvlD,KAAMyrC,QAC3Bu7B,iBAAkBk1C,GAClB/0C,cAAe5hB,EAAWvlD,KAAMurC,OAChC/wB,GAAG,yBAGJi+F,GAA8B,OAAd/sE,IAAuB0tE,EACtC,qCACE,eAAC,KAAD,CAAS34G,QAAQ,gBAAgBoqB,MAAO,CAAEnqB,QAAS,UAAnD,UACE,cAAC6xG,GAAD,CAAcC,WAAW,EAAzB,SACE,cAAC,IAAD,CAAejyG,MAAM,WAEvB,cAAC,IAAD,CAAQ8iD,QAAQ,OAAO7oC,GAAG,0BAA0BuD,QAAS,kBAAMmyC,GAAkB,OAArF,SACGpxD,EAAE,sBAGP,cAACszG,GAAD,CAAmB53F,GAAG,YAAY3b,MAAO6sC,EAAW65B,SAAUrV,QAE9D,KAEHkpD,EAAW,KACV,eAAC,KAAD,CAAYp4G,IAAI,MAAM6pB,MAAO,CAAEnqB,QAAS,UAAxC,UACGwV,QAAQ3J,IACP,eAACnM,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC03G,GAAD,UAAQp5G,EAAE,WACV,cAAC02G,GAAD,CACEt3D,MAAK,OAAE3xC,QAAF,IAAEA,OAAF,EAAEA,EAAOsxC,eACd41D,aAAcA,GACdC,gBAAiBA,QAItBphE,IAAoBl7B,KACnB,eAAChX,GAAA,EAAD,CAAYI,MAAM,SAAlB,UACE,cAAC03G,GAAD,UAAQp5G,EAAE,wBACV,eAAC,KAAD,CAAMw5D,MAAI,EAAC36C,MAAM,UAAjB,UACG20B,EAAkB,IADrB,gBAQV,eAAC,IAAD,CAAKwmB,GAAG,OAAR,UACGqjD,GACC,cAAC,IAAD,CAAQ57G,MAAM,OAAO8wE,UAAQ,EAAC9R,GAAG,MAAjC,SACGzgE,EAAE,uBAEFoW,EAEDkkG,EACF,cAAC,IAAD,CAAQ74G,MAAM,OAAO8wE,SAAUn7D,QAAQijG,GAAiBp7F,QAASm7F,EAAjE,gBACGC,QADH,IACGA,IACEnC,IAAaF,GAAS+B,KAAO,OAAS7B,IAAaF,GAASkC,OAAS,SAAW,OAEnFU,IAAWD,GACb,eAAC,KAAD,CAAU5uF,MAAO,CAAE2tC,UAAW,UAA9B,UACE,cAAC,KAAD,CAAM76C,MAAM,aAAa4hD,GAAG,MAA5B,SACGzgE,EAAE,4CAEJ29D,IACC,cAAC,KAAD,CAAM9+C,MAAM,aAAa4hD,GAAG,MAA5B,SACGzgE,EAAE,uCAIPs8G,GACF,eAACh7G,GAAA,EAAD,WACE,cAAC,IAAD,CACEijD,QAAS3Y,KAAamG,KAAcY,SAAW,UAAY,UAC3D1zB,QAAS47F,GACTtoC,SAAU3mC,KAAamG,KAAcc,cAAgBioE,GACrDr5G,MAAM,MAJR,SAMGmqC,KAAamG,KAAc3P,QAC1B,eAAC,KAAD,CAASlgC,IAAI,MAAMP,QAAQ,SAA3B,UACG3B,EAAE,YADL,IACkB,cAACggE,GAAA,EAAD,CAAciC,OAAO,aAErC64C,IAAqBlvE,KAAamG,KAAcY,SAClD3yC,EAAE,WAEFA,EAAE,iBAAkB,CAAEi6D,MAAK,oBAAExT,EAAWvlD,KAAMurC,cAAnB,aAAE,EAAyBzd,cAA3B,QAAqC,OAGpE,cAAC,IAAD,CACEu1B,QAASplB,IAAWg2E,GAAsB,EAAI,SAAW,UACzDl2F,QAAS,WACH06F,EACFuC,MAEAxB,GAAa,CACXD,eAAgBhtG,EAChBktD,eAAe,EACf85C,sBAAkBj3G,EAClBwnD,YAAQxnD,IAEV+/G,OAGJ97G,MAAM,MACNia,GAAG,cACH62D,UACGpzC,IAAWyM,KAAamG,KAAcY,UAAawiE,GAAsB,IAAMwE,EAlBpF,SAsBM35G,EADHm1G,GAAsB,IAAMwE,EACvB,oBACFxE,GAAsB,EACpB,cACA,aAIV,cAAC,IAAD,CACE5wD,QAASplB,IAAWg2E,GAAsB,IAAM8G,GAAoB,SAAW,UAC/Eh9F,QAAS,WACH06F,EACFuC,MAEAxB,GAAa,CACXD,eAAgBhtG,EAChBktD,eAAe,EACf85C,sBAAkBj3G,EAClBwnD,YAAQxnD,IAEV+/G,OAGJ7hG,GAAG,cACHja,MAAM,OACN8wE,UAAWpzC,IAAYg2E,GAAsB,IAAMwE,KAAmBsC,GAjBxE,SAmBGrC,IACEzE,GAAsB,IAAMwE,EAA5B,wBAGG35G,EADAm1G,GAAsB,EACpB,cACA,WAxFV,cAACttD,GAAA,EAAD,CAAqBpmD,MAAM,SA2F5B66G,IACC,cAAC7oG,GAAA,EAAD,CAAQsY,MAAO,CAAEyuD,UAAW,QAA5B,SACE,cAAC,GAAD,CAAe88B,MAAO,CAAC1rE,KAAamG,KAAcY,cAGrDgnE,GAAgBlF,GAAmB,cAACN,GAAD,CAAmBh0F,MAAOs0F,KAAuB,cAIzF4I,GAGA,cAAC9rC,GAAA,EAAD,CAA2B9qB,WAAY,CAACA,EAAWha,MAAOga,EAAW9Z,UAFrE,cAAC6pE,GAAD,CAA6B/oG,MAAOA,O,cEzerC,SAAS+vG,KACd,OAAO,cAAC,IAAD,CAAUtrD,GAAG,UAGtB,IAAMurD,GAAqB,oDACpB,SAASC,GAAqCx+F,GACnD,IAKM9f,EADF8f,EAHF9f,MACEsoB,OAAU4uD,YAGYl3E,MAAMq+G,IAChC,cAAIr+G,QAAJ,IAAIA,OAAJ,EAAIA,EAAOivB,QACF,cAAC,IAAD,CAAU6jC,GAAE,eAAU9yD,EAAM,GAAhB,YAAsBA,EAAM,MAG1C,cAACi3E,GAAA,QAAD,gBAAkBn3D,IAGpB,SAASy+F,GAA0Bz+F,GACxC,MAIIA,EAHF9f,MACEsoB,OAAU4uD,EAFd,EAEcA,YAAaC,EAF3B,EAE2BA,YAG3B,OAAID,EAAY/uD,gBAAkBgvD,EAAYhvD,cACrC,cAAC,IAAD,CAAU2qC,GAAE,eAAUokB,KAExB,cAACD,GAAA,QAAD,gBAAkBn3D,IC7B3B,IAAMu+F,GAAqB,4CAcZG,OAZf,YAI6C,IAF/BzqG,EAE8B,EAH1C/T,MACEsoB,OAAUvU,OAGZ,IAAKsqG,GAAmBnvF,KAAKnb,GAC3B,OAAO,cAAC,IAAD,CAAU++C,GAAG,UAEtB,MAA+B/+C,EAAOpO,MAAM,KAA5C,mBAAO4mB,EAAP,KAAkBC,EAAlB,KAEA,OAAO,cAAC,IAAD,CAAUsmC,GAAE,kBAAavmC,EAAb,YAA0BC,MCXxC,SAASiyF,GAAT,GAAoE,IAAlCvwC,EAAiC,EAAjCA,SACvC,OAAO,cAAC,IAAD,CAAUpb,GAAE,6BAAOob,GAAP,IAAiBtO,SAAU,YAIzC,SAAS8+C,GAAe5+F,GAC7B,IACEouD,EAKEpuD,EALFouD,SACY5Z,EAIVx0C,EAJFouD,SAAY5Z,OAEA3B,EAEV7yC,EAHF9f,MACEsoB,OAAUqqC,eAId,OACE,cAAC,IAAD,CACEG,GAAE,6BACGob,GADH,IAEAtO,SAAU,QACVtL,OACEA,GAAUA,EAAOrlC,OAAS,EAA1B,UACOqlC,EADP,2BACgC3B,GADhC,0BAEuBA,OCGjC,IAAMgsD,GAAOC,gBAAK,kBAAM,kCAClBC,GAAWD,gBAAK,kBAAM,mCACtBE,GAAqBF,gBAAK,kBAAM,kCAChCG,GAAcH,gBAAK,kBAAM,yDACzBI,GAAyBJ,gBAAK,kBAAM,kCACpC3nC,GAAe2nC,gBAAK,kBAAM,4CAC1BK,GAAYL,gBAAK,kBAAM,mCACvBM,GAAaN,gBAAK,kBAAM,kCACxBO,GAAkBP,gBAAK,kBAAM,mCAGnCv7G,KAAU4U,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGlB,IAAM8iE,GAAgB,WAMpB,OALAh1B,cACAiqC,KACA/wB,eACA/b,eAGE,eAAC,IAAD,CAAQurB,QAASA,KAAjB,UACE,cAAC,KAAD,IACA,cAACywC,GAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,CAAwB1pB,SAAU,cAACvU,GAAA,EAAD,IAAlC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO7uB,KAAK,IAAI+sD,OAAK,EAArB,SACE,cAACV,GAAD,MAEF,cAAC,IAAD,CAAOrsD,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,eAAZ,SACE,cAACwsD,GAAD,MAEF,cAAC,IAAD,CAAOO,OAAK,EAAC/sD,KAAK,cAAlB,SACE,cAACysD,GAAD,MAEF,cAAC,IAAD,CAAOzsD,KAAK,0BAAZ,SACE,cAAC0sD,GAAD,MAIF,cAAC,IAAD,CAAOK,OAAK,EAACC,QAAM,EAAChtD,KAAK,QAAQynD,UAAWE,KAC5C,cAAC,IAAD,CAAOoF,OAAK,EAACC,QAAM,EAAChtD,KAAK,wBAAwBynD,UAAW2E,KAC5D,cAAC,IAAD,CAAOW,OAAK,EAACC,QAAM,EAAChtD,KAAK,QAAQynD,UAAW0E,KAC5C,cAAC,IAAD,CAAOY,OAAK,EAACC,QAAM,EAAChtD,KAAK,QAAQynD,UAAWmF,KAC5C,cAAC,IAAD,CAAOG,OAAK,EAACC,QAAM,EAAChtD,KAAK,aAAaynD,UAAWkF,KACjD,cAAC,IAAD,CAAOI,OAAK,EAACC,QAAM,EAAChtD,KAAK,UAAUynD,UAAWqE,KAC9C,cAAC,IAAD,CAAOiB,OAAK,EAAC/sD,KAAK,OAAOynD,UAAW9iC,KACpC,cAAC,IAAD,CAAOooC,OAAK,EAAC/sD,KAAK,oBAAoBynD,UAAWuE,KACjD,cAAC,IAAD,CAAOe,OAAK,EAAC/sD,KAAK,iCAAiCynD,UAAWwE,KAC9D,cAAC,IAAD,CAAOc,OAAK,EAAC/sD,KAAK,UAAUynD,UAAW9iC,KACvC,cAAC,IAAD,CAAOooC,OAAK,EAAC/sD,KAAK,uBAAuBynD,UAAWuE,KACpD,cAAC,IAAD,CAAOe,OAAK,EAAC/sD,KAAK,oCAAoCynD,UAAWwE,KACjE,cAAC,IAAD,CAAOc,OAAK,EAACC,QAAM,EAAChtD,KAAK,kBAAkBynD,UAAWyE,KACtD,cAAC,IAAD,CAAOa,OAAK,EAACC,QAAM,EAAChtD,KAAK,oCAAoCynD,UAAWoF,KAGxE,cAAC,IAAD,CAAO7sD,KAAK,QAAZ,SACE,cAAC,IAAD,CAAUQ,GAAG,iBAEf,cAAC,IAAD,CAAOR,KAAK,WAAZ,SACE,cAAC,IAAD,CAAUQ,GAAG,aAEf,cAAC,IAAD,CAAOR,KAAK,SAAZ,SACE,cAAC,IAAD,CAAUQ,GAAG,aAIf,cAAC,IAAD,CAAOinD,UAAW8E,YAIxB,cAAC,GAAD,CAAWU,WAAY,IACvB,cAAC,KAAD,IACA,cAAC,GAAD,QAKSp4C,OAAMngD,KAAKi0D,I,8BCpGpBukC,GAAuB,SAAC1/F,GAC5B,MAAiBgD,eAAVC,EAAP,oBACA,OAAO,cAAC,KAAD,cAAeu9B,MAAOv9B,EAAS08F,KAAOC,MAAW5/F,KAuB3C6/F,GApBa,SAAC,GAAkB,IAAhBrhH,EAAe,EAAfA,SAC7B,OACE,cAAC,KAAD,CAAmB+sE,WAAYA,KAA/B,SACE,cAAC,IAAD,CAAU76B,MAAOA,KAAjB,SACE,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,KAAD,UACE,cAACqkB,GAAA,EAAD,UACE,cAAC,KAAD,UAAgBv2D,mBCjBlC,SAASshH,KACP,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAKN,SAASC,GAAT,GAA2D,IAAtCvhH,EAAqC,EAArCA,SACX0Y,EAAY/V,cAAZ+V,QAER,OADyBsJ,mBAAQ,kBAAMtI,QAAQhB,IAAmD,IAAxCiD,IAAkB4e,QAAQ7hB,MAAkB,CAACA,IAE9F,kDAEF,mCAAG1Y,IAGZwhH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,GAAD,UACE,eAAC,GAAD,WACE,cAACD,GAAD,IACA,cAAC,GAAD,WAINlwC,SAASuwC,eAAe,W","file":"static/js/main.9462146a.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { Token } from '@pancakeswap/sdk'\r\n\r\nexport type TranslatableText =\r\n  | string\r\n  | {\r\n      key: string\r\n      data?: {\r\n        [key: string]: string | number\r\n      }\r\n    }\r\nexport interface Address {\r\n  97?: string\r\n  56: string\r\n}\r\n\r\nexport interface SerializedToken {\r\n  chainId: number\r\n  address: string\r\n  decimals: number\r\n  symbol?: string\r\n  name?: string\r\n  projectLink?: string\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\ninterface IfoPoolInfo {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  distributionRatio: number // Range [0-1]\r\n}\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  currency: Token\r\n  token: Token\r\n  releaseBlockNumber: number\r\n  articleUrl: string\r\n  campaignId: string\r\n  tokenOfferingPrice: number\r\n  version: number\r\n  [PoolIds.poolBasic]?: IfoPoolInfo\r\n  [PoolIds.poolUnlimited]: IfoPoolInfo\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\ninterface FarmConfigBaseProps {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\r\n  token: SerializedToken\r\n  quoteToken: SerializedToken\r\n}\r\n\r\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\r\n  token: Token\r\n  quoteToken: Token\r\n}\r\n\r\ninterface PoolConfigBaseProps {\r\n  sousId: number\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n}\r\n\r\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\r\n  earningToken: SerializedToken\r\n  stakingToken: SerializedToken\r\n}\r\n\r\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\r\n  earningToken: Token\r\n  stakingToken: Token\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n\r\nexport enum LotteryStatus {\r\n  PENDING = 'pending',\r\n  OPEN = 'open',\r\n  CLOSE = 'close',\r\n  CLAIMABLE = 'claimable',\r\n}\r\n\r\nexport interface LotteryTicket {\r\n  id: string\r\n  number: string\r\n  status: boolean\r\n  rewardBracket?: number\r\n  roundId?: string\r\n  cakeReward?: string\r\n}\r\n\r\nexport interface LotteryTicketClaimData {\r\n  ticketsWithUnclaimedRewards: LotteryTicket[]\r\n  allWinningTickets: LotteryTicket[]\r\n  cakeTotal: BigNumber\r\n  roundId: string\r\n}\r\n\r\n// Farm Auction\r\nexport interface FarmAuctionBidderConfig {\r\n  account: string\r\n  farmName: string\r\n  tokenAddress: string\r\n  quoteToken: Token\r\n  tokenName: string\r\n  projectSite?: string\r\n  lpAddress?: string\r\n}\r\n\r\n// Note: this status is slightly different compared to 'status' comfing\r\n// from Farm Auction smart contract\r\nexport enum AuctionStatus {\r\n  ToBeAnnounced, // No specific dates/blocks to display\r\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\r\n  Open, // Auction is open for bids\r\n  Finished, // Auction end block is reached, bidding is not possible\r\n  Closed, // Auction was closed in smart contract\r\n}\r\n\r\nexport interface Auction {\r\n  id: number\r\n  status: AuctionStatus\r\n  startBlock: number\r\n  startDate: Date\r\n  endBlock: number\r\n  endDate: Date\r\n  auctionDuration: number\r\n  initialBidAmount: number\r\n  topLeaderboard: number\r\n  leaderboardThreshold: BigNumber\r\n}\r\n\r\nexport interface BidderAuction {\r\n  id: number\r\n  amount: BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface Bidder extends FarmAuctionBidderConfig {\r\n  position?: number\r\n  isTopPosition: boolean\r\n  samePositionAsAbove: boolean\r\n  amount: BigNumber\r\n}\r\n\r\nexport interface ConnectedBidder {\r\n  account: string\r\n  isWhitelisted: boolean\r\n  bidderData?: Bidder\r\n}\r\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@pancakeswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setprovider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\r\nexport const resetMintState = createAction<void>('mint/resetMintState')\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Row = styled(Box)<{\r\n  width?: string\r\n  align?: string\r\n  justify?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: ${({ align }) => align ?? 'center'};\r\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\r\n  flex-wrap: wrap;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n  justify-content: ${({ justify }) => justify && justify};\r\n\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\r\n  width: fit-content;\r\n  margin: ${({ gap }) => gap && `-${gap}`};\r\n`\r\n\r\nexport default Row\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  INPUT = 'INPUT',\r\n  OUTPUT = 'OUTPUT',\r\n}\r\n\r\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\r\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\r\nexport const replaceSwapState = createAction<{\r\n  field: Field\r\n  typedValue: string\r\n  inputCurrencyId?: string\r\n  outputCurrencyId?: string\r\n  recipient: string | null\r\n}>('swap/replaceSwapState')\r\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n\r\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\r\n  ethersToBigNumber(ethersBn).toJSON()\r\n\r\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n\r\nexport const formatLocalisedCompactNumber = (number: number): string => {\r\n  const codeFromStorage = getLanguageCodeFromLS()\r\n  return new Intl.NumberFormat(codeFromStorage, {\r\n    notation: 'compact',\r\n    compactDisplay: 'long',\r\n    maximumSignificantDigits: 2,\r\n  }).format(number)\r\n}\r\n\r\nexport default formatLocalisedCompactNumber\r\n","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { serializeToken } from 'state/user/hooks/helpers'\r\nimport { SerializedToken } from './types'\r\n\r\nconst { MAINNET, TESTNET } = ChainId\r\n\r\ninterface TokenList {\r\n  [symbol: string]: Token\r\n}\r\n\r\ninterface SerializedTokenList {\r\n  [symbol: string]: SerializedToken\r\n}\r\n\r\nexport const mainnetTokens = {\r\n  wbnb: new Token(\r\n    MAINNET,\r\n    '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB',\r\n    'https://www.binance.com/',\r\n  ),\r\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\r\n  bnb: new Token(MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'BNB', 'BNB', 'https://www.binance.com/'),\r\n  cake: new Token(\r\n    MAINNET,\r\n    '0x8bA051cd0252E0315E37Af548aB7F3B3C5feDc68',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  tlos: new Token(MAINNET, '0xb6C53431608E626AC81a9776ac3e999c5556717c', 18, 'TLOS', 'Telos', 'https://www.telos.net/'),\r\n  stephero: new Token(\r\n    MAINNET,\r\n    '0xE8176d414560cFE1Bf82Fd73B986823B89E4F545',\r\n    18,\r\n    'HERO',\r\n    'StepHero',\r\n    'https://stephero.io/',\r\n  ),\r\n  qbt: new Token(MAINNET, '0x17B7163cf1Dbd286E262ddc68b553D899B93f526', 18, 'QBT', 'Qubit Token', 'https://qbt.fi/'),\r\n  cvp: new Token(\r\n    MAINNET,\r\n    '0x5Ec3AdBDae549Dce842e24480Eb2434769e22B2E',\r\n    18,\r\n    'CVP',\r\n    'Concentrated Voting Power Token',\r\n    'https://powerpool.finance/',\r\n  ),\r\n  bscdefi: new Token(\r\n    MAINNET,\r\n    '0x40E46dE174dfB776BB89E04dF1C47d8a66855EB3',\r\n    18,\r\n    'BSCDEFI',\r\n    'BSC Defi blue chips token',\r\n    'https://powerpool.finance/',\r\n  ),\r\n  busd: new Token(\r\n    MAINNET,\r\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n    'https://www.paxos.com/busd/',\r\n  ),\r\n  dai: new Token(\r\n    MAINNET,\r\n    '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\r\n    18,\r\n    'DAI',\r\n    'Dai Stablecoin',\r\n    'https://www.makerdao.com/',\r\n  ),\r\n  usdt: new Token(\r\n    MAINNET,\r\n    '0x55d398326f99059fF775485246999027B3197955',\r\n    18,\r\n    'USDT',\r\n    'Tether USD',\r\n    'https://tether.to/',\r\n  ),\r\n  btcb: new Token(\r\n    MAINNET,\r\n    '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n    18,\r\n    'BTCB',\r\n    'Binance BTC',\r\n    'https://bitcoin.org/',\r\n  ),\r\n  ust: new Token(\r\n    MAINNET,\r\n    '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\r\n    18,\r\n    'UST',\r\n    'Wrapped UST Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  eth: new Token(\r\n    MAINNET,\r\n    '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n    18,\r\n    'ETH',\r\n    'Binance-Peg Ethereum Token',\r\n    'https://ethereum.org/en/',\r\n  ),\r\n  usdc: new Token(\r\n    MAINNET,\r\n    '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n    18,\r\n    'USDC',\r\n    'Binance-Peg USD Coin',\r\n    'https://www.centre.io/usdc',\r\n  ),\r\n  kalm: new Token(\r\n    MAINNET,\r\n    '0x4BA0057f784858a48fe351445C672FF2a3d43515',\r\n    18,\r\n    'KALM',\r\n    'Kalmar Token',\r\n    'https://kalmar.io/',\r\n  ),\r\n  hotcross: new Token(\r\n    MAINNET,\r\n    '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\r\n    18,\r\n    'HOTCROSS',\r\n    'Hotcross Token',\r\n    'https://www.hotcross.com/',\r\n  ),\r\n  belt: new Token(\r\n    MAINNET,\r\n    '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n    18,\r\n    'BELT',\r\n    'Belt Token',\r\n    'https://beta.belt.fi/',\r\n  ),\r\n  watch: new Token(\r\n    MAINNET,\r\n    '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\r\n    18,\r\n    'WATCH',\r\n    'Yieldwatch Token',\r\n    'https://yieldwatch.net/',\r\n  ),\r\n  bry: new Token(\r\n    MAINNET,\r\n    '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\r\n    18,\r\n    'BRY',\r\n    'Berry Token',\r\n    'https://berrydata.co/',\r\n  ),\r\n  wsote: new Token(\r\n    MAINNET,\r\n    '0x541E619858737031A1244A5d0Cd47E5ef480342c',\r\n    18,\r\n    'wSOTE',\r\n    'Soteria Token',\r\n    'https://soteria.finance/',\r\n  ),\r\n  helmet: new Token(\r\n    MAINNET,\r\n    '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\r\n    18,\r\n    'Helmet',\r\n    'Helmet Token',\r\n    'https://www.helmet.insure/',\r\n  ),\r\n  ten: new Token(\r\n    MAINNET,\r\n    '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\r\n    18,\r\n    'TEN',\r\n    'Tenet Token',\r\n    'https://www.tenet.farm/',\r\n  ),\r\n  ditto: new Token(\r\n    MAINNET,\r\n    '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\r\n    9,\r\n    'DITTO',\r\n    'Ditto Token',\r\n    'https://ditto.money/',\r\n  ),\r\n  blink: new Token(\r\n    MAINNET,\r\n    '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\r\n    6,\r\n    'BLINK',\r\n    'Blink Token',\r\n    'https://blink.wink.org',\r\n  ),\r\n  syrup: new Token(\r\n    MAINNET,\r\n    '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n    18,\r\n    'SYRUP',\r\n    'SyrupBar Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  pha: new Token(\r\n    MAINNET,\r\n    '0x0112e557d400474717056C4e6D40eDD846F38351',\r\n    18,\r\n    'PHA',\r\n    'Phala Token',\r\n    'https://phala.network',\r\n  ),\r\n  babycake: new Token(\r\n    MAINNET,\r\n    '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\r\n    18,\r\n    'BABYCAKE',\r\n    'Baby Cake Token',\r\n    'https://babycake.app/',\r\n  ),\r\n  bmon: new Token(\r\n    MAINNET,\r\n    '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\r\n    18,\r\n    'BMON',\r\n    'Binamon Token',\r\n    'https://binamon.org/',\r\n  ),\r\n  hero: new Token(\r\n    MAINNET,\r\n    '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\r\n    18,\r\n    'HERO',\r\n    'Metahero Token',\r\n    'https://metahero.io/',\r\n  ),\r\n  wsg: new Token(\r\n    MAINNET,\r\n    '0xA58950F05FeA2277d2608748412bf9F802eA4901',\r\n    18,\r\n    'WSG',\r\n    'Wall Street Games Token',\r\n    'https://wsg.gg/',\r\n  ),\r\n  mcrn: new Token(\r\n    MAINNET,\r\n    '0xacb2d47827C9813AE26De80965845D80935afd0B',\r\n    18,\r\n    'MCRN',\r\n    'Macaronswap Token',\r\n    'https://www.macaronswap.finance/',\r\n  ),\r\n  revv: new Token(\r\n    MAINNET,\r\n    '0x833F307aC507D47309fD8CDD1F835BeF8D702a93',\r\n    18,\r\n    'REVV',\r\n    'REVV Token',\r\n    'https://revvmotorsport.com/',\r\n  ),\r\n  skill: new Token(\r\n    MAINNET,\r\n    '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\r\n    18,\r\n    'SKILL',\r\n    'Cryptoblades Token',\r\n    'https://www.cryptoblades.io/',\r\n  ),\r\n  if: new Token(\r\n    MAINNET,\r\n    '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\r\n    18,\r\n    'IF',\r\n    'Impossible Finance Token',\r\n    'https://impossible.finance/',\r\n  ),\r\n  sps: new Token(\r\n    MAINNET,\r\n    '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\r\n    18,\r\n    'SPS',\r\n    'Splinterlands Token',\r\n    'https://splinterlands.com',\r\n  ),\r\n  chess: new Token(\r\n    MAINNET,\r\n    '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\r\n    18,\r\n    'CHESS',\r\n    'Chess Token',\r\n    'https://tranchess.com/',\r\n  ),\r\n  titan: new Token(\r\n    MAINNET,\r\n    '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\r\n    18,\r\n    'TITAN',\r\n    'Titanswap Token',\r\n    'https://titanswap.org',\r\n  ),\r\n  harmony: new Token(\r\n    MAINNET,\r\n    '0x03fF0ff224f904be3118461335064bB48Df47938',\r\n    18,\r\n    'ONE',\r\n    'Harmony ONE Token',\r\n    'https://www.harmony.one/',\r\n  ),\r\n  mask: new Token(MAINNET, '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3', 18, 'MASK', 'Mask Token', 'https://mask.io/'),\r\n  dvi: new Token(\r\n    MAINNET,\r\n    '0x758FB037A375F17c7e195CC634D77dA4F554255B',\r\n    18,\r\n    'DVI',\r\n    'Dvision Network Token',\r\n    'https://dvision.network/',\r\n  ),\r\n  adx: new Token(\r\n    MAINNET,\r\n    '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\r\n    18,\r\n    'ADX',\r\n    'Adex Network Token',\r\n    'https://www.adex.network',\r\n  ),\r\n  bscpad: new Token(\r\n    MAINNET,\r\n    '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\r\n    18,\r\n    'BSCPAD',\r\n    'Bscpad Token',\r\n    'https://bscpad.com/',\r\n  ),\r\n  rabbit: new Token(\r\n    MAINNET,\r\n    '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\r\n    18,\r\n    'RABBIT',\r\n    'Rabbit Finance Token',\r\n    'https://rabbitfinance.io/earn',\r\n  ),\r\n  form: new Token(\r\n    MAINNET,\r\n    '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\r\n    18,\r\n    'FORM',\r\n    'Formation Token',\r\n    'https://formation.fi/',\r\n  ),\r\n  txl: new Token(MAINNET, '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5', 18, 'TXL', 'Tixl Token', 'https://tixl.org/'),\r\n  orbs: new Token(\r\n    MAINNET,\r\n    '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\r\n    18,\r\n    'ORBS',\r\n    'Orbs Token',\r\n    'https://www.orbs.com/',\r\n  ),\r\n  cos: new Token(\r\n    MAINNET,\r\n    '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n    18,\r\n    'COS',\r\n    'Contentos Token',\r\n    'https://www.contentos.io/',\r\n  ),\r\n  bunny: new Token(\r\n    MAINNET,\r\n    '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\r\n    18,\r\n    'BUNNY',\r\n    'Pancakebunny Token',\r\n    'https://pancakebunny.finance/',\r\n  ),\r\n  alice: new Token(\r\n    MAINNET,\r\n    '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\r\n    6,\r\n    'ALICE',\r\n    'My Neighbor Alice Token',\r\n    'https://www.myneighboralice.com/',\r\n  ),\r\n  for: new Token(\r\n    MAINNET,\r\n    '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n    18,\r\n    'FOR',\r\n    'Fortube Token',\r\n    'https://www.for.tube/home',\r\n  ),\r\n  bux: new Token(\r\n    MAINNET,\r\n    '0x211FfbE424b90e25a15531ca322adF1559779E45',\r\n    18,\r\n    'BUX',\r\n    'Bux Crypto Token',\r\n    'https://getbux.com/bux-crypto/',\r\n  ),\r\n  nuls: new Token(\r\n    MAINNET,\r\n    '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\r\n    8,\r\n    'NULS',\r\n    'Nuls Token',\r\n    'https://www.nuls.io/',\r\n  ),\r\n  ramp: new Token(\r\n    MAINNET,\r\n    '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\r\n    18,\r\n    'RAMP',\r\n    'RAMP DEFI Token',\r\n    'https://rampdefi.com/',\r\n  ),\r\n  bfi: new Token(\r\n    MAINNET,\r\n    '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\r\n    18,\r\n    'BFI',\r\n    'bearn.fi Token',\r\n    'https://bearn.fi/',\r\n  ),\r\n  dexe: new Token(\r\n    MAINNET,\r\n    '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\r\n    18,\r\n    'DEXE',\r\n    'DeXe Token',\r\n    'https://dexe.network/',\r\n  ),\r\n  bel: new Token(\r\n    MAINNET,\r\n    '0x8443f091997f06a61670B735ED92734F5628692F',\r\n    18,\r\n    'BEL',\r\n    'Bella Protocol Token',\r\n    'https://bella.fi/',\r\n  ),\r\n  tpt: new Token(\r\n    MAINNET,\r\n    '0xECa41281c24451168a37211F0bc2b8645AF45092',\r\n    4,\r\n    'TPT',\r\n    'Tokenpocket Token',\r\n    'https://www.tokenpocket.pro/',\r\n  ),\r\n  xmark: new Token(\r\n    MAINNET,\r\n    '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\r\n    9,\r\n    'xMARK',\r\n    'Benchmark Protocol Token',\r\n    'https://benchmarkprotocol.finance/',\r\n  ),\r\n  bmxx: new Token(\r\n    MAINNET,\r\n    '0x4131b87F74415190425ccD873048C708F8005823',\r\n    18,\r\n    'bMXX',\r\n    'Multiplier Token',\r\n    'https://multiplier.finance/',\r\n  ),\r\n  iotx: new Token(\r\n    MAINNET,\r\n    '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\r\n    18,\r\n    'IOTX',\r\n    'Binance-Peg IoTeX Network Token',\r\n    'https://iotex.io/',\r\n  ),\r\n  bor: new Token(\r\n    MAINNET,\r\n    '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\r\n    18,\r\n    'BOR',\r\n    'BoringDAO Token',\r\n    'https://www.boringdao.com/',\r\n  ),\r\n  bopen: new Token(\r\n    MAINNET,\r\n    '0xF35262a9d427F96d2437379eF090db986eaE5d42',\r\n    18,\r\n    'bOPEN',\r\n    'OPEN Governance Token',\r\n    'https://opendao.io/',\r\n  ),\r\n  dodo: new Token(\r\n    MAINNET,\r\n    '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\r\n    18,\r\n    'DODO',\r\n    'Dodo Token',\r\n    'https://dodoex.io/',\r\n  ),\r\n  swingby: new Token(\r\n    MAINNET,\r\n    '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\r\n    18,\r\n    'SWINGBY',\r\n    'Swingby Network Token',\r\n    'https://swingby.network/',\r\n  ),\r\n  zee: new Token(\r\n    MAINNET,\r\n    '0x44754455564474A89358B2C2265883DF993b12F0',\r\n    18,\r\n    'ZEE',\r\n    'Zeroswap Token',\r\n    'https://zeroswap.io/',\r\n  ),\r\n  swgb: new Token(\r\n    MAINNET,\r\n    '0xE40255C5d7fa7ceEc5120408C78C787CECB4cfdb',\r\n    18,\r\n    'SWGb',\r\n    'SWGb Token',\r\n    'https://swirgepay.com/',\r\n  ),\r\n  swg: new Token(\r\n    MAINNET,\r\n    '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\r\n    18,\r\n    'SWG',\r\n    'SWG Token',\r\n    'https://swirgepay.com/',\r\n  ),\r\n  sfp: new Token(\r\n    MAINNET,\r\n    '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\r\n    18,\r\n    'SFP',\r\n    'Safepal Token',\r\n    'https://www.safepal.io/',\r\n  ),\r\n  lina: new Token(\r\n    MAINNET,\r\n    '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\r\n    18,\r\n    'LINA',\r\n    'Linear Finance Token',\r\n    'https://linear.finance/',\r\n  ),\r\n  lit: new Token(\r\n    MAINNET,\r\n    '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\r\n    18,\r\n    'LIT',\r\n    'Litentry Token',\r\n    'https://www.litentry.com/',\r\n  ),\r\n  hget: new Token(\r\n    MAINNET,\r\n    '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\r\n    6,\r\n    'HGET',\r\n    'Hedget Token',\r\n    'https://www.hedget.com/',\r\n  ),\r\n  bdo: new Token(\r\n    MAINNET,\r\n    '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\r\n    18,\r\n    'BDO',\r\n    'Bdollar Token',\r\n    'https://bdollar.fi/',\r\n  ),\r\n  egld: new Token(\r\n    MAINNET,\r\n    '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\r\n    18,\r\n    'EGLD',\r\n    'Elrond Token',\r\n    'https://elrond.com/',\r\n  ),\r\n  front: new Token(\r\n    MAINNET,\r\n    '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\r\n    18,\r\n    'FRONT',\r\n    'Frontier Token',\r\n    'https://frontier.xyz/',\r\n  ),\r\n  btcst: new Token(\r\n    MAINNET,\r\n    '0x78650B139471520656b9E7aA7A5e9276814a38e9',\r\n    17,\r\n    'BTCST',\r\n    'StandardBTCHashrate Token',\r\n    'https://www.1-b.tc/',\r\n  ),\r\n  bscx: new Token(\r\n    MAINNET,\r\n    '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\r\n    18,\r\n    'BSCX',\r\n    'BSCX Token',\r\n    'https://bscex.org/',\r\n  ),\r\n  balbt: new Token(\r\n    MAINNET,\r\n    '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\r\n    18,\r\n    'bALBT',\r\n    'AllianceBlock Token',\r\n    'https://allianceblock.io/',\r\n  ),\r\n  asr: new Token(\r\n    MAINNET,\r\n    '0x80D5f92C2c8C682070C95495313dDB680B267320',\r\n    2,\r\n    'ASR',\r\n    'AS Roma Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  atm: new Token(\r\n    MAINNET,\r\n    '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\r\n    2,\r\n    'ATM',\r\n    'Athletico Madrid Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  og: new Token(\r\n    MAINNET,\r\n    '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\r\n    2,\r\n    'OG',\r\n    'OG Nice Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  reef: new Token(\r\n    MAINNET,\r\n    '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\r\n    18,\r\n    'REEF',\r\n    'Reef.finance Token',\r\n    'https://reef.finance/',\r\n  ),\r\n  juv: new Token(\r\n    MAINNET,\r\n    '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\r\n    2,\r\n    'JUV',\r\n    'Juventus Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  psg: new Token(\r\n    MAINNET,\r\n    '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\r\n    2,\r\n    'PSG',\r\n    'Paris Saint-Germain Token',\r\n    'https://www.chiliz.com',\r\n  ),\r\n  vai: new Token(\r\n    MAINNET,\r\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n    18,\r\n    'VAI',\r\n    'VAI Stablecoin',\r\n    '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n  ),\r\n  unfi: new Token(\r\n    MAINNET,\r\n    '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\r\n    18,\r\n    'UNFI',\r\n    'UNFI Token',\r\n    'https://unifiprotocol.com',\r\n  ),\r\n  twt: new Token(\r\n    MAINNET,\r\n    '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\r\n    18,\r\n    'TWT',\r\n    'Trust Wallet Token',\r\n    'https://trustwallet.com/',\r\n  ),\r\n  hard: new Token(\r\n    MAINNET,\r\n    '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\r\n    6,\r\n    'HARD',\r\n    'HARD Token',\r\n    'https://hard.kava.io',\r\n  ),\r\n  broobee: new Token(\r\n    MAINNET,\r\n    '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\r\n    18,\r\n    'bROOBEE',\r\n    'ROOBEE Token',\r\n    'https://roobee.io/',\r\n  ),\r\n  stax: new Token(\r\n    MAINNET,\r\n    '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\r\n    18,\r\n    'STAX',\r\n    'StableX Token',\r\n    'https://stablexswap.com/',\r\n  ),\r\n  nar: new Token(\r\n    MAINNET,\r\n    '0xA1303E6199b319a891b79685F0537D289af1FC83',\r\n    18,\r\n    'NAR',\r\n    'Narwhalswap Token',\r\n    'https://narwhalswap.org/',\r\n  ),\r\n  nya: new Token(\r\n    MAINNET,\r\n    '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\r\n    18,\r\n    'NYA',\r\n    'Nyanswop Token',\r\n    'https://nyanswop.org/',\r\n  ),\r\n  ctk: new Token(\r\n    MAINNET,\r\n    '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\r\n    6,\r\n    'CTK',\r\n    'Certik Token',\r\n    'https://www.certik.foundation/',\r\n  ),\r\n  inj: new Token(\r\n    MAINNET,\r\n    '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\r\n    18,\r\n    'INJ',\r\n    'Injective Protocol Token',\r\n    'https://injectiveprotocol.com/',\r\n  ),\r\n  sxp: new Token(MAINNET, '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A', 18, 'SXP', 'Swipe Token', 'https://swipe.io/'),\r\n  alpha: new Token(\r\n    MAINNET,\r\n    '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\r\n    18,\r\n    'ALPHA',\r\n    'Alpha Finance Token',\r\n    'https://alphafinance.io/',\r\n  ),\r\n  xvs: new Token(MAINNET, '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63', 18, 'XVS', 'Venus Token', 'https://venus.io/'),\r\n  sushi: new Token(\r\n    MAINNET,\r\n    '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n    18,\r\n    'SUSHI',\r\n    'Binance-Peg SushiToken',\r\n    'https://sushi.com/',\r\n  ),\r\n  comp: new Token(\r\n    MAINNET,\r\n    '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\r\n    18,\r\n    'COMP',\r\n    'Compound Finance Token',\r\n    'https://compound.finance/',\r\n  ),\r\n  bifi: new Token(\r\n    MAINNET,\r\n    '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n    18,\r\n    'BIFI',\r\n    'Beefy Finance Token',\r\n    'https://beefy.finance/',\r\n  ),\r\n  dusk: new Token(\r\n    MAINNET,\r\n    '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\r\n    18,\r\n    'DUSK',\r\n    'Dusk Network Token',\r\n    'https://dusk.network/',\r\n  ),\r\n  beth: new Token(\r\n    MAINNET,\r\n    '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\r\n    18,\r\n    'BETH',\r\n    'Binance Beacon ETH',\r\n    'https://ethereum.org/en/eth2/beacon-chain/',\r\n  ),\r\n  mamzn: new Token(\r\n    MAINNET,\r\n    '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n    18,\r\n    'mAMZN',\r\n    'Wrapped Mirror AMZN Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mgoogl: new Token(\r\n    MAINNET,\r\n    '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n    18,\r\n    'mGOOGL',\r\n    'Wrapped Mirror GOOGL Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mnflx: new Token(\r\n    MAINNET,\r\n    '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n    18,\r\n    'mNFLX',\r\n    'Wrapped Mirror NFLX Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  mtsla: new Token(\r\n    MAINNET,\r\n    '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n    18,\r\n    'mTSLA',\r\n    'Wrapped Mirror TSLA Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  ltc: new Token(\r\n    MAINNET,\r\n    '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\r\n    18,\r\n    'LTC',\r\n    'Binance-Peg Litecoin Token',\r\n    'https://litecoin.org/',\r\n  ),\r\n  ada: new Token(\r\n    MAINNET,\r\n    '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\r\n    18,\r\n    'ADA',\r\n    ' Binance-Peg Cardano Token',\r\n    'https://www.cardano.org/',\r\n  ),\r\n  band: new Token(\r\n    MAINNET,\r\n    '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\r\n    18,\r\n    'BAND',\r\n    'Binance-Peg Band Protocol Token',\r\n    'https://bandprotocol.com/',\r\n  ),\r\n  dot: new Token(\r\n    MAINNET,\r\n    '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n    18,\r\n    'DOT',\r\n    'Binance-Peg Polkadot Token',\r\n    'https://polkadot.network/',\r\n  ),\r\n  eos: new Token(\r\n    MAINNET,\r\n    '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\r\n    18,\r\n    'EOS',\r\n    'Binance-Peg EOS Token',\r\n    'https://eos.io/',\r\n  ),\r\n  link: new Token(\r\n    MAINNET,\r\n    '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\r\n    18,\r\n    'LINK',\r\n    'Binance-Peg Chainlink Token',\r\n    'https://chain.link/',\r\n  ),\r\n  xrp: new Token(\r\n    MAINNET,\r\n    '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\r\n    18,\r\n    'XRP',\r\n    'Binance-Peg XRP Token',\r\n    'https://ripple.com/xrp/',\r\n  ),\r\n  atom: new Token(\r\n    MAINNET,\r\n    '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\r\n    18,\r\n    'ATOM',\r\n    'Binance-Peg Cosmos Token',\r\n    'https://cosmos.network/',\r\n  ),\r\n  yfii: new Token(\r\n    MAINNET,\r\n    '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\r\n    18,\r\n    'YFII',\r\n    'Binance-Peg YFII.finance Token',\r\n    'https://dfi.money/#/',\r\n  ),\r\n  xtz: new Token(\r\n    MAINNET,\r\n    '0x16939ef78684453bfDFb47825F8a5F714f12623a',\r\n    18,\r\n    'XTZ',\r\n    'Binance-Peg Tezos Token',\r\n    'https://www.tezos.com/',\r\n  ),\r\n  bch: new Token(\r\n    MAINNET,\r\n    '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\r\n    18,\r\n    'BCH',\r\n    'Binance-Peg Bitcoin Cash Token',\r\n    'https://bch.info/',\r\n  ),\r\n  yfi: new Token(\r\n    MAINNET,\r\n    '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\r\n    18,\r\n    'YFI',\r\n    'Binance-Peg yearn.finance Token',\r\n    'https://yearn.finance/',\r\n  ),\r\n  uni: new Token(\r\n    MAINNET,\r\n    '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\r\n    18,\r\n    'UNI',\r\n    'Binance-Peg Uniswap Token',\r\n    'https://uniswap.org/',\r\n  ),\r\n  fil: new Token(\r\n    MAINNET,\r\n    '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\r\n    18,\r\n    'FIL',\r\n    'Binance-Peg Filecoin Token',\r\n    'https://filecoin.io/',\r\n  ),\r\n  bake: new Token(\r\n    MAINNET,\r\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    18,\r\n    'BAKE',\r\n    'Bakeryswap Token',\r\n    'https://www.bakeryswap.org/',\r\n  ),\r\n  burger: new Token(\r\n    MAINNET,\r\n    '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\r\n    18,\r\n    'BURGER',\r\n    'Burgerswap Token',\r\n    'https://burgerswap.org/',\r\n  ),\r\n  bdigg: new Token(\r\n    MAINNET,\r\n    '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\r\n    18,\r\n    'bDIGG',\r\n    'Badger Sett Digg Token',\r\n    'https://badger.finance/',\r\n  ),\r\n  bbadger: new Token(\r\n    MAINNET,\r\n    '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\r\n    18,\r\n    'bBadger',\r\n    'Badger Sett Badger Token',\r\n    'https://badger.finance/',\r\n  ),\r\n  trade: new Token(\r\n    MAINNET,\r\n    '0x7af173F350D916358AF3e218Bdf2178494Beb748',\r\n    18,\r\n    'TRADE',\r\n    'Unitrade Token',\r\n    'https://unitrade.app/',\r\n  ),\r\n  pnt: new Token(\r\n    MAINNET,\r\n    '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\r\n    18,\r\n    'PNT',\r\n    'pNetwork Token',\r\n    'https://ptokens.io/',\r\n  ),\r\n  mir: new Token(\r\n    MAINNET,\r\n    '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\r\n    18,\r\n    'MIR',\r\n    'Mirror Protocol Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  pbtc: new Token(\r\n    MAINNET,\r\n    '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\r\n    18,\r\n    'pBTC',\r\n    'pTokens BTC Token',\r\n    'https://ptokens.io/',\r\n  ),\r\n  lto: new Token(\r\n    MAINNET,\r\n    '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\r\n    18,\r\n    'LTO',\r\n    'LTO Network Token',\r\n    'https://ltonetwork.com/',\r\n  ),\r\n  pcws: new Token(\r\n    MAINNET,\r\n    '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\r\n    18,\r\n    'pCWS',\r\n    'PolyCrowns Token',\r\n    'https://game.seascape.network/',\r\n  ),\r\n  zil: new Token(\r\n    MAINNET,\r\n    '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\r\n    12,\r\n    'ZIL',\r\n    'Zilliqa Token',\r\n    'https://www.zilliqa.com/',\r\n  ),\r\n  lien: new Token(\r\n    MAINNET,\r\n    '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\r\n    8,\r\n    'LIEN',\r\n    'Lien Finance Token',\r\n    'https://lien.finance/',\r\n  ),\r\n  swth: new Token(\r\n    MAINNET,\r\n    '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\r\n    8,\r\n    'SWTH',\r\n    'Switcheo Network Token',\r\n    'https://switcheo.network/',\r\n  ),\r\n  dft: new Token(\r\n    MAINNET,\r\n    '0x42712dF5009c20fee340B245b510c0395896cF6e',\r\n    18,\r\n    'DFT',\r\n    'Dfuture Token',\r\n    'https://www.dfuture.com/home',\r\n  ),\r\n  gum: new Token(\r\n    MAINNET,\r\n    '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\r\n    18,\r\n    'GUM',\r\n    'GourmetGalaxy Token',\r\n    'https://gourmetgalaxy.io/',\r\n  ),\r\n  dego: new Token(\r\n    MAINNET,\r\n    '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\r\n    18,\r\n    'DEGO',\r\n    'Dego Finance Token',\r\n    'https://bsc.dego.finance/home',\r\n  ),\r\n  nrv: new Token(\r\n    MAINNET,\r\n    '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\r\n    18,\r\n    'NRV',\r\n    'Nerve Finance Token',\r\n    'https://nerve.fi/',\r\n  ),\r\n  easy: new Token(\r\n    MAINNET,\r\n    '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\r\n    18,\r\n    'EASY',\r\n    'EASY Token',\r\n    'https://easyfi.network/',\r\n  ),\r\n  oddz: new Token(MAINNET, '0xCD40F2670CF58720b694968698A5514e924F742d', 18, 'ODDZ', 'Oddz Token', 'https://oddz.fi/'),\r\n  hoo: new Token(MAINNET, '0xE1d1F66215998786110Ba0102ef558b22224C016', 8, 'HOO', 'Hoo Token', 'https://hoo.com/'),\r\n  apys: new Token(\r\n    MAINNET,\r\n    '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\r\n    18,\r\n    'APYS',\r\n    'APY Swap Token',\r\n    'https://apyswap.com/',\r\n  ),\r\n  bondly: new Token(\r\n    MAINNET,\r\n    '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\r\n    18,\r\n    'BONDLY',\r\n    'Bondly Token',\r\n    'https://www.bondly.finance/',\r\n  ),\r\n  tko: new Token(\r\n    MAINNET,\r\n    '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\r\n    18,\r\n    'TKO',\r\n    'Tokocrypto Token',\r\n    'https://www.tokocrypto.com/',\r\n  ),\r\n  itam: new Token(\r\n    MAINNET,\r\n    '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\r\n    18,\r\n    'ITAM',\r\n    'Itam Network Token',\r\n    'https://itam.network/',\r\n  ),\r\n  arpa: new Token(\r\n    MAINNET,\r\n    '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\r\n    18,\r\n    'ARPA',\r\n    'Arpachain Token',\r\n    'https://arpachain.io/',\r\n  ),\r\n  eps: new Token(\r\n    MAINNET,\r\n    '0xA7f552078dcC247C2684336020c03648500C6d9F',\r\n    18,\r\n    'EPS',\r\n    'Ellipsis Finance Token',\r\n    'https://ellipsis.finance/',\r\n  ),\r\n  jgn: new Token(\r\n    MAINNET,\r\n    '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\r\n    18,\r\n    'JGN',\r\n    'Juggernaut DeFi Token',\r\n    'https://jgndefi.com/',\r\n  ),\r\n  tlm: new Token(\r\n    MAINNET,\r\n    '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\r\n    4,\r\n    'TLM',\r\n    'Alien Worlds Trilium Token',\r\n    'https://alienworlds.io/',\r\n  ),\r\n  perl: new Token(\r\n    MAINNET,\r\n    '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\r\n    18,\r\n    'PERL',\r\n    'Perlin',\r\n    'https://perlinx.finance/',\r\n  ),\r\n  alpa: new Token(\r\n    MAINNET,\r\n    '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\r\n    18,\r\n    'ALPA',\r\n    'AlpaToken',\r\n    'https://bsc.alpaca.city/',\r\n  ),\r\n  hzn: new Token(\r\n    MAINNET,\r\n    '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\r\n    18,\r\n    'HZN',\r\n    'Horizon Protocol Token',\r\n    'https://horizonprotocol.com/',\r\n  ),\r\n  suter: new Token(\r\n    MAINNET,\r\n    '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\r\n    18,\r\n    'SUTER',\r\n    'Suterusu Token',\r\n    'https://shield.suterusu.io/',\r\n  ),\r\n  cgg: new Token(\r\n    MAINNET,\r\n    '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\r\n    18,\r\n    'CGG',\r\n    'pTokens CGG Token',\r\n    'https://chainguardians.io/',\r\n  ),\r\n  mix: new Token(\r\n    MAINNET,\r\n    '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\r\n    18,\r\n    'MIX',\r\n    'Mix Token',\r\n    'https://mixie.chainguardians.io/',\r\n  ),\r\n  hakka: new Token(\r\n    MAINNET,\r\n    '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\r\n    18,\r\n    'HAKKA',\r\n    'Hakka Token',\r\n    'https://hakka.finance/',\r\n  ),\r\n  xed: new Token(\r\n    MAINNET,\r\n    '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\r\n    18,\r\n    'XED',\r\n    'Exeedme Token',\r\n    'https://www.exeedme.com/',\r\n  ),\r\n  τbtc: new Token(\r\n    MAINNET,\r\n    '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\r\n    9,\r\n    'τBTC',\r\n    'τBitcoin Token',\r\n    'https://www.btcst.finance/',\r\n  ),\r\n  alpaca: new Token(\r\n    MAINNET,\r\n    '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\r\n    18,\r\n    'ALPACA',\r\n    'AlpacaToken',\r\n    'https://www.alpacafinance.org/',\r\n  ),\r\n  dfd: new Token(\r\n    MAINNET,\r\n    '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\r\n    18,\r\n    'DFD',\r\n    'DefiDollar DAO',\r\n    'https://dusd.finance/',\r\n  ),\r\n  lmt: new Token(\r\n    MAINNET,\r\n    '0x9617857E191354dbEA0b714d78Bc59e57C411087',\r\n    18,\r\n    'LMT',\r\n    'Lympo Market Token',\r\n    'https://lympo.io/lmt/',\r\n  ),\r\n  btt: new Token(\r\n    MAINNET,\r\n    '0x8595F9dA7b868b1822194fAEd312235E43007b49',\r\n    18,\r\n    'BTT',\r\n    'Binance-Peg BitTorrent Token',\r\n    'https://www.bittorrent.com/',\r\n  ),\r\n  trx: new Token(\r\n    MAINNET,\r\n    '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\r\n    18,\r\n    'TRX',\r\n    'TRON Token',\r\n    'https://tron.network/',\r\n  ),\r\n  win: new Token(\r\n    MAINNET,\r\n    '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\r\n    18,\r\n    'WIN',\r\n    'WIN Token',\r\n    'https://winklink.org/',\r\n  ),\r\n  mcoin: new Token(\r\n    MAINNET,\r\n    '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\r\n    18,\r\n    'MCOIN',\r\n    'Wrapped Mirror COIN Token',\r\n    'https://mirror.finance/',\r\n  ),\r\n  math: new Token(\r\n    MAINNET,\r\n    '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\r\n    18,\r\n    'MATH',\r\n    'MATH Token',\r\n    'https://mathwallet.org/',\r\n  ),\r\n  kun: new Token(\r\n    MAINNET,\r\n    '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\r\n    18,\r\n    'KUN',\r\n    'QIAN governance token',\r\n    'https://chemix.io/home',\r\n  ),\r\n  qsd: new Token(\r\n    MAINNET,\r\n    '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\r\n    18,\r\n    'QSD',\r\n    'QIAN second generation dollar',\r\n    'https://chemix.io/home',\r\n  ),\r\n  hyfi: new Token(\r\n    MAINNET,\r\n    '0x9a319b959e33369C5eaA494a770117eE3e585318',\r\n    18,\r\n    'HYFI',\r\n    'HYFI Token',\r\n    'https://hyfi.pro/#/',\r\n  ),\r\n  oin: new Token(\r\n    MAINNET,\r\n    '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\r\n    8,\r\n    'OIN',\r\n    'oinfinance Token',\r\n    'https://oin.finance/',\r\n  ),\r\n  doge: new Token(\r\n    MAINNET,\r\n    '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\r\n    8,\r\n    'DOGE',\r\n    'Binance-Peg Dogecoin',\r\n    'https://dogecoin.com/',\r\n  ),\r\n  fine: new Token(\r\n    MAINNET,\r\n    '0x4e6415a5727ea08aAE4580057187923aeC331227',\r\n    18,\r\n    'FINE',\r\n    'Refinable Token',\r\n    'https://refinable.com/',\r\n  ),\r\n  one: new Token(\r\n    MAINNET,\r\n    '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\r\n    18,\r\n    'ONE',\r\n    'BigONE Token',\r\n    'https://www.bigone.com/',\r\n  ),\r\n  pmon: new Token(\r\n    MAINNET,\r\n    '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\r\n    18,\r\n    'PMON',\r\n    'Polkamon Token',\r\n    'https://polkamon.com/',\r\n  ),\r\n  τdoge: new Token(\r\n    MAINNET,\r\n    '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\r\n    8,\r\n    'τDOGE',\r\n    'τDogecoin',\r\n    'https://www.btcst.finance/',\r\n  ),\r\n  btr: new Token(\r\n    MAINNET,\r\n    '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\r\n    18,\r\n    'BTR',\r\n    'Bitrue Token',\r\n    'https://www.bitrue.com/',\r\n  ),\r\n  ubxt: new Token(\r\n    MAINNET,\r\n    '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\r\n    18,\r\n    'UBXT',\r\n    'UpBots Token',\r\n    'https://upbots.com/',\r\n  ),\r\n  wmass: new Token(\r\n    MAINNET,\r\n    '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\r\n    8,\r\n    'WMASS',\r\n    'Wrapped MASS Token',\r\n    'https://massnet.org/en/',\r\n  ),\r\n  rfox: new Token(\r\n    MAINNET,\r\n    '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\r\n    18,\r\n    'RFOX',\r\n    'RFOX Token',\r\n    'https://www.redfoxlabs.io/',\r\n  ),\r\n  xend: new Token(\r\n    MAINNET,\r\n    '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\r\n    18,\r\n    'XEND',\r\n    'XEND Token',\r\n    'https://xend.finance/',\r\n  ),\r\n  cyc: new Token(MAINNET, '0x810EE35443639348aDbbC467b33310d2AB43c168', 18, 'CYC', 'CYC Token', 'https://cyclone.xyz/'),\r\n  chr: new Token(\r\n    MAINNET,\r\n    '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\r\n    6,\r\n    'CHR',\r\n    'Chroma Token',\r\n    'https://chromia.com/',\r\n  ),\r\n  deri: new Token(\r\n    MAINNET,\r\n    '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n    18,\r\n    'DERI',\r\n    'Deri Token',\r\n    'https://deri.finance/#/index',\r\n  ),\r\n  well: new Token(\r\n    MAINNET,\r\n    '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\r\n    18,\r\n    'WELL',\r\n    'BitWell Token',\r\n    'https://www.bitwellex.com/',\r\n  ),\r\n  wex: new Token(\r\n    MAINNET,\r\n    '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\r\n    18,\r\n    'WEX',\r\n    'WaultSwap Token',\r\n    'https://wault.finance/',\r\n  ),\r\n  waultx: new Token(\r\n    MAINNET,\r\n    '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\r\n    18,\r\n    'WAULTx',\r\n    'Wault Token',\r\n    'https://wault.finance/',\r\n  ),\r\n  popen: new Token(\r\n    MAINNET,\r\n    '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\r\n    18,\r\n    'pOPEN',\r\n    'OPEN Governance Token',\r\n    'https://opendao.io/',\r\n  ),\r\n  ez: new Token(\r\n    MAINNET,\r\n    '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\r\n    18,\r\n    'EZ',\r\n    'Easy V2 Token',\r\n    'https://easyfi.network/',\r\n  ),\r\n  vrt: new Token(\r\n    MAINNET,\r\n    '0x5F84ce30DC3cF7909101C69086c50De191895883',\r\n    18,\r\n    'VRT',\r\n    'Venus Reward Token',\r\n    'https://venus.io/',\r\n  ),\r\n  tusd: new Token(\r\n    MAINNET,\r\n    '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n    18,\r\n    'TUSD',\r\n    'Binance-Peg TrueUSD Token',\r\n    'https://www.trueusd.com/',\r\n  ),\r\n  mtrg: new Token(\r\n    MAINNET,\r\n    '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\r\n    18,\r\n    'MTRG',\r\n    'Wrapped MTRG Token',\r\n    'https://www.meter.io/',\r\n  ),\r\n  ktn: new Token(\r\n    MAINNET,\r\n    '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\r\n    18,\r\n    'KTN',\r\n    'Kattana Token',\r\n    'https://kattana.io/',\r\n  ),\r\n  qkc: new Token(\r\n    MAINNET,\r\n    '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\r\n    18,\r\n    'QKC',\r\n    'QuarkChain Token',\r\n    'https://quarkchain.io/',\r\n  ),\r\n  bcfx: new Token(\r\n    MAINNET,\r\n    '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\r\n    18,\r\n    'bCFX',\r\n    'BSC Conflux Token',\r\n    'https://www.confluxnetwork.org/',\r\n  ),\r\n  mx: new Token(MAINNET, '0x9F882567A62a5560d147d64871776EeA72Df41D3', 18, 'MX', 'MX Token', 'https://www.mxc.com/'),\r\n  ata: new Token(\r\n    MAINNET,\r\n    '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\r\n    18,\r\n    'ATA',\r\n    'Automata Token',\r\n    'https://www.ata.network/',\r\n  ),\r\n  mbox: new Token(\r\n    MAINNET,\r\n    '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n    18,\r\n    'MBOX',\r\n    'Mobox Token',\r\n    'https://www.mobox.io/#/',\r\n  ),\r\n  boring: new Token(\r\n    MAINNET,\r\n    '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\r\n    18,\r\n    'BORING',\r\n    'BoringDAO Token',\r\n    'https://www.boringdao.com/',\r\n  ),\r\n  marsh: new Token(\r\n    MAINNET,\r\n    '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n    18,\r\n    'MARSH',\r\n    'Unmarshal Token',\r\n    'https://unmarshal.io/',\r\n  ),\r\n  ampl: new Token(\r\n    MAINNET,\r\n    '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\r\n    9,\r\n    'AMPL',\r\n    'AMPL Token',\r\n    'https://www.ampleforth.org/',\r\n  ),\r\n  o3: new Token(\r\n    MAINNET,\r\n    '0xEe9801669C6138E84bD50dEB500827b776777d28',\r\n    18,\r\n    'O3',\r\n    'O3 Swap Token',\r\n    'https://o3swap.com/',\r\n  ),\r\n  hai: new Token(MAINNET, '0xaA9E582e5751d703F85912903bacADdFed26484C', 8, 'HAI', 'Hacken Token', 'https://hacken.io/'),\r\n  htb: new Token(\r\n    MAINNET,\r\n    '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\r\n    18,\r\n    'HTB',\r\n    'Hotbit Token',\r\n    'https://www.hotbit.io/',\r\n  ),\r\n  woo: new Token(\r\n    MAINNET,\r\n    '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\r\n    18,\r\n    'WOO',\r\n    'Wootrade Network Token',\r\n    'https://woo.network/',\r\n  ),\r\n  $dg: new Token(\r\n    MAINNET,\r\n    '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\r\n    18,\r\n    '$DG',\r\n    'Decentral Games Token',\r\n    'https://decentral.games/',\r\n  ),\r\n  safemoon: new Token(\r\n    MAINNET,\r\n    '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\r\n    9,\r\n    'SAFEMOON',\r\n    'Safemoon Token',\r\n    'https://safemoon.net/',\r\n  ),\r\n  axs: new Token(\r\n    MAINNET,\r\n    '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\r\n    18,\r\n    'AXS',\r\n    'Binance-Pegged Axie Infinity Shard',\r\n    'https://axieinfinity.com/',\r\n  ),\r\n  c98: new Token(\r\n    MAINNET,\r\n    '0xaEC945e04baF28b135Fa7c640f624f8D90F1C3a6',\r\n    18,\r\n    'c98',\r\n    'Coin98 Token',\r\n    'https://coin98.com/',\r\n  ),\r\n  pots: new Token(\r\n    MAINNET,\r\n    '0x3Fcca8648651E5b974DD6d3e50F61567779772A8',\r\n    18,\r\n    'POTS',\r\n    'Moonpot Token',\r\n    'https://moonpot.com/',\r\n  ),\r\n  gnt: new Token(\r\n    MAINNET,\r\n    '0xF750A26EB0aCf95556e8529E72eD530f3b60f348',\r\n    18,\r\n    'GNT',\r\n    'GreenTrust Token',\r\n    'https://www.greentrusttoken.com/',\r\n  ),\r\n  rusd: new Token(\r\n    MAINNET,\r\n    '0x07663837218A003e66310a01596af4bf4e44623D',\r\n    18,\r\n    'rUSD',\r\n    'rUSD Token',\r\n    'https://appv2.rampdefi.com/#/',\r\n  ),\r\n  bp: new Token(\r\n    MAINNET,\r\n    '0xACB8f52DC63BB752a51186D1c55868ADbFfEe9C1',\r\n    18,\r\n    'BP',\r\n    'BunnyPark Token',\r\n    'https://www.bunnypark.com/',\r\n  ),\r\n  sfund: new Token(\r\n    MAINNET,\r\n    '0x477bC8d23c634C154061869478bce96BE6045D12',\r\n    18,\r\n    'SFUND',\r\n    'Seedify Fund Token',\r\n    'https://seedify.fund/',\r\n  ),\r\n  naos: new Token(\r\n    MAINNET,\r\n    '0x758d08864fB6cCE3062667225ca10b8F00496cc2',\r\n    18,\r\n    'NAOS',\r\n    'NAOSToken',\r\n    'https://naos.finance/',\r\n  ),\r\n}\r\n\r\nexport const testnetTokens = {\r\n  wbnb: new Token(\r\n    TESTNET,\r\n    '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB',\r\n    'https://www.binance.com/',\r\n  ),\r\n  cake: new Token(\r\n    TESTNET,\r\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\r\n    18,\r\n    'CAKE',\r\n    'PancakeSwap Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  busd: new Token(\r\n    TESTNET,\r\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\r\n    18,\r\n    'BUSD',\r\n    'Binance USD',\r\n    'https://www.paxos.com/busd/',\r\n  ),\r\n  syrup: new Token(\r\n    TESTNET,\r\n    '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\r\n    18,\r\n    'SYRUP',\r\n    'SyrupBar Token',\r\n    'https://pancakeswap.finance/',\r\n  ),\r\n  bake: new Token(\r\n    TESTNET,\r\n    '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n    18,\r\n    'BAKE',\r\n    'Bakeryswap Token',\r\n    'https://www.bakeryswap.org/',\r\n  ),\r\n}\r\n\r\nconst tokens = (): TokenList => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n\r\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\r\n  if (parseInt(chainId, 10) === ChainId.TESTNET) {\r\n    return Object.keys(mainnetTokens).reduce((accum, key) => {\r\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\r\n    }, {})\r\n  }\r\n\r\n  return mainnetTokens\r\n}\r\n\r\nexport const serializeTokens = (): SerializedTokenList => {\r\n  const unserializedTokens = tokens()\r\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\r\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\r\n  }, {})\r\n\r\n  return serializedTokens\r\n}\r\n\r\nexport default tokens()\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div<{\r\n  gap?: 'sm' | 'md' | 'lg' | string\r\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\r\n}>`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","export default {\r\n  masterChef: {\r\n    97: '',\r\n    56: '0xA1b115995AD13fcDC6f290A6531443a825DADB35',\r\n  },\r\n  sousChef: {\r\n\r\n    56: '',\r\n  },\r\n  lotteryV2: {\r\n    97: '',\r\n    56: '',\r\n  },\r\n  multiCall: {\r\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n    97: '',\r\n  },\r\n  pancakeProfile: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  pancakeRabbits: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  bunnyFactory: {\r\n    56: '0x27d5198850303dd023230a37803fa5485d0addc7',\r\n    97: '',\r\n  },\r\n  claimRefund: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  pointCenterIfo: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  bunnySpecial: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  tradingCompetition: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  easterNft: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  cakeVault: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  predictions: {\r\n    56: '0x598019F45b1C4e6EcC68e282c761A07734Ea0025',\r\n    97: '',\r\n  },\r\n  chainlinkOracle: {\r\n    56: '0x6bFe3D77Ff703a1D86185c211c3c126173525E20',\r\n    97: '',\r\n  },\r\n  bunnySpecialCakeVault: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  bunnySpecialPrediction: {\r\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\r\n    97: '',\r\n  },\r\n  bunnySpecialLottery: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n  farmAuction: {\r\n    56: '',\r\n    97: '',\r\n  },\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport addresses from 'config/constants/contracts'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\r\n}\r\n\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\nexport const getBunnySpecialCakeVaultAddress = () => {\r\n  return getAddress(addresses.bunnySpecialCakeVault)\r\n}\r\nexport const getBunnySpecialPredictionAddress = () => {\r\n  return getAddress(addresses.bunnySpecialPrediction)\r\n}\r\nexport const getBunnySpecialLotteryAddress = () => {\r\n  return getAddress(addresses.bunnySpecialLottery)\r\n}\r\nexport const getFarmAuctionAddress = () => {\r\n  return getAddress(addresses.farmAuction)\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { getAddress } from '@ethersproject/address'\r\nimport { AddressZero } from '@ethersproject/constants'\r\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\r\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport { BASE_BSC_SCAN_URLS } from '../config'\r\nimport { TokenAddressMap } from '../state/lists/hooks'\r\n\r\n// returns the checksummed address if the address is valid, otherwise returns false\r\nexport function isAddress(value: any): string | false {\r\n  try {\r\n    return getAddress(value)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport function getBscScanLink(\r\n  data: string | number,\r\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\r\n  chainId: ChainId = ChainId.MAINNET,\r\n): string {\r\n  switch (type) {\r\n    case 'transaction': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\r\n    }\r\n    case 'token': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\r\n    }\r\n    case 'block': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\r\n    }\r\n    case 'countdown': {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\r\n    }\r\n    default: {\r\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\r\n    }\r\n  }\r\n}\r\n\r\n// add 10%\r\nexport function calculateGasMargin(value: BigNumber): BigNumber {\r\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\r\n}\r\n\r\n// converts a basis points value to a sdk percent\r\nexport function basisPointsToPercent(num: number): Percent {\r\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\r\n}\r\n\r\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\r\n  if (slippage < 0 || slippage > 10000) {\r\n    throw Error(`Unexpected slippage value: ${slippage}`)\r\n  }\r\n  return [\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\r\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\r\n  ]\r\n}\r\n\r\n// account is not optional\r\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\r\n  return library.getSigner(account).connectUnchecked()\r\n}\r\n\r\n// account is optional\r\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\r\n  return account ? getSigner(library, account) : library\r\n}\r\n\r\n// account is optional\r\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\r\n  if (!isAddress(address) || address === AddressZero) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n\r\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\r\n}\r\n\r\n// account is optional\r\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\r\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\r\n}\r\n\r\nexport function escapeRegExp(string: string): string {\r\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n}\r\n\r\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\r\n  if (currency === ETHER) return true\r\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const BASE_BSC_SCAN_URLS = {\r\n  [ChainId.MAINNET]: 'https://bscscan.com',\r\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\r\n}\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 CAKE is minted per block\r\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 CAKE per block goes to CAKE syrup pool\r\n// 9 CAKE per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\r\nexport const CAKE_PER_BLOCK = new BigNumber(40)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\r\nexport const BASE_URL = 'https://pancakeswap.finance'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\r\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const AUCTION_BIDDERS_TO_FETCH = 500\r\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\r\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\r\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\r\n","import { ChainId, JSBI, Percent, Token } from '@pancakeswap/sdk'\r\nimport { mainnetTokens, testnetTokens } from './tokens'\r\n\r\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\r\n\r\n// a list of tokens by chain\r\ntype ChainTokenList = {\r\n  readonly [chainId in ChainId]: Token[]\r\n}\r\n\r\n// used to construct intermediary pairs for trading\r\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\r\n  [ChainId.MAINNET]: [\r\n    mainnetTokens.wbnb,\r\n    mainnetTokens.cake,\r\n    mainnetTokens.busd,\r\n    mainnetTokens.usdt,\r\n    mainnetTokens.btcb,\r\n    mainnetTokens.ust,\r\n    mainnetTokens.eth,\r\n    mainnetTokens.usdc,\r\n  ],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\n/**\r\n * Addittional bases for specific tokens\r\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\r\n */\r\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n/**\r\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\r\n * tokens.\r\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\r\n */\r\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\r\n  [ChainId.MAINNET]: {},\r\n}\r\n\r\n// used for display in the default list when adding liquidity\r\nexport const SUGGESTED_BASES: ChainTokenList = {\r\n  [ChainId.MAINNET]: [mainnetTokens.busd, mainnetTokens.cake, mainnetTokens.btcb],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\n// used to construct the list of all pairs we consider by default in the frontend\r\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\r\n  [ChainId.MAINNET]: [mainnetTokens.wbnb, mainnetTokens.dai, mainnetTokens.busd, mainnetTokens.usdt],\r\n  [ChainId.TESTNET]: [testnetTokens.wbnb, testnetTokens.cake, testnetTokens.busd],\r\n}\r\n\r\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\r\n  [ChainId.MAINNET]: [\r\n    [mainnetTokens.cake, mainnetTokens.wbnb],\r\n    [mainnetTokens.busd, mainnetTokens.usdt],\r\n    [mainnetTokens.dai, mainnetTokens.usdt],\r\n  ],\r\n}\r\n\r\nexport const NetworkContextName = 'NETWORK'\r\n\r\n// default allowed slippage, in bips\r\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\r\n// 20 minutes, denominated in seconds\r\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\r\n\r\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\r\n\r\n// one basis point\r\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\r\nexport const BIPS_BASE = JSBI.BigInt(10000)\r\n// used for warning states\r\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\r\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\r\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\r\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\r\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\r\n// for non expert mode disable swaps above this\r\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\r\n\r\n// used to ensure the user doesn't send so much BNB so they end up with <.01\r\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\r\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\r\n\r\nexport const ZERO_PERCENT = new Percent('0')\r\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\r\n\r\n// SDN OFAC addresses\r\nexport const BLOCKED_ADDRESSES: string[] = [\r\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\r\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\r\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\r\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\r\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\r\n]\r\n\r\nexport { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { SerializedToken } from 'config/constants/types'\r\n\r\nexport interface SerializedPair {\r\n  token0: SerializedToken\r\n  token1: SerializedToken\r\n}\r\n\r\nexport enum FarmStakedOnly {\r\n  ON_FINISHED = 'onFinished',\r\n  TRUE = 'true',\r\n  FALSE = 'false',\r\n}\r\n\r\nexport enum ViewMode {\r\n  TABLE = 'TABLE',\r\n  CARD = 'CARD',\r\n}\r\n\r\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\r\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\r\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\r\n  'user/updateUserSlippageTolerance',\r\n)\r\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\r\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\r\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\r\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\r\nexport const removeSerializedPair =\r\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\r\n\r\nexport const muteAudio = createAction<void>('user/muteAudio')\r\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\r\nexport const toggleTheme = createAction<void>('user/toggleTheme')\r\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\r\n  'user/updateUserFarmStakedOnly',\r\n)\r\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\r\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\r\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\r\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\r\n  'user/updateUserPredictionAcceptedRisk',\r\n)\r\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\r\n  'user/updateUserPredictionChartDisclaimerShow',\r\n)\r\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\r\n  'user/updateUserExpertModeAcknowledgementShow',\r\n)\r\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\r\n  'user/updateUserUsernameVisibility',\r\n)\r\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\r\n\r\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\r\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\r\n","import { ethers } from 'ethers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport tokens from 'config/constants/tokens'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getLotteryV2Address,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n  getTradingCompetitionAddress,\r\n  getEasterNftAddress,\r\n  getCakeVaultAddress,\r\n  getPredictionsAddress,\r\n  getChainlinkOracleAddress,\r\n  getMulticallAddress,\r\n  getBunnySpecialCakeVaultAddress,\r\n  getBunnySpecialPredictionAddress,\r\n  getBunnySpecialLotteryAddress,\r\n  getFarmAuctionAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoV1Abi from 'config/abi/ifoV1.json'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\r\nimport easterNftAbi from 'config/abi/easterNft.json'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\r\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\r\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\r\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\r\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\r\n\r\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const signerOrProvider = signer ?? simpleRpcProvider\r\n  return new ethers.Contract(address, abi, signerOrProvider)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bep20Abi, address, signer)\r\n}\r\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(erc721Abi, address, signer)\r\n}\r\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lpTokenAbi, address, signer)\r\n}\r\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV1Abi, address, signer)\r\n}\r\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV2Abi, address, signer)\r\n}\r\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\r\n}\r\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeAbi, tokens.cake.address, signer)\r\n}\r\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\r\n}\r\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\r\n}\r\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\r\n}\r\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\r\n}\r\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\r\n}\r\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(masterChef, getMasterChefAddress(), signer)\r\n}\r\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\r\n}\r\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\r\n}\r\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\r\n}\r\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\r\n}\r\n\r\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\r\n}\r\n\r\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\r\n}\r\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\r\n}\r\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\r\n}\r\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\r\n}\r\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\r\n}\r\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      <CountUp\r\n        start={previousValue.current}\r\n        end={value}\r\n        prefix={prefix}\r\n        suffix={unit}\r\n        decimals={decimals}\r\n        duration={1}\r\n        separator=\",\"\r\n      />\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n  getChainlinkOracleContract,\r\n  getSouschefV2Contract,\r\n  getLotteryV2Contract,\r\n  getBunnySpecialCakeVaultContract,\r\n  getBunnySpecialPredictionContract,\r\n  getFarmAuctionContract,\r\n  getBunnySpecialLotteryContract,\r\n} from 'utils/contractHelpers'\r\nimport { getMulticallAddress } from 'utils/addressHelpers'\r\n\r\n// Imports below migrated from Exchange useContract.ts\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { ChainId, WETH } from '@pancakeswap/sdk'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\r\nimport ENS_ABI from '../config/abi/ens-registrar.json'\r\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\r\nimport ERC20_ABI from '../config/abi/erc20.json'\r\nimport WETH_ABI from '../config/abi/weth.json'\r\nimport multiCallAbi from '../config/abi/Multicall.json'\r\nimport { getContract } from '../utils'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useLotteryV2Contract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const useSousChefV2 = (id) => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useChainlinkOracleContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyCakeVaultContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useSpecialBunnyPredictionContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useBunnySpecialLotteryContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\r\n}\r\n\r\nexport const useFarmAuctionContract = () => {\r\n  const { account, library } = useActiveWeb3React()\r\n  // This hook is slightly different from others\r\n  // Calls were failing if unconnected user goes to farm auction page\r\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\r\n  // However, this fix is not ideal, it currently has following behavior:\r\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\r\n  // - If you go directly to Farm Auction page\r\n  //   - as unconnected user you don't see any console errors\r\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\r\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\r\n  //\r\n  // Similar behavior was also noticed on Trading Competition page.\r\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\r\n}\r\n\r\n// Code below migrated from Exchange useContract.ts\r\n\r\n// returns null on errors\r\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\r\n  const { library, account } = useActiveWeb3React()\r\n\r\n  return useMemo(() => {\r\n    if (!address || !ABI || !library) return null\r\n    try {\r\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\r\n    } catch (error) {\r\n      console.error('Failed to get contract', error)\r\n      return null\r\n    }\r\n  }, [address, ABI, library, withSignerIfPossible, account])\r\n}\r\n\r\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  let address: string | undefined\r\n  if (chainId) {\r\n    // eslint-disable-next-line default-case\r\n    switch (chainId) {\r\n      case ChainId.MAINNET:\r\n      case ChainId.TESTNET:\r\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n        break\r\n    }\r\n  }\r\n  return useContract(address, ENS_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\r\n}\r\n\r\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\r\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\r\n}\r\n\r\nexport function useMulticallContract(): Contract | null {\r\n  return useContract(getMulticallAddress(), multiCallAbi, false)\r\n}\r\n","import { ChainId, Pair, Token } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { AppDispatch, AppState } from '../../index'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  FarmStakedOnly,\r\n  muteAudio,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  toggleTheme as toggleThemeAction,\r\n  unmuteAudio,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserFarmStakedOnly,\r\n  updateUserSingleHopOnly,\r\n  updateUserSlippageTolerance,\r\n  updateGasPrice,\r\n  addWatchlistToken,\r\n  addWatchlistPool,\r\n  updateUserPoolStakedOnly,\r\n  updateUserPoolsViewMode,\r\n  ViewMode,\r\n  updateUserFarmsViewMode,\r\n  updateUserPredictionChartDisclaimerShow,\r\n  updateUserPredictionAcceptedRisk,\r\n  updateUserUsernameVisibility,\r\n  updateUserExpertModeAcknowledgementShow,\r\n} from '../actions'\r\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\r\n\r\nexport function useAudioModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\r\n\r\n  const toggleSetAudioMode = useCallback(() => {\r\n    if (audioPlay) {\r\n      dispatch(muteAudio())\r\n    } else {\r\n      dispatch(unmuteAudio())\r\n    }\r\n  }, [audioPlay, dispatch])\r\n\r\n  return [audioPlay, toggleSetAudioMode]\r\n}\r\n\r\nexport function useIsExpertMode(): boolean {\r\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\r\n}\r\n\r\nexport function useExpertModeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const expertMode = useIsExpertMode()\r\n\r\n  const toggleSetExpertMode = useCallback(() => {\r\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\r\n  }, [expertMode, dispatch])\r\n\r\n  return [expertMode, toggleSetExpertMode]\r\n}\r\n\r\nexport function useThemeManager(): [boolean, () => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\r\n\r\n  const toggleTheme = useCallback(() => {\r\n    dispatch(toggleThemeAction())\r\n  }, [dispatch])\r\n\r\n  return [isDark, toggleTheme]\r\n}\r\n\r\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\r\n    (state) => state.user.userSingleHopOnly,\r\n  )\r\n\r\n  const setSingleHopOnly = useCallback(\r\n    (newSingleHopOnly: boolean) => {\r\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [singleHopOnly, setSingleHopOnly]\r\n}\r\n\r\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\r\n    return state.user.userSlippageTolerance\r\n  })\r\n\r\n  const setUserSlippageTolerance = useCallback(\r\n    (slippage: number) => {\r\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userSlippageTolerance, setUserSlippageTolerance]\r\n}\r\n\r\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\r\n    return state.user.userFarmStakedOnly\r\n  })\r\n\r\n  const setUserFarmStakedOnly = useCallback(\r\n    (stakedOnly: boolean) => {\r\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\r\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [\r\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\r\n    setUserFarmStakedOnly,\r\n  ]\r\n}\r\n\r\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\r\n    return state.user.userPoolStakedOnly\r\n  })\r\n\r\n  const setUserPoolStakedOnly = useCallback(\r\n    (stakedOnly: boolean) => {\r\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\r\n}\r\n\r\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\r\n    return state.user.userPoolsViewMode\r\n  })\r\n\r\n  const setUserPoolsViewMode = useCallback(\r\n    (viewMode: ViewMode) => {\r\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPoolsViewMode, setUserPoolsViewMode]\r\n}\r\n\r\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\r\n    return state.user.userFarmsViewMode\r\n  })\r\n\r\n  const setUserFarmsViewMode = useCallback(\r\n    (viewMode: ViewMode) => {\r\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userFarmsViewMode, setUserFarmsViewMode]\r\n}\r\n\r\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\r\n    return state.user.userPredictionAcceptedRisk\r\n  })\r\n\r\n  const setUserPredictionAcceptedRisk = useCallback(\r\n    (acceptedRisk: boolean) => {\r\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\r\n}\r\n\r\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userPredictionChartDisclaimerShow = useSelector<\r\n    AppState,\r\n    AppState['user']['userPredictionChartDisclaimerShow']\r\n  >((state) => {\r\n    return state.user.userPredictionChartDisclaimerShow\r\n  })\r\n\r\n  const setPredictionUserChartDisclaimerShow = useCallback(\r\n    (showDisclaimer: boolean) => {\r\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\r\n}\r\n\r\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userExpertModeAcknowledgementShow = useSelector<\r\n    AppState,\r\n    AppState['user']['userExpertModeAcknowledgementShow']\r\n  >((state) => {\r\n    return state.user.userExpertModeAcknowledgementShow\r\n  })\r\n\r\n  const setUserExpertModeAcknowledgementShow = useCallback(\r\n    (showAcknowledgement: boolean) => {\r\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\r\n}\r\n\r\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\r\n    return state.user.userUsernameVisibility\r\n  })\r\n\r\n  const setUserUsernameVisibility = useCallback(\r\n    (usernameVisibility: boolean) => {\r\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userUsernameVisibility, setUserUsernameVisibility]\r\n}\r\n\r\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\r\n    return state.user.userDeadline\r\n  })\r\n\r\n  const setUserDeadline = useCallback(\r\n    (deadline: number) => {\r\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userDeadline, setUserDeadline]\r\n}\r\n\r\nexport function useAddUserToken(): (token: Token) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (token: Token) => {\r\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  return useCallback(\r\n    (chainId: number, address: string) => {\r\n      dispatch(removeSerializedToken({ chainId, address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\nexport function useGasPrice(): string {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const userGasPrice = useGasPrice()\r\n\r\n  const setGasPrice = useCallback(\r\n    (gasPrice: string) => {\r\n      dispatch(updateGasPrice({ gasPrice }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return [userGasPrice, setGasPrice]\r\n}\r\n\r\nfunction serializePair(pair: Pair): SerializedPair {\r\n  return {\r\n    token0: serializeToken(pair.token0),\r\n    token1: serializeToken(pair.token1),\r\n  }\r\n}\r\n\r\nexport function usePairAdder(): (pair: Pair) => void {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (pair: Pair) => {\r\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\r\n    },\r\n    [dispatch],\r\n  )\r\n}\r\n\r\n/**\r\n * Given two tokens return the liquidity token that represents its liquidity shares\r\n * @param tokenA one of the two tokens\r\n * @param tokenB the other token\r\n */\r\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\r\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\r\n}\r\n\r\n/**\r\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\r\n */\r\nexport function useTrackedTokenPairs(): [Token, Token][] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  // pinned pairs\r\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\r\n\r\n  // pairs for every token against every base\r\n  const generatedPairs: [Token, Token][] = useMemo(\r\n    () =>\r\n      chainId\r\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\r\n            const token = tokens[tokenAddress]\r\n            // for each token on the current chain,\r\n            return (\r\n              // loop though all bases on the current chain\r\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\r\n                // to construct pairs of the given token with each base\r\n                .map((base) => {\r\n                  if (base.address === token.address) {\r\n                    return null\r\n                  }\r\n                  return [base, token]\r\n                })\r\n                .filter((p): p is [Token, Token] => p !== null)\r\n            )\r\n          })\r\n        : [],\r\n    [tokens, chainId],\r\n  )\r\n\r\n  // pairs saved by users\r\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\r\n\r\n  const userPairs: [Token, Token][] = useMemo(() => {\r\n    if (!chainId || !savedSerializedPairs) return []\r\n    const forChain = savedSerializedPairs[chainId]\r\n    if (!forChain) return []\r\n\r\n    return Object.keys(forChain).map((pairId) => {\r\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\r\n    })\r\n  }, [savedSerializedPairs, chainId])\r\n\r\n  const combinedList = useMemo(\r\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\r\n    [generatedPairs, pinnedPairs, userPairs],\r\n  )\r\n\r\n  return useMemo(() => {\r\n    // dedupes pairs of tokens in the combined list\r\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\r\n      const sorted = tokenA.sortsBefore(tokenB)\r\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\r\n      if (memo[key]) return memo\r\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return memo\r\n    }, {})\r\n\r\n    return Object.keys(keyed).map((key) => keyed[key])\r\n  }, [combinedList])\r\n}\r\n\r\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\r\n  const updatedSavedTokens = useCallback(\r\n    (address: string) => {\r\n      dispatch(addWatchlistToken({ address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return [savedTokens, updatedSavedTokens]\r\n}\r\n\r\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\r\n  const updateSavedPools = useCallback(\r\n    (address: string) => {\r\n      dispatch(addWatchlistPool({ address }))\r\n    },\r\n    [dispatch],\r\n  )\r\n  return [savedPools, updateSavedPools]\r\n}\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { AnyAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  CampaignType,\r\n  SerializedFarmConfig,\r\n  LotteryStatus,\r\n  LotteryTicket,\r\n  DeserializedPoolConfig,\r\n  SerializedPoolConfig,\r\n  Team,\r\n  TranslatableText,\r\n  DeserializedFarmConfig,\r\n} from 'config/constants/types'\r\nimport { Nft } from 'config/constants/nfts/types'\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\r\n\r\nexport interface BigNumberToJson {\r\n  type: 'BigNumber'\r\n  hex: string\r\n}\r\n\r\nexport type SerializedBigNumber = string\r\n\r\ninterface SerializedFarmUserData {\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport interface DeserializedFarmUserData {\r\n  allowance: BigNumber\r\n  tokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  earnings: BigNumber\r\n}\r\n\r\nexport interface SerializedFarm extends SerializedFarmConfig {\r\n  tokenPriceBusd?: string\r\n  quoteTokenPriceBusd?: string\r\n  tokenAmountTotal?: SerializedBigNumber\r\n  lpTotalInQuoteToken?: SerializedBigNumber\r\n  lpTotalSupply?: SerializedBigNumber\r\n  tokenPriceVsQuote?: SerializedBigNumber\r\n  poolWeight?: SerializedBigNumber\r\n  userData?: SerializedFarmUserData\r\n}\r\n\r\nexport interface DeserializedFarm extends DeserializedFarmConfig {\r\n  tokenPriceBusd?: string\r\n  quoteTokenPriceBusd?: string\r\n  tokenAmountTotal?: BigNumber\r\n  lpTotalInQuoteToken?: BigNumber\r\n  lpTotalSupply?: BigNumber\r\n  tokenPriceVsQuote?: BigNumber\r\n  poolWeight?: BigNumber\r\n  userData?: DeserializedFarmUserData\r\n}\r\n\r\ninterface CorePoolProps {\r\n  startBlock?: number\r\n  endBlock?: number\r\n  apr?: number\r\n  stakingTokenPrice?: number\r\n  earningTokenPrice?: number\r\n  isAutoVault?: boolean\r\n}\r\n\r\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\r\n  totalStaked?: BigNumber\r\n  stakingLimit?: BigNumber\r\n  userData?: {\r\n    allowance: BigNumber\r\n    stakingTokenBalance: BigNumber\r\n    stakedBalance: BigNumber\r\n    pendingReward: BigNumber\r\n  }\r\n}\r\n\r\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\r\n  totalStaked?: SerializedBigNumber\r\n  stakingLimit?: SerializedBigNumber\r\n  userData?: {\r\n    allowance: SerializedBigNumber\r\n    stakingTokenBalance: SerializedBigNumber\r\n    stakedBalance: SerializedBigNumber\r\n    pendingReward: SerializedBigNumber\r\n  }\r\n}\r\n\r\nexport interface Profile {\r\n  userId: number\r\n  points: number\r\n  teamId: number\r\n  nftAddress: string\r\n  tokenId: number\r\n  isActive: boolean\r\n  username: string\r\n  nft?: Nft\r\n  team: Team\r\n  hasRegistered: boolean\r\n}\r\n\r\n// Slices states\r\n\r\nexport interface SerializedFarmsState {\r\n  data: SerializedFarm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface DeserializedFarmsState {\r\n  data: DeserializedFarm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface VaultFees {\r\n  performanceFee: number\r\n  callFee: number\r\n  withdrawalFee: number\r\n  withdrawalFeePeriod: number\r\n}\r\n\r\nexport interface VaultUser {\r\n  isLoading: boolean\r\n  userShares: string\r\n  cakeAtLastUserAction: string\r\n  lastDepositedTime: string\r\n  lastUserActionTime: string\r\n}\r\nexport interface CakeVault {\r\n  totalShares?: string\r\n  pricePerFullShare?: string\r\n  totalCakeInVault?: string\r\n  estimatedCakeBountyReward?: string\r\n  totalPendingCakeHarvest?: string\r\n  fees?: VaultFees\r\n  userData?: VaultUser\r\n}\r\n\r\nexport interface PoolsState {\r\n  data: SerializedPool[]\r\n  cakeVault: CakeVault\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface ProfileState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  hasRegistered: boolean\r\n  data: Profile\r\n  profileAvatars: {\r\n    [key: string]: {\r\n      username: string\r\n      nft: Nft\r\n    }\r\n  }\r\n}\r\n\r\nexport type TeamResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: boolean\r\n}\r\n\r\nexport type TeamsById = {\r\n  [key: string]: Team\r\n}\r\n\r\nexport interface TeamsState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: TeamsById\r\n}\r\n\r\nexport interface Achievement {\r\n  id: string\r\n  type: CampaignType\r\n  address: string\r\n  title: TranslatableText\r\n  description?: TranslatableText\r\n  badge: string\r\n  points: number\r\n}\r\n\r\nexport interface AchievementState {\r\n  data: Achievement[]\r\n}\r\n\r\n// Block\r\n\r\nexport interface BlockState {\r\n  currentBlock: number\r\n  initialBlock: number\r\n}\r\n\r\n// Collectibles\r\n\r\nexport interface CollectiblesState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: {\r\n    [key: string]: number[]\r\n  }\r\n}\r\n\r\n// Predictions\r\n\r\nexport enum BetPosition {\r\n  BULL = 'Bull',\r\n  BEAR = 'Bear',\r\n  HOUSE = 'House',\r\n}\r\n\r\nexport enum PredictionStatus {\r\n  INITIAL = 'initial',\r\n  LIVE = 'live',\r\n  PAUSED = 'paused',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface Round {\r\n  id: string\r\n  epoch: number\r\n  position: BetPosition\r\n  failed: boolean\r\n  startAt: number\r\n  startBlock: number\r\n  startHash: string\r\n  lockAt: number\r\n  lockBlock: number\r\n  lockHash: string\r\n  lockPrice: number\r\n  lockRoundId: string\r\n  closeAt: number\r\n  closeBlock: number\r\n  closeHash: string\r\n  closePrice: number\r\n  closeRoundId: string\r\n  totalBets: number\r\n  totalAmount: number\r\n  bullBets: number\r\n  bullAmount: number\r\n  bearBets: number\r\n  bearAmount: number\r\n  bets?: Bet[]\r\n}\r\n\r\nexport interface Market {\r\n  paused: boolean\r\n  epoch: number\r\n}\r\n\r\nexport interface Bet {\r\n  id?: string\r\n  hash?: string\r\n  amount: number\r\n  position: BetPosition\r\n  claimed: boolean\r\n  claimedAt: number\r\n  claimedBlock: number\r\n  claimedHash: string\r\n  claimedBNB: number\r\n  claimedNetBNB: number\r\n  createdAt: number\r\n  updatedAt: number\r\n  user?: PredictionUser\r\n  round?: Round\r\n}\r\n\r\nexport interface PredictionUser {\r\n  id: string\r\n  createdAt: number\r\n  updatedAt: number\r\n  block: number\r\n  totalBets: number\r\n  totalBetsBull: number\r\n  totalBetsBear: number\r\n  totalBNB: number\r\n  totalBNBBull: number\r\n  totalBNBBear: number\r\n  totalBetsClaimed: number\r\n  totalBNBClaimed: number\r\n  winRate: number\r\n  averageBNB: number\r\n  netBNB: number\r\n  bets?: Bet[]\r\n}\r\n\r\nexport enum HistoryFilter {\r\n  ALL = 'all',\r\n  COLLECTED = 'collected',\r\n  UNCOLLECTED = 'uncollected',\r\n}\r\n\r\nexport interface LedgerData {\r\n  [key: string]: {\r\n    [key: string]: ReduxNodeLedger\r\n  }\r\n}\r\n\r\nexport interface RoundData {\r\n  [key: string]: ReduxNodeRound\r\n}\r\n\r\nexport interface ReduxNodeLedger {\r\n  position: BetPosition\r\n  amount: BigNumberToJson\r\n  claimed: boolean\r\n}\r\n\r\nexport interface NodeLedger {\r\n  position: BetPosition\r\n  amount: ethers.BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface ReduxNodeRound {\r\n  epoch: number\r\n  startTimestamp: number | null\r\n  lockTimestamp: number | null\r\n  closeTimestamp: number | null\r\n  lockPrice: BigNumberToJson | null\r\n  closePrice: BigNumberToJson | null\r\n  totalAmount: BigNumberToJson\r\n  bullAmount: BigNumberToJson\r\n  bearAmount: BigNumberToJson\r\n  rewardBaseCalAmount: BigNumberToJson\r\n  rewardAmount: BigNumberToJson\r\n  oracleCalled: boolean\r\n  lockOracleId: string\r\n  closeOracleId: string\r\n}\r\n\r\nexport interface NodeRound {\r\n  epoch: number\r\n  startTimestamp: number | null\r\n  lockTimestamp: number | null\r\n  closeTimestamp: number | null\r\n  lockPrice: ethers.BigNumber | null\r\n  closePrice: ethers.BigNumber | null\r\n  totalAmount: ethers.BigNumber\r\n  bullAmount: ethers.BigNumber\r\n  bearAmount: ethers.BigNumber\r\n  rewardBaseCalAmount: ethers.BigNumber\r\n  rewardAmount: ethers.BigNumber\r\n  oracleCalled: boolean\r\n  closeOracleId: string\r\n  lockOracleId: string\r\n}\r\n\r\nexport enum LeaderboardLoadingState {\r\n  INITIAL,\r\n  LOADING,\r\n  IDLE,\r\n}\r\n\r\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\r\n\r\nexport interface LeaderboardFilter {\r\n  address?: string\r\n  orderBy?: string\r\n  timePeriod?: LeaderboardFilterTimePeriod\r\n}\r\n\r\nexport interface PredictionsState {\r\n  status: PredictionStatus\r\n  isLoading: boolean\r\n  isHistoryPaneOpen: boolean\r\n  isChartPaneOpen: boolean\r\n  isFetchingHistory: boolean\r\n  historyFilter: HistoryFilter\r\n  currentEpoch: number\r\n  intervalSeconds: number\r\n  minBetAmount: string\r\n  bufferSeconds: number\r\n  lastOraclePrice: string\r\n  history: Bet[]\r\n  totalHistory: number\r\n  currentHistoryPage: number\r\n  hasHistoryLoaded: boolean\r\n  rounds?: RoundData\r\n  ledgers?: LedgerData\r\n  claimableStatuses: {\r\n    [key: string]: boolean\r\n  }\r\n  leaderboard: {\r\n    loadingState: LeaderboardLoadingState\r\n    filters: LeaderboardFilter\r\n    skip: number\r\n    hasMoreResults: boolean\r\n    addressResults: {\r\n      [key: string]: PredictionUser\r\n    }\r\n    results: PredictionUser[]\r\n  }\r\n}\r\n\r\n// Voting\r\n\r\n/* eslint-disable camelcase */\r\n/**\r\n * @see https://hub.snapshot.page/graphql\r\n */\r\nexport interface VoteWhere {\r\n  id?: string\r\n  id_in?: string[]\r\n  voter?: string\r\n  voter_in?: string[]\r\n  proposal?: string\r\n  proposal_in?: string[]\r\n}\r\n\r\nexport enum SnapshotCommand {\r\n  PROPOSAL = 'proposal',\r\n  VOTE = 'vote',\r\n}\r\n\r\nexport enum ProposalType {\r\n  ALL = 'all',\r\n  CORE = 'core',\r\n  COMMUNITY = 'community',\r\n}\r\n\r\nexport enum ProposalState {\r\n  ACTIVE = 'active',\r\n  PENDING = 'pending',\r\n  CLOSED = 'closed',\r\n}\r\n\r\nexport interface Space {\r\n  id: string\r\n  name: string\r\n}\r\n\r\nexport interface Proposal {\r\n  author: string\r\n  body: string\r\n  choices: string[]\r\n  end: number\r\n  id: string\r\n  snapshot: string\r\n  space: Space\r\n  start: number\r\n  state: ProposalState\r\n  title: string\r\n}\r\n\r\nexport interface Vote {\r\n  id: string\r\n  voter: string\r\n  created: number\r\n  space: Space\r\n  proposal: {\r\n    choices: Proposal['choices']\r\n  }\r\n  choice: number\r\n  metadata?: {\r\n    votingPower: string\r\n    verificationHash: string\r\n  }\r\n  _inValid?: boolean\r\n}\r\n\r\nexport enum VotingStateLoadingStatus {\r\n  INITIAL = 'initial',\r\n  IDLE = 'idle',\r\n  LOADING = 'loading',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface VotingState {\r\n  proposalLoadingStatus: VotingStateLoadingStatus\r\n  proposals: {\r\n    [key: string]: Proposal\r\n  }\r\n  voteLoadingStatus: VotingStateLoadingStatus\r\n  votes: {\r\n    [key: string]: Vote[]\r\n  }\r\n}\r\n\r\nexport interface LotteryRoundUserTickets {\r\n  isLoading?: boolean\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\ninterface LotteryRoundGenerics {\r\n  isLoading?: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  startTime: string\r\n  endTime: string\r\n  treasuryFee: string\r\n  firstTicketId: string\r\n  lastTicketId: string\r\n  finalNumber: number\r\n}\r\n\r\nexport interface LotteryRound extends LotteryRoundGenerics {\r\n  userTickets?: LotteryRoundUserTickets\r\n  priceTicketInCake: BigNumber\r\n  discountDivisor: BigNumber\r\n  amountCollectedInCake: BigNumber\r\n  cakePerBracket: string[]\r\n  countWinnersPerBracket: string[]\r\n  rewardsBreakdown: string[]\r\n}\r\n\r\nexport interface LotteryResponse extends LotteryRoundGenerics {\r\n  priceTicketInCake: SerializedBigNumber\r\n  discountDivisor: SerializedBigNumber\r\n  amountCollectedInCake: SerializedBigNumber\r\n  cakePerBracket: SerializedBigNumber[]\r\n  countWinnersPerBracket: SerializedBigNumber[]\r\n  rewardsBreakdown: SerializedBigNumber[]\r\n}\r\n\r\nexport interface LotteryState {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n  isTransitioning: boolean\r\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\r\n  lotteriesData?: LotteryRoundGraphEntity[]\r\n  userLotteryData?: LotteryUserGraphEntity\r\n}\r\n\r\nexport interface LotteryRoundGraphEntity {\r\n  id: string\r\n  totalUsers: string\r\n  totalTickets: string\r\n  winningTickets: string\r\n  status: LotteryStatus\r\n  finalNumber: string\r\n  startTime: string\r\n  endTime: string\r\n  ticketPrice: SerializedBigNumber\r\n}\r\n\r\nexport interface LotteryUserGraphEntity {\r\n  account: string\r\n  totalCake: string\r\n  totalTickets: string\r\n  rounds: UserRound[]\r\n}\r\n\r\nexport interface UserRound {\r\n  claimed: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  endTime: string\r\n  totalTickets: string\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\r\n\r\n// Global state\r\n\r\nexport interface State {\r\n  achievements: AchievementState\r\n  block: BlockState\r\n  farms: SerializedFarmsState\r\n  pools: PoolsState\r\n  predictions: PredictionsState\r\n  profile: ProfileState\r\n  teams: TeamsState\r\n  collectibles: CollectiblesState\r\n  voting: VotingState\r\n  lottery: LotteryState\r\n}\r\n","import { ethers } from 'ethers'\r\nimport { getMulticallContract } from 'utils/contractHelpers'\r\nimport { MultiCallResponse } from './types'\r\n\r\nexport interface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\r\n  try {\r\n    const multi = getMulticallContract()\r\n    const itf = new ethers.utils.Interface(abi)\r\n\r\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n    const { returnData } = await multi.aggregate(calldata)\r\n\r\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n    return res\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\r\n */\r\nexport const multicallv2 = async <T = any>(\r\n  abi: any[],\r\n  calls: Call[],\r\n  options: MulticallOptions = { requireSuccess: true },\r\n): Promise<MultiCallResponse<T>> => {\r\n  const { requireSuccess } = options\r\n  const multi = getMulticallContract()\r\n  const itf = new ethers.utils.Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\r\n\r\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\r\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\r\n}\r\n\r\nexport function wrappedCurrencyAmount(\r\n  currencyAmount: CurrencyAmount | undefined,\r\n  chainId: ChainId | undefined,\r\n): TokenAmount | undefined {\r\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\r\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\r\n}\r\n\r\nexport function unwrappedToken(token: Token): Currency {\r\n  if (token.equals(WETH[token.chainId])) return ETHER\r\n  return token\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getApy } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\r\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\r\n\r\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\r\n  const { isAutoVault, apr } = pool\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\r\n\r\n  if (isAutoVault) {\r\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\r\n    return { apr: autoApr, autoCompoundFrequency }\r\n  }\r\n  return { apr, autoCompoundFrequency }\r\n}\r\n\r\nexport const getCakeVaultEarnings = (\r\n  account: string,\r\n  cakeAtLastUserAction: BigNumber,\r\n  userShares: BigNumber,\r\n  pricePerFullShare: BigNumber,\r\n  earningTokenPrice: number,\r\n) => {\r\n  const hasAutoEarnings =\r\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\r\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\r\n\r\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\r\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\r\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","import { Currency } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrencyLogo from './CurrencyLogo'\r\n\r\nconst Wrapper = styled.div<{ margin: boolean }>`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-right: ${({ margin }) => margin && '4px'};\r\n`\r\n\r\ninterface DoubleCurrencyLogoProps {\r\n  margin?: boolean\r\n  size?: number\r\n  currency0?: Currency\r\n  currency1?: Currency\r\n}\r\n\r\nexport default function DoubleCurrencyLogo({\r\n  currency0,\r\n  currency1,\r\n  size = 20,\r\n  margin = false,\r\n}: DoubleCurrencyLogoProps) {\r\n  return (\r\n    <Wrapper margin={margin}>\r\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\r\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport Logo from './Logo'\r\n\r\nconst StyledListLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function ListLogo({\r\n  logoURI,\r\n  style,\r\n  size = '24px',\r\n  alt,\r\n}: {\r\n  logoURI: string\r\n  size?: string\r\n  style?: React.CSSProperties\r\n  alt?: string\r\n}) {\r\n  const srcs: string[] = useHttpLocations(logoURI)\r\n\r\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { parseBytes32String } from '@ethersproject/strings'\r\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { arrayify } from 'ethers/lib/utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport {\r\n  TokenAddressMap,\r\n  useDefaultTokenList,\r\n  useUnsupportedTokenList,\r\n  useCombinedActiveList,\r\n  useCombinedInactiveList,\r\n} from '../state/lists/hooks'\r\n\r\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\r\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\r\nimport { isAddress } from '../utils'\r\n\r\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\r\nimport { filterTokens } from '../components/SearchModal/filtering'\r\n\r\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\r\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\r\n  const { chainId } = useActiveWeb3React()\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return {}\r\n\r\n    // reduce to just tokens\r\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n      newMap[address] = tokenMap[chainId][address].token\r\n      return newMap\r\n    }, {})\r\n\r\n    if (includeUserAdded) {\r\n      return (\r\n        userAddedTokens\r\n          // reduce into all ALL_TOKENS filtered by the current chain\r\n          .reduce<{ [address: string]: Token }>(\r\n            (tokenMap_, token) => {\r\n              tokenMap_[token.address] = token\r\n              return tokenMap_\r\n            },\r\n            // must make a copy because reduce modifies the map, and we do not\r\n            // want to make a copy in every iteration\r\n            { ...mapWithoutUrls },\r\n          )\r\n      )\r\n    }\r\n\r\n    return mapWithoutUrls\r\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\r\n}\r\n\r\nexport function useDefaultTokens(): { [address: string]: Token } {\r\n  const defaultList = useDefaultTokenList()\r\n  return useTokensFromMap(defaultList, false)\r\n}\r\n\r\nexport function useAllTokens(): { [address: string]: Token } {\r\n  const allTokens = useCombinedActiveList()\r\n  return useTokensFromMap(allTokens, true)\r\n}\r\n\r\nexport function useAllInactiveTokens(): { [address: string]: Token } {\r\n  // get inactive tokens\r\n  const inactiveTokensMap = useCombinedInactiveList()\r\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\r\n\r\n  // filter out any token that are on active list\r\n  const activeTokensAddresses = Object.keys(useAllTokens())\r\n  const filteredInactive = activeTokensAddresses\r\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\r\n        if (!activeTokensAddresses.includes(address)) {\r\n          newMap[address] = inactiveTokens[address]\r\n        }\r\n        return newMap\r\n      }, {})\r\n    : inactiveTokens\r\n\r\n  return filteredInactive\r\n}\r\n\r\nexport function useUnsupportedTokens(): { [address: string]: Token } {\r\n  const unsupportedTokensMap = useUnsupportedTokenList()\r\n  return useTokensFromMap(unsupportedTokensMap, false)\r\n}\r\n\r\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\r\n  const activeTokens = useAllTokens()\r\n\r\n  if (!activeTokens || !token) {\r\n    return false\r\n  }\r\n\r\n  return !!activeTokens[token.address]\r\n}\r\n\r\n// used to detect extra search results\r\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const inactiveTokens = useAllInactiveTokens()\r\n\r\n  return useMemo(() => {\r\n    if (!chainId || searchQuery === '') {\r\n      return undefined\r\n    }\r\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\r\n    return tokens\r\n  }, [chainId, inactiveTokens, searchQuery])\r\n}\r\n\r\n// Check if currency is included in custom list from user storage\r\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\r\n  const userAddedTokens = useUserAddedTokens()\r\n\r\n  if (!currency) {\r\n    return false\r\n  }\r\n\r\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\r\n}\r\n\r\n// parse a name or symbol from a token response\r\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\r\n\r\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\r\n  return str && str.length > 0\r\n    ? str\r\n    : // need to check for proper bytes string and valid terminator\r\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\r\n    ? parseBytes32String(bytes32)\r\n    : defaultValue\r\n}\r\n\r\n// undefined if invalid or does not exist\r\n// null if loading\r\n// otherwise returns the token\r\nexport function useToken(tokenAddress?: string): Token | undefined | null {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens = useAllTokens()\r\n\r\n  const address = isAddress(tokenAddress)\r\n\r\n  const tokenContract = useTokenContract(address || undefined, false)\r\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\r\n  const token: Token | undefined = address ? tokens[address] : undefined\r\n\r\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\r\n  const tokenNameBytes32 = useSingleCallResult(\r\n    token ? undefined : tokenContractBytes32,\r\n    'name',\r\n    undefined,\r\n    NEVER_RELOAD,\r\n  )\r\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\r\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\r\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\r\n\r\n  return useMemo(() => {\r\n    if (token) return token\r\n    if (!chainId || !address) return undefined\r\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\r\n    if (decimals.result) {\r\n      return new Token(\r\n        chainId,\r\n        address,\r\n        decimals.result[0],\r\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\r\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\r\n      )\r\n    }\r\n    return undefined\r\n  }, [\r\n    address,\r\n    chainId,\r\n    decimals.loading,\r\n    decimals.result,\r\n    symbol.loading,\r\n    symbol.result,\r\n    symbolBytes32.result,\r\n    token,\r\n    tokenName.loading,\r\n    tokenName.result,\r\n    tokenNameBytes32.result,\r\n  ])\r\n}\r\n\r\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\r\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\r\n  const token = useToken(isBNB ? undefined : currencyId)\r\n  return isBNB ? ETHER : token\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  BetPosition,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeLedger,\r\n  ReduxNodeRound,\r\n  Round,\r\n  RoundData,\r\n  PredictionUser,\r\n  HistoryFilter,\r\n} from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport { getPredictionsAddress } from 'utils/addressHelpers'\r\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\r\nimport {\r\n  BetResponse,\r\n  getRoundBaseFields,\r\n  getBetBaseFields,\r\n  getUserBaseFields,\r\n  RoundResponse,\r\n  TotalWonMarketResponse,\r\n  UserResponse,\r\n} from './queries'\r\nimport { ROUNDS_PER_PAGE } from './config'\r\n\r\nexport enum Result {\r\n  WIN = 'win',\r\n  LOSE = 'lose',\r\n  CANCELED = 'canceled',\r\n  LIVE = 'live',\r\n}\r\n\r\nexport const numberOrNull = (value: string) => {\r\n  if (value === null) {\r\n    return null\r\n  }\r\n\r\n  const valueNum = Number(value)\r\n  return Number.isNaN(valueNum) ? null : valueNum\r\n}\r\n\r\nconst getRoundPosition = (positionResponse: string) => {\r\n  if (positionResponse === 'Bull') {\r\n    return BetPosition.BULL\r\n  }\r\n\r\n  if (positionResponse === 'Bear') {\r\n    return BetPosition.BEAR\r\n  }\r\n\r\n  if (positionResponse === 'House') {\r\n    return BetPosition.HOUSE\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\r\n  const bet = {\r\n    id: betResponse.id,\r\n    hash: betResponse.hash,\r\n    block: numberOrNull(betResponse.block),\r\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\r\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\r\n    claimed: betResponse.claimed,\r\n    claimedAt: numberOrNull(betResponse.claimedAt),\r\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\r\n    claimedHash: betResponse.claimedHash,\r\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\r\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\r\n    createdAt: numberOrNull(betResponse.createdAt),\r\n    updatedAt: numberOrNull(betResponse.updatedAt),\r\n  } as Bet\r\n\r\n  if (betResponse.user) {\r\n    bet.user = transformUserResponse(betResponse.user)\r\n  }\r\n\r\n  if (betResponse.round) {\r\n    bet.round = transformRoundResponse(betResponse.round)\r\n  }\r\n\r\n  return bet\r\n}\r\n\r\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\r\n  const {\r\n    id,\r\n    createdAt,\r\n    updatedAt,\r\n    block,\r\n    totalBets,\r\n    totalBetsBull,\r\n    totalBetsBear,\r\n    totalBNB,\r\n    totalBNBBull,\r\n    totalBNBBear,\r\n    totalBetsClaimed,\r\n    totalBNBClaimed,\r\n    winRate,\r\n    averageBNB,\r\n    netBNB,\r\n  } = userResponse\r\n\r\n  return {\r\n    id,\r\n    createdAt: numberOrNull(createdAt),\r\n    updatedAt: numberOrNull(updatedAt),\r\n    block: numberOrNull(block),\r\n    totalBets: numberOrNull(totalBets),\r\n    totalBetsBull: numberOrNull(totalBetsBull),\r\n    totalBetsBear: numberOrNull(totalBetsBear),\r\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\r\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\r\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\r\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\r\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\r\n    winRate: winRate ? parseFloat(winRate) : 0,\r\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\r\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\r\n  }\r\n}\r\n\r\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\r\n  const {\r\n    id,\r\n    epoch,\r\n    failed,\r\n    position,\r\n    startAt,\r\n    startBlock,\r\n    startHash,\r\n    lockAt,\r\n    lockBlock,\r\n    lockHash,\r\n    lockPrice,\r\n    lockRoundId,\r\n    closeAt,\r\n    closeBlock,\r\n    closeHash,\r\n    closePrice,\r\n    closeRoundId,\r\n    totalBets,\r\n    totalAmount,\r\n    bullBets,\r\n    bullAmount,\r\n    bearBets,\r\n    bearAmount,\r\n    bets = [],\r\n  } = roundResponse\r\n\r\n  return {\r\n    id,\r\n    failed,\r\n    startHash,\r\n    lockHash,\r\n    lockRoundId,\r\n    closeRoundId,\r\n    closeHash,\r\n    position: getRoundPosition(position),\r\n    epoch: numberOrNull(epoch),\r\n    startAt: numberOrNull(startAt),\r\n    startBlock: numberOrNull(startBlock),\r\n    lockAt: numberOrNull(lockAt),\r\n    lockBlock: numberOrNull(lockBlock),\r\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\r\n    closeAt: numberOrNull(closeAt),\r\n    closeBlock: numberOrNull(closeBlock),\r\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\r\n    totalBets: numberOrNull(totalBets),\r\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\r\n    bullBets: numberOrNull(bullBets),\r\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\r\n    bearBets: numberOrNull(bearBets),\r\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\r\n    bets: bets.map(transformBetResponse),\r\n  }\r\n}\r\n\r\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\r\n  const { round } = bet\r\n  if (round.failed) {\r\n    return Result.CANCELED\r\n  }\r\n\r\n  if (round.epoch >= currentEpoch - 1) {\r\n    return Result.LIVE\r\n  }\r\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n\r\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\r\n}\r\n\r\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\r\n  switch (filter) {\r\n    case HistoryFilter.COLLECTED:\r\n      return bets.filter((bet) => bet.claimed === true)\r\n    case HistoryFilter.UNCOLLECTED:\r\n      return bets.filter((bet) => {\r\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\r\n      })\r\n    case HistoryFilter.ALL:\r\n    default:\r\n      return bets\r\n  }\r\n}\r\n\r\nexport const getTotalWon = async (): Promise<number> => {\r\n  const { market } = (await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getTotalWonData {\r\n        market(id: 1) {\r\n          totalBNB\r\n          totalBNBTreasury\r\n        }\r\n      }\r\n    `,\r\n  )) as { market: TotalWonMarketResponse }\r\n\r\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\r\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\r\n\r\n  return Math.max(totalBNB - totalBNBTreasury, 0)\r\n}\r\n\r\ntype WhereClause = Record<string, string | number | boolean | string[]>\r\n\r\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\r\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.bets\r\n}\r\n\r\nexport const getBet = async (betId: string): Promise<BetResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBet($id: ID!) {\r\n        bet(id: $id) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: betId.toLowerCase(),\r\n    },\r\n  )\r\n  return response.bet\r\n}\r\n\r\nexport const getLedgerData = async (account: string, epochs: number[]) => {\r\n  const address = getPredictionsAddress()\r\n  const ledgerCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'ledger',\r\n    params: [epoch, account],\r\n  }))\r\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\r\n  return response\r\n}\r\n\r\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\r\n\r\ninterface GetPredictionUsersOptions {\r\n  skip?: number\r\n  first?: number\r\n  orderBy?: string\r\n  orderDir?: string\r\n  where?: WhereClause\r\n}\r\n\r\nconst defaultPredictionUserOptions = {\r\n  skip: 0,\r\n  first: LEADERBOARD_RESULTS_PER_PAGE,\r\n  orderBy: 'createdAt',\r\n  orderDir: 'desc',\r\n}\r\n\r\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\r\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\r\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\r\n          ${getUserBaseFields()} \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where, orderBy, orderDir },\r\n  )\r\n  return response.users\r\n}\r\n\r\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getUser($id: ID!) {\r\n        user(id: $id) {\r\n          ${getUserBaseFields()}\r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: account.toLowerCase(),\r\n    },\r\n  )\r\n  return response.user\r\n}\r\n\r\nexport const getClaimStatuses = async (\r\n  account: string,\r\n  epochs: number[],\r\n): Promise<PredictionsState['claimableStatuses']> => {\r\n  const address = getPredictionsAddress()\r\n  const claimableCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'claimable',\r\n    params: [epoch, account],\r\n  }))\r\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\r\n\r\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\r\n    const epoch = epochs[index]\r\n    const [claimable] = claimableResponse\r\n\r\n    return {\r\n      ...accum,\r\n      [epoch]: claimable,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport type MarketData = Pick<\r\n  PredictionsState,\r\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\r\n>\r\nexport const getPredictionData = async (): Promise<MarketData> => {\r\n  const address = getPredictionsAddress()\r\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\r\n    address,\r\n    name: method,\r\n  }))\r\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\r\n    predictionsAbi,\r\n    staticCalls,\r\n  )\r\n\r\n  return {\r\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\r\n    currentEpoch: currentEpoch.toNumber(),\r\n    intervalSeconds: intervalSeconds.toNumber(),\r\n    minBetAmount: minBetAmount.toString(),\r\n    bufferSeconds: bufferSeconds.toNumber(),\r\n  }\r\n}\r\n\r\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\r\n  const address = getPredictionsAddress()\r\n  const calls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'rounds',\r\n    params: [epoch],\r\n  }))\r\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\r\n  return response\r\n}\r\n\r\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\r\n  return {\r\n    epoch,\r\n    startTimestamp,\r\n    lockTimestamp: null,\r\n    closeTimestamp: null,\r\n    lockPrice: null,\r\n    closePrice: null,\r\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\r\n    oracleCalled: false,\r\n    lockOracleId: null,\r\n    closeOracleId: null,\r\n  }\r\n}\r\n\r\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\r\n  return rounds.reduce((accum, round) => {\r\n    return {\r\n      ...accum,\r\n      [round.epoch.toString()]: round,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\r\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\r\n  amount: ledgerResponse.amount.toJSON(),\r\n  claimed: ledgerResponse.claimed,\r\n})\r\n\r\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\r\n  return ledgers.reduce((accum, ledgerResponse, index) => {\r\n    if (!ledgerResponse) {\r\n      return accum\r\n    }\r\n\r\n    // If the amount is zero that means the user did not bet\r\n    if (ledgerResponse.amount.eq(0)) {\r\n      return accum\r\n    }\r\n\r\n    const epoch = epochs[index].toString()\r\n\r\n    return {\r\n      ...accum,\r\n      [account]: {\r\n        ...accum[account],\r\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\r\n      },\r\n    }\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Serializes the return from the \"rounds\" call for redux\r\n */\r\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\r\n  const {\r\n    epoch,\r\n    startTimestamp,\r\n    lockTimestamp,\r\n    closeTimestamp,\r\n    lockPrice,\r\n    closePrice,\r\n    totalAmount,\r\n    bullAmount,\r\n    bearAmount,\r\n    rewardBaseCalAmount,\r\n    rewardAmount,\r\n    oracleCalled,\r\n    lockOracleId,\r\n    closeOracleId,\r\n  } = response\r\n\r\n  return {\r\n    oracleCalled,\r\n    epoch: epoch.toNumber(),\r\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\r\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\r\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\r\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\r\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\r\n    totalAmount: totalAmount.toJSON(),\r\n    bullAmount: bullAmount.toJSON(),\r\n    bearAmount: bearAmount.toJSON(),\r\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\r\n    rewardAmount: rewardAmount.toJSON(),\r\n    lockOracleId: lockOracleId.toString(),\r\n    closeOracleId: closeOracleId.toString(),\r\n  }\r\n}\r\n\r\n/**\r\n * Parse serialized values back into ethers.BigNumber\r\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\r\n */\r\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\r\n  return Object.keys(data).reduce((accum, key) => {\r\n    const value = data[key]\r\n\r\n    if (value && value?.type === 'BigNumber') {\r\n      return {\r\n        ...accum,\r\n        [key]: ethers.BigNumber.from(value),\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...accum,\r\n      [key]: value,\r\n    }\r\n  }, {}) as K\r\n}\r\n\r\nexport const fetchUsersRoundsLength = async (account: string) => {\r\n  try {\r\n    const contract = getPredictionsContract()\r\n    const length = await contract.getUserRoundsLength(account)\r\n    return length\r\n  } catch {\r\n    return ethers.BigNumber.from(0)\r\n  }\r\n}\r\n\r\n/**\r\n * Fetches rounds a user has participated in\r\n */\r\nexport const fetchUserRounds = async (\r\n  account: string,\r\n  cursor = 0,\r\n  size = ROUNDS_PER_PAGE,\r\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\r\n  const contract = getPredictionsContract()\r\n\r\n  try {\r\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\r\n\r\n    return rounds.reduce((accum, round, index) => {\r\n      return {\r\n        ...accum,\r\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\r\n      }\r\n    }, {})\r\n  } catch {\r\n    // When the results run out the contract throws an error.\r\n    return null\r\n  }\r\n}\r\n","export interface UserResponse {\r\n  id: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  block: string\r\n  totalBets: string\r\n  totalBetsBull: string\r\n  totalBetsBear: string\r\n  totalBNB: string\r\n  totalBNBBull: string\r\n  totalBNBBear: string\r\n  totalBetsClaimed: string\r\n  totalBNBClaimed: string\r\n  winRate: string\r\n  averageBNB: string\r\n  netBNB: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface BetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  claimedAt: string\r\n  claimedBlock: string\r\n  claimedHash: string\r\n  claimedBNB: string\r\n  claimedNetBNB: string\r\n  createdAt: string\r\n  updatedAt: string\r\n  block: string\r\n  user?: UserResponse\r\n  round?: RoundResponse\r\n}\r\n\r\nexport interface HistoricalBetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  user?: UserResponse\r\n  round: {\r\n    id: string\r\n    epoch: string\r\n  }\r\n}\r\n\r\nexport interface RoundResponse {\r\n  id: string\r\n  epoch: string\r\n  position: string\r\n  failed: boolean\r\n  startAt: string\r\n  startBlock: string\r\n  startHash: string\r\n  lockAt: string\r\n  lockBlock: string\r\n  lockHash: string\r\n  lockPrice: string\r\n  lockRoundId: string\r\n  closeAt: string\r\n  closeBlock: string\r\n  closeHash: string\r\n  closePrice: string\r\n  closeRoundId: string\r\n  totalBets: string\r\n  totalAmount: string\r\n  bullBets: string\r\n  bullAmount: string\r\n  bearBets: string\r\n  bearAmount: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface TotalWonMarketResponse {\r\n  totalBNB: string\r\n  totalBNBTreasury: string\r\n}\r\n\r\n/**\r\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\r\n */\r\nexport const getRoundBaseFields = () => `\r\n  id\r\n  epoch\r\n  position\r\n  failed\r\n  startAt\r\n  startBlock\r\n  startHash\r\n  lockAt\r\n  lockBlock\r\n  lockHash\r\n  lockPrice\r\n  lockRoundId\r\n  closeAt\r\n  closeBlock\r\n  closeHash\r\n  closePrice\r\n  closeRoundId\r\n  totalBets\r\n  totalAmount\r\n  bullBets\r\n  bullAmount\r\n  bearBets\r\n  bearAmount\r\n`\r\n\r\nexport const getBetBaseFields = () => `\r\n id\r\n hash  \r\n amount\r\n position\r\n claimed\r\n claimedAt\r\n claimedHash\r\n claimedBlock\r\n claimedBNB\r\n claimedNetBNB\r\n createdAt\r\n updatedAt\r\n`\r\n\r\nexport const getUserBaseFields = () => `\r\n  id\r\n  createdAt\r\n  updatedAt\r\n  block\r\n  totalBets\r\n  totalBetsBull\r\n  totalBetsBear\r\n  totalBNB\r\n  totalBNBBull\r\n  totalBNBBear\r\n  totalBetsClaimed\r\n  totalBNBClaimed\r\n  winRate\r\n  averageBNB\r\n  netBNB\r\n`\r\n","import { Token } from '@pancakeswap/sdk'\r\nimport { SerializedToken } from 'config/constants/types'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\n\r\nexport function serializeToken(token: Token): SerializedToken {\r\n  return {\r\n    chainId: token.chainId,\r\n    address: token.address,\r\n    decimals: token.decimals,\r\n    symbol: token.symbol,\r\n    name: token.name,\r\n    projectLink: token.projectLink,\r\n  }\r\n}\r\n\r\nexport function deserializeToken(serializedToken: SerializedToken): Token {\r\n  return new Token(\r\n    serializedToken.chainId,\r\n    serializedToken.address,\r\n    serializedToken.decimals,\r\n    serializedToken.symbol,\r\n    serializedToken.name,\r\n    serializedToken.projectLink,\r\n  )\r\n}\r\n\r\nexport enum GAS_PRICE {\r\n  default = '5',\r\n  fast = '6',\r\n  instant = '7',\r\n  testnet = '10',\r\n}\r\n\r\nexport const GAS_PRICE_GWEI = {\r\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\r\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\r\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\r\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\r\n}\r\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  addMulticallListeners,\r\n  Call,\r\n  removeMulticallListeners,\r\n  parseCallKey,\r\n  toCallKey,\r\n  ListenerOptions,\r\n} from './actions'\r\n\r\nexport interface Result extends ReadonlyArray<any> {\r\n  readonly [key: string]: any\r\n}\r\n\r\ntype MethodArg = string | number | BigNumber\r\ntype MethodArgs = Array<MethodArg | MethodArg[]>\r\n\r\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\r\n\r\nfunction isMethodArg(x: unknown): x is MethodArg {\r\n  return ['string', 'number'].indexOf(typeof x) !== -1\r\n}\r\n\r\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\r\n  return (\r\n    x === undefined ||\r\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\r\n  )\r\n}\r\n\r\ninterface CallResult {\r\n  readonly valid: boolean\r\n  readonly data: string | undefined\r\n  readonly blockNumber: number | undefined\r\n}\r\n\r\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\r\n\r\n// use this options object\r\nexport const NEVER_RELOAD: ListenerOptions = {\r\n  blocksPerFetch: Infinity,\r\n}\r\n\r\n// the lowest level call for subscribing to contract data\r\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\r\n    (state) => state.multicall.callResults,\r\n  )\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const serializedCallKeys: string = useMemo(\r\n    () =>\r\n      JSON.stringify(\r\n        calls\r\n          ?.filter((c): c is Call => Boolean(c))\r\n          ?.map(toCallKey)\r\n          ?.sort() ?? [],\r\n      ),\r\n    [calls],\r\n  )\r\n\r\n  // update listeners when there is an actual change that persists for at least 100ms\r\n  useEffect(() => {\r\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\r\n    if (!chainId || callKeys.length === 0) return undefined\r\n    // eslint-disable-next-line @typescript-eslint/no-shadow\r\n    const calls = callKeys.map((key) => parseCallKey(key))\r\n    dispatch(\r\n      addMulticallListeners({\r\n        chainId,\r\n        calls,\r\n        options,\r\n      }),\r\n    )\r\n\r\n    return () => {\r\n      dispatch(\r\n        removeMulticallListeners({\r\n          chainId,\r\n          calls,\r\n          options,\r\n        }),\r\n      )\r\n    }\r\n  }, [chainId, dispatch, options, serializedCallKeys])\r\n\r\n  return useMemo(\r\n    () =>\r\n      calls.map<CallResult>((call) => {\r\n        if (!chainId || !call) return INVALID_RESULT\r\n\r\n        const result = callResults[chainId]?.[toCallKey(call)]\r\n        let data\r\n        if (result?.data && result?.data !== '0x') {\r\n          // eslint-disable-next-line prefer-destructuring\r\n          data = result.data\r\n        }\r\n\r\n        return { valid: true, data, blockNumber: result?.blockNumber }\r\n      }),\r\n    [callResults, calls, chainId],\r\n  )\r\n}\r\n\r\ninterface CallState {\r\n  readonly valid: boolean\r\n  // the result, or undefined if loading or errored/no data\r\n  readonly result: Result | undefined\r\n  // true if the result has never been fetched\r\n  readonly loading: boolean\r\n  // true if the result is not for the latest block\r\n  readonly syncing: boolean\r\n  // true if the call was made and is synced, but the return data is invalid\r\n  readonly error: boolean\r\n}\r\n\r\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\r\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\r\n\r\nfunction toCallState(\r\n  callResult: CallResult | undefined,\r\n  contractInterface: Interface | undefined,\r\n  fragment: FunctionFragment | undefined,\r\n  latestBlockNumber: number | undefined,\r\n): CallState {\r\n  if (!callResult) return INVALID_CALL_STATE\r\n  const { valid, data, blockNumber } = callResult\r\n  if (!valid) return INVALID_CALL_STATE\r\n  if (valid && !blockNumber) return LOADING_CALL_STATE\r\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\r\n  const success = data && data.length > 2\r\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\r\n  let result: Result | undefined\r\n  if (success && data) {\r\n    try {\r\n      result = contractInterface.decodeFunctionResult(fragment, data)\r\n    } catch (error) {\r\n      console.debug('Result data parsing failed', fragment, data)\r\n      return {\r\n        valid: true,\r\n        loading: false,\r\n        error: true,\r\n        syncing,\r\n        result,\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    valid: true,\r\n    loading: false,\r\n    syncing,\r\n    result,\r\n    error: !success,\r\n  }\r\n}\r\n\r\nexport function useSingleContractMultipleData(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  callInputs: OptionalMethodInputs[],\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      contract && fragment && callInputs && callInputs.length > 0\r\n        ? callInputs.map<Call>((inputs) => {\r\n            return {\r\n              address: contract.address,\r\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n            }\r\n          })\r\n        : [],\r\n    [callInputs, contract, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\r\n  }, [fragment, contract, results, currentBlock])\r\n}\r\n\r\nexport function useMultipleContractSingleData(\r\n  addresses: (string | undefined)[],\r\n  contractInterface: Interface,\r\n  methodName: string,\r\n  callInputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState[] {\r\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\r\n  const callData: string | undefined = useMemo(\r\n    () =>\r\n      fragment && isValidMethodArgs(callInputs)\r\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\r\n        : undefined,\r\n    [callInputs, contractInterface, fragment],\r\n  )\r\n\r\n  const calls = useMemo(\r\n    () =>\r\n      fragment && addresses && addresses.length > 0 && callData\r\n        ? addresses.map<Call | undefined>((address) => {\r\n            return address && callData\r\n              ? {\r\n                  address,\r\n                  callData,\r\n                }\r\n              : undefined\r\n          })\r\n        : [],\r\n    [addresses, callData, fragment],\r\n  )\r\n\r\n  const results = useCallsData(calls, options)\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\r\n  }, [fragment, results, contractInterface, currentBlock])\r\n}\r\n\r\nexport function useSingleCallResult(\r\n  contract: Contract | null | undefined,\r\n  methodName: string,\r\n  inputs?: OptionalMethodInputs,\r\n  options?: ListenerOptions,\r\n): CallState {\r\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\r\n\r\n  const calls = useMemo<Call[]>(() => {\r\n    return contract && fragment && isValidMethodArgs(inputs)\r\n      ? [\r\n          {\r\n            address: contract.address,\r\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\r\n          },\r\n        ]\r\n      : []\r\n  }, [contract, fragment, inputs])\r\n\r\n  const result = useCallsData(calls, options)[0]\r\n  const { currentBlock } = useBlock()\r\n\r\n  return useMemo(() => {\r\n    return toCallState(result, contract?.interface, fragment, currentBlock)\r\n  }, [result, contract, fragment, currentBlock])\r\n}\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511110000',\r\n    type: 'ifo',\r\n    title: 'Kalmar',\r\n    badge: 'ifo-kalm.svg',\r\n  },\r\n  {\r\n    id: '511100000',\r\n    type: 'ifo',\r\n    title: 'Hotcross',\r\n    badge: 'ifo-hotcross.svg',\r\n  },\r\n  {\r\n    id: '511090000',\r\n    type: 'ifo',\r\n    title: 'Horizon Protocol',\r\n    badge: 'ifo-hzn.svg',\r\n  },\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n  {\r\n    id: '512010001',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Gold',\r\n    badge: 'easter-champion-gold.svg',\r\n  },\r\n  {\r\n    id: '512010002',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010003',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010004',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010005',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Gold',\r\n    badge: 'easter-participant-gold.svg',\r\n  },\r\n  {\r\n    id: '512010006',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Silver',\r\n    badge: 'easter-champion-silver.svg',\r\n  },\r\n  {\r\n    id: '512010007',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010008',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010009',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010010',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Silver',\r\n    badge: 'easter-participant-silver.svg',\r\n  },\r\n  {\r\n    id: '512010011',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Bronze',\r\n    badge: 'easter-champion-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010012',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010013',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010014',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010015',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Bronze',\r\n    badge: 'easter-participant-bronze.svg',\r\n  },\r\n  {\r\n    id: '513010001',\r\n    type: 'participation',\r\n    title: 'Syrup Soaker',\r\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\r\n    badge: 'syrup-soaker.svg',\r\n  },\r\n  {\r\n    id: '514010001',\r\n    type: 'participation',\r\n    title: 'Clairvoyant',\r\n    description: 'Played a round of Prediction before round 12,120',\r\n    badge: 'clairvoyant.svg',\r\n  },\r\n  {\r\n    id: '515010001',\r\n    type: 'participation',\r\n    title: 'Lottie',\r\n    description: 'Joined a round in the early days of Lottery V2',\r\n    badge: 'lottie.svg',\r\n  },\r\n  {\r\n    id: '515020001',\r\n    type: 'participation',\r\n    title: 'Lucky',\r\n    description: 'Won a round in the early days of Lottery V2',\r\n    badge: 'lucky.svg',\r\n  },\r\n  {\r\n    id: '515030001',\r\n    type: 'participation',\r\n    title: 'Baller',\r\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\r\n    badge: 'baller.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = [...state.data, ...action.payload]\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { CollectiblesState } from 'state/types'\r\nimport collections from 'config/constants/nfts/collections'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { ethers } from 'ethers'\r\n\r\nconst initialState: CollectiblesState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: {},\r\n}\r\n\r\ntype NftSourceItem = [number, string]\r\n\r\n// Thunks\r\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\r\n  'collectibles/fetchWalletNfts',\r\n  async (account) => {\r\n    // For each nft source get nft data\r\n    const nftSourcePromises = Object.keys(collections).map(async (nftSourceType) => {\r\n      const { address: addressObj } = collections[nftSourceType]\r\n      const address = getAddress(addressObj)\r\n      const contract = getErc721Contract(address)\r\n      const balanceOfResponse = await contract.balanceOf(account)\r\n      const balanceOf = balanceOfResponse.toNumber()\r\n\r\n      if (balanceOfResponse.eq(0)) {\r\n        return []\r\n      }\r\n\r\n      const getTokenIdAndData = async (index: number) => {\r\n        try {\r\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\r\n          const tokenId = tokenIdBn.toNumber()\r\n\r\n          const walletNft = await getNftByTokenId(address, tokenId)\r\n          return [tokenId, walletNft.identifier]\r\n        } catch (error) {\r\n          console.error('getTokenIdAndData', error)\r\n          return null\r\n        }\r\n      }\r\n\r\n      const nftDataFetchPromises = []\r\n\r\n      // For each index get the tokenId and data associated with it\r\n      for (let i = 0; i < balanceOf; i++) {\r\n        nftDataFetchPromises.push(getTokenIdAndData(i))\r\n      }\r\n\r\n      const nftData = await Promise.all(nftDataFetchPromises)\r\n      return nftData\r\n    })\r\n\r\n    const nftSourceData = await Promise.all(nftSourcePromises)\r\n\r\n    return nftSourceData.flat()\r\n  },\r\n)\r\n\r\nexport const collectiblesSlice = createSlice({\r\n  name: 'collectibles',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchWalletNfts.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n      state.data = action.payload.reduce((accum, association) => {\r\n        if (!association) {\r\n          return accum\r\n        }\r\n\r\n        const [tokenId, identifier] = association as NftSourceItem\r\n\r\n        return {\r\n          ...accum,\r\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\r\n        }\r\n      }, {})\r\n    })\r\n  },\r\n})\r\n\r\nexport default collectiblesSlice.reducer\r\n","import request, { gql } from 'graphql-request'\r\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n\r\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\r\n  const response: { proposals: Proposal[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\r\n        proposals(\r\n          first: $first\r\n          skip: $skip\r\n          orderBy: \"end\"\r\n          orderDirection: desc\r\n          where: { space_in: \"cake.eth\", state: $state }\r\n        ) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, state },\r\n  )\r\n  return response.proposals\r\n}\r\n\r\nexport const getProposal = async (id: string): Promise<Proposal> => {\r\n  const response: { proposal: Proposal } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposal($id: String) {\r\n        proposal(id: $id) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { id },\r\n  )\r\n  return response.proposal\r\n}\r\n\r\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\r\n  const response: { votes: Vote[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\r\n        votes(first: $first, skip: $skip, where: $where) {\r\n          id\r\n          voter\r\n          created\r\n          choice\r\n          space {\r\n            id\r\n            name\r\n          }\r\n          proposal {\r\n            choices\r\n          }\r\n          metadata\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.votes\r\n}\r\n\r\nexport const getVoteVerificationStatuses = async (\r\n  votes: Vote[],\r\n  block?: number,\r\n): Promise<{ [key: string]: boolean }> => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n\r\n  const votesToVerify = votes.map((vote) => ({\r\n    address: vote.voter,\r\n    verificationHash: vote.metadata?.verificationHash,\r\n    total: vote.metadata?.votingPower,\r\n  }))\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      block: blockNumber,\r\n      votes: votesToVerify,\r\n    }),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return votes.reduce((accum, vote) => {\r\n    return {\r\n      ...accum,\r\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\r\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  return new Promise((resolve, reject) => {\r\n    let votes: Vote[] = []\r\n\r\n    const fetchVoteChunk = async (newSkip: number) => {\r\n      try {\r\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\r\n\r\n        if (voteChunk.length === 0) {\r\n          resolve(votes)\r\n        } else {\r\n          votes = [...votes, ...voteChunk]\r\n          fetchVoteChunk(newSkip + votesPerChunk)\r\n        }\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n\r\n    fetchVoteChunk(0)\r\n  })\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { merge } from 'lodash'\r\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\r\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\r\n\r\nconst initialState: VotingState = {\r\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  proposals: {},\r\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  votes: {},\r\n}\r\n\r\n// Thunks\r\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\r\n  'voting/fetchProposals',\r\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\r\n    const response = await getProposals(first, skip, state)\r\n    return response\r\n  },\r\n)\r\n\r\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\r\n  const response = await getProposal(proposalId)\r\n  return response\r\n})\r\n\r\nexport const fetchVotes = createAsyncThunk<\r\n  { votes: Vote[]; proposalId: string },\r\n  { proposalId: string; block?: number }\r\n>('voting/fetchVotes', async ({ proposalId, block }) => {\r\n  const response = await getAllVotes(proposalId, block)\r\n  return { votes: response, proposalId }\r\n})\r\n\r\nexport const verifyVotes = createAsyncThunk<\r\n  { results: { [key: string]: boolean }; proposalId: string },\r\n  { proposalId: string; snapshot?: string },\r\n  { state: State }\r\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\r\n  const state = getState()\r\n  const proposalVotes = state.voting.votes[proposalId]\r\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\r\n  return { results: response, proposalId }\r\n})\r\n\r\nexport const votingSlice = createSlice({\r\n  name: 'voting',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    // Verify Votes\r\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\r\n      const { proposalId, results } = action.payload\r\n\r\n      if (state.votes[proposalId]) {\r\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\r\n          return {\r\n            ...vote,\r\n            _inValid: results[vote.id] === false,\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    // Fetch Proposals\r\n    builder.addCase(fetchProposals.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\r\n      const proposals = action.payload.reduce((accum, proposal) => {\r\n        return {\r\n          ...accum,\r\n          [proposal.id]: proposal,\r\n        }\r\n      }, {})\r\n\r\n      state.proposals = merge({}, state.proposals, proposals)\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Proposal\r\n    builder.addCase(fetchProposal.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\r\n      state.proposals[action.payload.id] = action.payload\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Votes\r\n    builder.addCase(fetchVotes.pending, (state) => {\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\r\n      const { votes, proposalId } = action.payload\r\n\r\n      state.votes = {\r\n        ...state.votes,\r\n        [proposalId]: votes,\r\n      }\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n  },\r\n})\r\n\r\nexport default votingSlice.reducer\r\n","export const TICKET_LIMIT_PER_REQUEST = 2500\r\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\r\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport { getLotteryV2Address } from 'utils/addressHelpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\nimport { useMemo } from 'react'\r\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\r\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\r\n  const {\r\n    status,\r\n    startTime,\r\n    endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee,\r\n    firstTicketId,\r\n    lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber,\r\n    cakePerBracket,\r\n    countWinnersPerBracket,\r\n    rewardsBreakdown,\r\n  } = response\r\n\r\n  const statusKey = Object.keys(LotteryStatus)[status]\r\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\r\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\r\n    ethersToSerializedBigNumber(winnersInBracket),\r\n  )\r\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\r\n\r\n  return {\r\n    isLoading: false,\r\n    lotteryId,\r\n    status: LotteryStatus[statusKey],\r\n    startTime: startTime?.toString(),\r\n    endTime: endTime?.toString(),\r\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\r\n    discountDivisor: discountDivisor?.toString(),\r\n    treasuryFee: treasuryFee?.toString(),\r\n    firstTicketId: firstTicketId?.toString(),\r\n    lastTicketId: lastTicketId?.toString(),\r\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\r\n    finalNumber,\r\n    cakePerBracket: serializedCakePerBracket,\r\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\r\n    rewardsBreakdown: serializedRewardsBreakdown,\r\n  }\r\n}\r\n\r\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\r\n  return {\r\n    isLoading: true,\r\n    lotteryId,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n  }\r\n}\r\n\r\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\r\n  try {\r\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\r\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\r\n  } catch (error) {\r\n    return processViewLotteryErrorResponse(lotteryId)\r\n  }\r\n}\r\n\r\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\r\n  const calls = lotteryIds.map((id) => ({\r\n    name: 'viewLottery',\r\n    address: getLotteryV2Address(),\r\n    params: [id],\r\n  }))\r\n  try {\r\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\r\n    const processedResponses = multicallRes.map((res, index) =>\r\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\r\n    )\r\n    return processedResponses\r\n  } catch (error) {\r\n    console.error(error)\r\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\r\n  }\r\n}\r\n\r\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\r\n  try {\r\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\r\n      address: getLotteryV2Address(),\r\n      name: method,\r\n    }))\r\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\r\n      lotteryV2Abi,\r\n      calls,\r\n    )) as ethers.BigNumber[][]\r\n\r\n    return {\r\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\r\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      currentLotteryId: null,\r\n      maxNumberTicketsPerBuyOrClaim: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\r\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\r\n  const roundIds = []\r\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\r\n    roundIds.push(currentIdAsInt - i)\r\n  }\r\n  return roundIds.map((roundId) => roundId.toString())\r\n}\r\n\r\nexport const useProcessLotteryResponse = (\r\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\r\n): LotteryRound => {\r\n  const {\r\n    priceTicketInCake: priceTicketInCakeAsString,\r\n    discountDivisor: discountDivisorAsString,\r\n    amountCollectedInCake: amountCollectedInCakeAsString,\r\n  } = lotteryData\r\n\r\n  const discountDivisor = useMemo(() => {\r\n    return new BigNumber(discountDivisorAsString)\r\n  }, [discountDivisorAsString])\r\n\r\n  const priceTicketInCake = useMemo(() => {\r\n    return new BigNumber(priceTicketInCakeAsString)\r\n  }, [priceTicketInCakeAsString])\r\n\r\n  const amountCollectedInCake = useMemo(() => {\r\n    return new BigNumber(amountCollectedInCakeAsString)\r\n  }, [amountCollectedInCakeAsString])\r\n\r\n  return {\r\n    isLoading: lotteryData.isLoading,\r\n    lotteryId: lotteryData.lotteryId,\r\n    userTickets: lotteryData.userTickets,\r\n    status: lotteryData.status,\r\n    startTime: lotteryData.startTime,\r\n    endTime: lotteryData.endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee: lotteryData.treasuryFee,\r\n    firstTicketId: lotteryData.firstTicketId,\r\n    lastTicketId: lotteryData.lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber: lotteryData.finalNumber,\r\n    cakePerBracket: lotteryData.cakePerBracket,\r\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\r\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\r\n  }\r\n}\r\n\r\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\r\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\r\n  return claimedTickets.length > 0\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\r\n\r\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\r\n\r\n/* eslint-disable camelcase */\r\ntype LotteriesWhere = { id_in?: string[] }\r\n\r\nconst applyNodeDataToLotteriesGraphResponse = (\r\n  nodeData: LotteryResponse[],\r\n  graphResponse: LotteryRoundGraphEntity[],\r\n): LotteryRoundGraphEntity[] => {\r\n  //   If no graph response - return node data\r\n  if (graphResponse.length === 0) {\r\n    return nodeData.map((nodeRound) => {\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        finalNumber: nodeRound.finalNumber.toString(),\r\n        startTime: nodeRound.startTime,\r\n        status: nodeRound.status,\r\n        id: nodeRound.lotteryId.toString(),\r\n        ticketPrice: nodeRound.priceTicketInCake,\r\n        totalTickets: '',\r\n        totalUsers: '',\r\n        winningTickets: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  // Populate all nodeRound data with supplementary graphResponse round data when available\r\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\r\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\r\n    return {\r\n      endTime: nodeRoundData.endTime,\r\n      finalNumber: nodeRoundData.finalNumber.toString(),\r\n      startTime: nodeRoundData.startTime,\r\n      status: nodeRoundData.status,\r\n      id: nodeRoundData.lotteryId,\r\n      ticketPrice: graphRoundData?.ticketPrice,\r\n      totalTickets: graphRoundData?.totalTickets,\r\n      totalUsers: graphRoundData?.totalUsers,\r\n      winningTickets: graphRoundData?.winningTickets,\r\n    }\r\n  })\r\n\r\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\r\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\r\n  const lastCombinedDataRoundIndex = graphResponse\r\n    .map((graphRound) => graphRound?.id)\r\n    .indexOf(lastCombinedDataRound?.id)\r\n\r\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\r\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\r\n  return mergedResponse\r\n}\r\n\r\nexport const getGraphLotteries = async (\r\n  first = MAX_LOTTERIES_REQUEST_SIZE,\r\n  skip = 0,\r\n  where: LotteriesWhere = {},\r\n): Promise<LotteryRoundGraphEntity[]> => {\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\r\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\r\n            id\r\n            totalUsers\r\n            totalTickets\r\n            winningTickets\r\n            status\r\n            finalNumber\r\n            startTime\r\n            endTime\r\n            ticketPrice\r\n          }\r\n        }\r\n      `,\r\n      { skip, first, where },\r\n    )\r\n    return response.lotteries\r\n  } catch (error) {\r\n    console.error(error)\r\n    return []\r\n  }\r\n}\r\n\r\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\r\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\r\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\r\n  const graphResponse = await getGraphLotteries()\r\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\r\n  return mergedData\r\n}\r\n\r\nexport default getLotteriesData\r\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { UserTicketsResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n\r\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\r\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\r\n\r\n  if (ticketIds?.length > 0) {\r\n    return ticketIds.map((ticketId, index) => {\r\n      return {\r\n        id: ticketId.toString(),\r\n        number: ticketNumbers[index].toString(),\r\n        status: ticketStatuses[index],\r\n      }\r\n    })\r\n  }\r\n  return []\r\n}\r\n\r\nexport const viewUserInfoForLotteryId = async (\r\n  account: string,\r\n  lotteryId: string,\r\n  cursor: number,\r\n  perRequestLimit: number,\r\n): Promise<LotteryTicket[]> => {\r\n  try {\r\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\r\n    return processRawTicketsResponse(data)\r\n  } catch (error) {\r\n    console.error('viewUserInfoForLotteryId', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\r\n  let cursor = 0\r\n  let numReturned = TICKET_LIMIT_PER_REQUEST\r\n  const ticketData = []\r\n\r\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\r\n    cursor += TICKET_LIMIT_PER_REQUEST\r\n    numReturned = response.length\r\n    ticketData.push(...response)\r\n  }\r\n\r\n  return ticketData\r\n}\r\n\r\nexport const fetchUserTicketsForMultipleRounds = async (\r\n  idsToCheck: string[],\r\n  account: string,\r\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\r\n  const ticketsForMultipleRounds = []\r\n  for (let i = 0; i < idsToCheck.length; i += 1) {\r\n    const roundId = idsToCheck[i]\r\n    // eslint-disable-next-line no-await-in-loop\r\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\r\n    ticketsForMultipleRounds.push({\r\n      roundId,\r\n      userTickets: ticketsForRound,\r\n    })\r\n  }\r\n  return ticketsForMultipleRounds\r\n}\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\r\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\r\n\r\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\r\n\r\n/* eslint-disable camelcase */\r\ntype UserLotteriesWhere = { lottery_in?: string[] }\r\n\r\nconst applyNodeDataToUserGraphResponse = (\r\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\r\n  userGraphData: UserRound[],\r\n  lotteryNodeData: LotteryResponse[],\r\n): UserRound[] => {\r\n  //   If no graph rounds response - return node data\r\n  if (userGraphData.length === 0) {\r\n    return lotteryNodeData.map((nodeRound) => {\r\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        status: nodeRound.status,\r\n        lotteryId: nodeRound.lotteryId.toString(),\r\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\r\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\r\n        tickets: ticketDataForRound.userTickets,\r\n      }\r\n    })\r\n  }\r\n\r\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\r\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\r\n    const userGraphRound = userGraphData.find(\r\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\r\n    )\r\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\r\n    return {\r\n      endTime: nodeRoundData.endTime,\r\n      status: nodeRoundData.status,\r\n      lotteryId: nodeRoundData.lotteryId.toString(),\r\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\r\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\r\n      tickets: userNodeRound.userTickets,\r\n    }\r\n  })\r\n\r\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\r\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\r\n  const lastCombinedDataRoundIndex = userGraphData\r\n    .map((graphRound) => graphRound?.lotteryId)\r\n    .indexOf(lastCombinedDataRound?.lotteryId)\r\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\r\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\r\n  return mergedResponse\r\n}\r\n\r\nexport const getGraphLotteryUser = async (\r\n  account: string,\r\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\r\n  skip = 0,\r\n  where: UserLotteriesWhere = {},\r\n): Promise<LotteryUserGraphEntity> => {\r\n  let user\r\n  const blankUser = {\r\n    account,\r\n    totalCake: '',\r\n    totalTickets: '',\r\n    rounds: [],\r\n  }\r\n\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\r\n          user(id: $account) {\r\n            id\r\n            totalTickets\r\n            totalCake\r\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\r\n              id\r\n              lottery {\r\n                id\r\n                endTime\r\n                status\r\n              }\r\n              claimed\r\n              totalTickets\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { account: account.toLowerCase(), first, skip, where },\r\n    )\r\n    const userRes = response.user\r\n\r\n    // If no user returned - return blank user\r\n    if (!userRes) {\r\n      user = blankUser\r\n    } else {\r\n      user = {\r\n        account: userRes.id,\r\n        totalCake: userRes.totalCake,\r\n        totalTickets: userRes.totalTickets,\r\n        rounds: userRes.rounds.map((round) => {\r\n          return {\r\n            lotteryId: round?.lottery?.id,\r\n            endTime: round?.lottery?.endTime,\r\n            claimed: round?.claimed,\r\n            totalTickets: round?.totalTickets,\r\n            status: round?.lottery?.status.toLowerCase(),\r\n          }\r\n        }),\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n    user = blankUser\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\r\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\r\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\r\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\r\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\r\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\r\n  const graphResponse = await getGraphLotteryUser(account)\r\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\r\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\r\n  return graphResponseWithNodeRounds\r\n}\r\n\r\nexport default getUserLotteryData\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\r\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\r\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\r\nimport getLotteriesData from './getLotteriesData'\r\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\r\n\r\ninterface PublicLotteryData {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n}\r\n\r\nconst initialState: LotteryState = {\r\n  currentLotteryId: null,\r\n  isTransitioning: false,\r\n  maxNumberTicketsPerBuyOrClaim: null,\r\n  currentRound: {\r\n    isLoading: true,\r\n    lotteryId: null,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n    userTickets: {\r\n      isLoading: true,\r\n      tickets: [],\r\n    },\r\n  },\r\n  lotteriesData: null,\r\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\r\n}\r\n\r\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\r\n  'lottery/fetchCurrentLottery',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteryInfo = await fetchLottery(currentLotteryId)\r\n    return lotteryInfo\r\n  },\r\n)\r\n\r\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\r\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\r\n  return currentIdAndMaxBuy\r\n})\r\n\r\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\r\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\r\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\r\n  const userTickets = userParticipationInCurrentRound?.tickets\r\n\r\n  // User has not bought tickets for the current lottery, or there has been an error\r\n  if (!userTickets || userTickets.length === 0) {\r\n    return { userTickets: null, userLotteries: userLotteriesRes }\r\n  }\r\n\r\n  return { userTickets, userLotteries: userLotteriesRes }\r\n})\r\n\r\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\r\n  'lottery/fetchPublicLotteries',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteries = await getLotteriesData(currentLotteryId)\r\n    return lotteries\r\n  },\r\n)\r\n\r\nexport const fetchUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\r\n  return userLotteries\r\n})\r\n\r\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; skip?: number }\r\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\r\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\r\n  return additionalUserLotteries\r\n})\r\n\r\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\r\n  `lottery/setIsTransitioning`,\r\n  async ({ isTransitioning }) => {\r\n    return { isTransitioning }\r\n  },\r\n)\r\n\r\nexport const LotterySlice = createSlice({\r\n  name: 'Lottery',\r\n  initialState,\r\n  reducers: {\r\n    setLotteryPublicData: (state, action) => {\r\n      state = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\r\n      state.currentRound = { ...state.currentRound, ...action.payload }\r\n    })\r\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\r\n      state.currentLotteryId = action.payload.currentLotteryId\r\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\r\n    })\r\n    builder.addCase(\r\n      fetchUserTicketsAndLotteries.fulfilled,\r\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\r\n        state.currentRound.userTickets.isLoading = false\r\n        state.currentRound.userTickets.tickets = action.payload.userTickets\r\n        state.userLotteryData = action.payload.userLotteries\r\n      },\r\n    )\r\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\r\n      state.lotteriesData = action.payload\r\n    })\r\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      state.userLotteryData = action.payload\r\n    })\r\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\r\n      state.userLotteryData.rounds = mergedRounds\r\n    })\r\n    builder.addCase(\r\n      setLotteryIsTransitioning.fulfilled,\r\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\r\n        state.isTransitioning = action.payload.isTransitioning\r\n      },\r\n    )\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLotteryPublicData } = LotterySlice.actions\r\n\r\nexport default LotterySlice.reducer\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { Transaction } from 'state/info/types'\r\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\r\n\r\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\r\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\r\n  'info/protocol/updateProtocolChartData',\r\n)\r\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\r\n  'info/protocol/updateProtocolTransactions',\r\n)\r\n\r\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\r\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\r\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\r\n  'info/pools/updatePoolChartData',\r\n)\r\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\r\n  'info/pools/updatePoolTransactions',\r\n)\r\n\r\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\r\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\r\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\r\n  'info/tokens/addTokenPoolAddresses',\r\n)\r\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\r\n  'info/tokens/updateTokenChartData',\r\n)\r\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\r\n  'info/tokens/updateTokenTransactions',\r\n)\r\nexport const updateTokenPriceData = createAction<{\r\n  tokenAddress: string\r\n  secondsInterval: number\r\n  priceData?: PriceChartEntry[]\r\n  oldestFetchedTimestamp: number\r\n}>('info/tokens/updateTokenPriceData')\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { InfoState } from './types'\r\nimport {\r\n  updateProtocolData,\r\n  updateProtocolChartData,\r\n  updateProtocolTransactions,\r\n  updatePoolData,\r\n  addPoolKeys,\r\n  updatePoolChartData,\r\n  updatePoolTransactions,\r\n  updateTokenData,\r\n  addTokenKeys,\r\n  addTokenPoolAddresses,\r\n  updateTokenChartData,\r\n  updateTokenPriceData,\r\n  updateTokenTransactions,\r\n} from './actions'\r\n\r\nconst initialState: InfoState = {\r\n  protocol: {\r\n    overview: undefined,\r\n    chartData: undefined,\r\n    transactions: undefined,\r\n  },\r\n  pools: { byAddress: {} },\r\n  tokens: { byAddress: {} },\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    // Protocol actions\r\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\r\n      state.protocol.overview = protocolData\r\n    })\r\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\r\n      state.protocol.chartData = chartData\r\n    })\r\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\r\n      state.protocol.transactions = transactions\r\n    })\r\n    // Pools actions\r\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\r\n      pools.forEach((poolData) => {\r\n        state.pools.byAddress[poolData.address] = {\r\n          ...state.pools.byAddress[poolData.address],\r\n          data: poolData,\r\n        }\r\n      })\r\n    })\r\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\r\n      poolAddresses.forEach((address) => {\r\n        if (!state.pools.byAddress[address]) {\r\n          state.pools.byAddress[address] = {\r\n            data: undefined,\r\n            chartData: undefined,\r\n            transactions: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\r\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\r\n    })\r\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\r\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\r\n    })\r\n    // Tokens actions\r\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\r\n      tokens.forEach((tokenData) => {\r\n        state.tokens.byAddress[tokenData.address] = {\r\n          ...state.tokens.byAddress[tokenData.address],\r\n          data: tokenData,\r\n        }\r\n      })\r\n    })\r\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\r\n      tokenAddresses.forEach((address) => {\r\n        if (!state.tokens.byAddress[address]) {\r\n          state.tokens.byAddress[address] = {\r\n            poolAddresses: undefined,\r\n            data: undefined,\r\n            chartData: undefined,\r\n            priceData: {},\r\n            transactions: undefined,\r\n          }\r\n        }\r\n      })\r\n    })\r\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\r\n    })\r\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\r\n    })\r\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\r\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\r\n    })\r\n    .addCase(\r\n      updateTokenPriceData,\r\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\r\n        state.tokens.byAddress[tokenAddress] = {\r\n          ...state.tokens.byAddress[tokenAddress],\r\n          priceData: {\r\n            ...state.tokens.byAddress[tokenAddress].priceData,\r\n            [secondsInterval]: priceData,\r\n            oldestFetchedTimestamp,\r\n          },\r\n        }\r\n      },\r\n    ),\r\n)\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\n// fired once when the app reloads but before the app renders\r\n// allows any updates to be applied to store data loaded from localStorage\r\nexport const updateVersion = createAction<void>('global/updateVersion')\r\n\r\nexport default updateVersion\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { SerializedToken } from 'config/constants/types'\r\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport { updateVersion } from '../global/actions'\r\nimport {\r\n  addSerializedPair,\r\n  addSerializedToken,\r\n  addWatchlistPool,\r\n  addWatchlistToken,\r\n  FarmStakedOnly,\r\n  removeSerializedPair,\r\n  removeSerializedToken,\r\n  SerializedPair,\r\n  muteAudio,\r\n  toggleTheme,\r\n  unmuteAudio,\r\n  updateGasPrice,\r\n  updateUserDeadline,\r\n  updateUserExpertMode,\r\n  updateUserFarmStakedOnly,\r\n  updateUserFarmsViewMode,\r\n  updateUserPoolStakedOnly,\r\n  updateUserPoolsViewMode,\r\n  updateUserSingleHopOnly,\r\n  updateUserSlippageTolerance,\r\n  ViewMode,\r\n  updateUserPredictionAcceptedRisk,\r\n  updateUserPredictionChartDisclaimerShow,\r\n  updateUserUsernameVisibility,\r\n  updateUserExpertModeAcknowledgementShow,\r\n} from './actions'\r\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\r\n\r\nconst currentTimestamp = () => new Date().getTime()\r\n\r\nexport interface UserState {\r\n  // the timestamp of the last updateVersion action\r\n  lastUpdateVersionTimestamp?: number\r\n\r\n  userExpertMode: boolean\r\n\r\n  // only allow swaps on direct pairs\r\n  userSingleHopOnly: boolean\r\n\r\n  // user defined slippage tolerance in bips, used in all txns\r\n  userSlippageTolerance: number\r\n\r\n  // deadline set by user in minutes, used in all txns\r\n  userDeadline: number\r\n\r\n  tokens: {\r\n    [chainId: number]: {\r\n      [address: string]: SerializedToken\r\n    }\r\n  }\r\n\r\n  pairs: {\r\n    [chainId: number]: {\r\n      // keyed by token0Address:token1Address\r\n      [key: string]: SerializedPair\r\n    }\r\n  }\r\n\r\n  timestamp: number\r\n  audioPlay: boolean\r\n  isDark: boolean\r\n  userFarmStakedOnly: FarmStakedOnly\r\n  userPoolStakedOnly: boolean\r\n  userPoolsViewMode: ViewMode\r\n  userFarmsViewMode: ViewMode\r\n  userPredictionAcceptedRisk: boolean\r\n  userPredictionChartDisclaimerShow: boolean\r\n  userExpertModeAcknowledgementShow: boolean\r\n  userUsernameVisibility: boolean\r\n  gasPrice: string\r\n  watchlistTokens: string[]\r\n  watchlistPools: string[]\r\n}\r\n\r\nfunction pairKey(token0Address: string, token1Address: string) {\r\n  return `${token0Address};${token1Address}`\r\n}\r\n\r\nexport const initialState: UserState = {\r\n  userExpertMode: false,\r\n  userSingleHopOnly: false,\r\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\r\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\r\n  tokens: {},\r\n  pairs: {},\r\n  timestamp: currentTimestamp(),\r\n  audioPlay: true,\r\n  isDark: false,\r\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\r\n  userPoolStakedOnly: false,\r\n  userPoolsViewMode: ViewMode.TABLE,\r\n  userFarmsViewMode: ViewMode.TABLE,\r\n  userPredictionAcceptedRisk: false,\r\n  userPredictionChartDisclaimerShow: true,\r\n  userExpertModeAcknowledgementShow: true,\r\n  userUsernameVisibility: false,\r\n  gasPrice: GAS_PRICE_GWEI.default,\r\n  watchlistTokens: [],\r\n  watchlistPools: [],\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(updateVersion, (state) => {\r\n      // slippage isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userSlippageTolerance !== 'number') {\r\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\r\n      }\r\n\r\n      // deadline isnt being tracked in local storage, reset to default\r\n      // noinspection SuspiciousTypeOfGuard\r\n      if (typeof state.userDeadline !== 'number') {\r\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\r\n      }\r\n\r\n      state.lastUpdateVersionTimestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserExpertMode, (state, action) => {\r\n      state.userExpertMode = action.payload.userExpertMode\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSlippageTolerance, (state, action) => {\r\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserDeadline, (state, action) => {\r\n      state.userDeadline = action.payload.userDeadline\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(updateUserSingleHopOnly, (state, action) => {\r\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\r\n    })\r\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\r\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\r\n      if (!state.tokens) {\r\n        state.tokens = {}\r\n      }\r\n      state.tokens[chainId] = state.tokens[chainId] || {}\r\n      delete state.tokens[chainId][address]\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\r\n      if (\r\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\r\n        serializedPair.token0.address !== serializedPair.token1.address\r\n      ) {\r\n        const { chainId } = serializedPair.token0\r\n        state.pairs[chainId] = state.pairs[chainId] || {}\r\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\r\n      if (state.pairs[chainId]) {\r\n        // just delete both keys if either exists\r\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\r\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\r\n      }\r\n      state.timestamp = currentTimestamp()\r\n    })\r\n    .addCase(muteAudio, (state) => {\r\n      state.audioPlay = false\r\n    })\r\n    .addCase(unmuteAudio, (state) => {\r\n      state.audioPlay = true\r\n    })\r\n    .addCase(toggleTheme, (state) => {\r\n      state.isDark = !state.isDark\r\n    })\r\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\r\n      state.userFarmStakedOnly = userFarmStakedOnly\r\n    })\r\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\r\n      state.userPoolStakedOnly = userPoolStakedOnly\r\n    })\r\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\r\n      state.userPoolsViewMode = userPoolsViewMode\r\n    })\r\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\r\n      state.userFarmsViewMode = userFarmsViewMode\r\n    })\r\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\r\n      state.userPredictionAcceptedRisk = userAcceptedRisk\r\n    })\r\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\r\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\r\n    })\r\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\r\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\r\n    })\r\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\r\n      state.userUsernameVisibility = userUsernameVisibility\r\n    })\r\n    .addCase(updateGasPrice, (state, action) => {\r\n      state.gasPrice = action.payload.gasPrice\r\n    })\r\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\r\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\r\n      const tokenWatchlist = state.watchlistTokens ?? []\r\n      if (!tokenWatchlist.includes(address)) {\r\n        state.watchlistTokens = [...tokenWatchlist, address]\r\n      } else {\r\n        // Remove token from watchlist\r\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\r\n        state.watchlistTokens = newTokens\r\n      }\r\n    })\r\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\r\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\r\n      const poolsWatchlist = state.watchlistPools ?? []\r\n      if (!poolsWatchlist.includes(address)) {\r\n        state.watchlistPools = [...poolsWatchlist, address]\r\n      } else {\r\n        // Remove pool from watchlist\r\n        const newPools = state.watchlistPools.filter((x) => x !== address)\r\n        state.watchlistPools = newPools\r\n      }\r\n    }),\r\n)\r\n","/* eslint-disable no-param-reassign */\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addTransaction,\r\n  checkedTransaction,\r\n  clearAllTransactions,\r\n  finalizeTransaction,\r\n  SerializableTransactionReceipt,\r\n} from './actions'\r\n\r\nconst now = () => new Date().getTime()\r\n\r\nexport interface TransactionDetails {\r\n  hash: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  summary?: string\r\n  claim?: { recipient: string }\r\n  receipt?: SerializableTransactionReceipt\r\n  lastCheckedBlockNumber?: number\r\n  addedTime: number\r\n  confirmedTime?: number\r\n  from: string\r\n}\r\n\r\nexport interface TransactionState {\r\n  [chainId: number]: {\r\n    [txHash: string]: TransactionDetails\r\n  }\r\n}\r\n\r\nexport const initialState: TransactionState = {}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\r\n      if (transactions[chainId]?.[hash]) {\r\n        throw Error('Attempted to add existing transaction.')\r\n      }\r\n      const txs = transactions[chainId] ?? {}\r\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\r\n      transactions[chainId] = txs\r\n    })\r\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\r\n      if (!transactions[chainId]) return\r\n      transactions[chainId] = {}\r\n    })\r\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      if (!tx.lastCheckedBlockNumber) {\r\n        tx.lastCheckedBlockNumber = blockNumber\r\n      } else {\r\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\r\n      }\r\n    })\r\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\r\n      const tx = transactions[chainId]?.[hash]\r\n      if (!tx) {\r\n        return\r\n      }\r\n      tx.receipt = receipt\r\n      tx.confirmedTime = now()\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\n\r\nexport interface SwapState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly [Field.INPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  readonly [Field.OUTPUT]: {\r\n    readonly currencyId: string | undefined\r\n  }\r\n  // the typed recipient address or ENS name, or null if swap should go to sender\r\n  readonly recipient: string | null\r\n}\r\n\r\nconst initialState: SwapState = {\r\n  independentField: Field.INPUT,\r\n  typedValue: '',\r\n  [Field.INPUT]: {\r\n    currencyId: '',\r\n  },\r\n  [Field.OUTPUT]: {\r\n    currencyId: '',\r\n  },\r\n  recipient: null,\r\n}\r\n\r\nexport default createReducer<SwapState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(\r\n      replaceSwapState,\r\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\r\n        return {\r\n          [Field.INPUT]: {\r\n            currencyId: inputCurrencyId,\r\n          },\r\n          [Field.OUTPUT]: {\r\n            currencyId: outputCurrencyId,\r\n          },\r\n          independentField: field,\r\n          typedValue,\r\n          recipient,\r\n        }\r\n      },\r\n    )\r\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\r\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n      if (currencyId === state[otherField].currencyId) {\r\n        // the case where we have to swap the order\r\n        return {\r\n          ...state,\r\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n          [field]: { currencyId },\r\n          [otherField]: { currencyId: state[field].currencyId },\r\n        }\r\n      }\r\n      // the normal case\r\n      return {\r\n        ...state,\r\n        [field]: { currencyId },\r\n      }\r\n    })\r\n    .addCase(switchCurrencies, (state) => {\r\n      return {\r\n        ...state,\r\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\r\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\r\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\r\n      }\r\n    })\r\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n      }\r\n    })\r\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\r\n      state.recipient = recipient\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, resetMintState, typeInput } from './actions'\r\n\r\nexport interface MintState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n  readonly otherTypedValue: string // for the case when there's no liquidity\r\n}\r\n\r\nconst initialState: MintState = {\r\n  independentField: Field.CURRENCY_A,\r\n  typedValue: '',\r\n  otherTypedValue: '',\r\n}\r\n\r\nexport default createReducer<MintState>(initialState, (builder) =>\r\n  builder\r\n    .addCase(resetMintState, () => initialState)\r\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\r\n      if (noLiquidity) {\r\n        // they're typing into the field they've last typed in\r\n        if (field === state.independentField) {\r\n          return {\r\n            ...state,\r\n            independentField: field,\r\n            typedValue,\r\n          }\r\n        }\r\n        // they're typing into a new field, store the other value\r\n\r\n        return {\r\n          ...state,\r\n          independentField: field,\r\n          typedValue,\r\n          otherTypedValue: state.typedValue,\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        independentField: field,\r\n        typedValue,\r\n        otherTypedValue: '',\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { TokenList } from '@uniswap/token-lists/dist/types'\r\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\r\n\r\nimport { updateVersion } from '../global/actions'\r\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\r\n\r\nexport interface ListsState {\r\n  readonly byUrl: {\r\n    readonly [url: string]: {\r\n      readonly current: TokenList | null\r\n      readonly pendingUpdate: TokenList | null\r\n      readonly loadingRequestId: string | null\r\n      readonly error: string | null\r\n    }\r\n  }\r\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\r\n  readonly lastInitializedDefaultListOfLists?: string[]\r\n\r\n  // currently active lists\r\n  readonly activeListUrls: string[] | undefined\r\n}\r\n\r\ntype ListState = ListsState['byUrl'][string]\r\n\r\nconst NEW_LIST_STATE: ListState = {\r\n  error: null,\r\n  current: null,\r\n  loadingRequestId: null,\r\n  pendingUpdate: null,\r\n}\r\n\r\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\r\n\r\nconst initialState: ListsState = {\r\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\r\n  byUrl: {\r\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\r\n      memo[listUrl] = NEW_LIST_STATE\r\n      return memo\r\n    }, {}),\r\n  },\r\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\r\n      state.byUrl[url] = {\r\n        current: null,\r\n        pendingUpdate: null,\r\n        ...state.byUrl[url],\r\n        loadingRequestId: requestId,\r\n        error: null,\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\r\n      const current = state.byUrl[url]?.current\r\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\r\n\r\n      // no-op if update does nothing\r\n      if (current) {\r\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\r\n\r\n        if (upgradeType === VersionUpgrade.NONE) return\r\n        if (loadingRequestId === null || loadingRequestId === requestId) {\r\n          state.byUrl[url] = {\r\n            ...state.byUrl[url],\r\n            loadingRequestId: null,\r\n            error: null,\r\n            current,\r\n            pendingUpdate: tokenList,\r\n          }\r\n        }\r\n      } else {\r\n        // activate if on default active\r\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\r\n          state.activeListUrls?.push(url)\r\n        }\r\n\r\n        state.byUrl[url] = {\r\n          ...state.byUrl[url],\r\n          loadingRequestId: null,\r\n          error: null,\r\n          current: tokenList,\r\n          pendingUpdate: null,\r\n        }\r\n      }\r\n    })\r\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\r\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\r\n        // no-op since it's not the latest request\r\n        return\r\n      }\r\n\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        loadingRequestId: null,\r\n        error: errorMessage,\r\n        current: null,\r\n        pendingUpdate: null,\r\n      }\r\n    })\r\n    .addCase(addList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n    })\r\n    .addCase(removeList, (state, { payload: url }) => {\r\n      if (state.byUrl[url]) {\r\n        delete state.byUrl[url]\r\n      }\r\n      // remove list from active urls if needed\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(enableList, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]) {\r\n        state.byUrl[url] = NEW_LIST_STATE\r\n      }\r\n\r\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\r\n        state.activeListUrls.push(url)\r\n      }\r\n\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = [url]\r\n      }\r\n    })\r\n    .addCase(disableList, (state, { payload: url }) => {\r\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\r\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\r\n      }\r\n    })\r\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\r\n      if (!state.byUrl[url]?.pendingUpdate) {\r\n        throw new Error('accept list update called without pending update')\r\n      }\r\n      state.byUrl[url] = {\r\n        ...state.byUrl[url],\r\n        pendingUpdate: null,\r\n        current: state.byUrl[url].pendingUpdate,\r\n      }\r\n    })\r\n    .addCase(updateVersion, (state) => {\r\n      // state loaded from localStorage, but new lists have never been initialized\r\n      if (!state.lastInitializedDefaultListOfLists) {\r\n        state.byUrl = initialState.byUrl\r\n        state.activeListUrls = initialState.activeListUrls\r\n      } else if (state.lastInitializedDefaultListOfLists) {\r\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\r\n          (s, l) => s.add(l),\r\n          new Set(),\r\n        )\r\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\r\n\r\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\r\n          if (!lastInitializedSet.has(listUrl)) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n        })\r\n\r\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\r\n          if (!newListOfListsSet.has(listUrl)) {\r\n            delete state.byUrl[listUrl]\r\n          }\r\n        })\r\n      }\r\n\r\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\r\n\r\n      // if no active lists, activate defaults\r\n      if (!state.activeListUrls) {\r\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\r\n\r\n        // for each list on default list, initialize if needed\r\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\r\n          if (!state.byUrl[listUrl]) {\r\n            state.byUrl[listUrl] = NEW_LIST_STATE\r\n          }\r\n          return true\r\n        })\r\n      }\r\n    }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { Field, typeInput } from './actions'\r\n\r\nexport interface BurnState {\r\n  readonly independentField: Field\r\n  readonly typedValue: string\r\n}\r\n\r\nconst initialState: BurnState = {\r\n  independentField: Field.LIQUIDITY_PERCENT,\r\n  typedValue: '0',\r\n}\r\n\r\nexport default createReducer<BurnState>(initialState, (builder) =>\r\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\r\n    return {\r\n      ...state,\r\n      independentField: field,\r\n      typedValue,\r\n    }\r\n  }),\r\n)\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n  addMulticallListeners,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  removeMulticallListeners,\r\n  toCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\n\r\nexport interface MulticallState {\r\n  callListeners?: {\r\n    // on a per-chain basis\r\n    [chainId: number]: {\r\n      // stores for each call key the listeners' preferences\r\n      [callKey: string]: {\r\n        // stores how many listeners there are per each blocks per fetch preference\r\n        [blocksPerFetch: number]: number\r\n      }\r\n    }\r\n  }\r\n\r\n  callResults: {\r\n    [chainId: number]: {\r\n      [callKey: string]: {\r\n        data?: string | null\r\n        blockNumber?: number\r\n        fetchingBlockNumber?: number\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState: MulticallState = {\r\n  callResults: {},\r\n}\r\n\r\nexport default createReducer(initialState, (builder) =>\r\n  builder\r\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\r\n      const listeners: MulticallState['callListeners'] = state.callListeners\r\n        ? state.callListeners\r\n        : (state.callListeners = {})\r\n      listeners[chainId] = listeners[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\r\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\r\n      })\r\n    })\r\n    .addCase(\r\n      removeMulticallListeners,\r\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\r\n        const listeners: MulticallState['callListeners'] = state.callListeners\r\n          ? state.callListeners\r\n          : (state.callListeners = {})\r\n\r\n        if (!listeners[chainId]) return\r\n        calls.forEach((call) => {\r\n          const callKey = toCallKey(call)\r\n          if (!listeners[chainId][callKey]) return\r\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\r\n\r\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\r\n            delete listeners[chainId][callKey][blocksPerFetch]\r\n          } else {\r\n            listeners[chainId][callKey][blocksPerFetch]--\r\n          }\r\n        })\r\n      },\r\n    )\r\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) {\r\n          state.callResults[chainId][callKey] = {\r\n            fetchingBlockNumber,\r\n          }\r\n        } else {\r\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\r\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      calls.forEach((call) => {\r\n        const callKey = toCallKey(call)\r\n        const current = state.callResults[chainId][callKey]\r\n        if (!current) return // only should be dispatched if we are already fetching\r\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\r\n          delete current.fetchingBlockNumber\r\n          current.data = null\r\n          current.blockNumber = fetchingBlockNumber\r\n        }\r\n      })\r\n    })\r\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\r\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\r\n      Object.keys(results).forEach((callKey) => {\r\n        const current = state.callResults[chainId][callKey]\r\n        if ((current?.blockNumber ?? 0) > blockNumber) return\r\n        state.callResults[chainId][callKey] = {\r\n          data: results[callKey],\r\n          blockNumber,\r\n        }\r\n      })\r\n    }),\r\n)\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { save, load } from 'redux-localstorage-simple'\r\nimport { useDispatch } from 'react-redux'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport predictionsReducer from './predictions'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\nimport collectiblesReducer from './collectibles'\r\nimport votingReducer from './voting'\r\nimport lotteryReducer from './lottery'\r\nimport infoReducer from './info'\r\nimport { updateVersion } from './global/actions'\r\nimport user from './user/reducer'\r\nimport transactions from './transactions/reducer'\r\nimport swap from './swap/reducer'\r\nimport mint from './mint/reducer'\r\nimport lists from './lists/reducer'\r\nimport burn from './burn/reducer'\r\nimport multicall from './multicall/reducer'\r\n\r\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    predictions: predictionsReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    collectibles: collectiblesReducer,\r\n    voting: votingReducer,\r\n    lottery: lotteryReducer,\r\n    info: infoReducer,\r\n\r\n    // Exchange\r\n    user,\r\n    transactions,\r\n    swap,\r\n    mint,\r\n    burn,\r\n    multicall,\r\n    lists,\r\n  },\r\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\r\n  preloadedState: load({ states: PERSISTED_KEYS }),\r\n})\r\n\r\nstore.dispatch(updateVersion())\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type AppState = ReturnType<typeof store.getState>\r\nexport const useAppDispatch = () => useDispatch()\r\n\r\nexport default store\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\n\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\r\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\r\n\r\n  return useMemo(\r\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\r\n    [token, allowance],\r\n  )\r\n}\r\n\r\nexport default useTokenAllowance\r\n","import { MaxUint256 } from '@ethersproject/constants'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { ROUTER_ADDRESS } from '../config/constants'\r\nimport useTokenAllowance from './useTokenAllowance'\r\nimport { Field } from '../state/swap/actions'\r\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\r\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\r\nimport { calculateGasMargin } from '../utils'\r\nimport { useTokenContract } from './useContract'\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\r\n\r\nexport enum ApprovalState {\r\n  UNKNOWN,\r\n  NOT_APPROVED,\r\n  PENDING,\r\n  APPROVED,\r\n}\r\n\r\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\r\nexport function useApproveCallback(\r\n  amountToApprove?: CurrencyAmount,\r\n  spender?: string,\r\n): [ApprovalState, () => Promise<void>] {\r\n  const { account } = useActiveWeb3React()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\r\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\r\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\r\n\r\n  // check the current approval status\r\n  const approvalState: ApprovalState = useMemo(() => {\r\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\r\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\r\n    // we might not have enough data to know whether or not we need to approve\r\n    if (!currentAllowance) return ApprovalState.UNKNOWN\r\n\r\n    // amountToApprove will be defined if currentAllowance is\r\n    return currentAllowance.lessThan(amountToApprove)\r\n      ? pendingApproval\r\n        ? ApprovalState.PENDING\r\n        : ApprovalState.NOT_APPROVED\r\n      : ApprovalState.APPROVED\r\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\r\n\r\n  const tokenContract = useTokenContract(token?.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const approve = useCallback(async (): Promise<void> => {\r\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\r\n      console.error('approve was called unnecessarily')\r\n      return\r\n    }\r\n    if (!token) {\r\n      console.error('no token')\r\n      return\r\n    }\r\n\r\n    if (!tokenContract) {\r\n      console.error('tokenContract is null')\r\n      return\r\n    }\r\n\r\n    if (!amountToApprove) {\r\n      console.error('missing amount to approve')\r\n      return\r\n    }\r\n\r\n    if (!spender) {\r\n      console.error('no spender')\r\n      return\r\n    }\r\n\r\n    let useExact = false\r\n\r\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\r\n      // general fallback for tokens who restrict approval amounts\r\n      useExact = true\r\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\r\n    })\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return callWithGasPrice(\r\n      tokenContract,\r\n      'approve',\r\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\r\n      {\r\n        gasLimit: calculateGasMargin(estimatedGas),\r\n      },\r\n    )\r\n      .then((response: TransactionResponse) => {\r\n        addTransaction(response, {\r\n          summary: `Approve ${amountToApprove.currency.symbol}`,\r\n          approval: { tokenAddress: token.address, spender },\r\n        })\r\n      })\r\n      .catch((error: Error) => {\r\n        console.error('Failed to approve token', error)\r\n        throw error\r\n      })\r\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\r\n\r\n  return [approvalState, approve]\r\n}\r\n\r\n// wraps useApproveCallback in the context of a swap\r\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\r\n  const amountToApprove = useMemo(\r\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\r\n    [trade, allowedSlippage],\r\n  )\r\n\r\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\r\n}\r\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\r\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\r\n\r\nexport const UNSUPPORTED_LIST_URLS: string[] = []\r\n\r\n// lower index == higher priority for token import\r\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\r\n  PANCAKE_TOP100,\r\n  PANCAKE_EXTENDED,\r\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\r\n]\r\n\r\n// default lists to be 'active' aka searched across\r\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\r\n","import { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\r\nimport { AppState } from '../index'\r\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\r\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\r\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\r\n\r\ntype TagDetails = Tags[keyof Tags]\r\nexport interface TagInfo extends TagDetails {\r\n  id: string\r\n}\r\n\r\n// use ordering of default list of lists to assign priority\r\nfunction sortByListPriority(urlA: string, urlB: string) {\r\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\r\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\r\n\r\n  // need reverse order to make sure mapping includes top priority last\r\n  if (first < second) return 1\r\n  if (first > second) return -1\r\n  return 0\r\n}\r\n\r\n/**\r\n * Token instances created from token info.\r\n */\r\nexport class WrappedTokenInfo extends Token {\r\n  public readonly tokenInfo: TokenInfo\r\n\r\n  public readonly tags: TagInfo[]\r\n\r\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\r\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\r\n    this.tokenInfo = tokenInfo\r\n    this.tags = tags\r\n  }\r\n\r\n  public get logoURI(): string | undefined {\r\n    return this.tokenInfo.logoURI\r\n  }\r\n}\r\n\r\nexport type TokenAddressMap = Readonly<\r\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\r\n>\r\n\r\n/**\r\n * An empty result, useful as a default.\r\n */\r\nconst EMPTY_LIST: TokenAddressMap = {\r\n  [ChainId.MAINNET]: {},\r\n  [ChainId.TESTNET]: {},\r\n}\r\n\r\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\r\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\r\n\r\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\r\n  const result = listCache?.get(list)\r\n  if (result) return result\r\n\r\n  const map = list.tokens.reduce<TokenAddressMap>(\r\n    (tokenMap, tokenInfo) => {\r\n      const tags: TagInfo[] =\r\n        tokenInfo.tags\r\n          ?.map((tagId) => {\r\n            if (!list.tags?.[tagId]) return undefined\r\n            return { ...list.tags[tagId], id: tagId }\r\n          })\r\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\r\n      const token = new WrappedTokenInfo(tokenInfo, tags)\r\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\r\n      return {\r\n        ...tokenMap,\r\n        [token.chainId]: {\r\n          ...tokenMap[token.chainId],\r\n          [token.address]: {\r\n            token,\r\n            list,\r\n          },\r\n        },\r\n      }\r\n    },\r\n    { ...EMPTY_LIST },\r\n  )\r\n  listCache?.set(list, map)\r\n  return map\r\n}\r\n\r\nexport function useAllLists(): {\r\n  readonly [url: string]: {\r\n    readonly current: TokenList | null\r\n    readonly pendingUpdate: TokenList | null\r\n    readonly loadingRequestId: string | null\r\n    readonly error: string | null\r\n  }\r\n} {\r\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n}\r\n\r\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\r\n  return {\r\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\r\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\r\n  }\r\n}\r\n\r\n// merge tokens contained within lists from urls\r\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\r\n  const lists = useAllLists()\r\n\r\n  return useMemo(() => {\r\n    if (!urls) return EMPTY_LIST\r\n\r\n    return (\r\n      urls\r\n        .slice()\r\n        // sort by priority so top priority goes last\r\n        .sort(sortByListPriority)\r\n        .reduce((allTokens, currentUrl) => {\r\n          const current = lists[currentUrl]?.current\r\n          if (!current) return allTokens\r\n          try {\r\n            const newTokens = Object.assign(listToTokenMap(current))\r\n            return combineMaps(allTokens, newTokens)\r\n          } catch (error) {\r\n            console.error('Could not show token list due to error', error)\r\n            return allTokens\r\n          }\r\n        }, EMPTY_LIST)\r\n    )\r\n  }, [lists, urls])\r\n}\r\n\r\n// filter out unsupported lists\r\nexport function useActiveListUrls(): string[] | undefined {\r\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\r\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\r\n  )\r\n}\r\n\r\nexport function useInactiveListUrls(): string[] {\r\n  const lists = useAllLists()\r\n  const allActiveListUrls = useActiveListUrls()\r\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\r\n}\r\n\r\n// get all the tokens from active lists, combine with local default tokens\r\nexport function useCombinedActiveList(): TokenAddressMap {\r\n  const activeListUrls = useActiveListUrls()\r\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\r\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\r\n  return combineMaps(activeTokens, defaultTokenMap)\r\n}\r\n\r\n// all tokens from inactive lists\r\nexport function useCombinedInactiveList(): TokenAddressMap {\r\n  const allInactiveListUrls: string[] = useInactiveListUrls()\r\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\r\n}\r\n\r\n// used to hide warnings on import for default tokens\r\nexport function useDefaultTokenList(): TokenAddressMap {\r\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\r\n}\r\n\r\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\r\nexport function useUnsupportedTokenList(): TokenAddressMap {\r\n  // get hard coded unsupported tokens\r\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\r\n\r\n  // get any loaded unsupported tokens\r\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\r\n\r\n  // format into one token address map\r\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\r\n}\r\n\r\nexport function useIsListActive(url: string): boolean {\r\n  const activeListUrls = useActiveListUrls()\r\n  return Boolean(activeListUrls?.includes(url))\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\r\nimport lpAprs from 'config/constants/lpAprs.json'\r\n\r\n/**\r\n * Get the APR value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getPoolApr = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APR value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApr = (\r\n  poolWeight: BigNumber,\r\n  cakePriceUsd: BigNumber,\r\n  poolLiquidityUsd: BigNumber,\r\n  farmAddress: string,\r\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\r\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  let cakeRewardsAprAsNumber = null\r\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\r\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\r\n  }\r\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\r\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\r\n}\r\n\r\nexport default null\r\n","import BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: poolConfig.stakingToken.address,\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: tokens.wbnb.address,\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\r\n  try {\r\n    const sousContract = getSouschefV2Contract(sousId)\r\n    const stakingLimit = await sousContract.poolLimitPerUser()\r\n    return new BigNumber(stakingLimit.toString())\r\n  } catch (error) {\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const fetchPoolsStakingLimits = async (\r\n  poolsWithStakingLimit: number[],\r\n): Promise<{ [key: string]: BigNumber }> => {\r\n  const validPools = poolsConfig\r\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\r\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\r\n\r\n  // Get the staking limit for each valid pool\r\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\r\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\r\n  const stakingLimits = await Promise.all(stakingLimitPromises)\r\n\r\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\r\n    return {\r\n      ...accum,\r\n      [validPools[index].sousId]: stakingLimit,\r\n    }\r\n  }, {})\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterchefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\r\nconst masterChefContract = getMasterchefContract()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((pool) => ({\r\n    address: pool.stakingToken.address,\r\n    name: 'allowance',\r\n    params: [account, getAddress(pool.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((pool) => ({\r\n    address: pool.stakingToken.address,\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.pendingCake('0', account)\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nexport const fetchPublicVaultData = async () => {\r\n  try {\r\n    const calls = [\r\n      'getPricePerFullShare',\r\n      'totalShares',\r\n      'calculateHarvestCakeRewards',\r\n      'calculateTotalPendingCakeRewards',\r\n    ].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\r\n      cakeVaultAbi,\r\n      calls,\r\n    )\r\n\r\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\r\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\r\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\r\n    return {\r\n      totalShares: totalSharesAsBigNumber.toJSON(),\r\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\r\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\r\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\r\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      totalShares: null,\r\n      pricePerFullShare: null,\r\n      totalCakeInVault: null,\r\n      estimatedCakeBountyReward: null,\r\n      totalPendingCakeHarvest: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchVaultFees = async () => {\r\n  try {\r\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\r\n\r\n    return {\r\n      performanceFee: performanceFee.toNumber(),\r\n      callFee: callFee.toNumber(),\r\n      withdrawalFee: withdrawalFee.toNumber(),\r\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchPublicVaultData\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.userInfo(account)\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\r\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\r\nimport fetchVaultUser from './fetchVaultUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n  cakeVault: {\r\n    totalShares: null,\r\n    pricePerFullShare: null,\r\n    totalCakeInVault: null,\r\n    estimatedCakeBountyReward: null,\r\n    totalPendingCakeHarvest: null,\r\n    fees: {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    },\r\n    userData: {\r\n      isLoading: true,\r\n      userShares: null,\r\n      cakeAtLastUserAction: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n    },\r\n  },\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n          stakingTokenPrice,\r\n          earningTokenPrice,\r\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n          parseFloat(pool.tokenPerBlock),\r\n        )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    const stakingTokenBalances = await fetchUserBalances(account)\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n    const userData = poolsConfig.map((pool) => ({\r\n      sousId: pool.sousId,\r\n      allowance: allowances[pool.sousId],\r\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n      stakedBalance: stakedBalances[pool.sousId],\r\n      pendingReward: pendingRewards[pool.sousId],\r\n    }))\r\n\r\n    dispatch(setPoolsUserData(userData))\r\n  }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n  }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const tokenBalances = await fetchUserBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n  }\r\n\r\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\r\n  const publicVaultInfo = await fetchPublicVaultData()\r\n  return publicVaultInfo\r\n})\r\n\r\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\r\n  const vaultFees = await fetchVaultFees()\r\n  return vaultFees\r\n})\r\n\r\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\r\n  'cakeVault/fetchUser',\r\n  async ({ account }) => {\r\n    const userData = await fetchVaultUser(account)\r\n    return userData\r\n  },\r\n)\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: SerializedPool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Vault public data that updates frequently\r\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\r\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\r\n    })\r\n    // Vault fees\r\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\r\n      const fees = action.payload\r\n      state.cakeVault = { ...state.cakeVault, fees }\r\n    })\r\n    // Vault user data\r\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\r\n      const userData = action.payload\r\n      userData.isLoading = false\r\n      state.cakeVault = { ...state.cakeVault, userData }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","import React from 'react'\r\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\ninterface Props extends BoxProps {\r\n  text: string | React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nconst QuestionWrapper = styled.div`\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\r\n\r\n  return (\r\n    <Box {...props}>\r\n      {tooltipVisible && tooltip}\r\n      <QuestionWrapper ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\r\n      </QuestionWrapper>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default QuestionHelper\r\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\n\r\nexport const fetchTokenList: Readonly<{\r\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\r\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\r\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\r\n}> = {\r\n  pending: createAction('lists/fetchTokenList/pending'),\r\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\r\n  rejected: createAction('lists/fetchTokenList/rejected'),\r\n}\r\n// add and remove from list options\r\nexport const addList = createAction<string>('lists/addList')\r\nexport const removeList = createAction<string>('lists/removeList')\r\n\r\n// select which lists to search across from loaded lists\r\nexport const enableList = createAction<string>('lists/enableList')\r\nexport const disableList = createAction<string>('lists/disableList')\r\n\r\n// versioning\r\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\r\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\r\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport {\r\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\r\n  ALLOWED_PRICE_IMPACT_HIGH,\r\n  ALLOWED_PRICE_IMPACT_LOW,\r\n  ALLOWED_PRICE_IMPACT_MEDIUM,\r\n} from '../config/constants'\r\n\r\nimport { Field } from '../state/swap/actions'\r\nimport { basisPointsToPercent } from './index'\r\n\r\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\r\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\r\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\r\n\r\n// computes price breakdown for the trade\r\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\r\n  priceImpactWithoutFee: Percent | undefined\r\n  realizedLPFee: CurrencyAmount | undefined | null\r\n} {\r\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\r\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\r\n  const realizedLPFee = !trade\r\n    ? undefined\r\n    : ONE_HUNDRED_PERCENT.subtract(\r\n        trade.route.pairs.reduce<Fraction>(\r\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\r\n          ONE_HUNDRED_PERCENT,\r\n        ),\r\n      )\r\n\r\n  // remove lp fees from price impact\r\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\r\n\r\n  // the x*y=k impact\r\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\r\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\r\n    : undefined\r\n\r\n  // the amount of the input that accrues to LPs\r\n  const realizedLPFeeAmount =\r\n    realizedLPFee &&\r\n    trade &&\r\n    (trade.inputAmount instanceof TokenAmount\r\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\r\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\r\n\r\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\r\n}\r\n\r\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\r\nexport function computeSlippageAdjustedAmounts(\r\n  trade: Trade | undefined,\r\n  allowedSlippage: number,\r\n): { [field in Field]?: CurrencyAmount } {\r\n  const pct = basisPointsToPercent(allowedSlippage)\r\n  return {\r\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\r\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\r\n  }\r\n}\r\n\r\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\r\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\r\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\r\n  return 0\r\n}\r\n\r\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\r\n  if (!trade) {\r\n    return ''\r\n  }\r\n  return inverted\r\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\r\n        trade.outputAmount.currency.symbol\r\n      }`\r\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\r\n        trade.inputAmount.currency.symbol\r\n      }`\r\n}\r\n\r\n/**\r\n * Helper to multiply a Price object by an arbitrary amount\r\n */\r\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\r\n  if (!price) {\r\n    return 0\r\n  }\r\n\r\n  return parseFloat(price.toSignificant(significantDigits)) * amount\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport interface Call {\r\n  address: string\r\n  callData: string\r\n}\r\n\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\r\nexport function toCallKey(call: Call): string {\r\n  if (!ADDRESS_REGEX.test(call.address)) {\r\n    throw new Error(`Invalid address: ${call.address}`)\r\n  }\r\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\r\n    throw new Error(`Invalid hex: ${call.callData}`)\r\n  }\r\n  return `${call.address}-${call.callData}`\r\n}\r\n\r\nexport function parseCallKey(callKey: string): Call {\r\n  const pcs = callKey.split('-')\r\n  if (pcs.length !== 2) {\r\n    throw new Error(`Invalid call key: ${callKey}`)\r\n  }\r\n  return {\r\n    address: pcs[0],\r\n    callData: pcs[1],\r\n  }\r\n}\r\n\r\nexport interface ListenerOptions {\r\n  // how often this data should be fetched, by default 1\r\n  readonly blocksPerFetch?: number\r\n}\r\n\r\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/addMulticallListeners',\r\n)\r\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\r\n  'multicall/removeMulticallListeners',\r\n)\r\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\r\n  'multicall/fetchingMulticallResults',\r\n)\r\nexport const errorFetchingMulticallResults = createAction<{\r\n  chainId: number\r\n  calls: Call[]\r\n  fetchingBlockNumber: number\r\n}>('multicall/errorFetchingMulticallResults')\r\nexport const updateMulticallResults = createAction<{\r\n  chainId: number\r\n  blockNumber: number\r\n  results: {\r\n    [callKey: string]: string | null\r\n  }\r\n}>('multicall/updateMulticallResults')\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\n\r\nconst useTheme = () => {\r\n  const [isDark, toggleTheme] = useThemeManager()\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, theme, toggleTheme }\r\n}\r\n\r\nexport default useTheme\r\n","import { serializeTokens } from './tokens'\r\nimport { SerializedPoolConfig, PoolCategory } from './types'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst pools: SerializedPoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '10',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 220,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chess,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4D1Ec426d0d7fb6bF344Dd372d0502EDD71c8d88',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0861',\r\n  },\r\n  {\r\n    sousId: 219,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tlos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCB41a72067c227D6Ed7bc7CFAcd13eCe47Dfe5E9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3616',\r\n  },\r\n  {\r\n    sousId: 218,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.stephero,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcecba456fefe5b18d43df23419e7ab755b436655',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1851',\r\n  },\r\n  {\r\n    sousId: 217,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ed7acf12b08274d5cdaf03d43d0e54bcbdd487e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.217',\r\n  },\r\n  {\r\n    sousId: 216,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cvp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC4b15117BC0be030c20754FF36197641477af5d1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.14',\r\n  },\r\n  {\r\n    sousId: 215,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.qbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB72dEf58D0832f747d6B7197471Fe20AeA7EB463',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.412',\r\n  },\r\n  {\r\n    sousId: 214,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.naos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb38b78529bCc895dA16CE2978D6cD6C56e8CfFC3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1736',\r\n  },\r\n  {\r\n    sousId: 213,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pha,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2E101b5F7f910F2609e5AcE5f43bD274b1DE09AA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.28',\r\n  },\r\n  {\r\n    sousId: 212,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x52733Ad7b4D09BF613b0389045e33E2F287afa04',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.101',\r\n  },\r\n  {\r\n    sousId: 211,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x401b9b97bdbc3197c1adfab9652dc78040bd1e13',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.9837',\r\n  },\r\n  {\r\n    sousId: 210,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pots,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBeDb490970204cb3CC7B0fea94463BeD67d5364D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 209,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb6e510ae2da1ab4e350f837c70823ab75091780e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 208,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.revv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8aa5b2c67852ed5334c8a7f0b5eb0ef975106793',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.331',\r\n  },\r\n  {\r\n    sousId: 207,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b804460c3c62f0f565af593984159f13b1ac976',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '263',\r\n  },\r\n  {\r\n    sousId: 206,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.skill,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x455f4d4cc4d6ca15441a93c631e82aaf338ad843',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00289',\r\n  },\r\n  {\r\n    sousId: 205,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xde4aef42bb27a2cb45c746acde4e4d8ab711d27c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1815.39',\r\n  },\r\n  {\r\n    sousId: 204,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.if,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x57d3524888ded4085d9124a422f13b27c8a43de7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.02835',\r\n  },\r\n  {\r\n    sousId: 203,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.sps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb56299d8fbf46c509014b103a164ad1fc65ea222',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '12.86',\r\n  },\r\n  {\r\n    sousId: 202,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.c98,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5e49531BA07bE577323e55666D46C6217164119E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 201,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.axs,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBB472601B3CB32723d0755094BA80B73F67f2AF3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00744',\r\n  },\r\n  {\r\n    sousId: 200,\r\n    stakingToken: serializedTokens.axs,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x583A36816F3b8401C4fdf682203E0caDA6997740',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00992',\r\n  },\r\n  {\r\n    sousId: 199,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x28050e8f024e05f9ddbef5f60dd49f536dba0cf0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.02696',\r\n  },\r\n  {\r\n    sousId: 198,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb2b62f88ab82ed0bb4ab4da60d9dc9acf9e816e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '9.6643',\r\n  },\r\n  {\r\n    sousId: 197,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chess,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4286',\r\n  },\r\n  {\r\n    sousId: 196,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.titan,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 195,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.harmony,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.0092',\r\n  },\r\n  {\r\n    sousId: 194,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mask,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.06423',\r\n  },\r\n  {\r\n    sousId: 193,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dvi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.7233',\r\n  },\r\n  {\r\n    sousId: 192,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.67129',\r\n  },\r\n  {\r\n    sousId: 191,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.adx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.7523',\r\n  },\r\n  {\r\n    sousId: 190,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '69.9074',\r\n  },\r\n  {\r\n    sousId: 189,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bscpad,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3877',\r\n  },\r\n  {\r\n    sousId: 188,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.rabbit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.993',\r\n  },\r\n  {\r\n    sousId: 187,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.waultx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '7.9108',\r\n  },\r\n  {\r\n    sousId: 186,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wex,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '11.574',\r\n  },\r\n  {\r\n    sousId: 185,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.form,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.4467',\r\n  },\r\n  {\r\n    sousId: 184,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.orbs,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.8946',\r\n  },\r\n  {\r\n    sousId: 183,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.$dg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00135',\r\n  },\r\n  {\r\n    sousId: 182,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.woo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3854',\r\n  },\r\n  {\r\n    sousId: 181,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.woo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0003854',\r\n  },\r\n  {\r\n    sousId: 180,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.htb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '5.2083',\r\n  },\r\n  {\r\n    sousId: 179,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1001',\r\n  },\r\n  {\r\n    sousId: 178,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 177,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.3078',\r\n  },\r\n  {\r\n    sousId: 176,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.o3,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.107638',\r\n  },\r\n  {\r\n    sousId: 175,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ampl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.398',\r\n  },\r\n  {\r\n    sousId: 174,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4843',\r\n  },\r\n  {\r\n    sousId: 173,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6741',\r\n  },\r\n  {\r\n    sousId: 172,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.marsh,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1108',\r\n  },\r\n  {\r\n    sousId: 171,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mbox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4803',\r\n  },\r\n  {\r\n    sousId: 170,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ata,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n  },\r\n  {\r\n    sousId: 169,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.27777',\r\n  },\r\n  {\r\n    sousId: 168,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bcfx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 167,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.qkc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.9143',\r\n  },\r\n  {\r\n    sousId: 166,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ktn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01215',\r\n  },\r\n  {\r\n    sousId: 165,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mtrg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.05613',\r\n  },\r\n  {\r\n    sousId: 164,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tusd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.5787',\r\n  },\r\n  {\r\n    sousId: 163,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.vrt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '40.5092',\r\n  },\r\n  {\r\n    sousId: 162,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0868',\r\n  },\r\n  {\r\n    sousId: 161,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ez,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01736',\r\n  },\r\n  {\r\n    sousId: 160,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kalm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    tokenPerBlock: '0.00868',\r\n  },\r\n  {\r\n    sousId: 159,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.popen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.19097',\r\n  },\r\n  {\r\n    sousId: 158,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.023148',\r\n  },\r\n  {\r\n    sousId: 157,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.well,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2025',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 156,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.deri,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.6087',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 155,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.chr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '1.655',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 154,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cyc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00015914',\r\n    sortOrder: 999,\r\n  },\r\n  {\r\n    sousId: 153,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xend,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.31828',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 152,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.03553',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 151,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hotcross,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 150,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.rfox,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.7361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 149,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wmass,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.24942',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 148,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ubxt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.4074',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 147,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 146,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τdoge,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.868',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 145,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pmon,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01261',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 144,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.one,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '57.87',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 143,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.fine,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.1342',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 142,\r\n    stakingToken: serializedTokens.doge,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01388',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 141,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.01331',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 140,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oin,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 139,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hyfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.8935',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 138,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.kun,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23148',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 137,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.math,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15798',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 136,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.17361',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 135,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.win,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '462.96',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 134,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '4.0509',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 133,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '79.86',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 132,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lmt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.66145',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 131,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pnt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09548',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 130,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0298',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 129,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4861',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 128,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 127,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 126,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 125,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 124,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 123,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 122,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 121,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 120,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 119,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 118,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 117,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.009837',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 116,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dfd,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.46296',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 115,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alpaca,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.22743',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 114,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 113,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.τbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000608',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 112,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.21527',\r\n  },\r\n  {\r\n    sousId: 111,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xed,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 110,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hakka,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.4722',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 109,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cgg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.10918',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 108,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mix,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.3721',\r\n  },\r\n  {\r\n    sousId: 107,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.suter,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '15.3356',\r\n  },\r\n  {\r\n    sousId: 106,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '14.4675',\r\n  },\r\n  {\r\n    sousId: 105,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hzn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6944',\r\n  },\r\n  {\r\n    sousId: 104,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.23495',\r\n  },\r\n  {\r\n    sousId: 103,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.perl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 102,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tlm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '17.361',\r\n  },\r\n  {\r\n    sousId: 101,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.jgn,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08796',\r\n  },\r\n  {\r\n    sousId: 100,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.eps,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.07716',\r\n  },\r\n  {\r\n    sousId: 99,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.arpa,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.949',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 98,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.itam,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '3.096',\r\n  },\r\n  {\r\n    sousId: 97,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bondly,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4629',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 96,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tko,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.1574',\r\n  },\r\n  {\r\n    sousId: 95,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.apys,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.09953',\r\n  },\r\n  {\r\n    sousId: 94,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hoo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.489',\r\n  },\r\n  {\r\n    sousId: 93,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.oddz,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.11284',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 92,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.easy,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0072338',\r\n  },\r\n  {\r\n    sousId: 91,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nrv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.15046',\r\n  },\r\n  {\r\n    sousId: 90,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dego,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00405',\r\n  },\r\n  {\r\n    sousId: 89,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.gum,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.08912',\r\n  },\r\n  {\r\n    sousId: 88,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pbtc,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.0000031',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 87,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dft,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.6811',\r\n  },\r\n  {\r\n    sousId: 86,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swth,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '2.3148',\r\n  },\r\n  {\r\n    sousId: 85,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lien,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.003472',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 84,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.zil,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '1.0995',\r\n  },\r\n  {\r\n    sousId: 83,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.pcws,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00434',\r\n  },\r\n  {\r\n    sousId: 82,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bbadger,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00265278',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 81,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdigg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.00000403',\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 80,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.2893',\r\n  },\r\n  {\r\n    sousId: 79,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 78,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.mir,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01273',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 77,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.trade,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4484',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 76,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dusk,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4629',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 75,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bifi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00007234',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 74,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.txl,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.434027',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 73,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.cos,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5.787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 72,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bunny,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00289',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 71,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.alice,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.14467',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 70,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.for,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '2.8935',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 69,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bux,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5787',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 68,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nuls,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0868',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 67,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.belt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00868',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 66,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ramp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4861',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 65,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0001157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 64,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dexe,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.009837',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 63,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bel,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0549',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 62,\r\n    stakingToken: serializedTokens.tpt,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0462',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 61,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.tpt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '3.616',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 60,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.watch,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.3472',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 59,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.xmark,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0413',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 58,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bmxx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.00248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 57,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.iotx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '6.365',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 56,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bor,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.000395',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 55,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bopen,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0723',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 54,\r\n    stakingToken: serializedTokens.sushi,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0367',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 53,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.dodo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0578',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 52,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swingby,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.13',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 51,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bry,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 50,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.zee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1736',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 49,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.swgb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.899',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 48,\r\n    stakingToken: serializedTokens.comp,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.055',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 47,\r\n    stakingToken: serializedTokens.comp,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.55',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 46,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.sfp,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.6',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 45,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 44,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lina,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0983',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 43,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.lit,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.231',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 42,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hget,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0138',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 41,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bdo,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.075',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 40,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.egld,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.001215',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 39,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ust,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.1157',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 38,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.wsote,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.23',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 37,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.front,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2546',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 36,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.helmet,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.81',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 35,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.btcst,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.011574',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 34,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bscx,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.17361',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 33,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ten,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.05787',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 32,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.balbt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.4166',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 31,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.asr,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 30,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.atm,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 29,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.og,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 28,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.reef,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '115.74',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 27,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ditto,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.01157',\r\n    sortOrder: 999,\r\n    isFinished: false,\r\n  },\r\n  {\r\n    sousId: 26,\r\n    stakingToken: serializedTokens.twt,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.248',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 24,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.juv,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 25,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.psg,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 21,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.vai,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.104',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 20,\r\n    stakingToken: serializedTokens.bnb,\r\n    earningToken: serializedTokens.cake,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\r\n    },\r\n    poolCategory: PoolCategory.BINANCE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 19,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.bnb,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.0041',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 18,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 17,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.blink,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '23.14',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n    enableEmergencyWithdraw: true,\r\n  },\r\n  {\r\n    sousId: 16,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.unfi,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.02893',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 15,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.twt,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 14,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.hard,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.346',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 13,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.broobee,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '12.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 12,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.stax,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '0.2',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 11,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nar,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    tokenPerBlock: '1',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 10,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.nya,\r\n    contractAddress: {\r\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\r\n    },\r\n    poolCategory: PoolCategory.COMMUNITY,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '10',\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 9,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.ctk,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.5',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 8,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.twt,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '20',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n  {\r\n    sousId: 7,\r\n    stakingToken: serializedTokens.cake,\r\n    earningToken: serializedTokens.inj,\r\n    contractAddress: {\r\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '0.25',\r\n    sortOrder: 999,\r\n    isFinished: true,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","import { ethers } from 'ethers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\r\n\r\nexport default null\r\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\r\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\r\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\r\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\r\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\r\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\r\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\r\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\r\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\r\n\r\n/**\r\n * V1 will be deprecated but is still used to claim old rounds\r\n */\r\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/pancakeswap/prediction'\r\n\r\nexport const INFO_CLIENT = 'https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2'\r\nexport const BLOCKS_CLIENT = 'https://api.thegraph.com/subgraphs/name/pancakeswap/blocks'\r\n","import { useEffect, useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { farmsConfig } from 'config/constants'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { deserializeToken } from 'state/user/hooks/helpers'\r\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\r\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\r\n\r\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\r\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceBusd, tokenPriceBusd } = farm\r\n\r\n  return {\r\n    lpAddresses,\r\n    lpSymbol,\r\n    pid,\r\n    dual,\r\n    multiplier,\r\n    isCommunity,\r\n    quoteTokenPriceBusd,\r\n    tokenPriceBusd,\r\n    token: deserializeToken(farm.token),\r\n    quoteToken: deserializeToken(farm.quoteToken),\r\n    userData: deserializeFarmUserData(farm),\r\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\r\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\r\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\r\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\r\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const usePollFarmsPublicData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n  }, [includeArchive, dispatch, slowRefresh])\r\n}\r\n\r\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\r\n    }\r\n  }, [includeArchive, dispatch, slowRefresh, account])\r\n}\r\n\r\n/**\r\n * Fetches the \"core\" farm data used globally\r\n * 251 = CAKE-BNB LP\r\n * 252 = BUSD-BNB LP\r\n */\r\nexport const usePollCoreFarmData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\r\n  }, [dispatch, fastRefresh])\r\n}\r\n\r\nexport const useFarms = (): DeserializedFarmsState => {\r\n  const farms = useSelector((state: State) => state.farms)\r\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\r\n  const { loadArchivedFarmsData, userDataLoaded } = farms\r\n  return {\r\n    loadArchivedFarmsData,\r\n    userDataLoaded,\r\n    data: deserializedFarmsData,\r\n  }\r\n}\r\n\r\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return deserializeFarm(farm)\r\n}\r\n\r\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return deserializeFarm(farm)\r\n}\r\n\r\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\r\n  const { userData } = useFarmFromPid(pid)\r\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\r\n  return {\r\n    allowance,\r\n    tokenBalance,\r\n    stakedBalance,\r\n    earnings,\r\n  }\r\n}\r\n\r\n// Return the base token price for a farm, from a given pid\r\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\r\n  const farm = useFarmFromPid(pid)\r\n  return farm && new BigNumber(farm.tokenPriceBusd)\r\n}\r\n\r\nexport const useLpTokenPrice = (symbol: string) => {\r\n  const farm = useFarmFromLpSymbol(symbol)\r\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\r\n  let lpTokenPrice = BIG_ZERO\r\n\r\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\r\n    // Total value of base token in LP\r\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\r\n    // Double it to get overall value in LP\r\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\r\n    // Divide total value of all tokens, by the number of LP tokens\r\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\r\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\r\n  }\r\n\r\n  return lpTokenPrice\r\n}\r\n\r\n// /!\\ Deprecated , use the BUSD hook in /hooks\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const cakeBnbFarm = useFarmFromPid(251)\r\n\r\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceBusd\r\n\r\n  const cakePriceBusd = useMemo(() => {\r\n    return new BigNumber(cakePriceBusdAsString)\r\n  }, [cakePriceBusdAsString])\r\n\r\n  return cakePriceBusd\r\n}\r\n","import { ReactNode } from 'react'\r\n\r\nexport const types = {\r\n  SUCCESS: 'success',\r\n  DANGER: 'danger',\r\n  WARNING: 'warning',\r\n  INFO: 'info',\r\n}\r\n\r\nexport type Types = typeof types[keyof typeof types]\r\n\r\nexport interface Toast {\r\n  id: string\r\n  type: Types\r\n  title: string\r\n  description?: ReactNode\r\n}\r\n\r\nexport interface ToastContainerProps {\r\n  toasts: Toast[]\r\n  stackSpacing?: number\r\n  ttl?: number\r\n  onRemove: (id: string) => void\r\n}\r\n\r\nexport interface ToastProps {\r\n  toast: Toast\r\n  onRemove: ToastContainerProps['onRemove']\r\n  ttl: number\r\n  style: Partial<CSSStyleDeclaration>\r\n}\r\n","import React, { useCallback, useEffect, useRef } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styled from 'styled-components'\r\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\r\nimport { ToastProps, types } from './types'\r\n\r\nconst alertTypeMap = {\r\n  [types.INFO]: alertVariants.INFO,\r\n  [types.SUCCESS]: alertVariants.SUCCESS,\r\n  [types.DANGER]: alertVariants.DANGER,\r\n  [types.WARNING]: alertVariants.WARNING,\r\n}\r\n\r\nconst StyledToast = styled.div`\r\n  right: 16px;\r\n  position: fixed;\r\n  max-width: calc(100% - 32px);\r\n  transition: all 250ms ease-in;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-width: 400px;\r\n  }\r\n`\r\n\r\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\r\n  const timer = useRef<number>()\r\n  const ref = useRef(null)\r\n  const removeHandler = useRef(onRemove)\r\n  const { id, title, description, type } = toast\r\n\r\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\r\n\r\n  const handleMouseEnter = () => {\r\n    clearTimeout(timer.current)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n    }\r\n\r\n    timer.current = window.setTimeout(() => {\r\n      handleRemove()\r\n    }, ttl)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (timer.current) {\r\n      clearTimeout(timer.current)\r\n    }\r\n\r\n    timer.current = window.setTimeout(() => {\r\n      handleRemove()\r\n    }, ttl)\r\n\r\n    return () => {\r\n      clearTimeout(timer.current)\r\n    }\r\n  }, [timer, ttl, handleRemove])\r\n\r\n  return (\r\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\r\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\r\n          {description}\r\n        </Alert>\r\n      </StyledToast>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nexport default Toast\r\n","import React from 'react'\r\nimport { TransitionGroup } from 'react-transition-group'\r\nimport styled from 'styled-components'\r\nimport Toast from './Toast'\r\nimport { ToastContainerProps } from './types'\r\n\r\nconst ZINDEX = 1000\r\nconst TOP_POSITION = 80 // Initial position from the top\r\n\r\nconst StyledToastContainer = styled.div`\r\n  .enter,\r\n  .appear {\r\n    opacity: 0.01;\r\n  }\r\n\r\n  .enter.enter-active,\r\n  .appear.appear-active {\r\n    opacity: 1;\r\n    transition: opacity 250ms ease-in;\r\n  }\r\n\r\n  .exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  .exit.exit-active {\r\n    opacity: 0.01;\r\n    transition: opacity 250ms ease-out;\r\n  }\r\n`\r\n\r\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\r\n  return (\r\n    <StyledToastContainer>\r\n      <TransitionGroup>\r\n        {toasts.map((toast, index) => {\r\n          const zIndex = (ZINDEX - index).toString()\r\n          const top = TOP_POSITION + index * stackSpacing\r\n\r\n          return (\r\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\r\n          )\r\n        })}\r\n      </TransitionGroup>\r\n    </StyledToastContainer>\r\n  )\r\n}\r\n\r\nexport default ToastContainer\r\n","import React from 'react'\r\nimport { Link, Text } from '@pancakeswap/uikit'\r\nimport { getBscScanLink } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport truncateHash from 'utils/truncateHash'\r\n\r\ninterface DescriptionWithTxProps {\r\n  description?: string\r\n  txHash?: string\r\n}\r\n\r\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\r\n      {txHash && (\r\n        <Link external href={getBscScanLink(txHash, 'transaction', chainId)}>\r\n          {t('View on BscScan')}: {truncateHash(txHash, 8, 0)}\r\n        </Link>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DescriptionWithTx\r\n","import { useEffect, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { setBlock } from '.'\r\nimport { State } from '../types'\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const timer = useRef(null)\r\n  const dispatch = useAppDispatch()\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  useEffect(() => {\r\n    if (isWindowVisible) {\r\n      timer.current = setInterval(async () => {\r\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n        dispatch(setBlock(blockNumber))\r\n      }, 6000)\r\n    } else {\r\n      clearInterval(timer.current)\r\n    }\r\n\r\n    return () => clearInterval(timer.current)\r\n  }, [dispatch, timer, isWindowVisible])\r\n}\r\n\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ERC20_INTERFACE from 'config/abi/erc20'\r\nimport { useAllTokens } from 'hooks/Tokens'\r\nimport { useMulticallContract } from 'hooks/useContract'\r\nimport { isAddress } from 'utils'\r\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\r\n\r\n/**\r\n * Returns a map of the given addresses to their eventually consistent BNB balances.\r\n */\r\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\r\n  [address: string]: CurrencyAmount | undefined\r\n} {\r\n  const multicallContract = useMulticallContract()\r\n\r\n  const addresses: string[] = useMemo(\r\n    () =>\r\n      uncheckedAddresses\r\n        ? uncheckedAddresses\r\n            .map(isAddress)\r\n            .filter((a): a is string => a !== false)\r\n            .sort()\r\n        : [],\r\n    [uncheckedAddresses],\r\n  )\r\n\r\n  const results = useSingleContractMultipleData(\r\n    multicallContract,\r\n    'getEthBalance',\r\n    addresses.map((address) => [address]),\r\n  )\r\n\r\n  return useMemo(\r\n    () =>\r\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\r\n        const value = results?.[i]?.result?.[0]\r\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\r\n        return memo\r\n      }, {}),\r\n    [addresses, results],\r\n  )\r\n}\r\n\r\n/**\r\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\r\n */\r\nexport function useTokenBalancesWithLoadingIndicator(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\r\n  const validatedTokens: Token[] = useMemo(\r\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\r\n    [tokens],\r\n  )\r\n\r\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\r\n\r\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\r\n\r\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\r\n\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        address && validatedTokens.length > 0\r\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\r\n              const value = balances?.[i]?.result?.[0]\r\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\r\n              if (amount) {\r\n                memo[token.address] = new TokenAmount(token, amount)\r\n              }\r\n              return memo\r\n            }, {})\r\n          : {},\r\n      [address, validatedTokens, balances],\r\n    ),\r\n    anyLoading,\r\n  ]\r\n}\r\n\r\nexport function useTokenBalances(\r\n  address?: string,\r\n  tokens?: (Token | undefined)[],\r\n): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\r\n}\r\n\r\n// get the balance for a single token/account combo\r\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\r\n  const tokenBalances = useTokenBalances(account, [token])\r\n  if (!token) return undefined\r\n  return tokenBalances[token.address]\r\n}\r\n\r\nexport function useCurrencyBalances(\r\n  account?: string,\r\n  currencies?: (Currency | undefined)[],\r\n): (CurrencyAmount | undefined)[] {\r\n  const tokens = useMemo(\r\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\r\n    [currencies],\r\n  )\r\n\r\n  const tokenBalances = useTokenBalances(account, tokens)\r\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\r\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\r\n\r\n  return useMemo(\r\n    () =>\r\n      currencies?.map((currency) => {\r\n        if (!account || !currency) return undefined\r\n        if (currency instanceof Token) return tokenBalances[currency.address]\r\n        if (currency === ETHER) return ethBalance[account]\r\n        return undefined\r\n      }) ?? [],\r\n    [account, currencies, ethBalance, tokenBalances],\r\n  )\r\n}\r\n\r\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  return useCurrencyBalances(account, [currency])[0]\r\n}\r\n\r\n// mimics useAllBalances\r\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\r\n  const { account } = useWeb3React()\r\n  const allTokens = useAllTokens()\r\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\r\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\r\n  return balances ?? {}\r\n}\r\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\r\n\r\nexport enum PairState {\r\n  LOADING,\r\n  NOT_EXISTS,\r\n  EXISTS,\r\n  INVALID,\r\n}\r\n\r\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokens = useMemo(\r\n    () =>\r\n      currencies.map(([currencyA, currencyB]) => [\r\n        wrappedCurrency(currencyA, chainId),\r\n        wrappedCurrency(currencyB, chainId),\r\n      ]),\r\n    [chainId, currencies],\r\n  )\r\n\r\n  const pairAddresses = useMemo(\r\n    () =>\r\n      tokens.map(([tokenA, tokenB]) => {\r\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\r\n      }),\r\n    [tokens],\r\n  )\r\n\r\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\r\n\r\n  return useMemo(() => {\r\n    return results.map((result, i) => {\r\n      const { result: reserves, loading } = result\r\n      const tokenA = tokens[i][0]\r\n      const tokenB = tokens[i][1]\r\n\r\n      if (loading) return [PairState.LOADING, null]\r\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\r\n      if (!reserves) return [PairState.NOT_EXISTS, null]\r\n      const { reserve0, reserve1 } = reserves\r\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n      return [\r\n        PairState.EXISTS,\r\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\r\n      ]\r\n    })\r\n  }, [results, tokens])\r\n}\r\n\r\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\r\n  return usePairs([[tokenA, tokenB]])[0]\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ConnectWalletButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {t('Connect Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ConnectWalletButton\r\n","export const REWARD_RATE = 0.97\r\n\r\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\r\nexport const ROUND_BUFFER = 9\r\n\r\nexport const PAST_ROUND_COUNT = 5\r\nexport const FUTURE_ROUND_COUNT = 2\r\n\r\nexport const ROUNDS_PER_PAGE = 1000\r\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\r\n","import { TransactionResponse } from '@ethersproject/providers'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { addTransaction } from './actions'\r\nimport { TransactionDetails } from './reducer'\r\n\r\n// helper that can take a ethers library transaction response and add it to the list of transactions\r\nexport function useTransactionAdder(): (\r\n  response: TransactionResponse,\r\n  customData?: {\r\n    summary?: string\r\n    approval?: { tokenAddress: string; spender: string }\r\n    claim?: { recipient: string }\r\n  },\r\n) => void {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  return useCallback(\r\n    (\r\n      response: TransactionResponse,\r\n      {\r\n        summary,\r\n        approval,\r\n        claim,\r\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\r\n    ) => {\r\n      if (!account) return\r\n      if (!chainId) return\r\n\r\n      const { hash } = response\r\n      if (!hash) {\r\n        throw Error('No transaction hash found.')\r\n      }\r\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\r\n    },\r\n    [dispatch, chainId, account],\r\n  )\r\n}\r\n\r\n// returns all the transactions for the current chain\r\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  return chainId ? state[chainId] ?? {} : {}\r\n}\r\n\r\nexport function useIsTransactionPending(transactionHash?: string): boolean {\r\n  const transactions = useAllTransactions()\r\n\r\n  if (!transactionHash || !transactions[transactionHash]) return false\r\n\r\n  return !transactions[transactionHash].receipt\r\n}\r\n\r\n/**\r\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\r\n * @param tx to check for recency\r\n */\r\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\r\n  return new Date().getTime() - tx.addedTime < 86_400_000\r\n}\r\n\r\n// returns whether a token has a pending approval transaction\r\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\r\n  const allTransactions = useAllTransactions()\r\n  return useMemo(\r\n    () =>\r\n      typeof tokenAddress === 'string' &&\r\n      typeof spender === 'string' &&\r\n      Object.keys(allTransactions).some((hash) => {\r\n        const tx = allTransactions[hash]\r\n        if (!tx) return false\r\n        if (tx.receipt) {\r\n          return false\r\n        }\r\n        const { approval } = tx\r\n        if (!approval) return false\r\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\r\n      }),\r\n    [allTransactions, spender, tokenAddress],\r\n  )\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\n\r\nexport interface SerializableTransactionReceipt {\r\n  to: string\r\n  from: string\r\n  contractAddress: string\r\n  transactionIndex: number\r\n  blockHash: string\r\n  transactionHash: string\r\n  blockNumber: number\r\n  status?: number\r\n}\r\n\r\nexport const addTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  from: string\r\n  approval?: { tokenAddress: string; spender: string }\r\n  claim?: { recipient: string }\r\n  summary?: string\r\n}>('transactions/addTransaction')\r\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\r\nexport const finalizeTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  receipt: SerializableTransactionReceipt\r\n}>('transactions/finalizeTransaction')\r\nexport const checkedTransaction = createAction<{\r\n  chainId: ChainId\r\n  hash: string\r\n  blockNumber: number\r\n}>('transactions/checkedTransaction')\r\n","import styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst Card = styled(Box)<{\r\n  width?: string\r\n  padding?: string\r\n  border?: string\r\n  borderRadius?: string\r\n}>`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  border-radius: 16px;\r\n  padding: 1.25rem;\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\nexport default Card\r\n\r\nexport const LightCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.background};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nexport const LightGreyCard = styled(Card)`\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport const GreyCard = styled(Card)`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n","// 1 day, 7 days, 30 days, 1 year, 5 years\r\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\r\n\r\n/**\r\n *\r\n * @param principalInUSD - amount user wants to invest in USD\r\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\r\n * @param earningTokenPrice - price of reward token\r\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\r\n * @param performanceFee - performance fee as percentage\r\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\r\n */\r\nexport const getInterestBreakdown = ({\r\n  principalInUSD,\r\n  apr,\r\n  earningTokenPrice,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}: {\r\n  principalInUSD: number\r\n  apr: number\r\n  earningTokenPrice: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n}) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\r\n  const timesCompounded = 365 * compoundFrequency\r\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const aprAsDecimal = apr / 100\r\n\r\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\r\n  // and also cause rounding errors\r\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\r\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\r\n\r\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\r\n    const daysAsDecimalOfYear = days / 365\r\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\r\n    const principal = principalInUSD / earningTokenPrice\r\n    let interestEarned = principal * aprAsDecimal * (days / 365)\r\n    if (timesCompounded !== 0) {\r\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\r\n      interestEarned = accruedAmount - principal\r\n      if (performanceFee) {\r\n        const performanceFeeAsDecimal = performanceFee / 100\r\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\r\n        interestEarned -= performanceFeeAsAmount\r\n      }\r\n    }\r\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\r\n  })\r\n}\r\n\r\n/**\r\n * @param interest how much USD amount you aim to make\r\n * @param apr APR of farm/pool\r\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\r\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\r\n */\r\nexport const getPrincipalForInterest = (\r\n  interest: number,\r\n  apr: number,\r\n  compoundingFrequency: number,\r\n  performanceFee = 0,\r\n) => {\r\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\r\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\r\n    // console.log('inside', interest, apyAsDecimal)\r\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\r\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\r\n  })\r\n}\r\n\r\n/**\r\n * Given APR returns APY\r\n * @param apr APR as percentage\r\n * @param compoundFrequency how many compounds per day\r\n * @param days if other than 365 adjusts (A)PY for period less than a year\r\n * @param performanceFee performance fee as percentage\r\n * @returns APY as decimal\r\n */\r\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\r\n  const daysAsDecimalOfYear = days / 365\r\n  const aprAsDecimal = apr / 100\r\n  const timesCompounded = 365 * compoundFrequency\r\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\r\n  if (timesCompounded > 0) {\r\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\r\n  }\r\n  if (performanceFee) {\r\n    const performanceFeeAsDecimal = performanceFee / 100\r\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\r\n    apyAsDecimal -= takenAsPerformanceFee\r\n  }\r\n  return apyAsDecimal\r\n}\r\n\r\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\r\n  if (amountInvested === 0) {\r\n    return 0\r\n  }\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage\r\n}\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport store from 'state'\r\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\r\n\r\n/**\r\n * Function to return gasPrice outwith a react component\r\n */\r\nconst getGasPrice = (): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const state = store.getState()\r\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\r\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\r\n}\r\n\r\nexport default getGasPrice\r\n","import { Language } from '@pancakeswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'es-ES': ESES,\r\n  'fi-FI': FI,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'hi-IN': HI,\r\n  'hu-HU': HU,\r\n  'id-ID': ID,\r\n  'it-IT': IT,\r\n  'ja-JP': JA,\r\n  'ko-KR': KO,\r\n  'nl-NL': NL,\r\n  'pl-PL': PL,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n  'sv-SE': SVSE,\r\n  'ta-IN': TA,\r\n  'tr-TR': TR,\r\n  'uk-UA': UK,\r\n  'vi-VN': VI,\r\n  'zh-CN': ZHCN,\r\n  'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import Cookies from 'js-cookie'\r\nimport { Profile } from 'state/types'\r\nimport { GetUserProfileResponse } from 'utils/types'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/nfts/types'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { getTeam } from 'state/teams/helpers'\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: userId.toNumber(),\r\n    points: numberPoints.toNumber(),\r\n    teamId: teamId.toNumber(),\r\n    tokenId: tokenId.toNumber(),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n\r\nconst profileContract = getProfileContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport const getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\n/**\r\n * Intended to be used for getting a profile avatar\r\n */\r\nexport const getProfileAvatar = async (address: string) => {\r\n  try {\r\n    const hasRegistered = await profileContract.hasRegistered(address)\r\n\r\n    if (!hasRegistered) {\r\n      return null\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n\r\n    if (!isActive) {\r\n      return null\r\n    }\r\n\r\n    const nft = await getNftByTokenId(nftAddress, tokenId)\r\n    return nft\r\n  } catch {\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = await profileContract.hasRegistered(address)\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      nft = await getNftByTokenId(nftAddress, tokenId)\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (e) {\r\n    console.error(e)\r\n    return null\r\n  }\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport { Nft } from 'config/constants/nfts/types'\r\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n  profileAvatars: {},\r\n}\r\n\r\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\r\n  'profile/fetchProfileAvatar',\r\n  async (account) => {\r\n    const nft = await getProfileAvatar(account)\r\n    return { account, nft }\r\n  },\r\n)\r\n\r\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\r\n  'profile/fetchProfileUsername',\r\n  async (account) => {\r\n    const username = await getUsername(account)\r\n    return { account, username }\r\n  },\r\n)\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.hasRegistered = hasRegistered\r\n      state.data = profile\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\r\n      const { account, username } = action.payload\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          username,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = { username, nft: null }\r\n      }\r\n    })\r\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\r\n      const { account, nft } = action.payload\r\n\r\n      if (state.profileAvatars[account]) {\r\n        state.profileAvatars[account] = {\r\n          ...state.profileAvatars[account],\r\n          nft,\r\n        }\r\n      } else {\r\n        state.profileAvatars[account] = { username: null, nft }\r\n      }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\r\n  profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (e) {\r\n    console.error(e)\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n","const ARCHIVED_FARMS_START_PID = 139\r\nconst ARCHIVED_FARMS_END_PID = 250\r\n\r\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\r\n\r\nexport default isArchivedPid\r\n","import tokens from './tokens'\r\nimport { SerializedFarmConfig } from './types'\r\n\r\nconst priceHelperLps: SerializedFarmConfig[] = [\r\n  /**\r\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\r\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\r\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\r\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\r\n   * Before storing to redux, farms without a PID are filtered out.\r\n   */\r\n  {\r\n    pid: null,\r\n    lpSymbol: 'QSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\r\n    },\r\n    token: tokens.qsd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default priceHelperLps\r\n","import BigNumber from 'bignumber.js'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport multicall from 'utils/multicall'\r\nimport { SerializedFarm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  tokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n}\r\n\r\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\r\n  const { pid, lpAddresses, token, quoteToken } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: token.address,\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: quoteToken.address,\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: token.address,\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: quoteToken.address,\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of quoteToken in the LP that are staked in the MC\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint] =\r\n    pid || pid === 0\r\n      ? await multicall(masterchefABI, [\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'poolInfo',\r\n            params: [pid],\r\n          },\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'totalAllocPoint',\r\n          },\r\n        ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n\r\n  return {\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { SerializedFarm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { SerializedFarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\r\n      return serializedFarm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import { SerializedFarm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (\r\n  farms: SerializedFarm[],\r\n  preferredQuoteTokens: string[] = ['BUSD', 'WBNB'],\r\n): SerializedFarm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { SerializedFarm } from 'state/types'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst getFarmFromTokenSymbol = (\r\n  farms: SerializedFarm[],\r\n  tokenSymbol: string,\r\n  preferredQuoteTokens?: string[],\r\n): SerializedFarm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (\r\n  farm: SerializedFarm,\r\n  quoteTokenFarm: SerializedFarm,\r\n  bnbPriceBusd: BigNumber,\r\n): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === tokens.busd.symbol) {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === tokens.wbnb.symbol) {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === tokens.busd.symbol) {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (\r\n  farm: SerializedFarm,\r\n  quoteTokenFarm: SerializedFarm,\r\n  bnbPriceBusd: BigNumber,\r\n): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'WBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'WBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\r\n  const bnbBusdFarm = farms.find((farm) => farm.pid === 252)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const tokenPriceBusd = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPriceBusd = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n\r\n    return {\r\n      ...farm,\r\n      tokenPriceBusd: tokenPriceBusd.toJSON(),\r\n      quoteTokenPriceBusd: quoteTokenPriceBusd.toJSON(),\r\n    }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { SerializedFarmConfig } from 'config/constants/types'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingCake',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { SerializedFarmsState, SerializedFarm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n  },\r\n}))\r\n\r\nconst initialState: SerializedFarmsState = {\r\n  data: noAccountFarmConfig,\r\n  loadArchivedFarmsData: false,\r\n  userDataLoaded: false,\r\n}\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    // Add price helper farms\r\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\r\n\r\n    const farms = await fetchFarms(farmsWithPriceHelpers)\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setLoadArchivedFarmsData: (state, action) => {\r\n      const loadArchivedFarmsData = action.payload\r\n      state.loadArchivedFarmsData = loadArchivedFarmsData\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\r\n\r\nexport default farmsSlice.reducer\r\n","import { parseUnits } from '@ethersproject/units'\r\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\r\nimport { ParsedQs } from 'qs'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useENS from 'hooks/ENS/useENS'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCurrency } from 'hooks/Tokens'\r\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\r\nimport useParsedQueryString from 'hooks/useParsedQueryString'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isAddress } from 'utils'\r\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\r\nimport { SwapState } from './reducer'\r\nimport { useUserSlippageTolerance } from '../user/hooks'\r\n\r\nexport function useSwapState(): AppState['swap'] {\r\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\r\n}\r\n\r\nexport function useSwapActionHandlers(): {\r\n  onCurrencySelection: (field: Field, currency: Currency) => void\r\n  onSwitchTokens: () => void\r\n  onUserInput: (field: Field, typedValue: string) => void\r\n  onChangeRecipient: (recipient: string | null) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const onCurrencySelection = useCallback(\r\n    (field: Field, currency: Currency) => {\r\n      dispatch(\r\n        selectCurrency({\r\n          field,\r\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\r\n        }),\r\n      )\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onSwitchTokens = useCallback(() => {\r\n    dispatch(switchCurrencies())\r\n  }, [dispatch])\r\n\r\n  const onUserInput = useCallback(\r\n    (field: Field, typedValue: string) => {\r\n      dispatch(typeInput({ field, typedValue }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  const onChangeRecipient = useCallback(\r\n    (recipient: string | null) => {\r\n      dispatch(setRecipient({ recipient }))\r\n    },\r\n    [dispatch],\r\n  )\r\n\r\n  return {\r\n    onSwitchTokens,\r\n    onCurrencySelection,\r\n    onUserInput,\r\n    onChangeRecipient,\r\n  }\r\n}\r\n\r\n// try to parse a user entered amount for a given token\r\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\r\n  if (!value || !currency) {\r\n    return undefined\r\n  }\r\n  try {\r\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\r\n    if (typedValueParsed !== '0') {\r\n      return currency instanceof Token\r\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\r\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\r\n    }\r\n  } catch (error) {\r\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\r\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\r\n  }\r\n  // necessary for all paths to return a value\r\n  return undefined\r\n}\r\n\r\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\r\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\r\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\r\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\r\n]\r\n\r\n/**\r\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\r\n * @param trade to check for the given address\r\n * @param checksummedAddress address to check in the pairs and tokens\r\n */\r\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\r\n  return (\r\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\r\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\r\n  )\r\n}\r\n\r\n// from the current swap inputs, compute the best trade and return it.\r\nexport function useDerivedSwapInfo(): {\r\n  currencies: { [field in Field]?: Currency }\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmount: CurrencyAmount | undefined\r\n  v2Trade: Trade | undefined\r\n  inputError?: string\r\n} {\r\n  const { account } = useActiveWeb3React()\r\n  const { t } = useTranslation()\r\n\r\n  const {\r\n    independentField,\r\n    typedValue,\r\n    [Field.INPUT]: { currencyId: inputCurrencyId },\r\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\r\n    recipient,\r\n  } = useSwapState()\r\n\r\n  const inputCurrency = useCurrency(inputCurrencyId)\r\n  const outputCurrency = useCurrency(outputCurrencyId)\r\n  const recipientLookup = useENS(recipient ?? undefined)\r\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\r\n\r\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\r\n    inputCurrency ?? undefined,\r\n    outputCurrency ?? undefined,\r\n  ])\r\n\r\n  const isExactIn: boolean = independentField === Field.INPUT\r\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\r\n\r\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\r\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\r\n\r\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\r\n\r\n  const currencyBalances = {\r\n    [Field.INPUT]: relevantTokenBalances[0],\r\n    [Field.OUTPUT]: relevantTokenBalances[1],\r\n  }\r\n\r\n  const currencies: { [field in Field]?: Currency } = {\r\n    [Field.INPUT]: inputCurrency ?? undefined,\r\n    [Field.OUTPUT]: outputCurrency ?? undefined,\r\n  }\r\n\r\n  let inputError: string | undefined\r\n  if (!account) {\r\n    inputError = t('Connect Wallet')\r\n  }\r\n\r\n  if (!parsedAmount) {\r\n    inputError = inputError ?? t('Enter an amount')\r\n  }\r\n\r\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\r\n    inputError = inputError ?? t('Select a token')\r\n  }\r\n\r\n  const formattedTo = isAddress(to)\r\n  if (!to || !formattedTo) {\r\n    inputError = inputError ?? t('Enter a recipient')\r\n  } else if (\r\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\r\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\r\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\r\n  ) {\r\n    inputError = inputError ?? t('Invalid recipient')\r\n  }\r\n\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\r\n\r\n  // compare input balance to max input based on version\r\n  const [balanceIn, amountIn] = [\r\n    currencyBalances[Field.INPUT],\r\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\r\n  ]\r\n\r\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\r\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\r\n  }\r\n\r\n  return {\r\n    currencies,\r\n    currencyBalances,\r\n    parsedAmount,\r\n    v2Trade: v2Trade ?? undefined,\r\n    inputError,\r\n  }\r\n}\r\n\r\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\r\n  if (typeof urlParam === 'string') {\r\n    const valid = isAddress(urlParam)\r\n    if (valid) return valid\r\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\r\n    if (valid === false) return 'BNB'\r\n  }\r\n  return 'BNB' ?? ''\r\n}\r\n\r\nfunction parseTokenAmountURLParameter(urlParam: any): string {\r\n  // eslint-disable-next-line no-restricted-globals\r\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\r\n}\r\n\r\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\r\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\r\n}\r\n\r\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\r\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\r\nfunction validatedRecipient(recipient: any): string | null {\r\n  if (typeof recipient !== 'string') return null\r\n  const address = isAddress(recipient)\r\n  if (address) return address\r\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\r\n  if (ADDRESS_REGEX.test(recipient)) return recipient\r\n  return null\r\n}\r\n\r\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\r\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\r\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\r\n  if (inputCurrency === outputCurrency) {\r\n    if (typeof parsedQs.outputCurrency === 'string') {\r\n      inputCurrency = ''\r\n    } else {\r\n      outputCurrency = ''\r\n    }\r\n  }\r\n\r\n  const recipient = validatedRecipient(parsedQs.recipient)\r\n\r\n  return {\r\n    [Field.INPUT]: {\r\n      currencyId: inputCurrency,\r\n    },\r\n    [Field.OUTPUT]: {\r\n      currencyId: outputCurrency,\r\n    },\r\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\r\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\r\n    recipient,\r\n  }\r\n}\r\n\r\n// updates the swap state to use the defaults for a given network\r\nexport function useDefaultsFromURLSearch():\r\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\r\n  | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const parsedQs = useParsedQueryString()\r\n  const [result, setResult] = useState<\r\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\r\n  >()\r\n\r\n  useEffect(() => {\r\n    if (!chainId) return\r\n    const parsed = queryParametersToSwapState(parsedQs)\r\n\r\n    dispatch(\r\n      replaceSwapState({\r\n        typedValue: parsed.typedValue,\r\n        field: parsed.independentField,\r\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\r\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\r\n        recipient: null,\r\n      }),\r\n    )\r\n\r\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, chainId])\r\n\r\n  return result\r\n}\r\n","import { parse, ParsedQs } from 'qs'\r\nimport { useMemo } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function useParsedQueryString(): ParsedQs {\r\n  const { search } = useLocation()\r\n  return useMemo(\r\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\r\n    [search],\r\n  )\r\n}\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import { useCallback } from 'react'\r\nimport ethers, { Contract, CallOverrides } from 'ethers'\r\nimport { useGasPrice } from 'state/user/hooks'\r\nimport { get } from 'lodash'\r\n\r\n/**\r\n * Perform a contract call with a gas price returned from useGasPrice\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the method called\r\n * @param methodArgs An array of arguments to pass to the method\r\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport function useCallWithGasPrice() {\r\n  const gasPrice = useGasPrice()\r\n\r\n  const callWithGasPrice = useCallback(\r\n    async (\r\n      contract: Contract,\r\n      methodName: string,\r\n      methodArgs: any[] = [],\r\n      overrides: CallOverrides = null,\r\n    ): Promise<ethers.providers.TransactionResponse> => {\r\n      const contractMethod = get(contract, methodName)\r\n      const hasManualGasPriceOverride = overrides?.gasPrice\r\n\r\n      const tx = await contractMethod(\r\n        ...methodArgs,\r\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\r\n      )\r\n\r\n      return tx\r\n    },\r\n    [gasPrice],\r\n  )\r\n\r\n  return { callWithGasPrice }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport tokens from 'config/constants/tokens'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport useRefresh from './useRefresh'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\ntype UseTokenBalanceState = {\r\n  balance: BigNumber\r\n  fetchStatus: FetchStatus\r\n}\r\n\r\nexport enum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\r\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\r\n    balance: BIG_ZERO,\r\n    fetchStatus: NOT_FETCHED,\r\n  })\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      try {\r\n        const res = await contract.balanceOf(account)\r\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\r\n      } catch (e) {\r\n        console.error(e)\r\n        setBalanceState((prev) => ({\r\n          ...prev,\r\n          fetchStatus: FAILED,\r\n        }))\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\r\n\r\n  return balanceState\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.totalSupply()\r\n      setTotalSupply(new BigNumber(supply.toString()))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(BIG_ZERO)\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress)\r\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\r\n      setBalance(new BigNumber(res.toString()))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useGetBnbBalance = () => {\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      try {\r\n        const walletBalance = await simpleRpcProvider.getBalance(account)\r\n        setBalance(walletBalance)\r\n        setFetchStatus(FetchStatus.SUCCESS)\r\n      } catch {\r\n        setFetchStatus(FetchStatus.FAILED)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lastUpdated, setBalance, setFetchStatus])\r\n\r\n  return { balance, fetchStatus, refresh: setLastUpdated }\r\n}\r\n\r\nexport const useGetCakeBalance = () => {\r\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\r\n\r\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\r\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\r\n}\r\n\r\nexport default useTokenBalance\r\n","const getTokenLogoURL = (address: string) =>\r\n  `https://assets.trustwalletapp.com/blockchains/smartchain/assets/${address}/logo.png`\r\n\r\nexport default getTokenLogoURL\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { BinanceIcon } from '@pancakeswap/uikit'\r\nimport React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport useHttpLocations from '../../hooks/useHttpLocations'\r\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\r\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\r\nimport Logo from './Logo'\r\n\r\nconst StyledLogo = styled(Logo)<{ size: string }>`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n`\r\n\r\nexport default function CurrencyLogo({\r\n  currency,\r\n  size = '24px',\r\n  style,\r\n}: {\r\n  currency?: Currency\r\n  size?: string\r\n  style?: React.CSSProperties\r\n}) {\r\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\r\n\r\n  const srcs: string[] = useMemo(() => {\r\n    if (currency === ETHER) return []\r\n\r\n    if (currency instanceof Token) {\r\n      if (currency instanceof WrappedTokenInfo) {\r\n        return [...uriLocations, getTokenLogoURL(currency.address)]\r\n      }\r\n      return [getTokenLogoURL(currency.address)]\r\n    }\r\n    return []\r\n  }, [currency, uriLocations])\r\n\r\n  if (currency === ETHER) {\r\n    return <BinanceIcon width={size} style={style} />\r\n  }\r\n\r\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\r\n}\r\n","import { serializeTokens } from './tokens'\r\nimport { SerializedFarmConfig } from './types'\r\n\r\nconst serializedTokens = serializeTokens()\r\n\r\nconst farms: SerializedFarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\r\n   */\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'CAKE',\r\n    lpAddresses: {\r\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n      56: '0x8bA051cd0252E0315E37Af548aB7F3B3C5feDc68',\r\n    },\r\n    token: serializedTokens.syrup,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 251,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 252,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  /**\r\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\r\n   */\r\n  {\r\n    pid: 429,\r\n    lpSymbol: 'CHESS-USDC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\r\n    },\r\n    token: serializedTokens.chess,\r\n    quoteToken: serializedTokens.usdc,\r\n  },\r\n  {\r\n    pid: 447,\r\n    lpSymbol: 'GNT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3747e3e107223539FD09bb730b055A1f11F78Adf',\r\n    },\r\n    token: serializedTokens.gnt,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 425,\r\n    lpSymbol: 'DVI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\r\n    },\r\n    token: serializedTokens.dvi,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 439,\r\n    lpSymbol: 'MCRN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe8D5d81dac092Ae61d097f84EFE230759BF2e522',\r\n    },\r\n    token: serializedTokens.mcrn,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 456,\r\n    lpSymbol: 'TLOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3eDb06e2d182d133864fe7C0f9B4C204bBf61D4E',\r\n    },\r\n    token: serializedTokens.tlos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 455,\r\n    lpSymbol: 'HERO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5d937c3966002cbD9d32c890a59439b4b300a14d',\r\n    },\r\n    token: serializedTokens.stephero,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 449,\r\n    lpSymbol: 'BP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2bF2dEB40639201C9A94c9e33b4852D9AEa5fd2D',\r\n    },\r\n    token: serializedTokens.bp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 454,\r\n    lpSymbol: 'BSCDEFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5B0A3b98C2f01741A11E57A9d0595B254E62F9F2',\r\n    },\r\n    token: serializedTokens.bscdefi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 453,\r\n    lpSymbol: 'QBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x67EFeF66A55c4562144B9AcfCFbc62F9E4269b3e',\r\n    },\r\n    token: serializedTokens.qbt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 452,\r\n    lpSymbol: 'NAOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcaa662ad41a662b81be2aea5d59ec0697628665f',\r\n    },\r\n    token: serializedTokens.naos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 451,\r\n    lpSymbol: 'PHA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4ddd56e2f34338839BB5953515833950eA680aFb',\r\n    },\r\n    token: serializedTokens.pha,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 314,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\r\n    },\r\n    token: serializedTokens.bel,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 446,\r\n    lpSymbol: 'BMON-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x00e53C169dA54a7E11172aEEDf8Eb87F060F479e',\r\n    },\r\n    token: serializedTokens.bmon,\r\n    quoteToken: serializedTokens.busd,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 450,\r\n    lpSymbol: 'SFUND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74fA517715C4ec65EF01d55ad5335f90dce7CC87',\r\n    },\r\n    token: serializedTokens.sfund,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 448,\r\n    lpSymbol: 'RUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x59FaC9e98479fc9979aE2a0C7422Af50bCBB9B26',\r\n    },\r\n    token: serializedTokens.rusd,\r\n    quoteToken: serializedTokens.busd,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 317,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\r\n    },\r\n    token: serializedTokens.ramp,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 445,\r\n    lpSymbol: 'POTS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF90BAA331Cfd40F094476E752Bf272892170d399',\r\n    },\r\n    token: serializedTokens.pots,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 397,\r\n    lpSymbol: 'TUSD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\r\n    },\r\n    token: serializedTokens.tusd,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 443,\r\n    lpSymbol: 'BTT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdcfbb12ded3fea12d2a078bc6324131cd14bf835',\r\n    },\r\n    token: serializedTokens.btt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 442,\r\n    lpSymbol: 'TRX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5d108578be3750209d1b3a8f45ffee8c5a75146',\r\n    },\r\n    token: serializedTokens.trx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 441,\r\n    lpSymbol: 'WIN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6a445ceb72c8b1751755386c3990055ff92e14a0',\r\n    },\r\n    token: serializedTokens.win,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 436,\r\n    lpSymbol: 'BABYCAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5e33fE13a821e55ED33C884589a804B1b4F6fD8',\r\n    },\r\n    token: serializedTokens.babycake,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 437,\r\n    lpSymbol: 'BMON-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3C2b7B578Dd2175A1c3524Aa0D515106282Bf108',\r\n    },\r\n    token: serializedTokens.bmon,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 440,\r\n    lpSymbol: 'HERO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe267018C943E77992e7e515724B07b9CE7938124',\r\n    },\r\n    token: serializedTokens.hero,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 438,\r\n    lpSymbol: 'WSG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x37Ff7D4459ad96E0B01275E5efffe091f33c2CAD',\r\n    },\r\n    token: serializedTokens.wsg,\r\n    quoteToken: serializedTokens.wbnb,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 435,\r\n    lpSymbol: 'REVV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1cc18962b919ef90085a8b21f8ddc95824fbad9e',\r\n    },\r\n    token: serializedTokens.revv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 367,\r\n    lpSymbol: 'BTT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\r\n    },\r\n    token: serializedTokens.btt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 434,\r\n    lpSymbol: 'SKILL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc19dfd34d3ba5816df9cbdaa02d32a9f8dc6f6fc',\r\n    },\r\n    token: serializedTokens.skill,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 369,\r\n    lpSymbol: 'WIN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\r\n    },\r\n    token: serializedTokens.win,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 433,\r\n    lpSymbol: 'IF-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b4682D2B3f8670b125aF6AEA8d7eD2Daa43Bdc1',\r\n    },\r\n    token: serializedTokens.if,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 432,\r\n    lpSymbol: 'SPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfdfde3af740a22648b9dd66d05698e5095940850',\r\n    },\r\n    token: serializedTokens.sps,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 431,\r\n    lpSymbol: 'C98-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x92247860A03F48d5c6425c7CA35CDcFCB1013AA1',\r\n    },\r\n    token: serializedTokens.c98,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 430,\r\n    lpSymbol: 'AXS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC2d00De94795e60FB76Bc37d899170996cBdA436',\r\n    },\r\n    token: serializedTokens.axs,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 379,\r\n    lpSymbol: 'PMON-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\r\n    },\r\n    token: serializedTokens.pmon,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 368,\r\n    lpSymbol: 'TRX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\r\n    },\r\n    token: serializedTokens.trx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 428,\r\n    lpSymbol: 'TITAN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\r\n    },\r\n    token: serializedTokens.titan,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 427,\r\n    lpSymbol: 'ONE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\r\n    },\r\n    token: serializedTokens.harmony,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 426,\r\n    lpSymbol: 'MASK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\r\n    },\r\n    token: serializedTokens.mask,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 339,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\r\n    },\r\n    token: serializedTokens.gum,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 424,\r\n    lpSymbol: 'ADX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\r\n    },\r\n    token: serializedTokens.adx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 423,\r\n    lpSymbol: 'USDC-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.usdt,\r\n  },\r\n  {\r\n    pid: 422,\r\n    lpSymbol: 'CAKE-USDT LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.usdt,\r\n  },\r\n  {\r\n    pid: 357,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\r\n    },\r\n    token: serializedTokens.suter,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 421,\r\n    lpSymbol: 'BSCPAD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\r\n    },\r\n    token: serializedTokens.bscpad,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 420,\r\n    lpSymbol: 'RABBIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\r\n    },\r\n    token: serializedTokens.rabbit,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 419,\r\n    lpSymbol: 'WAULTx-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\r\n    },\r\n    token: serializedTokens.waultx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 418,\r\n    lpSymbol: 'WEX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\r\n    },\r\n    token: serializedTokens.wex,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 417,\r\n    lpSymbol: 'FORM-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\r\n    },\r\n    token: serializedTokens.form,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 416,\r\n    lpSymbol: 'ORBS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\r\n    },\r\n    token: serializedTokens.orbs,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 415,\r\n    lpSymbol: 'DG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\r\n    },\r\n    token: serializedTokens.$dg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 414,\r\n    lpSymbol: 'WOO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\r\n    },\r\n    token: serializedTokens.woo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 413,\r\n    lpSymbol: 'HTB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\r\n    },\r\n    token: serializedTokens.htb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 351,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\r\n    },\r\n    token: serializedTokens.jgn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 337,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\r\n    },\r\n    token: serializedTokens.dft,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 412,\r\n    lpSymbol: 'HAI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\r\n    },\r\n    token: serializedTokens.hai,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 411,\r\n    lpSymbol: 'O3-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\r\n    },\r\n    token: serializedTokens.o3,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 410,\r\n    lpSymbol: 'AMPL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\r\n    },\r\n    token: serializedTokens.ampl,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 343,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\r\n    },\r\n    token: serializedTokens.oddz,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 409,\r\n    lpSymbol: 'ETH-USDC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.usdc,\r\n  },\r\n  {\r\n    pid: 408,\r\n    lpSymbol: 'BTCB-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 347,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\r\n    },\r\n    token: serializedTokens.bondly,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 407,\r\n    lpSymbol: 'MARSH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\r\n    },\r\n    token: serializedTokens.marsh,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 406,\r\n    lpSymbol: 'BORING-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\r\n    },\r\n    token: serializedTokens.boring,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 405,\r\n    lpSymbol: 'MBOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\r\n    },\r\n    token: serializedTokens.mbox,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 404,\r\n    lpSymbol: 'ATA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\r\n    },\r\n    token: serializedTokens.ata,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 403,\r\n    lpSymbol: 'MX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\r\n    },\r\n    token: serializedTokens.mx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 402,\r\n    lpSymbol: 'bCFX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\r\n    },\r\n    token: serializedTokens.bcfx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 401,\r\n    lpSymbol: 'QKC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\r\n    },\r\n    token: serializedTokens.qkc,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 400,\r\n    lpSymbol: 'KTN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\r\n    },\r\n    token: serializedTokens.ktn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 399,\r\n    lpSymbol: 'MTRG-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\r\n    },\r\n    token: serializedTokens.mtrg,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 398,\r\n    lpSymbol: 'SWG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\r\n    },\r\n    token: serializedTokens.swg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 396,\r\n    lpSymbol: 'VRT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\r\n    },\r\n    token: serializedTokens.vrt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 395,\r\n    lpSymbol: 'EZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\r\n    },\r\n    token: serializedTokens.ez,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 394,\r\n    lpSymbol: 'KALM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\r\n    },\r\n    token: serializedTokens.kalm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 393,\r\n    lpSymbol: 'pOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\r\n    },\r\n    token: serializedTokens.popen,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 335,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\r\n    },\r\n    token: serializedTokens.lien,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 392,\r\n    lpSymbol: 'WELL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\r\n    },\r\n    token: serializedTokens.well,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 391,\r\n    lpSymbol: 'DERI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\r\n    },\r\n    token: serializedTokens.deri,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 390,\r\n    lpSymbol: 'CHR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\r\n    },\r\n    token: serializedTokens.chr,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 389,\r\n    lpSymbol: 'CAKE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 388,\r\n    lpSymbol: 'CYC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\r\n    },\r\n    token: serializedTokens.cyc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 387,\r\n    lpSymbol: 'XEND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\r\n    },\r\n    token: serializedTokens.xend,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 296,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\r\n    },\r\n    token: serializedTokens.hget,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 386,\r\n    lpSymbol: 'HOTCROSS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\r\n    },\r\n    token: serializedTokens.hotcross,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 385,\r\n    lpSymbol: 'RFOX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\r\n    },\r\n    token: serializedTokens.rfox,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 384,\r\n    lpSymbol: 'WMASS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\r\n    },\r\n    token: serializedTokens.wmass,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 383,\r\n    lpSymbol: 'UBXT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\r\n    },\r\n    token: serializedTokens.ubxt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 381,\r\n    lpSymbol: 'BTR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\r\n    },\r\n    token: serializedTokens.btr,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 380,\r\n    lpSymbol: 'τDOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\r\n    },\r\n    token: serializedTokens.τdoge,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 378,\r\n    lpSymbol: 'ONE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\r\n    },\r\n    token: serializedTokens.one,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 377,\r\n    lpSymbol: 'FINE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\r\n    },\r\n    token: serializedTokens.fine,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 376,\r\n    lpSymbol: 'DOGE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\r\n    },\r\n    token: serializedTokens.doge,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 310,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\r\n    },\r\n    token: serializedTokens.bmxx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 375,\r\n    lpSymbol: 'OIN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\r\n    },\r\n    token: serializedTokens.oin,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 374,\r\n    lpSymbol: 'HYFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\r\n    },\r\n    token: serializedTokens.hyfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 373,\r\n    lpSymbol: 'KUN-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\r\n    },\r\n    token: serializedTokens.kun,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 372,\r\n    lpSymbol: 'KUN-QSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\r\n    },\r\n    token: serializedTokens.kun,\r\n    quoteToken: serializedTokens.qsd,\r\n  },\r\n  {\r\n    pid: 371,\r\n    lpSymbol: 'MATH-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\r\n    },\r\n    token: serializedTokens.math,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 370,\r\n    lpSymbol: 'mCOIN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\r\n    },\r\n    token: serializedTokens.mcoin,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 366,\r\n    lpSymbol: 'PNT-pBTC LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\r\n    },\r\n    token: serializedTokens.pnt,\r\n    quoteToken: serializedTokens.pbtc,\r\n  },\r\n  {\r\n    pid: 311,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\r\n    },\r\n    token: serializedTokens.xmark,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 365,\r\n    lpSymbol: 'BTCB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 364,\r\n    lpSymbol: 'LMT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\r\n    },\r\n    token: serializedTokens.lmt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 363,\r\n    lpSymbol: 'DFD-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\r\n    },\r\n    token: serializedTokens.dfd,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 362,\r\n    lpSymbol: 'ALPACA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\r\n    },\r\n    token: serializedTokens.alpaca,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 361,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\r\n    },\r\n    token: serializedTokens.τbtc,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 304,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\r\n    },\r\n    token: serializedTokens.swingby,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 360,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\r\n    },\r\n    token: serializedTokens.xed,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 359,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\r\n    },\r\n    token: serializedTokens.hakka,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 358,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\r\n    },\r\n    token: serializedTokens.cgg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 356,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\r\n    },\r\n    token: serializedTokens.broobee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 355,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\r\n    },\r\n    token: serializedTokens.hzn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 354,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\r\n    },\r\n    token: serializedTokens.alpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 353,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\r\n    },\r\n    token: serializedTokens.perl,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 352,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\r\n    },\r\n    token: serializedTokens.tlm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 350,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\r\n    },\r\n    token: serializedTokens.eps,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 349,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\r\n    },\r\n    token: serializedTokens.arpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 348,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\r\n    },\r\n    token: serializedTokens.itam,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 346,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\r\n    },\r\n    token: serializedTokens.tko,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 345,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\r\n    },\r\n    token: serializedTokens.apys,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 344,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\r\n    },\r\n    token: serializedTokens.hoo,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 342,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\r\n    },\r\n    token: serializedTokens.easy,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 341,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\r\n    },\r\n    token: serializedTokens.nrv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 340,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\r\n    },\r\n    token: serializedTokens.dego,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 338,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\r\n    },\r\n    token: serializedTokens.pbtc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 336,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\r\n    },\r\n    token: serializedTokens.swth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 334,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\r\n    },\r\n    token: serializedTokens.zil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 333,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\r\n    },\r\n    token: serializedTokens.pcws,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 332,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\r\n    },\r\n    token: serializedTokens.bbadger,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 331,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\r\n    },\r\n    token: serializedTokens.bdigg,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 330,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\r\n    },\r\n    token: serializedTokens.lto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 329,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\r\n    },\r\n    token: serializedTokens.mir,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 328,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\r\n    },\r\n    token: serializedTokens.trade,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 327,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\r\n    },\r\n    token: serializedTokens.dusk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 326,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\r\n    },\r\n    token: serializedTokens.bifi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 325,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\r\n    },\r\n    token: serializedTokens.txl,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 324,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\r\n    },\r\n    token: serializedTokens.cos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 323,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\r\n    },\r\n    token: serializedTokens.bunny,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 322,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\r\n    },\r\n    token: serializedTokens.alice,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 321,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\r\n    },\r\n    token: serializedTokens.for,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 320,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\r\n    },\r\n    token: serializedTokens.bux,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 319,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\r\n    },\r\n    token: serializedTokens.nuls,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 318,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\r\n    },\r\n    token: serializedTokens.belt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 316,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\r\n    },\r\n    token: serializedTokens.bfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 315,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\r\n    },\r\n    token: serializedTokens.dexe,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 313,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\r\n    },\r\n    token: serializedTokens.tpt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 312,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\r\n    },\r\n    token: serializedTokens.watch,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 309,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\r\n    },\r\n    token: serializedTokens.iotx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 308,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\r\n    },\r\n    token: serializedTokens.bor,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 307,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\r\n    },\r\n    token: serializedTokens.bopen,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 306,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\r\n    },\r\n    token: serializedTokens.sushi,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 305,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\r\n    },\r\n    token: serializedTokens.dodo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 303,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\r\n    },\r\n    token: serializedTokens.bry,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 302,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\r\n    },\r\n    token: serializedTokens.zee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 301,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\r\n    },\r\n    token: serializedTokens.swgb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 300,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\r\n    },\r\n    token: serializedTokens.comp,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 299,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\r\n    },\r\n    token: serializedTokens.sfp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 298,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\r\n    },\r\n    token: serializedTokens.lina,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 297,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\r\n    },\r\n    token: serializedTokens.lit,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 295,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\r\n    },\r\n    token: serializedTokens.bdo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 294,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\r\n    },\r\n    token: serializedTokens.egld,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 293,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\r\n    },\r\n    token: serializedTokens.ust,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 292,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\r\n    },\r\n    token: serializedTokens.mamzn,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 291,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\r\n    },\r\n    token: serializedTokens.mgoogl,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 290,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\r\n    },\r\n    token: serializedTokens.mnflx,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 289,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\r\n    },\r\n    token: serializedTokens.mtsla,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 288,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\r\n    },\r\n    token: serializedTokens.wsote,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 287,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\r\n    },\r\n    token: serializedTokens.front,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 286,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\r\n    },\r\n    token: serializedTokens.helmet,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 285,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\r\n    },\r\n    token: serializedTokens.btcst,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 284,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\r\n    },\r\n    token: serializedTokens.ltc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 283,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 282,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\r\n    },\r\n    token: serializedTokens.dai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 281,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\r\n    },\r\n    token: serializedTokens.bscx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 280,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\r\n    },\r\n    token: serializedTokens.ten,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 279,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\r\n    },\r\n    token: serializedTokens.balbt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 278,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\r\n    },\r\n    token: serializedTokens.reef,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 277,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\r\n    },\r\n    token: serializedTokens.ditto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 276,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\r\n    },\r\n    token: serializedTokens.vai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 275,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\r\n    },\r\n    token: serializedTokens.blink,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 274,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\r\n    },\r\n    token: serializedTokens.unfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 273,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\r\n    },\r\n    token: serializedTokens.hard,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 272,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\r\n    },\r\n    token: serializedTokens.ctk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 271,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\r\n    },\r\n    token: serializedTokens.sxp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 270,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\r\n    },\r\n    token: serializedTokens.inj,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 269,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\r\n    },\r\n    token: serializedTokens.fil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 268,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\r\n    },\r\n    token: serializedTokens.uni,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 267,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\r\n    },\r\n    token: serializedTokens.yfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 266,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\r\n    },\r\n    token: serializedTokens.atom,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 265,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\r\n    },\r\n    token: serializedTokens.xrp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 264,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 263,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\r\n    },\r\n    token: serializedTokens.alpha,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 262,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 261,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 260,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\r\n    },\r\n    token: serializedTokens.xvs,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 259,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\r\n    },\r\n    token: serializedTokens.twt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 258,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 257,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\r\n    },\r\n    token: serializedTokens.link,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 256,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\r\n    },\r\n    token: serializedTokens.eos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 255,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n    },\r\n    token: serializedTokens.dot,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 254,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\r\n    },\r\n    token: serializedTokens.band,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 253,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\r\n    },\r\n    token: serializedTokens.ada,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  /**\r\n   * V2 farms, set to be removed once unstaked\r\n   */\r\n  {\r\n    pid: 139,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 250,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\r\n    },\r\n    token: serializedTokens.τbtc,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 193,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\r\n    },\r\n    token: serializedTokens.swingby,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 249,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\r\n    },\r\n    token: serializedTokens.xed,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 248,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\r\n    },\r\n    token: serializedTokens.hakka,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 247,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\r\n    },\r\n    token: serializedTokens.cgg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 246,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\r\n    },\r\n    token: serializedTokens.suter,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 245,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\r\n    },\r\n    token: serializedTokens.broobee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 244,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\r\n    },\r\n    token: serializedTokens.hzn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 243,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\r\n    },\r\n    token: serializedTokens.alpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 242,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\r\n    },\r\n    token: serializedTokens.perl,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 241,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\r\n    },\r\n    token: serializedTokens.tlm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 240,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\r\n    },\r\n    token: serializedTokens.jgn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 239,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\r\n    },\r\n    token: serializedTokens.eps,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 238,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\r\n    },\r\n    token: serializedTokens.arpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 237,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\r\n    },\r\n    token: serializedTokens.itam,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 236,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\r\n    },\r\n    token: serializedTokens.bondly,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 235,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\r\n    },\r\n    token: serializedTokens.tko,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 234,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\r\n    },\r\n    token: serializedTokens.apys,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 233,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\r\n    },\r\n    token: serializedTokens.hoo,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 232,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\r\n    },\r\n    token: serializedTokens.oddz,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 231,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\r\n    },\r\n    token: serializedTokens.easy,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 230,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\r\n    },\r\n    token: serializedTokens.nrv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 229,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\r\n    },\r\n    token: serializedTokens.dego,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 228,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\r\n    },\r\n    token: serializedTokens.gum,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 227,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\r\n    },\r\n    token: serializedTokens.pbtc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 226,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\r\n    },\r\n    token: serializedTokens.dft,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 225,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\r\n    },\r\n    token: serializedTokens.swth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 224,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\r\n    },\r\n    token: serializedTokens.lien,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 223,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\r\n    },\r\n    token: serializedTokens.zil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 222,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\r\n    },\r\n    token: serializedTokens.pcws,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 221,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\r\n    },\r\n    token: serializedTokens.bbadger,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 220,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\r\n    },\r\n    token: serializedTokens.bdigg,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 219,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\r\n    },\r\n    token: serializedTokens.lto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 218,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\r\n    },\r\n    token: serializedTokens.mir,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 217,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\r\n    },\r\n    token: serializedTokens.trade,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 216,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\r\n    },\r\n    token: serializedTokens.dusk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 215,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\r\n    },\r\n    token: serializedTokens.bifi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 214,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\r\n    },\r\n    token: serializedTokens.txl,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 213,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\r\n    },\r\n    token: serializedTokens.cos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 212,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\r\n    },\r\n    token: serializedTokens.bunny,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 211,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\r\n    },\r\n    token: serializedTokens.alice,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 210,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\r\n    },\r\n    token: serializedTokens.for,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 209,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\r\n    },\r\n    token: serializedTokens.bux,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 208,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\r\n    },\r\n    token: serializedTokens.nuls,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 207,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\r\n    },\r\n    token: serializedTokens.belt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 206,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\r\n    },\r\n    token: serializedTokens.ramp,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 205,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\r\n    },\r\n    token: serializedTokens.bfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 204,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\r\n    },\r\n    token: serializedTokens.dexe,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 203,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\r\n    },\r\n    token: serializedTokens.bel,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 202,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\r\n    },\r\n    token: serializedTokens.tpt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 201,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\r\n    },\r\n    token: serializedTokens.watch,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 200,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\r\n    },\r\n    token: serializedTokens.xmark,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 199,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\r\n    },\r\n    token: serializedTokens.bmxx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 198,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\r\n    },\r\n    token: serializedTokens.iotx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 197,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\r\n    },\r\n    token: serializedTokens.bor,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 196,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\r\n    },\r\n    token: serializedTokens.bopen,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 195,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\r\n    },\r\n    token: serializedTokens.sushi,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 194,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\r\n    },\r\n    token: serializedTokens.dodo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 192,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\r\n    },\r\n    token: serializedTokens.bry,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 191,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\r\n    },\r\n    token: serializedTokens.zee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 190,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\r\n    },\r\n    token: serializedTokens.swgb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 189,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\r\n    },\r\n    token: serializedTokens.comp,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 188,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\r\n    },\r\n    token: serializedTokens.sfp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 187,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\r\n    },\r\n    token: serializedTokens.lina,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 186,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\r\n    },\r\n    token: serializedTokens.lit,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 185,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\r\n    },\r\n    token: serializedTokens.hget,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 184,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\r\n    },\r\n    token: serializedTokens.bdo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 183,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\r\n    },\r\n    token: serializedTokens.egld,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 182,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\r\n    },\r\n    token: serializedTokens.ust,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 181,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\r\n    },\r\n    token: serializedTokens.mamzn,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 180,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\r\n    },\r\n    token: serializedTokens.mgoogl,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 179,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\r\n    },\r\n    token: serializedTokens.mnflx,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 178,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\r\n    },\r\n    token: serializedTokens.mtsla,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 177,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\r\n    },\r\n    token: serializedTokens.wsote,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 176,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\r\n    },\r\n    token: serializedTokens.front,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 175,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\r\n    },\r\n    token: serializedTokens.helmet,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 174,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\r\n    },\r\n    token: serializedTokens.btcst,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 173,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\r\n    },\r\n    token: serializedTokens.ltc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 172,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 171,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\r\n    },\r\n    token: serializedTokens.dai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 170,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\r\n    },\r\n    token: serializedTokens.bscx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 169,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\r\n    },\r\n    token: serializedTokens.ten,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 168,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\r\n    },\r\n    token: serializedTokens.balbt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 167,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\r\n    },\r\n    token: serializedTokens.reef,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 166,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\r\n    },\r\n    token: serializedTokens.ditto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 165,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\r\n    },\r\n    token: serializedTokens.vai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 164,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\r\n    },\r\n    token: serializedTokens.blink,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 163,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\r\n    },\r\n    token: serializedTokens.unfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 162,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\r\n    },\r\n    token: serializedTokens.hard,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 161,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\r\n    },\r\n    token: serializedTokens.ctk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 160,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\r\n    },\r\n    token: serializedTokens.sxp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 159,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\r\n    },\r\n    token: serializedTokens.inj,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 158,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\r\n    },\r\n    token: serializedTokens.fil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 157,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\r\n    },\r\n    token: serializedTokens.uni,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 156,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\r\n    },\r\n    token: serializedTokens.yfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 155,\r\n    lpSymbol: 'YFII-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\r\n    },\r\n    token: serializedTokens.yfii,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 154,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\r\n    },\r\n    token: serializedTokens.atom,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 153,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\r\n    },\r\n    token: serializedTokens.xrp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 152,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 151,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\r\n    },\r\n    token: serializedTokens.alpha,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 150,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 149,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 148,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\r\n    },\r\n    token: serializedTokens.xvs,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 147,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\r\n    },\r\n    token: serializedTokens.twt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 146,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 145,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\r\n    },\r\n    token: serializedTokens.link,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 144,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\r\n    },\r\n    token: serializedTokens.eos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 143,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\r\n    },\r\n    token: serializedTokens.dot,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 142,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x473390697036E7611a670575eA9141583471fF47',\r\n    },\r\n    token: serializedTokens.band,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 141,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\r\n    },\r\n    token: serializedTokens.ada,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 140,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  /**\r\n   * All farms below here are from v1 and are to be set to 0x\r\n   */\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n    },\r\n    token: serializedTokens.cake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 136,\r\n    lpSymbol: 'τBTC-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\r\n    },\r\n    token: serializedTokens.τbtc,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 76,\r\n    lpSymbol: 'SWINGBY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\r\n    },\r\n    token: serializedTokens.swingby,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 135,\r\n    lpSymbol: 'XED-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\r\n    },\r\n    token: serializedTokens.xed,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 134,\r\n    lpSymbol: 'HAKKA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\r\n    },\r\n    token: serializedTokens.hakka,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 133,\r\n    lpSymbol: 'CGG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\r\n    },\r\n    token: serializedTokens.cgg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 132,\r\n    lpSymbol: 'SUTER-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\r\n    },\r\n    token: serializedTokens.suter,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 131,\r\n    lpSymbol: 'bROOBEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\r\n    },\r\n    token: serializedTokens.broobee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 130,\r\n    lpSymbol: 'HZN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\r\n    },\r\n    token: serializedTokens.hzn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 129,\r\n    lpSymbol: 'ALPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\r\n    },\r\n    token: serializedTokens.alpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 128,\r\n    lpSymbol: 'PERL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\r\n    },\r\n    token: serializedTokens.perl,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 127,\r\n    lpSymbol: 'TLM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\r\n    },\r\n    token: serializedTokens.tlm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 125,\r\n    lpSymbol: 'JGN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\r\n    },\r\n    token: serializedTokens.jgn,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 124,\r\n    lpSymbol: 'EPS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\r\n    },\r\n    token: serializedTokens.eps,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 123,\r\n    lpSymbol: 'ARPA-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\r\n    },\r\n    token: serializedTokens.arpa,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 122,\r\n    lpSymbol: 'ITAM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\r\n    },\r\n    token: serializedTokens.itam,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 121,\r\n    lpSymbol: 'BONDLY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\r\n    },\r\n    token: serializedTokens.bondly,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 120,\r\n    lpSymbol: 'TKO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\r\n    },\r\n    token: serializedTokens.tko,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 119,\r\n    lpSymbol: 'APYS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\r\n    },\r\n    token: serializedTokens.apys,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 118,\r\n    lpSymbol: 'HOO-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\r\n    },\r\n    token: serializedTokens.hoo,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 117,\r\n    lpSymbol: 'ODDZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\r\n    },\r\n    token: serializedTokens.oddz,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 116,\r\n    lpSymbol: 'EASY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\r\n    },\r\n    token: serializedTokens.easy,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 115,\r\n    lpSymbol: 'NRV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\r\n    },\r\n    token: serializedTokens.nrv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 114,\r\n    lpSymbol: 'DEGO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\r\n    },\r\n    token: serializedTokens.dego,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 113,\r\n    lpSymbol: 'GUM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\r\n    },\r\n    token: serializedTokens.gum,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 112,\r\n    lpSymbol: 'pBTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\r\n    },\r\n    token: serializedTokens.pbtc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 111,\r\n    lpSymbol: 'DFT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\r\n    },\r\n    token: serializedTokens.dft,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 110,\r\n    lpSymbol: 'SWTH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\r\n    },\r\n    token: serializedTokens.swth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 109,\r\n    lpSymbol: 'LIEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\r\n    },\r\n    token: serializedTokens.lien,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 108,\r\n    lpSymbol: 'ZIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\r\n    },\r\n    token: serializedTokens.zil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 107,\r\n    lpSymbol: 'pCWS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\r\n    },\r\n    token: serializedTokens.pcws,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 106,\r\n    lpSymbol: 'bBADGER-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\r\n    },\r\n    token: serializedTokens.bbadger,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 104,\r\n    lpSymbol: 'bDIGG-BTCB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\r\n    },\r\n    token: serializedTokens.bdigg,\r\n    quoteToken: serializedTokens.btcb,\r\n  },\r\n  {\r\n    pid: 103,\r\n    lpSymbol: 'LTO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\r\n    },\r\n    token: serializedTokens.lto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 102,\r\n    lpSymbol: 'MIR-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\r\n    },\r\n    token: serializedTokens.mir,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 101,\r\n    lpSymbol: 'TRADE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\r\n    },\r\n    token: serializedTokens.trade,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 100,\r\n    lpSymbol: 'DUSK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\r\n    },\r\n    token: serializedTokens.dusk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 99,\r\n    lpSymbol: 'BIFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\r\n    },\r\n    token: serializedTokens.bifi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 98,\r\n    lpSymbol: 'TXL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\r\n    },\r\n    token: serializedTokens.txl,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 97,\r\n    lpSymbol: 'COS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\r\n    },\r\n    token: serializedTokens.cos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 96,\r\n    lpSymbol: 'BUNNY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\r\n    },\r\n    token: serializedTokens.bunny,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 95,\r\n    lpSymbol: 'ALICE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\r\n    },\r\n    token: serializedTokens.alice,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 94,\r\n    lpSymbol: 'FOR-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\r\n    },\r\n    token: serializedTokens.for,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 93,\r\n    lpSymbol: 'BUX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\r\n    },\r\n    token: serializedTokens.bux,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 92,\r\n    lpSymbol: 'NULS-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\r\n    },\r\n    token: serializedTokens.nuls,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 91,\r\n    lpSymbol: 'NULS-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\r\n    },\r\n    token: serializedTokens.nuls,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 90,\r\n    lpSymbol: 'BELT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\r\n    },\r\n    token: serializedTokens.belt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 89,\r\n    lpSymbol: 'RAMP-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\r\n    },\r\n    token: serializedTokens.ramp,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 88,\r\n    lpSymbol: 'BFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\r\n    },\r\n    token: serializedTokens.bfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 87,\r\n    lpSymbol: 'DEXE-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\r\n    },\r\n    token: serializedTokens.dexe,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 86,\r\n    lpSymbol: 'BEL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\r\n    },\r\n    token: serializedTokens.bel,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 85,\r\n    lpSymbol: 'TPT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\r\n    },\r\n    token: serializedTokens.tpt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 84,\r\n    lpSymbol: 'WATCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\r\n    },\r\n    token: serializedTokens.watch,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 83,\r\n    lpSymbol: 'xMARK-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\r\n    },\r\n    token: serializedTokens.xmark,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 82,\r\n    lpSymbol: 'bMXX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\r\n    },\r\n    token: serializedTokens.bmxx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 81,\r\n    lpSymbol: 'IOTX-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\r\n    },\r\n    token: serializedTokens.iotx,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 80,\r\n    lpSymbol: 'BOR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\r\n    },\r\n    token: serializedTokens.bor,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 79,\r\n    lpSymbol: 'bOPEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\r\n    },\r\n    token: serializedTokens.bopen,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 78,\r\n    lpSymbol: 'SUSHI-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\r\n    },\r\n    token: serializedTokens.sushi,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 77,\r\n    lpSymbol: 'DODO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\r\n    },\r\n    token: serializedTokens.dodo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 75,\r\n    lpSymbol: 'BRY-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\r\n    },\r\n    token: serializedTokens.bry,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 74,\r\n    lpSymbol: 'ZEE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\r\n    },\r\n    token: serializedTokens.zee,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 73,\r\n    lpSymbol: 'SWGb-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\r\n    },\r\n    token: serializedTokens.swgb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 72,\r\n    lpSymbol: 'COMP-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\r\n    },\r\n    token: serializedTokens.comp,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 71,\r\n    lpSymbol: 'SFP-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\r\n    },\r\n    token: serializedTokens.sfp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 70,\r\n    lpSymbol: 'BETH-ETH LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\r\n    },\r\n    token: serializedTokens.beth,\r\n    quoteToken: serializedTokens.eth,\r\n  },\r\n  {\r\n    pid: 69,\r\n    lpSymbol: 'LINA-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\r\n    },\r\n    token: serializedTokens.lina,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 68,\r\n    lpSymbol: 'LIT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\r\n    },\r\n    token: serializedTokens.lit,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 67,\r\n    lpSymbol: 'HGET-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\r\n    },\r\n    token: serializedTokens.hget,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 66,\r\n    lpSymbol: 'BDO-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\r\n    },\r\n    token: serializedTokens.bdo,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 65,\r\n    lpSymbol: 'EGLD-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\r\n    },\r\n    token: serializedTokens.egld,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 63,\r\n    lpSymbol: 'UST-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\r\n    },\r\n    token: serializedTokens.ust,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 62,\r\n    lpSymbol: 'mAMZN-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\r\n    },\r\n    token: serializedTokens.mamzn,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 61,\r\n    lpSymbol: 'mGOOGL-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\r\n    },\r\n    token: serializedTokens.mgoogl,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 60,\r\n    lpSymbol: 'mNFLX-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\r\n    },\r\n    token: serializedTokens.mnflx,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 59,\r\n    lpSymbol: 'mTSLA-UST LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\r\n    },\r\n    token: serializedTokens.mtsla,\r\n    quoteToken: serializedTokens.ust,\r\n  },\r\n  {\r\n    pid: 58,\r\n    lpSymbol: 'wSOTE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\r\n    },\r\n    token: serializedTokens.wsote,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 57,\r\n    lpSymbol: 'FRONT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\r\n    },\r\n    token: serializedTokens.front,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 56,\r\n    lpSymbol: 'Helmet-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\r\n    },\r\n    token: serializedTokens.helmet,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 55,\r\n    lpSymbol: 'BTCST-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\r\n    },\r\n    token: serializedTokens.btcst,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 54,\r\n    lpSymbol: 'LTC-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\r\n    },\r\n    token: serializedTokens.ltc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 53,\r\n    lpSymbol: 'USDC-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 52,\r\n    lpSymbol: 'DAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\r\n    },\r\n    token: serializedTokens.dai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 51,\r\n    lpSymbol: 'BSCX-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\r\n    },\r\n    token: serializedTokens.bscx,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 50,\r\n    lpSymbol: 'TEN-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\r\n    },\r\n    token: serializedTokens.ten,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 49,\r\n    lpSymbol: 'bALBT-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\r\n    },\r\n    token: serializedTokens.balbt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 46,\r\n    lpSymbol: 'OG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\r\n    },\r\n    token: serializedTokens.og,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 47,\r\n    lpSymbol: 'ASR-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\r\n    },\r\n    token: serializedTokens.asr,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 48,\r\n    lpSymbol: 'ATM-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\r\n    },\r\n    token: serializedTokens.atm,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 45,\r\n    lpSymbol: 'REEF-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\r\n    },\r\n    token: serializedTokens.reef,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 44,\r\n    lpSymbol: 'Ditto-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\r\n    },\r\n    token: serializedTokens.ditto,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 43,\r\n    lpSymbol: 'JUV-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\r\n    },\r\n    token: serializedTokens.juv,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 42,\r\n    lpSymbol: 'PSG-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\r\n    },\r\n    token: serializedTokens.psg,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 39,\r\n    lpSymbol: 'UNFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\r\n    },\r\n    token: serializedTokens.unfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 41,\r\n    lpSymbol: 'VAI-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\r\n    },\r\n    token: serializedTokens.vai,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 40,\r\n    lpSymbol: 'BLK-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\r\n    },\r\n    token: serializedTokens.blink,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 37,\r\n    lpSymbol: 'HARD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\r\n    },\r\n    token: serializedTokens.hard,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n    },\r\n    token: serializedTokens.busd,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    lpSymbol: 'ADA-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\r\n    },\r\n    token: serializedTokens.ada,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 4,\r\n    lpSymbol: 'BAND-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\r\n    },\r\n    token: serializedTokens.band,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 5,\r\n    lpSymbol: 'DOT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\r\n    },\r\n    token: serializedTokens.dot,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 6,\r\n    lpSymbol: 'EOS-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\r\n    },\r\n    token: serializedTokens.eos,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 7,\r\n    lpSymbol: 'LINK-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\r\n    },\r\n    token: serializedTokens.link,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 11,\r\n    lpSymbol: 'USDT-BUSD LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.busd,\r\n  },\r\n  {\r\n    pid: 12,\r\n    lpSymbol: 'TWT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\r\n    },\r\n    token: serializedTokens.twt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 13,\r\n    lpSymbol: 'XVS-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\r\n    },\r\n    token: serializedTokens.xvs,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 14,\r\n    lpSymbol: 'ETH-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\r\n    },\r\n    token: serializedTokens.eth,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 15,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\r\n    },\r\n    token: serializedTokens.btcb,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 16,\r\n    lpSymbol: 'ALPHA-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\r\n    },\r\n    token: serializedTokens.alpha,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 17,\r\n    lpSymbol: 'USDT-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\r\n    },\r\n    token: serializedTokens.usdt,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 18,\r\n    lpSymbol: 'XRP-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\r\n    },\r\n    token: serializedTokens.xrp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 19,\r\n    lpSymbol: 'ATOM-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\r\n    },\r\n    token: serializedTokens.atom,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 20,\r\n    lpSymbol: 'YFII-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\r\n    },\r\n    token: serializedTokens.yfii,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 21,\r\n    lpSymbol: 'DAI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\r\n    },\r\n    token: serializedTokens.dai,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 22,\r\n    lpSymbol: 'XTZ-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\r\n    },\r\n    token: serializedTokens.xtz,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 23,\r\n    lpSymbol: 'BCH-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\r\n    },\r\n    token: serializedTokens.bch,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 24,\r\n    lpSymbol: 'YFI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\r\n    },\r\n    token: serializedTokens.yfi,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 25,\r\n    lpSymbol: 'UNI-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\r\n    },\r\n    token: serializedTokens.uni,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 26,\r\n    lpSymbol: 'FIL-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\r\n    },\r\n    token: serializedTokens.fil,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 27,\r\n    lpSymbol: 'INJ-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\r\n    },\r\n    token: serializedTokens.inj,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 29,\r\n    lpSymbol: 'USDC-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\r\n    },\r\n    token: serializedTokens.usdc,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 30,\r\n    lpSymbol: 'SXP-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\r\n    },\r\n    token: serializedTokens.sxp,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 32,\r\n    lpSymbol: 'CTK-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\r\n    },\r\n    token: serializedTokens.ctk,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 34,\r\n    lpSymbol: 'STAX-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\r\n    },\r\n    token: serializedTokens.stax,\r\n    quoteToken: serializedTokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 35,\r\n    lpSymbol: 'NAR-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\r\n    },\r\n    token: serializedTokens.nar,\r\n    quoteToken: serializedTokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 36,\r\n    lpSymbol: 'NYA-CAKE LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\r\n    },\r\n    token: serializedTokens.nya,\r\n    quoteToken: serializedTokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 38,\r\n    lpSymbol: 'bROOBEE-CAKE LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\r\n    },\r\n    token: serializedTokens.broobee,\r\n    quoteToken: serializedTokens.cake,\r\n    isCommunity: true,\r\n  },\r\n  {\r\n    pid: 8,\r\n    lpSymbol: 'BAKE-BNB Bakery LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\r\n    },\r\n    token: serializedTokens.bake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 9,\r\n    lpSymbol: 'BURGER-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\r\n    },\r\n    token: serializedTokens.burger,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n  {\r\n    pid: 10,\r\n    lpSymbol: 'BAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\r\n    },\r\n    token: serializedTokens.bake,\r\n    quoteToken: serializedTokens.wbnb,\r\n  },\r\n]\r\n\r\nexport default farms\r\n","/**\r\n * Returns true if the string value is zero in hex\r\n * @param hexNumberString\r\n */\r\nexport default function isZero(hexNumberString: string) {\r\n  return /^0x0*$/.test(hexNumberString)\r\n}\r\n","import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","/**\r\n * Truncate a transaction or address hash\r\n */\r\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\r\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n}\r\n\r\nexport default truncateHash\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n    window.localStorage.removeItem(connectorLocalStorageKey)\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import { useEffect, useState } from 'react'\r\n\r\n// modified from https://usehooks.com/useDebounce/\r\nexport default function useDebounce<T>(value: T, delay: number): T {\r\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n  useEffect(() => {\r\n    // Update debounced value after delay\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value)\r\n    }, delay)\r\n\r\n    // Cancel the timeout if value changes (also on delay change or unmount)\r\n    // This is how we prevent debounced value from updating if value is changed ...\r\n    // .. within the delay period. Timeout gets cleared and restarted.\r\n    return () => {\r\n      clearTimeout(handler)\r\n    }\r\n  }, [value, delay])\r\n\r\n  return debouncedValue\r\n}\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Binance Smart Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error('Failed to setup the network in Metamask:', error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\r\n  const tokenAdded = await window.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\n\r\nexport function currencyId(currency: Currency): string {\r\n  if (currency === ETHER) return 'BNB'\r\n  if (currency instanceof Token) return currency.address\r\n  throw new Error('invalid currency')\r\n}\r\n\r\nexport default currencyId\r\n","/* eslint-disable no-case-declarations */\r\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nexport default function uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return [`https${uri.substr(4)}`, uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import { Collections, CollectionKey } from './types'\r\n\r\nconst collections: Collections = {\r\n  [CollectionKey.PANCAKE]: {\r\n    name: 'Pancake Bunnies',\r\n    address: {\r\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\r\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n    },\r\n  },\r\n}\r\n\r\nexport default collections\r\n","import React, { useCallback } from 'react'\r\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ErrorIcon,\r\n  ArrowUpIcon,\r\n  MetamaskIcon,\r\n  Flex,\r\n  Box,\r\n  Link,\r\n  Spinner,\r\n  Modal,\r\n  InjectedModalProps,\r\n} from '@pancakeswap/uikit'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { RowFixed } from '../Layout/Row'\r\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\r\nimport { getBscScanLink } from '../../utils'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n`\r\nconst Section = styled(AutoColumn)`\r\n  padding: 24px;\r\n`\r\n\r\nconst ConfirmedIcon = styled(ColumnCenter)`\r\n  padding: 24px 0;\r\n`\r\n\r\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <ConfirmedIcon>\r\n        <Spinner />\r\n      </ConfirmedIcon>\r\n      <AutoColumn gap=\"12px\" justify=\"center\">\r\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text bold small textAlign=\"center\">\r\n            {pendingText}\r\n          </Text>\r\n        </AutoColumn>\r\n        <Text small color=\"textSubtle\" textAlign=\"center\">\r\n          {t('Confirm this transaction in your wallet')}\r\n        </Text>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nfunction TransactionSubmittedContent({\r\n  onDismiss,\r\n  chainId,\r\n  hash,\r\n  currencyToAdd,\r\n}: {\r\n  onDismiss: () => void\r\n  hash: string | undefined\r\n  chainId: ChainId\r\n  currencyToAdd?: Currency | undefined\r\n}) {\r\n  const { library } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Section>\r\n        <ConfirmedIcon>\r\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\r\n        </ConfirmedIcon>\r\n        <AutoColumn gap=\"12px\" justify=\"center\">\r\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\r\n          {chainId && hash && (\r\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\r\n              {t('View on BscScan')}\r\n            </Link>\r\n          )}\r\n          {currencyToAdd && library?.provider?.isMetaMask && (\r\n            <Button\r\n              variant=\"tertiary\"\r\n              mt=\"12px\"\r\n              width=\"fit-content\"\r\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\r\n            >\r\n              <RowFixed>\r\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\r\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\r\n              </RowFixed>\r\n            </Button>\r\n          )}\r\n          <Button onClick={onDismiss} mt=\"20px\">\r\n            {t('Close')}\r\n          </Button>\r\n        </AutoColumn>\r\n      </Section>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function ConfirmationModalContent({\r\n  bottomContent,\r\n  topContent,\r\n}: {\r\n  topContent: () => React.ReactNode\r\n  bottomContent: () => React.ReactNode\r\n}) {\r\n  return (\r\n    <Wrapper>\r\n      <Box>{topContent()}</Box>\r\n      <Box>{bottomContent()}</Box>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn justify=\"center\">\r\n        <ErrorIcon color=\"failure\" width=\"64px\" />\r\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\r\n          {message}\r\n        </Text>\r\n      </AutoColumn>\r\n\r\n      <Flex justifyContent=\"center\" pt=\"24px\">\r\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\ninterface ConfirmationModalProps {\r\n  title: string\r\n  customOnDismiss?: () => void\r\n  hash: string | undefined\r\n  content: () => React.ReactNode\r\n  attemptingTxn: boolean\r\n  pendingText: string\r\n  currencyToAdd?: Currency | undefined\r\n}\r\n\r\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\r\n  title,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  attemptingTxn,\r\n  hash,\r\n  pendingText,\r\n  content,\r\n  currencyToAdd,\r\n}) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    if (customOnDismiss) {\r\n      customOnDismiss()\r\n    }\r\n    onDismiss()\r\n  }, [customOnDismiss, onDismiss])\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\r\n      {attemptingTxn ? (\r\n        <ConfirmationPendingContent pendingText={pendingText} />\r\n      ) : hash ? (\r\n        <TransactionSubmittedContent\r\n          chainId={chainId}\r\n          hash={hash}\r\n          onDismiss={onDismiss}\r\n          currencyToAdd={currencyToAdd}\r\n        />\r\n      ) : (\r\n        content()\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionConfirmationModal\r\n","import { isAddress } from '../../utils'\r\nimport useENSAddress from './useENSAddress'\r\nimport useENSName from './useENSName'\r\n\r\n/**\r\n * Given a name or address, does a lookup to resolve to an address and name\r\n * @param nameOrAddress ENS name or address\r\n */\r\nexport default function useENS(nameOrAddress?: string | null): {\r\n  loading: boolean\r\n  address: string | null\r\n  name: string | null\r\n} {\r\n  const validated = isAddress(nameOrAddress)\r\n  const reverseLookup = useENSName(validated || undefined)\r\n  const lookup = useENSAddress(nameOrAddress)\r\n\r\n  return {\r\n    loading: reverseLookup.loading || lookup.loading,\r\n    address: validated || lookup.address,\r\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport { isAddress } from '../../utils'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a reverse lookup for an address to find its ENS name.\r\n * Note this is not the same as looking up an ENS name to find an address.\r\n */\r\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\r\n  const debouncedAddress = useDebounce(address, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\r\n    try {\r\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedAddress])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\r\n\r\n  const changed = debouncedAddress !== address\r\n  return {\r\n    ENSName: changed ? null : name.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || name.loading,\r\n  }\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\nimport useDebounce from '../useDebounce'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its address.\r\n */\r\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\r\n  const debouncedName = useDebounce(ensName, 200)\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!debouncedName) return [undefined]\r\n    try {\r\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [debouncedName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddressResult = resolverAddress.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\r\n    false,\r\n  )\r\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\r\n\r\n  const changed = debouncedName !== ensName\r\n  return {\r\n    address: changed ? null : addr.result?.[0] ?? null,\r\n    loading: changed || resolverAddress.loading || addr.loading,\r\n  }\r\n}\r\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\r\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\r\n\r\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\r\nexport function isTradeBetter(\r\n  tradeA: Trade | undefined | null,\r\n  tradeB: Trade | undefined | null,\r\n  minimumDelta: Percent = ZERO_PERCENT,\r\n): boolean | undefined {\r\n  if (tradeA && !tradeB) return false\r\n  if (tradeB && !tradeA) return true\r\n  if (!tradeA || !tradeB) return undefined\r\n\r\n  if (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\r\n  ) {\r\n    throw new Error('Trades are not comparable')\r\n  }\r\n\r\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\r\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\r\n  }\r\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\r\n}\r\n\r\nexport default isTradeBetter\r\n","/* eslint-disable no-param-reassign */\r\nimport { isTradeBetter } from 'utils/trades'\r\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\r\nimport flatMap from 'lodash/flatMap'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nimport { useUserSingleHopOnly } from 'state/user/hooks'\r\nimport {\r\n  BASES_TO_CHECK_TRADES_AGAINST,\r\n  CUSTOM_BASES,\r\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\r\n  ADDITIONAL_BASES,\r\n} from '../config/constants'\r\nimport { PairState, usePairs } from './usePairs'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nimport { useUnsupportedTokens } from './Tokens'\r\n\r\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const [tokenA, tokenB] = chainId\r\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n    : [undefined, undefined]\r\n\r\n  const bases: Token[] = useMemo(() => {\r\n    if (!chainId) return []\r\n\r\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\r\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\r\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\r\n\r\n    return [...common, ...additionalA, ...additionalB]\r\n  }, [chainId, tokenA, tokenB])\r\n\r\n  const basePairs: [Token, Token][] = useMemo(\r\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\r\n    [bases],\r\n  )\r\n\r\n  const allPairCombinations: [Token, Token][] = useMemo(\r\n    () =>\r\n      tokenA && tokenB\r\n        ? [\r\n            // the direct pair\r\n            [tokenA, tokenB],\r\n            // token A against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\r\n            // token B against all bases\r\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\r\n            // each base against all bases\r\n            ...basePairs,\r\n          ]\r\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\r\n            .filter(([t0, t1]) => t0.address !== t1.address)\r\n            .filter(([tokenA_, tokenB_]) => {\r\n              if (!chainId) return true\r\n              const customBases = CUSTOM_BASES[chainId]\r\n\r\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\r\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\r\n\r\n              if (!customBasesA && !customBasesB) return true\r\n\r\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\r\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\r\n\r\n              return true\r\n            })\r\n        : [],\r\n    [tokenA, tokenB, bases, basePairs, chainId],\r\n  )\r\n\r\n  const allPairs = usePairs(allPairCombinations)\r\n\r\n  // only pass along valid pairs, non-duplicated pairs\r\n  return useMemo(\r\n    () =>\r\n      Object.values(\r\n        allPairs\r\n          // filter out invalid pairs\r\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\r\n          // filter out duplicated pairs\r\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\r\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\r\n            return memo\r\n          }, {}),\r\n      ),\r\n    [allPairs],\r\n  )\r\n}\r\n\r\nconst MAX_HOPS = 3\r\n\r\n/**\r\n * Returns the best trade for the exact amount of tokens in to the given token out\r\n */\r\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  return useMemo(() => {\r\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\r\n      if (singleHopOnly) {\r\n        return (\r\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\r\n          null\r\n        )\r\n      }\r\n      // search through trades with varying hops, find best trade out of them\r\n      let bestTradeSoFar: Trade | null = null\r\n      for (let i = 1; i <= MAX_HOPS; i++) {\r\n        const currentTrade: Trade | null =\r\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\r\n          null\r\n        // if current trade is best yet, save it\r\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n          bestTradeSoFar = currentTrade\r\n        }\r\n      }\r\n      return bestTradeSoFar\r\n    }\r\n\r\n    return null\r\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\r\n}\r\n\r\n/**\r\n * Returns the best trade for the token in to the exact amount of token out\r\n */\r\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\r\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  return useMemo(() => {\r\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\r\n      if (singleHopOnly) {\r\n        return (\r\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\r\n          null\r\n        )\r\n      }\r\n      // search through trades with varying hops, find best trade out of them\r\n      let bestTradeSoFar: Trade | null = null\r\n      for (let i = 1; i <= MAX_HOPS; i++) {\r\n        const currentTrade =\r\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\r\n          null\r\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\r\n          bestTradeSoFar = currentTrade\r\n        }\r\n      }\r\n      return bestTradeSoFar\r\n    }\r\n    return null\r\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\r\n}\r\n\r\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\r\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\r\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\r\n\r\n  // if unsupported list loaded & either token on list, mark as unsupported\r\n  if (unsupportedTokens) {\r\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\r\n      return true\r\n    }\r\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { isAddress } from 'utils'\r\nimport { useAppDispatch } from 'state'\r\nimport { State, ProfileState } from '../types'\r\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchProfile(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\nexport const useGetProfileAvatar = (account: string) => {\r\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\r\n  const { username, nft } = profileAvatar || {}\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const address = isAddress(account)\r\n\r\n    if (!nft && address) {\r\n      dispatch(fetchProfileAvatar(account))\r\n    }\r\n\r\n    if (!username && nft && address) {\r\n      dispatch(fetchProfileUsername(account))\r\n    }\r\n  }, [account, nft, username, dispatch])\r\n\r\n  return { username, nft }\r\n}\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'Crypto Prediction Finance',\r\n  description:\r\n    'The most popular AMM on BSC by user count! Earn CPF, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by Crypto Prediction Finance), and more, on a platform you can trust.',\r\n\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  let basePath\r\n  if (path.startsWith('/swap')) {\r\n    basePath = '/swap'\r\n  } else if (path.startsWith('/add')) {\r\n    basePath = '/add'\r\n  } else if (path.startsWith('/remove')) {\r\n    basePath = '/remove'\r\n  } else if (path.startsWith('/teams')) {\r\n    basePath = '/teams'\r\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\r\n    basePath = '/voting/proposal'\r\n  } else {\r\n    basePath = path\r\n  }\r\n\r\n  switch (basePath) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('PancakeSwap')}`,\r\n      }\r\n    case '/swap':\r\n      return {\r\n        title: `${t('Exchange')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/add':\r\n      return {\r\n        title: `${t('Add Liquidity')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/remove':\r\n      return {\r\n        title: `${t('Remove Liquidity')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/liquidity':\r\n      return {\r\n        title: `${t('Liquidity')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/find':\r\n      return {\r\n        title: `${t('Import Pool')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/prediction/leaderboard':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/farms/auction':\r\n      return {\r\n        title: `${t('Farm Auctions')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/voting':\r\n      return {\r\n        title: `${t('Voting')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/voting/proposal':\r\n      return {\r\n        title: `${t('Proposals')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/voting/proposal/create':\r\n      return {\r\n        title: `${t('Make a Proposal')} | ${t('Crypto Prediction Finance')}`,\r\n      }\r\n    case '/info':\r\n      return {\r\n        title: `${t('Overview')} | ${t('Crypto Prediction Finance Info & Analytics')}`,\r\n        description: 'View statistics for Crypto Prediction Finance exchanges.',\r\n      }\r\n    case '/info/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Crypto Prediction Finance Info & Analytics')}`,\r\n        description: 'View statistics for Crypto Prediction Finance exchanges.',\r\n      }\r\n    case '/info/tokens':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Crypto Prediction Finance Info & Analytics')}`,\r\n        description: 'View statistics for Crypto Prediction Finance exchanges.',\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = useCakeBusdPrice()\r\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n  if (symbol) {\r\n    pageTitle = [symbol, title].join(' - ')\r\n  }\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  symbol?: string\r\n}\r\n\r\nconst Page: React.FC<PageProps> = ({ children, symbol, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta symbol={symbol} />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport CircleLoader from '../../Loader/CircleLoader'\r\n\r\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-decoration: none !important;\r\n  border-radius: 0.5rem;\r\n  padding: 0.25rem 0rem;\r\n  font-weight: 500;\r\n  font-size: 0.825rem;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\r\n  color: ${({ pending, success, theme }) =>\r\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\r\n`\r\n\r\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const summary = tx?.summary\r\n  const pending = !tx?.receipt\r\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\r\n\r\n  if (!chainId) return null\r\n\r\n  return (\r\n    <TransactionState pending={pending} success={success}>\r\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\r\n      <IconWrapper pending={pending} success={success}>\r\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\r\n      </IconWrapper>\r\n    </TransactionState>\r\n  )\r\n}\r\n","import React, { useMemo, useCallback } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport { AppDispatch } from 'state'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { AutoRow } from '../../Layout/Row'\r\nimport Transaction from './Transaction'\r\n\r\n// we want the latest one to come first, so return negative if a is after b\r\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\r\n  return b.addedTime - a.addedTime\r\n}\r\n\r\nfunction renderTransactions(transactions: TransactionDetails[]) {\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      {transactions.map((tx) => {\r\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const { account, chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const allTransactions = useAllTransactions()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const sortedRecentTransactions = useMemo(() => {\r\n    const txs = Object.values(allTransactions)\r\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\r\n  }, [allTransactions])\r\n\r\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\r\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\r\n\r\n  const clearAllTransactionsCallback = useCallback(() => {\r\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\r\n  }, [dispatch, chainId])\r\n\r\n  return (\r\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\r\n      {account && (\r\n        <ModalBody>\r\n          {!!pending.length || !!confirmed.length ? (\r\n            <>\r\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\r\n                <Text>{t('Recent Transactions')}</Text>\r\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\r\n                  {t('clear all')}\r\n                </Button>\r\n              </AutoRow>\r\n              {renderTransactions(pending)}\r\n              {renderTransactions(confirmed)}\r\n            </>\r\n          ) : (\r\n            <Text>{t('No recent transactions')}</Text>\r\n          )}\r\n        </ModalBody>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default TransactionsModal\r\n","import React from 'react'\r\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\r\nimport TransactionsModal from './TransactionsModal'\r\n\r\nconst Transactions = () => {\r\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\r\n  return (\r\n    <>\r\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\r\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Transactions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport GlobalSettings from 'components/Menu/GlobalSettings'\r\nimport Transactions from './Transactions'\r\nimport QuestionHelper from '../QuestionHelper'\r\n\r\ninterface Props {\r\n  title: string\r\n  subtitle: string\r\n  helper?: string\r\n  backTo?: string\r\n  noConfig?: boolean\r\n}\r\n\r\nconst AppHeaderContainer = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 24px;\r\n  width: 100%;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\r\n  const [expertMode] = useExpertModeManager()\r\n\r\n  return (\r\n    <AppHeaderContainer>\r\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\r\n        {backTo && (\r\n          <IconButton as={Link} to={backTo}>\r\n            <ArrowBackIcon width=\"32px\" />\r\n          </IconButton>\r\n        )}\r\n        <Flex flexDirection=\"column\">\r\n          <Heading as=\"h2\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <Flex alignItems=\"center\">\r\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\r\n            <Text color=\"textSubtle\" fontSize=\"14px\">\r\n              {subtitle}\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      </Flex>\r\n      {!noConfig && (\r\n        <Flex alignItems=\"center\">\r\n          <NotificationDot show={expertMode}>\r\n            <GlobalSettings />\r\n          </NotificationDot>\r\n          <Transactions />\r\n        </Flex>\r\n      )}\r\n    </AppHeaderContainer>\r\n  )\r\n}\r\n\r\nexport default AppHeader\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const BodyWrapper = styled(Card)`\r\n  border-radius: 24px;\r\n  max-width: 436px;\r\n  width: 100%;\r\n  z-index: 1;\r\n`\r\n\r\n/**\r\n * The styled container element that wraps the content of most pages and the tabs.\r\n */\r\nexport default function AppBody({ children }: { children: React.ReactNode }) {\r\n  return <BodyWrapper>{children}</BodyWrapper>\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\r\n  animation: 2s ${rotate} linear infinite;\r\n  height: ${({ size }) => size};\r\n  width: ${({ size }) => size};\r\n  path {\r\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\r\n  }\r\n`\r\n\r\n/**\r\n * Takes in custom size and stroke for circle color, default to primary color as fill,\r\n * need ...rest for layered styles on top\r\n */\r\nexport default function CircleLoader({\r\n  size = '16px',\r\n  stroke,\r\n  ...rest\r\n}: {\r\n  size?: string\r\n  stroke?: string\r\n  [k: string]: any\r\n}) {\r\n  return (\r\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\r\n      <path\r\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\r\n        strokeWidth=\"2.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </StyledSVG>\r\n  )\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  const gasPrice = getGasPrice()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","import sample from 'lodash/sample'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [\r\n  process.env.REACT_APP_NODE_1,\r\n  process.env.REACT_APP_NODE_2,\r\n  process.env.REACT_APP_NODE_3,\r\n  process.env.REACT_APP_NODE_4,\r\n]\r\n\r\nconst getNodeUrl = () => {\r\n  return sample(nodes)\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { Address, Images } from '../types'\r\n\r\nexport enum CollectionKey {\r\n  PANCAKE = 'pancake',\r\n}\r\n\r\ntype Collection = {\r\n  name: string\r\n  address: Address\r\n}\r\n\r\nexport type Collections = {\r\n  [key in CollectionKey]: Collection\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type Nft = {\r\n  id?: number | string\r\n  name: string\r\n  description: string\r\n  images: NftImages\r\n  video?: {\r\n    webm: string\r\n    mp4: string\r\n  }\r\n\r\n  // Uniquely identifies the nft.\r\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\r\n  identifier: string\r\n\r\n  attributes?: any\r\n}\r\n\r\nexport type Nfts = {\r\n  [key in CollectionKey]: Nft[]\r\n}\r\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\r\n\r\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\r\n  const match = ensAddress.match(ENS_NAME_REGEX)\r\n  if (!match) return undefined\r\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\r\n}\r\n\r\nexport default parseENSAddress\r\n","/* eslint-disable no-continue */\r\n/* eslint-disable no-await-in-loop */\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\nimport contenthashToUri from './contenthashToUri'\r\nimport { parseENSAddress } from './ENS/parseENSAddress'\r\nimport uriToHttp from './uriToHttp'\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n * @param resolveENSContentHash resolves an ens name to a contenthash\r\n */\r\nexport default async function getTokenList(\r\n  listUrl: string,\r\n  resolveENSContentHash: (ensName: string) => Promise<string>,\r\n): Promise<TokenList> {\r\n  const parsedENS = parseENSAddress(listUrl)\r\n  let urls: string[]\r\n  if (parsedENS) {\r\n    let contentHashUri\r\n    try {\r\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\r\n    } catch (error) {\r\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\r\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\r\n    }\r\n    let translatedUri\r\n    try {\r\n      translatedUri = contenthashToUri(contentHashUri)\r\n    } catch (error) {\r\n      console.error('Failed to translate contenthash to URI', contentHashUri)\r\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\r\n    }\r\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\r\n  } else {\r\n    urls = uriToHttp(listUrl)\r\n  }\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.error('Failed to fetch list', listUrl, error)\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json as TokenList\r\n  }\r\n  throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { Provider } from '@ethersproject/abstract-provider'\r\nimport { namehash } from 'ethers/lib/utils'\r\n\r\nconst REGISTRAR_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        name: 'node',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'resolver',\r\n    outputs: [\r\n      {\r\n        name: 'resolverAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n\r\nconst RESOLVER_ABI = [\r\n  {\r\n    constant: true,\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'node',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'contenthash',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes',\r\n        name: '',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    payable: false,\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n]\r\n\r\n// cache the resolver contracts since most of them are the public resolver\r\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\r\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\r\n}\r\n\r\n/**\r\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\r\n * @param ensName to resolve\r\n * @param provider provider to use to fetch the data\r\n */\r\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\r\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\r\n  const hash = namehash(ensName)\r\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\r\n  return resolverContract(resolverAddress, provider).contenthash(hash)\r\n}\r\n","import { nanoid } from '@reduxjs/toolkit'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppDispatch } from '../state'\r\nimport { fetchTokenList } from '../state/lists/actions'\r\nimport getTokenList from '../utils/getTokenList'\r\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\r\nimport useWeb3Provider from './useActiveWeb3React'\r\n\r\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\r\n  const { library } = useWeb3Provider()\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const ensResolver = useCallback(\r\n    (ensName: string) => {\r\n      if (chainId !== ChainId.MAINNET) {\r\n        throw new Error('Could not construct mainnet ENS resolver')\r\n      }\r\n      return resolveENSContentHash(ensName, library)\r\n    },\r\n    [chainId, library],\r\n  )\r\n\r\n  // note: prevent dispatch if using for list search or unsupported list\r\n  return useCallback(\r\n    async (listUrl: string, sendDispatch = true) => {\r\n      const requestId = nanoid()\r\n      if (sendDispatch) {\r\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\r\n      }\r\n      return getTokenList(listUrl, ensResolver)\r\n        .then((tokenList) => {\r\n          if (sendDispatch) {\r\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\r\n          }\r\n          return tokenList\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Failed to get list at url ${listUrl}`, error)\r\n          if (sendDispatch) {\r\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\r\n          }\r\n          throw error\r\n        })\r\n    },\r\n    [dispatch, ensResolver],\r\n  )\r\n}\r\n\r\nexport default useFetchListCallback\r\n","import React, { createContext, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from 'components/Toast'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ToastContainer } from 'components/Toast'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { escapeRegExp } from '../../utils'\r\n\r\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: 16px;\r\n  text-align: ${({ align }) => align && align};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\r\n\r\nexport const Input = React.memo(function InnerInput({\r\n  value,\r\n  onUserInput,\r\n  placeholder,\r\n  ...rest\r\n}: {\r\n  value: string | number\r\n  onUserInput: (input: string) => void\r\n  error?: boolean\r\n  fontSize?: string\r\n  align?: 'right' | 'left'\r\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\r\n  const enforcer = (nextUserInput: string) => {\r\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\r\n      onUserInput(nextUserInput)\r\n    }\r\n  }\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledInput\r\n      {...rest}\r\n      value={value}\r\n      onChange={(event) => {\r\n        // replace commas with periods, because we exclusively uses period as the decimal separator\r\n        enforcer(event.target.value.replace(/,/g, '.'))\r\n      }}\r\n      // universal input options\r\n      inputMode=\"decimal\"\r\n      title={t('Token Amount')}\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      // text-specific options\r\n      type=\"text\"\r\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n      placeholder={placeholder || '0.0'}\r\n      minLength={1}\r\n      maxLength={79}\r\n      spellCheck=\"false\"\r\n    />\r\n  )\r\n})\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Currency, Pair } from '@pancakeswap/sdk'\r\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\r\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\r\n\r\nimport { RowBetween } from '../Layout/Row'\r\nimport { Input as NumericalInput } from './NumericalInput'\r\n\r\nconst InputRow = styled.div<{ selected: boolean }>`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\r\n`\r\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\r\n  padding: 0 0.5rem;\r\n`\r\nconst LabelRow = styled.div`\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem 0 1rem;\r\n`\r\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  z-index: 1;\r\n`\r\nconst Container = styled.div<{ hideInput: boolean }>`\r\n  border-radius: 16px;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n`\r\ninterface CurrencyInputPanelProps {\r\n  value: string\r\n  onUserInput: (value: string) => void\r\n  onMax?: () => void\r\n  showMaxButton: boolean\r\n  label?: string\r\n  onCurrencySelect: (currency: Currency) => void\r\n  currency?: Currency | null\r\n  disableCurrencySelect?: boolean\r\n  hideBalance?: boolean\r\n  pair?: Pair | null\r\n  hideInput?: boolean\r\n  otherCurrency?: Currency | null\r\n  id: string\r\n  showCommonBases?: boolean\r\n}\r\nexport default function CurrencyInputPanel({\r\n  value,\r\n  onUserInput,\r\n  onMax,\r\n  showMaxButton,\r\n  label,\r\n  onCurrencySelect,\r\n  currency,\r\n  disableCurrencySelect = false,\r\n  hideBalance = false,\r\n  pair = null, // used for double token logo\r\n  hideInput = false,\r\n  otherCurrency,\r\n  id,\r\n  showCommonBases,\r\n}: CurrencyInputPanelProps) {\r\n  const { account } = useActiveWeb3React()\r\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\r\n  const { t } = useTranslation()\r\n  const translatedLabel = label || t('Input')\r\n\r\n  const [onPresentCurrencyModal] = useModal(\r\n    <CurrencySearchModal\r\n      onCurrencySelect={onCurrencySelect}\r\n      selectedCurrency={currency}\r\n      otherSelectedCurrency={otherCurrency}\r\n      showCommonBases={showCommonBases}\r\n    />,\r\n  )\r\n  return (\r\n    <InputPanel id={id}>\r\n      <Container hideInput={hideInput}>\r\n        {!hideInput && (\r\n          <LabelRow>\r\n            <RowBetween>\r\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\r\n              {account && (\r\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\r\n                  {!hideBalance && !!currency\r\n                    ? t('Balance: %balance%', { balance: selectedCurrencyBalance?.toSignificant(6) ?? t('Loading') })\r\n                    : ' -'}\r\n                </Text>\r\n              )}\r\n            </RowBetween>\r\n          </LabelRow>\r\n        )}\r\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\r\n          {!hideInput && (\r\n            <>\r\n              <NumericalInput\r\n                className=\"token-amount-input\"\r\n                value={value}\r\n                onUserInput={(val) => {\r\n                  onUserInput(val)\r\n                }}\r\n              />\r\n              {account && currency && showMaxButton && label !== 'To' && (\r\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\r\n                  MAX\r\n                </Button>\r\n              )}\r\n            </>\r\n          )}\r\n          <CurrencySelectButton\r\n            selected={!!currency}\r\n            className=\"open-currency-select-button\"\r\n            onClick={() => {\r\n              if (!disableCurrencySelect) {\r\n                onPresentCurrencyModal()\r\n              }\r\n            }}\r\n          >\r\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n              {pair ? (\r\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\r\n              ) : currency ? (\r\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\r\n              ) : null}\r\n              {pair ? (\r\n                <Text id=\"pair\">\r\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\r\n                </Text>\r\n              ) : (\r\n                <Text id=\"pair\">\r\n                  {(currency && currency.symbol && currency.symbol.length > 20\r\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\r\n                        currency.symbol.length - 5,\r\n                        currency.symbol.length,\r\n                      )}`\r\n                    : currency?.symbol) || t('Select a currency')}\r\n                </Text>\r\n              )}\r\n              {!disableCurrencySelect && <ChevronDownIcon />}\r\n            </Flex>\r\n          </CurrencySelectButton>\r\n        </InputRow>\r\n      </Container>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import { useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { isAddress } from '../../utils'\r\n\r\nexport function filterTokens(tokens: Token[], search: string): Token[] {\r\n  if (search.length === 0) return tokens\r\n\r\n  const searchingAddress = isAddress(search)\r\n\r\n  if (searchingAddress) {\r\n    return tokens.filter((token) => token.address === searchingAddress)\r\n  }\r\n\r\n  const lowerSearchParts = search\r\n    .toLowerCase()\r\n    .split(/\\s+/)\r\n    .filter((s) => s.length > 0)\r\n\r\n  if (lowerSearchParts.length === 0) {\r\n    return tokens\r\n  }\r\n\r\n  const matchesSearch = (s: string): boolean => {\r\n    const sParts = s\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s_) => s_.length > 0)\r\n\r\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\r\n  }\r\n\r\n  return tokens.filter((token) => {\r\n    const { symbol, name } = token\r\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\r\n  })\r\n}\r\n\r\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\r\n  return useMemo(() => {\r\n    if (!tokens) {\r\n      return []\r\n    }\r\n\r\n    const symbolMatch = searchQuery\r\n      .toLowerCase()\r\n      .split(/\\s+/)\r\n      .filter((s) => s.length > 0)\r\n\r\n    if (symbolMatch.length > 1) {\r\n      return tokens\r\n    }\r\n\r\n    const exactMatches: Token[] = []\r\n    const symbolSubtrings: Token[] = []\r\n    const rest: Token[] = []\r\n\r\n    // sort tokens by exact match -> subtring on symbol match -> rest\r\n    tokens.map((token) => {\r\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\r\n        return exactMatches.push(token)\r\n      }\r\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\r\n        return symbolSubtrings.push(token)\r\n      }\r\n      return rest.push(token)\r\n    })\r\n\r\n    return [...exactMatches, ...symbolSubtrings, ...rest]\r\n  }, [tokens, searchQuery])\r\n}\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\r\n  const library = new ethers.providers.Web3Provider(provider)\r\n  library.pollingInterval = POLLING_INTERVAL\r\n  return library\r\n}\r\n\r\n/**\r\n * BSC Wallet requires a different sign method\r\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\r\n */\r\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\r\n  if (window.BinanceChain) {\r\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\r\n    return signature\r\n  }\r\n\r\n  /**\r\n   * Wallet Connect does not sign the message correctly unless you use their method\r\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\r\n   */\r\n  if (provider.provider?.wc) {\r\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\r\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\r\n    return signature\r\n  }\r\n\r\n  return provider.getSigner(account).signMessage(message)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Dots = styled.span`\r\n  &::after {\r\n    display: inline-block;\r\n    animation: ellipsis 1.25s infinite;\r\n    content: '.';\r\n    width: 1em;\r\n    text-align: left;\r\n  }\r\n  @keyframes ellipsis {\r\n    0% {\r\n      content: '.';\r\n    }\r\n    33% {\r\n      content: '..';\r\n    }\r\n    66% {\r\n      content: '...';\r\n    }\r\n  }\r\n`\r\n\r\nexport default Dots\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useTokenContract } from './useContract'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\n\r\n// returns undefined if input token is undefined, or fails to get token contract,\r\n// or contract total supply cannot be fetched\r\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\r\n  const contract = useTokenContract(token?.address, false)\r\n\r\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\r\n\r\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\r\n}\r\n\r\nexport default useTotalSupply\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { TeamsById } from 'state/types'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers.toNumber(),\r\n      points: numberPoints.toNumber(),\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.numberTeams()\r\n\r\n    const calls = []\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push({\r\n        address: getPancakeProfileAddress(),\r\n        name: 'getTeamProfile',\r\n        params: [i],\r\n      })\r\n    }\r\n    const teamData = await multicallv2(profileABI, calls)\r\n\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: numberUsers.toNumber(),\r\n          points: numberPoints.toNumber(),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import { IPFS_GATEWAY } from '../index'\r\nimport { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","import { useMemo } from 'react'\r\nimport { ChainId, Token } from '@pancakeswap/sdk'\r\nimport { useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { AppState } from '../../index'\r\nimport { deserializeToken } from './helpers'\r\n\r\nexport default function useUserAddedTokens(): Token[] {\r\n  const { chainId } = useActiveWeb3React()\r\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\r\n\r\n  return useMemo(() => {\r\n    if (!chainId) return []\r\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\r\n  }, [serializedTokensMap, chainId])\r\n}\r\n","import { Nft } from './types'\r\nimport { IPFS_GATEWAY } from '../../index'\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Baller',\r\n    description: 'Absolute (lottery) baller.',\r\n    images: {\r\n      lg: 'baller-lg.png',\r\n      md: 'baller-md.png',\r\n      sm: 'baller-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmeMfJk6yxYmMd41ThDpqcdEJmKXZTF9EmFeP49D15NvsF/baller.mp4`,\r\n    },\r\n    identifier: 'baller',\r\n    id: 20,\r\n  },\r\n  {\r\n    name: 'Lucky',\r\n    description: \"Lucky's got the golden ticket!\",\r\n    images: {\r\n      lg: 'lucky-lg.png',\r\n      md: 'lucky-md.png',\r\n      sm: 'lucky-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmQzwfooRxLKigK7XBJzsQbP4DBpZW8jRM1sq5wrJLg6nF/lucky.mp4`,\r\n    },\r\n    identifier: 'lucky',\r\n    id: 19,\r\n  },\r\n  {\r\n    name: 'Lottie',\r\n    description: \"Lottie's looking hotto for lotto!\",\r\n    images: {\r\n      lg: 'lottie-lg.png',\r\n      md: 'lottie-md.png',\r\n      sm: 'lottie-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmWnhyxSrD8v9bx5tE9mDkwW853bpjoCXGd7o2fe1BtQJ8/lottie.mp4`,\r\n    },\r\n    identifier: 'lottie',\r\n    id: 18,\r\n  },\r\n  {\r\n    name: 'Claire',\r\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\r\n    images: {\r\n      lg: 'claire-lg.png',\r\n      md: 'claire-md.png',\r\n      sm: 'claire-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png`,\r\n    },\r\n    identifier: 'claire',\r\n    id: 17,\r\n  },\r\n  {\r\n    name: 'Syrup Soak',\r\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\r\n    images: {\r\n      lg: 'soak-lg.png',\r\n      md: 'soak-md.png',\r\n      sm: 'soak-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4`,\r\n    },\r\n    identifier: 'syrup-soak',\r\n    id: 16,\r\n  },\r\n  {\r\n    name: 'Easter ‘21 Champions',\r\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\r\n    images: {\r\n      lg: 'easter-champion-storm-lg.png',\r\n      md: 'easter-champion-storm-md.png',\r\n      sm: 'easter-champion-storm-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png'`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4`,\r\n    },\r\n    identifier: 'easter-champion-storm',\r\n    id: 15,\r\n  },\r\n  {\r\n    name: \"Cakeston Easter '21\",\r\n    description: 'Melting Easter eggs and melting hearts!',\r\n    images: {\r\n      lg: 'cakeston-easter-21-lg.png',\r\n      md: 'cakeston-easter-21-md.png',\r\n      sm: 'cakeston-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png`,\r\n    },\r\n    identifier: 'easter-caker',\r\n    id: 15,\r\n  },\r\n  {\r\n    name: \"Flipsie Easter '21\",\r\n    description: 'Watch out for Flipsie’s spatula smash!',\r\n    images: {\r\n      lg: 'flipsie-easter-21-lg.png',\r\n      md: 'flipsie-easter-21-md.png',\r\n      sm: 'flipsie-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png`,\r\n    },\r\n    identifier: 'easter-flipper',\r\n    id: 14,\r\n  },\r\n  {\r\n    name: \"Stormy Easter '21\",\r\n    description: 'Do you like chocolate with your syrup? Go long!',\r\n    images: {\r\n      lg: 'stormy-easter-21-lg.png',\r\n      md: 'stormy-easter-21-md.png',\r\n      sm: 'stormy-easter-21-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png`,\r\n    },\r\n    identifier: 'easter-storm',\r\n    id: 12,\r\n  },\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png`,\r\n    },\r\n    video: {\r\n      webm: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm`,\r\n      mp4: `${IPFS_GATEWAY}/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4`,\r\n    },\r\n    identifier: 'bullish',\r\n    id: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png`,\r\n    },\r\n    identifier: 'hiccup',\r\n    id: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png`,\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    identifier: 'sleepy',\r\n    id: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png`,\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    identifier: 'sunny',\r\n    id: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png`,\r\n      blur: 'churro-blur.png',\r\n    },\r\n    identifier: 'churro',\r\n    id: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png`,\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    identifier: 'dollop',\r\n    id: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png`,\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    identifier: 'twinkle',\r\n    id: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png`,\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    identifier: 'swapsies',\r\n    id: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png`,\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    identifier: 'drizzle',\r\n    id: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png`,\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    identifier: 'blueberries',\r\n    id: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png`,\r\n      blur: 'circular-blur.png',\r\n    },\r\n    identifier: 'circular',\r\n    id: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: `${IPFS_GATEWAY}/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png`,\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    identifier: 'sparkle',\r\n    id: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import pancakeBunnies from './pancakeBunnies'\r\nimport { CollectionKey, Nfts } from './types'\r\n\r\nconst nfts: Nfts = {\r\n  [CollectionKey.PANCAKE]: pancakeBunnies,\r\n}\r\n\r\nexport default nfts\r\nexport { default as collections } from './collections'\r\n","import nfts from 'config/constants/nfts'\r\nimport { IPFS_GATEWAY } from 'config'\r\nimport collections from 'config/constants/nfts/collections'\r\nimport { Nft, CollectionKey } from 'config/constants/nfts/types'\r\nimport { getAddress } from './addressHelpers'\r\nimport { getErc721Contract } from './contractHelpers'\r\n\r\n/**\r\n * Some sources like Pancake do not return HTTP tokenURI's\r\n */\r\nexport const getTokenUrl = (tokenUri: string) => {\r\n  if (tokenUri.startsWith('ipfs://')) {\r\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\r\n  }\r\n\r\n  return tokenUri\r\n}\r\n\r\nexport const getBunnyNftAddress = (collectionKey: CollectionKey = CollectionKey.PANCAKE) => {\r\n  return getAddress(collections[collectionKey].address)\r\n}\r\n\r\nexport const fetchCachedUriData = async (tokenUrl: string) => {\r\n  try {\r\n    const localUriData = localStorage.getItem(tokenUrl)\r\n\r\n    if (localUriData) {\r\n      const data = JSON.parse(localUriData)\r\n      return data\r\n    }\r\n\r\n    const uriDataResponse = await fetch(tokenUrl)\r\n\r\n    if (!uriDataResponse.ok) {\r\n      throw new Error('Unable to fetch uriData')\r\n    }\r\n\r\n    const uriData = await uriDataResponse.json()\r\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\r\n    return uriData\r\n  } catch (error) {\r\n    console.error(error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\r\n  try {\r\n    const contract = getErc721Contract(nftAddress)\r\n    const tokenUri = await contract.tokenURI(tokenId)\r\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\r\n\r\n    if (!uriData) {\r\n      return null\r\n    }\r\n\r\n    return uriData\r\n  } catch (error) {\r\n    console.error('getTokenUriData', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\r\n  const uriData = await getTokenUriData(nftAddress, tokenId)\r\n\r\n  // Bail out early if we have no uriData, identifierKey, or the value does not\r\n  // exist in the object\r\n  if (!uriData) {\r\n    return null\r\n  }\r\n\r\n  return nfts.pancake.find((nft) => {\r\n    return uriData.image.includes(nft.identifier)\r\n  })\r\n}\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\n\r\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\r\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default Container\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {  LinkExternal, Flex, Button } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    justify-content: space-between;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst BubbleWrapper = styled(Flex)`\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.textSubtle};\r\n    transition: background-color 0.2s, opacity 0.2s;\r\n  }\r\n  &:hover {\r\n    svg {\r\n      opacity: 0.65;\r\n    }\r\n  }\r\n  &:active {\r\n    svg {\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n`\r\n\r\nconst Footer = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Wrapper>\r\n      <Flex flexDirection={['column', 'column', 'row']} alignItems=\"center\">\r\n        <LinkExternal\r\n          href=\"#\"\r\n          ml={[0, 0, '40px']}\r\n          mt={['20px', '20px', 0]}\r\n          mb={['8px', '8px', 0]}\r\n        >\r\n          {t('Join Our Community')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex\r\n        flexGrow={1}\r\n        alignItems=\"center\"\r\n        width={['100%', '100%', '100%', 'auto']}\r\n        justifyContent={['center', 'center', 'center', 'flex-end']}\r\n      >\r\n        <BubbleWrapper>\r\n          <Button\r\n            id=\"clickExchangeHelp\"\r\n            as=\"a\"\r\n            external\r\n            href=\"#\"\r\n            variant=\"subtle\"\r\n          >\r\n            {t('Need Support ?')}\r\n          </Button>\r\n\r\n        </BubbleWrapper>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledNav = styled.nav`\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst getActiveIndex = (pathname: string): number => {\r\n  if (\r\n    pathname.includes('/pool') ||\r\n    pathname.includes('/create') ||\r\n    pathname.includes('/add') ||\r\n    pathname.includes('/remove') ||\r\n    pathname.includes('/find') ||\r\n    pathname.includes('/liquidity')\r\n  ) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nconst Nav = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledNav>\r\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\r\n          {t('Swap')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\r\n          {t('Liquidity')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex } from '@pancakeswap/uikit'\r\nimport Footer from 'components/Menu/Footer'\r\nimport SubNav from 'components/Menu/SubNav'\r\nimport { PageMeta } from 'components/Layout/Page'\r\n\r\nconst StyledPage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 16px;\r\n  padding-bottom: 0;\r\n  min-height: calc(100vh - 64px);\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    background-size: auto;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding: 24px;\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    min-height: calc(100vh - 64px);\r\n  }\r\n`\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage {...props}>\r\n        <SubNav />\r\n        {children}\r\n        <Flex flexGrow={1} />\r\n        <Footer />\r\n      </StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import { useCallback, useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = useCallback(() => {\r\n    setStateLastUpdated(Date.now())\r\n  }, [setStateLastUpdated])\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import { Token, ChainId } from '@pancakeswap/sdk'\r\nimport tokens from './tokens'\r\nimport farms from './farms'\r\nimport { Ifo } from './types'\r\n\r\nconst cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'kalmar',\r\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\r\n    isActive: true,\r\n    name: 'Kalmar (KALM)',\r\n    poolBasic: {\r\n      saleAmount: '375,000 KALM',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '875,000 KALM',\r\n      raiseAmount: '$2,500,000',\r\n      cakeToBurn: '$1,250,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.kalm,\r\n    releaseBlockNumber: 7707736,\r\n    campaignId: '511110000',\r\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\r\n    tokenOfferingPrice: 2.0,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'hotcross',\r\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\r\n    isActive: false,\r\n    name: 'Hot Cross (HOTCROSS)',\r\n    poolBasic: {\r\n      saleAmount: '15,000,000 HOTCROSS',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '35,000,000 HOTCROSS',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hotcross,\r\n    releaseBlockNumber: 7477900,\r\n    campaignId: '511100000',\r\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\r\n    tokenOfferingPrice: 0.05,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'horizon',\r\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\r\n    isActive: false,\r\n    name: 'Horizon Protocol (HZN)',\r\n    poolBasic: {\r\n      saleAmount: '3,000,000 HZN',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.3,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '7,000,000 HZN',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.7,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.hzn,\r\n    releaseBlockNumber: 6581111,\r\n    campaignId: '511090000',\r\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\r\n    tokenOfferingPrice: 0.25,\r\n    version: 2,\r\n  },\r\n  {\r\n    id: 'belt',\r\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\r\n    isActive: false,\r\n    name: 'Belt (BELT)',\r\n    poolUnlimited: {\r\n      saleAmount: '150,000 BELT',\r\n      raiseAmount: '$3,000,000',\r\n      cakeToBurn: '$1,500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.belt,\r\n    releaseBlockNumber: 5493919,\r\n    campaignId: '511080000',\r\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'watch',\r\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\r\n    isActive: false,\r\n    name: 'Yieldwatch (WATCH)',\r\n    poolUnlimited: {\r\n      saleAmount: '8,000,000 WATCH',\r\n      raiseAmount: '$800,000',\r\n      cakeToBurn: '$400,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.watch,\r\n    releaseBlockNumber: 5294924,\r\n    campaignId: '511070000',\r\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'berry',\r\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\r\n    isActive: false,\r\n    name: 'Berry (BRY)',\r\n    poolUnlimited: {\r\n      saleAmount: '2,000,000 BRY',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.bry,\r\n    releaseBlockNumber: 4750968,\r\n    campaignId: '511060000',\r\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'soteria',\r\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n    isActive: false,\r\n    name: 'Soteria (wSOTE)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,500,000 wSOTE',\r\n      raiseAmount: '$525,000',\r\n      cakeToBurn: '$262,500',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.wsote,\r\n    releaseBlockNumber: 4086064,\r\n    campaignId: '511050000',\r\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'helmet',\r\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n    isActive: false,\r\n    name: 'Helmet.insure (Helmet)',\r\n    poolUnlimited: {\r\n      saleAmount: '10,000,000 Helmet',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.helmet,\r\n    releaseBlockNumber: 3771926,\r\n    campaignId: '511040000',\r\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'tenet',\r\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n    isActive: false,\r\n    name: 'Tenet (TEN)',\r\n    poolUnlimited: {\r\n      saleAmount: '1,000,000 TEN',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ten,\r\n    releaseBlockNumber: 3483883,\r\n    campaignId: '511030000',\r\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'ditto',\r\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n    isActive: false,\r\n    name: 'Ditto (DITTO)',\r\n    poolUnlimited: {\r\n      saleAmount: '700,000 DITTO',\r\n      raiseAmount: '$630,000',\r\n      cakeToBurn: '$315,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.ditto,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511020000',\r\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n  {\r\n    id: 'blink',\r\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n    isActive: false,\r\n    name: 'BLINk (BLK)',\r\n    poolUnlimited: {\r\n      saleAmount: '100,000,000 BLINK',\r\n      raiseAmount: '$1,000,000',\r\n      cakeToBurn: '$500,000',\r\n      distributionRatio: 1,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.blink,\r\n    releaseBlockNumber: 3279767,\r\n    campaignId: '511010000',\r\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\r\n    tokenOfferingPrice: null,\r\n    version: 1,\r\n  },\r\n]\r\n\r\nexport default ifos\r\n","import { useEffect, useState } from 'react'\r\n\r\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\r\n\r\nfunction isWindowVisible() {\r\n  if (!VISIBILITY_STATE_SUPPORTED) {\r\n    return true\r\n  }\r\n\r\n  return document.visibilityState === 'visible'\r\n}\r\n\r\n/**\r\n * Returns whether the window is currently visible to the user.\r\n */\r\nexport default function useIsWindowVisible() {\r\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\r\n\r\n  useEffect(() => {\r\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\r\n\r\n    const handleVisibilityChange = () => {\r\n      setIsVisible(isWindowVisible())\r\n    }\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange)\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\r\n    }\r\n  }, [setIsVisible])\r\n\r\n  return isVisible\r\n}\r\n","import { BigNumber } from 'ethers'\r\nimport { useMemo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../state'\r\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\r\n\r\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\r\nexport default function useTransactionDeadline(): BigNumber | undefined {\r\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\r\n  const blockTimestamp = useCurrentBlockTimestamp()\r\n  return useMemo(() => {\r\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\r\n    return undefined\r\n  }, [blockTimestamp, ttl])\r\n}\r\n","import { BigNumber } from 'ethers'\r\nimport { useSingleCallResult } from '../state/multicall/hooks'\r\nimport { useMulticallContract } from './useContract'\r\n\r\n// gets the current timestamp from the blockchain\r\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\r\n  const multicall = useMulticallContract()\r\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\r\nimport { deserializeToken } from 'state/user/hooks/helpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | DeserializedPool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\r\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    stakingToken: deserializeToken(stakingToken),\r\n    earningToken: deserializeToken(earningToken),\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  }\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\r\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceBusd).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceBusd).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n","import { Interface } from '@ethersproject/abi'\r\nimport ERC20_ABI from './erc20.json'\r\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\r\n\r\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\r\n\r\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\r\n\r\nexport default ERC20_INTERFACE\r\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\r\n","import CID from 'cids'\r\nimport { getCodec, rmPrefix } from 'multicodec'\r\nimport { decode, toB58String } from 'multihashes'\r\n\r\nfunction hexToUint8Array(hex: string): Uint8Array {\r\n  // eslint-disable-next-line no-param-reassign\r\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\r\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\r\n  const arr = new Uint8Array(hex.length / 2)\r\n  for (let i = 0; i < arr.length; i++) {\r\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\r\n  }\r\n  return arr\r\n}\r\n\r\nconst UTF_8_DECODER = new TextDecoder()\r\n\r\n/**\r\n * Returns the URI representation of the content hash for supported codecs\r\n * @param contenthash to decode\r\n */\r\nexport default function contenthashToUri(contenthash: string): string {\r\n  const buff = hexToUint8Array(contenthash)\r\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\r\n  switch (codec) {\r\n    case 'ipfs-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      return `ipfs://${toB58String(cid.multihash)}`\r\n    }\r\n    case 'ipns-ns': {\r\n      const data = rmPrefix(buff as Buffer)\r\n      const cid = new CID(data)\r\n      const multihash = decode(cid.multihash)\r\n      if (multihash.name === 'identity') {\r\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\r\n      }\r\n      return `ipns://${toB58String(cid.multihash)}`\r\n    }\r\n    default:\r\n      throw new Error(`Unrecognized codec: ${codec}`)\r\n  }\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import React from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { AutoRow } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { useUnsupportedTokens } from '../hooks/Tokens'\r\n\r\ninterface Props extends InjectedModalProps {\r\n  currencies: (Currency | undefined)[]\r\n}\r\n\r\nconst DetailsFooter = styled.div`\r\n  padding: 8px 0;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-bottom-left-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  text-align: center;\r\n`\r\n\r\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const tokens =\r\n    chainId && currencies\r\n      ? currencies.map((currency) => {\r\n          return wrappedCurrency(currency, chainId)\r\n        })\r\n      : []\r\n\r\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\r\n\r\n  return (\r\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\r\n      <AutoColumn gap=\"lg\">\r\n        {tokens.map((token) => {\r\n          return (\r\n            token &&\r\n            unsupportedTokens &&\r\n            Object.keys(unsupportedTokens).includes(token.address) && (\r\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\r\n                <AutoRow gap=\"5px\" align=\"center\">\r\n                  <CurrencyLogo currency={token} size=\"24px\" />\r\n                  <Text>{token.symbol}</Text>\r\n                </AutoRow>\r\n                {chainId && (\r\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\r\n                    {token.address}\r\n                  </Link>\r\n                )}\r\n              </AutoColumn>\r\n            )\r\n          )\r\n        })}\r\n        <AutoColumn gap=\"lg\">\r\n          <Text>\r\n            Some assets are not available through this interface because they may not work well with our smart contract\r\n            or we are unable to allow trading for legal reasons.\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\r\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\r\n\r\n  return (\r\n    <DetailsFooter>\r\n      <Button variant=\"text\" onClick={onPresentModal}>\r\n        Read more about unsupported assets\r\n      </Button>\r\n    </DetailsFooter>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { HelpIcon } from '@pancakeswap/uikit'\r\n\r\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\r\n\r\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\r\n  srcs: string[]\r\n}\r\n\r\n/**\r\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\r\n */\r\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\r\n  const [, refresh] = useState<number>(0)\r\n\r\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\r\n\r\n  if (src) {\r\n    return (\r\n      <img\r\n        {...rest}\r\n        alt={alt}\r\n        src={src}\r\n        onError={() => {\r\n          if (src) BAD_SRCS[src] = true\r\n          refresh((i) => i + 1)\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <HelpIcon {...rest} />\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState } from 'react'\r\nimport { Token, Currency } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { useAddUserToken } from 'state/user/hooks'\r\nimport { getBscScanLink } from 'utils'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  tokens: Token[]\r\n  handleCurrencySelect?: (currency: Currency) => void\r\n}\r\n\r\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const addToken = useAddUserToken()\r\n\r\n  // use for showing import source on inactive tokens\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n\r\n  return (\r\n    <AutoColumn gap=\"lg\">\r\n      <Message variant=\"warning\">\r\n        <Text>\r\n          {t(\r\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\r\n          )}\r\n          <br />\r\n          <br />\r\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\r\n        </Text>\r\n      </Message>\r\n\r\n      {tokens.map((token) => {\r\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n        const address = token.address ? `${truncateHash(token.address)}` : null\r\n        return (\r\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\r\n            {list !== undefined ? (\r\n              <Tag\r\n                variant=\"success\"\r\n                outline\r\n                scale=\"sm\"\r\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\r\n              >\r\n                {t('via')} {list.name}\r\n              </Tag>\r\n            ) : (\r\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\r\n                {t('Unknown Source')}\r\n              </Tag>\r\n            )}\r\n            <Flex alignItems=\"center\">\r\n              <Text mr=\"8px\">{token.name}</Text>\r\n              <Text>({token.symbol})</Text>\r\n            </Flex>\r\n            {chainId && (\r\n              <Flex justifyContent=\"space-between\" width=\"100%\">\r\n                <Text mr=\"4px\">{address}</Text>\r\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              </Flex>\r\n            )}\r\n          </Grid>\r\n        )\r\n      })}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\r\n          <Checkbox\r\n            scale=\"sm\"\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={confirmed}\r\n            onChange={() => setConfirmed(!confirmed)}\r\n          />\r\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n        <Button\r\n          variant=\"danger\"\r\n          disabled={!confirmed}\r\n          onClick={() => {\r\n            tokens.map((token) => addToken(token))\r\n            if (handleCurrencySelect) {\r\n              handleCurrencySelect(tokens[0])\r\n            }\r\n          }}\r\n          className=\".token-dismiss-button\"\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      </Flex>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default ImportToken\r\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\r\nimport { MIN_BNB } from '../config/constants'\r\n\r\n/**\r\n * Given some token amount, return the max that can be spent of it\r\n * @param currencyAmount to return max of\r\n */\r\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\r\n  if (!currencyAmount) return undefined\r\n  if (currencyAmount.currency === ETHER) {\r\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\r\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\r\n    }\r\n    return CurrencyAmount.ether(JSBI.BigInt(0))\r\n  }\r\n  return currencyAmount\r\n}\r\n\r\nexport default maxAmountSpend\r\n","import React, { useState } from 'react'\r\nimport { Text, Button, Input, Flex, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\r\nimport QuestionHelper from '../../QuestionHelper'\r\n\r\nenum SlippageError {\r\n  InvalidInput = 'InvalidInput',\r\n  RiskyLow = 'RiskyLow',\r\n  RiskyHigh = 'RiskyHigh',\r\n}\r\n\r\nenum DeadlineError {\r\n  InvalidInput = 'InvalidInput',\r\n}\r\n\r\nconst SlippageTabs = () => {\r\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\r\n  const [ttl, setTtl] = useUserTransactionTTL()\r\n  const [slippageInput, setSlippageInput] = useState('')\r\n  const [deadlineInput, setDeadlineInput] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const slippageInputIsValid =\r\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\r\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\r\n\r\n  let slippageError: SlippageError | undefined\r\n  if (slippageInput !== '' && !slippageInputIsValid) {\r\n    slippageError = SlippageError.InvalidInput\r\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\r\n    slippageError = SlippageError.RiskyLow\r\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\r\n    slippageError = SlippageError.RiskyHigh\r\n  } else {\r\n    slippageError = undefined\r\n  }\r\n\r\n  let deadlineError: DeadlineError | undefined\r\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\r\n    deadlineError = DeadlineError.InvalidInput\r\n  } else {\r\n    deadlineError = undefined\r\n  }\r\n\r\n  const parseCustomSlippage = (value: string) => {\r\n    setSlippageInput(value)\r\n\r\n    try {\r\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\r\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\r\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  const parseCustomDeadline = (value: string) => {\r\n    setDeadlineInput(value)\r\n\r\n    try {\r\n      const valueAsInt: number = Number.parseInt(value) * 60\r\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\r\n        setTtl(valueAsInt)\r\n      }\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\" mb=\"24px\">\r\n        <Flex mb=\"12px\">\r\n          <Text>{t('Slippage Tolerance')}</Text>\r\n          <QuestionHelper\r\n            text={t(\r\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\r\n            )}\r\n            placement=\"top-start\"\r\n            ml=\"4px\"\r\n          />\r\n        </Flex>\r\n        <Flex flexWrap=\"wrap\">\r\n          <Button\r\n            mt=\"4px\"\r\n            mr=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(10)\r\n            }}\r\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\r\n          >\r\n            0.1%\r\n          </Button>\r\n          <Button\r\n            mt=\"4px\"\r\n            mr=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(50)\r\n            }}\r\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\r\n          >\r\n            0.5%\r\n          </Button>\r\n          <Button\r\n            mr=\"4px\"\r\n            mt=\"4px\"\r\n            scale=\"sm\"\r\n            onClick={() => {\r\n              setSlippageInput('')\r\n              setUserSlippageTolerance(100)\r\n            }}\r\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\r\n          >\r\n            1.0%\r\n          </Button>\r\n          <Flex alignItems=\"center\">\r\n            <Box width=\"76px\" mt=\"4px\">\r\n              <Input\r\n                scale=\"sm\"\r\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\r\n                value={slippageInput}\r\n                onBlur={() => {\r\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\r\n                }}\r\n                onChange={(e) => parseCustomSlippage(e.target.value)}\r\n                isWarning={!slippageInputIsValid}\r\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\r\n              />\r\n            </Box>\r\n            <Text color=\"primary\" bold ml=\"2px\">\r\n              %\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n        {!!slippageError && (\r\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\r\n            {slippageError === SlippageError.InvalidInput\r\n              ? t('Enter a valid slippage percentage')\r\n              : slippageError === SlippageError.RiskyLow\r\n              ? t('Your transaction may fail')\r\n              : t('Your transaction may be frontrun')}\r\n          </Text>\r\n        )}\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Flex alignItems=\"center\">\r\n          <Text>{t('Tx deadline (mins)')}</Text>\r\n          <QuestionHelper\r\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\r\n            placement=\"top-start\"\r\n            ml=\"4px\"\r\n          />\r\n        </Flex>\r\n        <Flex>\r\n          <Box width=\"52px\" mt=\"4px\">\r\n            <Input\r\n              scale=\"sm\"\r\n              color={deadlineError ? 'red' : undefined}\r\n              onBlur={() => {\r\n                parseCustomDeadline((ttl / 60).toString())\r\n              }}\r\n              placeholder={(ttl / 60).toString()}\r\n              value={deadlineInput}\r\n              onChange={(e) => parseCustomDeadline(e.target.value)}\r\n            />\r\n          </Box>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SlippageTabs\r\n","import React, { useState } from 'react'\r\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from '@pancakeswap/uikit'\r\nimport { useExpertModeManager } from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ExpertModalProps extends InjectedModalProps {\r\n  setShowConfirmExpertModal: (boolean) => void\r\n  setShowExpertModeAcknowledgement: (boolean) => void\r\n}\r\n\r\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\r\n  const [, toggleExpertMode] = useExpertModeManager()\r\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('Expert Mode')}\r\n      onBack={() => setShowConfirmExpertModal(false)}\r\n      onDismiss={() => setShowConfirmExpertModal(false)}\r\n      headerBackground=\"gradients.cardHeader\"\r\n      style={{ maxWidth: '360px' }}\r\n    >\r\n      <Message variant=\"warning\" mb=\"24px\">\r\n        <Text>\r\n          {t(\r\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\r\n          )}\r\n        </Text>\r\n      </Message>\r\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\r\n      <Flex alignItems=\"center\" mb=\"24px\">\r\n        <Checkbox\r\n          name=\"confirmed\"\r\n          type=\"checkbox\"\r\n          checked={isRememberChecked}\r\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\r\n          scale=\"sm\"\r\n        />\r\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\r\n          {t('Don’t show this again')}\r\n        </Text>\r\n      </Flex>\r\n      <Button\r\n        mb=\"8px\"\r\n        id=\"confirm-expert-mode\"\r\n        onClick={() => {\r\n          // eslint-disable-next-line no-alert\r\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\r\n            toggleExpertMode()\r\n            setShowConfirmExpertModal(false)\r\n            if (isRememberChecked) {\r\n              setShowExpertModeAcknowledgement(false)\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {t('Turn On Expert Mode')}\r\n      </Button>\r\n      <Button\r\n        variant=\"secondary\"\r\n        onClick={() => {\r\n          setShowConfirmExpertModal(false)\r\n        }}\r\n      >\r\n        {t('Cancel')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ExpertModal\r\n","import React from 'react'\r\nimport { Flex, Button, Text } from '@pancakeswap/uikit'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { GAS_PRICE_GWEI, GAS_PRICE } from 'state/user/hooks/helpers'\r\nimport { useGasPriceManager } from 'state/user/hooks'\r\n\r\nconst GasSettings = () => {\r\n  const { t } = useTranslation()\r\n  const [gasPrice, setGasPrice] = useGasPriceManager()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex mb=\"12px\" alignItems=\"center\">\r\n        <Text>{t('Default Transaction Speed (GWEI)')}</Text>\r\n        <QuestionHelper\r\n          text={t(\r\n            'Adjusts the gas price (transaction fee) for your transaction. Higher GWEI = higher speed = higher fees',\r\n          )}\r\n          placement=\"top-start\"\r\n          ml=\"4px\"\r\n        />\r\n      </Flex>\r\n      <Flex flexWrap=\"wrap\">\r\n        <Button\r\n          mt=\"4px\"\r\n          mr=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.default)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.default ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Standard (%gasPrice%)', { gasPrice: GAS_PRICE.default })}\r\n        </Button>\r\n        <Button\r\n          mt=\"4px\"\r\n          mr=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.fast)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.fast ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Fast (%gasPrice%)', { gasPrice: GAS_PRICE.fast })}\r\n        </Button>\r\n        <Button\r\n          mr=\"4px\"\r\n          mt=\"4px\"\r\n          scale=\"sm\"\r\n          onClick={() => {\r\n            setGasPrice(GAS_PRICE_GWEI.instant)\r\n          }}\r\n          variant={gasPrice === GAS_PRICE_GWEI.instant ? 'primary' : 'tertiary'}\r\n        >\r\n          {t('Instant (%gasPrice%)', { gasPrice: GAS_PRICE.instant })}\r\n        </Button>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default GasSettings\r\n","import React, { useState } from 'react'\r\n// eslint-disable-next-line\r\nimport styled from 'styled-components'\r\nimport { Text, Toggle, Flex, Modal, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport {\r\n  useExpertModeManager,\r\n  useUserExpertModeAcknowledgementShow,\r\n  useUserSingleHopOnly,\r\n} from 'state/user/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useSwapActionHandlers } from 'state/swap/hooks'\r\nimport useTheme from 'hooks/useTheme'\r\nimport QuestionHelper from '../../QuestionHelper'\r\nimport TransactionSettings from './TransactionSettings'\r\nimport ExpertModal from './ExpertModal'\r\nimport GasSettings from './GasSettings'\r\n\r\n\r\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\r\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\r\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\r\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\r\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\r\n  const { onChangeRecipient } = useSwapActionHandlers()\r\n\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  if (showConfirmExpertModal) {\r\n    return (\r\n      <ExpertModal\r\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\r\n        onDismiss={onDismiss}\r\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\r\n      />\r\n    )\r\n  }\r\n\r\n  const handleExpertModeToggle = () => {\r\n    if (expertMode) {\r\n      onChangeRecipient(null)\r\n      toggleExpertMode()\r\n    } else if (!showExpertModeAcknowledgement) {\r\n      onChangeRecipient(null)\r\n      toggleExpertMode()\r\n    } else {\r\n      setShowConfirmExpertModal(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={t('Settings')}\r\n      headerBackground=\"gradients.cardHeader\"\r\n      onDismiss={onDismiss}\r\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\r\n    >\r\n      <Flex flexDirection=\"column\">\r\n        <Flex pb=\"24px\" flexDirection=\"column\">\r\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\r\n            {t('Global')}\r\n          </Text>\r\n          <GasSettings />\r\n        </Flex>\r\n        <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}>\r\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\r\n            {t('Swaps & Liquidity')}\r\n          </Text>\r\n          <TransactionSettings />\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n          <Flex alignItems=\"center\">\r\n            <Text>{t('Expert Mode')}</Text>\r\n            <QuestionHelper\r\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\r\n              placement=\"top-start\"\r\n              ml=\"4px\"\r\n            />\r\n          </Flex>\r\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\r\n        </Flex>\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n          <Flex alignItems=\"center\">\r\n            <Text>{t('Disable Multihops')}</Text>\r\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\r\n          </Flex>\r\n          <Toggle\r\n            id=\"toggle-disable-multihop-button\"\r\n            checked={singleHopOnly}\r\n            scale=\"md\"\r\n            onChange={() => {\r\n              setSingleHopOnly(!singleHopOnly)\r\n            }}\r\n          />\r\n        </Flex>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n","import React from 'react'\r\nimport { Flex, IconButton, CogIcon, useModal } from '@pancakeswap/uikit'\r\nimport SettingsModal from './SettingsModal'\r\n\r\nconst GlobalSettings = () => {\r\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\r\n\r\n  return (\r\n    <Flex>\r\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\r\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\r\n      </IconButton>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default GlobalSettings\r\n","import { useMemo } from 'react'\r\nimport contenthashToUri from 'utils/contenthashToUri'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport uriToHttp from 'utils/uriToHttp'\r\nimport useENSContentHash from './ENS/useENSContentHash'\r\n\r\nexport default function useHttpLocations(uri: string | undefined): string[] {\r\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\r\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\r\n  return useMemo(() => {\r\n    if (ens) {\r\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\r\n    }\r\n    return uri ? uriToHttp(uri) : []\r\n  }, [ens, resolvedContentHash.contenthash, uri])\r\n}\r\n","import { namehash } from 'ethers/lib/utils'\r\nimport { useMemo } from 'react'\r\nimport { useSingleCallResult } from '../../state/multicall/hooks'\r\nimport isZero from '../../utils/isZero'\r\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\r\n\r\n/**\r\n * Does a lookup for an ENS name to find its contenthash.\r\n */\r\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\r\n  const ensNodeArgument = useMemo(() => {\r\n    if (!ensName) return [undefined]\r\n    try {\r\n      return ensName ? [namehash(ensName)] : [undefined]\r\n    } catch (error) {\r\n      return [undefined]\r\n    }\r\n  }, [ensName])\r\n  const registrarContract = useENSRegistrarContract(false)\r\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\r\n  const resolverAddress = resolverAddressResult.result?.[0]\r\n  const resolverContract = useENSResolverContract(\r\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\r\n    false,\r\n  )\r\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\r\n\r\n  return {\r\n    contenthash: contenthash.result?.[0] ?? null,\r\n    loading: resolverAddressResult.loading || contenthash.loading,\r\n  }\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport enum Field {\r\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\r\n  LIQUIDITY = 'LIQUIDITY',\r\n  CURRENCY_A = 'CURRENCY_A',\r\n  CURRENCY_B = 'CURRENCY_B',\r\n}\r\n\r\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\r\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useCallback, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { PairState, usePair } from 'hooks/usePairs'\r\nimport useTotalSupply from 'hooks/useTotalSupply'\r\n\r\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { tryParseAmount } from '../swap/hooks'\r\nimport { useCurrencyBalances } from '../wallet/hooks'\r\nimport { Field, typeInput } from './actions'\r\n\r\nconst ZERO = JSBI.BigInt(0)\r\n\r\nexport function useMintState(): AppState['mint'] {\r\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\r\n}\r\n\r\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\r\n  onFieldAInput: (typedValue: string) => void\r\n  onFieldBInput: (typedValue: string) => void\r\n} {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const onFieldAInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n  const onFieldBInput = useCallback(\r\n    (typedValue: string) => {\r\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\r\n    },\r\n    [dispatch, noLiquidity],\r\n  )\r\n\r\n  return {\r\n    onFieldAInput,\r\n    onFieldBInput,\r\n  }\r\n}\r\n\r\nexport function useDerivedMintInfo(\r\n  currencyA: Currency | undefined,\r\n  currencyB: Currency | undefined,\r\n): {\r\n  dependentField: Field\r\n  currencies: { [field in Field]?: Currency }\r\n  pair?: Pair | null\r\n  pairState: PairState\r\n  currencyBalances: { [field in Field]?: CurrencyAmount }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  price?: Price\r\n  noLiquidity?: boolean\r\n  liquidityMinted?: TokenAmount\r\n  poolTokenPercentage?: Percent\r\n  error?: string\r\n} {\r\n  const { account, chainId } = useActiveWeb3React()\r\n\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n\r\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\r\n\r\n  // tokens\r\n  const currencies: { [field in Field]?: Currency } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: currencyA ?? undefined,\r\n      [Field.CURRENCY_B]: currencyB ?? undefined,\r\n    }),\r\n    [currencyA, currencyB],\r\n  )\r\n\r\n  // pair\r\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\r\n\r\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\r\n\r\n  const noLiquidity: boolean =\r\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\r\n\r\n  // balances\r\n  const balances = useCurrencyBalances(account ?? undefined, [\r\n    currencies[Field.CURRENCY_A],\r\n    currencies[Field.CURRENCY_B],\r\n  ])\r\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\r\n    [Field.CURRENCY_A]: balances[0],\r\n    [Field.CURRENCY_B]: balances[1],\r\n  }\r\n\r\n  // amounts\r\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\r\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\r\n    if (noLiquidity) {\r\n      if (otherTypedValue && currencies[dependentField]) {\r\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\r\n      }\r\n      return undefined\r\n    }\r\n    if (independentAmount) {\r\n      // we wrap the currencies just to get the price in terms of the other token\r\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\r\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\r\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\r\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\r\n        const dependentTokenAmount =\r\n          dependentField === Field.CURRENCY_B\r\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\r\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\r\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\r\n      }\r\n      return undefined\r\n    }\r\n    return undefined\r\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\r\n\r\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\r\n    () => ({\r\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\r\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\r\n    }),\r\n    [dependentAmount, independentAmount, independentField],\r\n  )\r\n\r\n  const price = useMemo(() => {\r\n    if (noLiquidity) {\r\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n      if (currencyAAmount && currencyBAmount) {\r\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\r\n      }\r\n      return undefined\r\n    }\r\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\r\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\r\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\r\n\r\n  // liquidity minted\r\n  const liquidityMinted = useMemo(() => {\r\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n    const [tokenAmountA, tokenAmountB] = [\r\n      wrappedCurrencyAmount(currencyAAmount, chainId),\r\n      wrappedCurrencyAmount(currencyBAmount, chainId),\r\n    ]\r\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\r\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\r\n    }\r\n    return undefined\r\n  }, [parsedAmounts, chainId, pair, totalSupply])\r\n\r\n  const poolTokenPercentage = useMemo(() => {\r\n    if (liquidityMinted && totalSupply) {\r\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\r\n    }\r\n    return undefined\r\n  }, [liquidityMinted, totalSupply])\r\n\r\n  let error: string | undefined\r\n  if (!account) {\r\n    error = 'Connect Wallet'\r\n  }\r\n\r\n  if (pairState === PairState.INVALID) {\r\n    error = error ?? 'Invalid pair'\r\n  }\r\n\r\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\r\n    error = error ?? 'Enter an amount'\r\n  }\r\n\r\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\r\n\r\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\r\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\r\n  }\r\n\r\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\r\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\r\n  }\r\n\r\n  return {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  }\r\n}\r\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Button, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\r\nimport { CurrencyLogo } from '../../components/Logo'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction ConfirmAddModalBottom({\r\n  noLiquidity,\r\n  price,\r\n  currencies,\r\n  parsedAmounts,\r\n  poolTokenPercentage,\r\n  onAdd,\r\n}: {\r\n  noLiquidity?: boolean\r\n  price?: Fraction\r\n  currencies: { [field in Field]?: Currency }\r\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\r\n  poolTokenPercentage?: Percent\r\n  onAdd: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\r\n        <RowFixed>\r\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\r\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Rates')}</Text>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_B]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\r\n        <Text>\r\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\r\n            currencies[Field.CURRENCY_A]?.symbol\r\n          }`}\r\n        </Text>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <Text>{t('Share of Pool')}:</Text>\r\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\r\n      </RowBetween>\r\n      <Button onClick={onAdd} mt=\"20px\">\r\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConfirmAddModalBottom\r\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { AutoColumn } from '../../components/Layout/Column'\r\nimport { AutoRow } from '../../components/Layout/Row'\r\nimport { ONE_BIPS } from '../../config/constants'\r\nimport { Field } from '../../state/mint/actions'\r\n\r\nfunction PoolPriceBar({\r\n  currencies,\r\n  noLiquidity,\r\n  poolTokenPercentage,\r\n  price,\r\n}: {\r\n  currencies: { [field in Field]?: Currency }\r\n  noLiquidity?: boolean\r\n  poolTokenPercentage?: Percent\r\n  price?: Price\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow justify=\"space-around\" gap=\"4px\">\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('%assetA% per %assetB%', {\r\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n            })}\r\n          </Text>\r\n        </AutoColumn>\r\n        <AutoColumn justify=\"center\">\r\n          <Text>\r\n            {noLiquidity && price\r\n              ? '100'\r\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\r\n            %\r\n          </Text>\r\n          <Text fontSize=\"14px\" pt={1}>\r\n            {t('Share of Pool')}\r\n          </Text>\r\n        </AutoColumn>\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default PoolPriceBar\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { TransactionResponse } from '@ethersproject/providers'\r\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\r\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from '@pancakeswap/uikit'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../../state'\r\nimport { LightCard } from '../../components/Card'\r\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\r\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { DoubleCurrencyLogo } from '../../components/Logo'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport { MinimalPositionCard } from '../../components/PositionCard'\r\nimport Row, { RowBetween } from '../../components/Layout/Row'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { ROUTER_ADDRESS } from '../../config/constants'\r\nimport { PairState } from '../../hooks/usePairs'\r\nimport { useCurrency } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\r\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\r\nimport { Field, resetMintState } from '../../state/mint/actions'\r\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\r\n\r\nimport { useTransactionAdder } from '../../state/transactions/hooks'\r\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\r\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\r\nimport Dots from '../../components/Loader/Dots'\r\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport PoolPriceBar from './PoolPriceBar'\r\nimport Page from '../Page'\r\n\r\nexport default function AddLiquidity({\r\n  match: {\r\n    params: { currencyIdA, currencyIdB },\r\n  },\r\n  history,\r\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { t } = useTranslation()\r\n  const gasPrice = useGasPrice()\r\n\r\n  const currencyA = useCurrency(currencyIdA)\r\n  const currencyB = useCurrency(currencyIdB)\r\n\r\n  useEffect(() => {\r\n    if (!currencyIdA && !currencyIdB) {\r\n      dispatch(resetMintState())\r\n    }\r\n  }, [dispatch, currencyIdA, currencyIdB])\r\n\r\n  const oneCurrencyIsWETH = Boolean(\r\n    chainId &&\r\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\r\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\r\n  )\r\n\r\n  const expertMode = useIsExpertMode()\r\n\r\n  // mint state\r\n  const { independentField, typedValue, otherTypedValue } = useMintState()\r\n  const {\r\n    dependentField,\r\n    currencies,\r\n    pair,\r\n    pairState,\r\n    currencyBalances,\r\n    parsedAmounts,\r\n    price,\r\n    noLiquidity,\r\n    liquidityMinted,\r\n    poolTokenPercentage,\r\n    error,\r\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\r\n\r\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\r\n\r\n  const isValid = !error\r\n\r\n  // modal and loading\r\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\r\n\r\n  // txn values\r\n  const deadline = useTransactionDeadline() // custom from users settings\r\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\r\n  const [txHash, setTxHash] = useState<string>('')\r\n\r\n  // get formatted amounts\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  // get the max amounts user can add\r\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmountSpend(currencyBalances[field]),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\r\n    (accumulator, field) => {\r\n      return {\r\n        ...accumulator,\r\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\r\n      }\r\n    },\r\n    {},\r\n  )\r\n\r\n  // check whether the user has approved the router on the tokens\r\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\r\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  async function onAdd() {\r\n    if (!chainId || !library || !account) return\r\n    const router = getRouterContract(chainId, library, account)\r\n\r\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\r\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\r\n      return\r\n    }\r\n\r\n    const amountsMin = {\r\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\r\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\r\n    }\r\n\r\n    let estimate\r\n    let method: (...args: any) => Promise<TransactionResponse>\r\n    let args: Array<string | string[] | number>\r\n    let value: BigNumber | null\r\n    if (currencyA === ETHER || currencyB === ETHER) {\r\n      const tokenBIsETH = currencyB === ETHER\r\n      estimate = router.estimateGas.addLiquidityETH\r\n      method = router.addLiquidityETH\r\n      args = [\r\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\r\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\r\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\r\n    } else {\r\n      estimate = router.estimateGas.addLiquidity\r\n      method = router.addLiquidity\r\n      args = [\r\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\r\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\r\n        parsedAmountA.raw.toString(),\r\n        parsedAmountB.raw.toString(),\r\n        amountsMin[Field.CURRENCY_A].toString(),\r\n        amountsMin[Field.CURRENCY_B].toString(),\r\n        account,\r\n        deadline.toHexString(),\r\n      ]\r\n      value = null\r\n    }\r\n\r\n    setAttemptingTxn(true)\r\n    await estimate(...args, value ? { value } : {})\r\n      .then((estimatedGasLimit) =>\r\n        method(...args, {\r\n          ...(value ? { value } : {}),\r\n          gasLimit: calculateGasMargin(estimatedGasLimit),\r\n          gasPrice,\r\n        }).then((response) => {\r\n          setAttemptingTxn(false)\r\n\r\n          addTransaction(response, {\r\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\r\n              currencies[Field.CURRENCY_A]?.symbol\r\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\r\n          })\r\n\r\n          setTxHash(response.hash)\r\n        }),\r\n      )\r\n      .catch((err) => {\r\n        setAttemptingTxn(false)\r\n        // we only care if the error is something _other_ than the user rejected the tx\r\n        if (err?.code !== 4001) {\r\n          console.error(err)\r\n        }\r\n      })\r\n  }\r\n\r\n  const modalHeader = () => {\r\n    return noLiquidity ? (\r\n      <Flex alignItems=\"center\">\r\n        <Text fontSize=\"48px\" marginRight=\"10px\">\r\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\r\n        </Text>\r\n        <DoubleCurrencyLogo\r\n          currency0={currencies[Field.CURRENCY_A]}\r\n          currency1={currencies[Field.CURRENCY_B]}\r\n          size={30}\r\n        />\r\n      </Flex>\r\n    ) : (\r\n      <AutoColumn>\r\n        <Flex alignItems=\"center\">\r\n          <Text fontSize=\"48px\" marginRight=\"10px\">\r\n            {liquidityMinted?.toSignificant(6)}\r\n          </Text>\r\n          <DoubleCurrencyLogo\r\n            currency0={currencies[Field.CURRENCY_A]}\r\n            currency1={currencies[Field.CURRENCY_B]}\r\n            size={30}\r\n          />\r\n        </Flex>\r\n        <Row>\r\n          <Text fontSize=\"24px\">\r\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\r\n          </Text>\r\n        </Row>\r\n        <Text small textAlign=\"left\" my=\"24px\">\r\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\r\n            slippage: allowedSlippage / 100,\r\n          })}\r\n        </Text>\r\n      </AutoColumn>\r\n    )\r\n  }\r\n\r\n  const modalBottom = () => {\r\n    return (\r\n      <ConfirmAddModalBottom\r\n        price={price}\r\n        currencies={currencies}\r\n        parsedAmounts={parsedAmounts}\r\n        noLiquidity={noLiquidity}\r\n        onAdd={onAdd}\r\n        poolTokenPercentage={poolTokenPercentage}\r\n      />\r\n    )\r\n  }\r\n\r\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\r\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\r\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\r\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\r\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\r\n  })\r\n\r\n  const handleCurrencyASelect = useCallback(\r\n    (currencyA_: Currency) => {\r\n      const newCurrencyIdA = currencyId(currencyA_)\r\n      if (newCurrencyIdA === currencyIdB) {\r\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\r\n      } else if (currencyIdB) {\r\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\r\n      } else {\r\n        history.push(`/add/${newCurrencyIdA}`)\r\n      }\r\n    },\r\n    [currencyIdB, history, currencyIdA],\r\n  )\r\n  const handleCurrencyBSelect = useCallback(\r\n    (currencyB_: Currency) => {\r\n      const newCurrencyIdB = currencyId(currencyB_)\r\n      if (currencyIdA === newCurrencyIdB) {\r\n        if (currencyIdB) {\r\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\r\n        } else {\r\n          history.push(`/add/${newCurrencyIdB}`)\r\n        }\r\n      } else {\r\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\r\n      }\r\n    },\r\n    [currencyIdA, history, currencyIdB],\r\n  )\r\n\r\n  const handleDismissConfirmation = useCallback(() => {\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onFieldAInput('')\r\n    }\r\n    setTxHash('')\r\n  }, [onFieldAInput, txHash])\r\n\r\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\r\n\r\n  const [onPresentAddLiquidityModal] = useModal(\r\n    <TransactionConfirmationModal\r\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\r\n      customOnDismiss={handleDismissConfirmation}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\r\n      pendingText={pendingText}\r\n      currencyToAdd={pair?.liquidityToken}\r\n    />,\r\n    true,\r\n    true,\r\n    'addLiquidityModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader\r\n          title={t('Add Liquidity')}\r\n          subtitle={t('Add liquidity to receive LP tokens')}\r\n          helper={t(\r\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\r\n          )}\r\n          backTo=\"/pool\"\r\n        />\r\n        <CardBody>\r\n          <AutoColumn gap=\"20px\">\r\n            {noLiquidity && (\r\n              <ColumnCenter>\r\n                <Message variant=\"warning\">\r\n                  <div>\r\n                    <Text bold mb=\"8px\">\r\n                      {t('You are the first liquidity provider.')}\r\n                    </Text>\r\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\r\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\r\n                  </div>\r\n                </Message>\r\n              </ColumnCenter>\r\n            )}\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_A]}\r\n              onUserInput={onFieldAInput}\r\n              onMax={() => {\r\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\r\n              }}\r\n              onCurrencySelect={handleCurrencyASelect}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\r\n              currency={currencies[Field.CURRENCY_A]}\r\n              id=\"add-liquidity-input-tokena\"\r\n              showCommonBases\r\n            />\r\n            <ColumnCenter>\r\n              <AddIcon width=\"16px\" />\r\n            </ColumnCenter>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.CURRENCY_B]}\r\n              onUserInput={onFieldBInput}\r\n              onCurrencySelect={handleCurrencyBSelect}\r\n              onMax={() => {\r\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\r\n              }}\r\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\r\n              currency={currencies[Field.CURRENCY_B]}\r\n              id=\"add-liquidity-input-tokenb\"\r\n              showCommonBases\r\n            />\r\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\r\n              <>\r\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\r\n                  <RowBetween padding=\"1rem\">\r\n                    <Text fontSize=\"14px\">\r\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\r\n                    </Text>\r\n                  </RowBetween>{' '}\r\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\r\n                    <PoolPriceBar\r\n                      currencies={currencies}\r\n                      poolTokenPercentage={poolTokenPercentage}\r\n                      noLiquidity={noLiquidity}\r\n                      price={price}\r\n                    />\r\n                  </LightCard>\r\n                </LightCard>\r\n              </>\r\n            )}\r\n\r\n            {addIsUnsupported ? (\r\n              <Button disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton />\r\n            ) : (\r\n              <AutoColumn gap=\"md\">\r\n                {(approvalA === ApprovalState.NOT_APPROVED ||\r\n                  approvalA === ApprovalState.PENDING ||\r\n                  approvalB === ApprovalState.NOT_APPROVED ||\r\n                  approvalB === ApprovalState.PENDING) &&\r\n                  isValid && (\r\n                    <RowBetween>\r\n                      {approvalA !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveACallback}\r\n                          disabled={approvalA === ApprovalState.PENDING}\r\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalA === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                      {approvalB !== ApprovalState.APPROVED && (\r\n                        <Button\r\n                          onClick={approveBCallback}\r\n                          disabled={approvalB === ApprovalState.PENDING}\r\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\r\n                        >\r\n                          {approvalB === ApprovalState.PENDING ? (\r\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\r\n                          ) : (\r\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\r\n                          )}\r\n                        </Button>\r\n                      )}\r\n                    </RowBetween>\r\n                  )}\r\n                <Button\r\n                  variant={\r\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\r\n                      ? 'danger'\r\n                      : 'primary'\r\n                  }\r\n                  onClick={() => {\r\n                    if (expertMode) {\r\n                      onAdd()\r\n                    } else {\r\n                      onPresentAddLiquidityModal()\r\n                    }\r\n                  }}\r\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\r\n                >\r\n                  {error ?? t('Supply')}\r\n                </Button>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n        </CardBody>\r\n      </AppBody>\r\n      {!addIsUnsupported ? (\r\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\r\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\r\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\r\n          </AutoColumn>\r\n        ) : null\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport maxBy from 'lodash/maxBy'\r\nimport merge from 'lodash/merge'\r\nimport range from 'lodash/range'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  HistoryFilter,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeRound,\r\n  BetPosition,\r\n  LeaderboardLoadingState,\r\n  PredictionUser,\r\n  LeaderboardFilter,\r\n  State,\r\n} from 'state/types'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport {\r\n  FUTURE_ROUND_COUNT,\r\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\r\n  PAST_ROUND_COUNT,\r\n  ROUNDS_PER_PAGE,\r\n  ROUND_BUFFER,\r\n} from './config'\r\nimport {\r\n  getBetHistory,\r\n  transformBetResponse,\r\n  makeFutureRoundResponse,\r\n  makeRoundData,\r\n  getRoundsData,\r\n  getPredictionData,\r\n  MarketData,\r\n  getLedgerData,\r\n  makeLedgerData,\r\n  serializePredictionsRoundsResponse,\r\n  getClaimStatuses,\r\n  fetchUsersRoundsLength,\r\n  fetchUserRounds,\r\n  getPredictionUsers,\r\n  transformUserResponse,\r\n  LEADERBOARD_RESULTS_PER_PAGE,\r\n  getPredictionUser,\r\n} from './helpers'\r\n\r\nconst initialState: PredictionsState = {\r\n  status: PredictionStatus.INITIAL,\r\n  isLoading: false,\r\n  isHistoryPaneOpen: false,\r\n  isChartPaneOpen: false,\r\n  isFetchingHistory: false,\r\n  historyFilter: HistoryFilter.ALL,\r\n  currentEpoch: 0,\r\n  intervalSeconds: 300,\r\n  minBetAmount: '10000000000000',\r\n  bufferSeconds: 60,\r\n  lastOraclePrice: BIG_ZERO.toJSON(),\r\n  rounds: {},\r\n  history: [],\r\n  totalHistory: 0,\r\n  currentHistoryPage: 1,\r\n  hasHistoryLoaded: false,\r\n  ledgers: {},\r\n  claimableStatuses: {},\r\n  leaderboard: {\r\n    loadingState: LeaderboardLoadingState.INITIAL,\r\n    filters: {\r\n      address: null,\r\n      orderBy: 'netBNB',\r\n      timePeriod: 'all',\r\n    },\r\n    skip: 0,\r\n    hasMoreResults: true,\r\n    addressResults: {},\r\n    results: [],\r\n  },\r\n}\r\n\r\n// Thunks\r\ntype PredictionInitialization = Pick<\r\n  PredictionsState,\r\n  | 'status'\r\n  | 'currentEpoch'\r\n  | 'intervalSeconds'\r\n  | 'minBetAmount'\r\n  | 'rounds'\r\n  | 'ledgers'\r\n  | 'claimableStatuses'\r\n  | 'bufferSeconds'\r\n>\r\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\r\n  'predictions/intialize',\r\n  async (account = null) => {\r\n    // Static values\r\n    const marketData = await getPredictionData()\r\n    const epochs =\r\n      marketData.currentEpoch > PAST_ROUND_COUNT\r\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\r\n        : [marketData.currentEpoch]\r\n\r\n    // Round data\r\n    const roundsResponse = await getRoundsData(epochs)\r\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n\r\n    const initializedData = {\r\n      ...marketData,\r\n      rounds: initialRoundData,\r\n      ledgers: {},\r\n      claimableStatuses: {},\r\n    }\r\n\r\n    if (!account) {\r\n      return initializedData\r\n    }\r\n\r\n    // Bet data\r\n    const ledgerResponses = await getLedgerData(account, epochs)\r\n\r\n    // Claim statuses\r\n    const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n    return merge({}, initializedData, {\r\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\r\n      claimableStatuses,\r\n    })\r\n  },\r\n)\r\n\r\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\r\n  const predictionContract = getPredictionsContract()\r\n  const response = await predictionContract.rounds(epoch)\r\n  return serializePredictionsRoundsResponse(response)\r\n})\r\n\r\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\r\n  'predictions/fetchRounds',\r\n  async (epochs) => {\r\n    const rounds = await getRoundsData(epochs)\r\n    return rounds.reduce((accum, round) => {\r\n      if (!round) {\r\n        return accum\r\n      }\r\n\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n  },\r\n)\r\n\r\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\r\n  const marketData = await getPredictionData()\r\n  return marketData\r\n})\r\n\r\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\r\n  'predictions/fetchLedgerData',\r\n  async ({ account, epochs }) => {\r\n    const ledgers = await getLedgerData(account, epochs)\r\n    return makeLedgerData(account, ledgers, epochs)\r\n  },\r\n)\r\n\r\nexport const fetchClaimableStatuses = createAsyncThunk<\r\n  PredictionsState['claimableStatuses'],\r\n  { account: string; epochs: number[] }\r\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\r\n  const ledgers = await getClaimStatuses(account, epochs)\r\n  return ledgers\r\n})\r\n\r\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\r\n  'predictions/fetchHistory',\r\n  async ({ account, claimed }) => {\r\n    const response = await getBetHistory({\r\n      user: account.toLowerCase(),\r\n      claimed,\r\n    })\r\n    const bets = response.map(transformBetResponse)\r\n\r\n    return { account, bets }\r\n  },\r\n)\r\n\r\nexport const fetchNodeHistory = createAsyncThunk<\r\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\r\n  { account: string; page?: number }\r\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\r\n  const userRoundsLength = await fetchUsersRoundsLength(account)\r\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\r\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\r\n\r\n  if (userRoundsLength.eq(0)) {\r\n    return emptyResult\r\n  }\r\n\r\n  if (page > maxPages) {\r\n    return emptyResult\r\n  }\r\n\r\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\r\n\r\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\r\n  const size =\r\n    maxPages === page\r\n      ? userRoundsLength\r\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\r\n          .toNumber()\r\n      : ROUNDS_PER_PAGE\r\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\r\n\r\n  if (!userRounds) {\r\n    return emptyResult\r\n  }\r\n\r\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\r\n  const roundData = await getRoundsData(epochs)\r\n  const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n  // Turn the data from the node into an Bet object that comes from the graph\r\n  const bets: Bet[] = roundData.reduce((accum, round) => {\r\n    const reduxRound = serializePredictionsRoundsResponse(round)\r\n    const ledger = userRounds[reduxRound.epoch]\r\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\r\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\r\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\r\n\r\n    const getRoundPosition = () => {\r\n      if (!closePrice) {\r\n        return null\r\n      }\r\n\r\n      if (round.closePrice.eq(round.lockPrice)) {\r\n        return BetPosition.HOUSE\r\n      }\r\n\r\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\r\n    }\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: null,\r\n        hash: null,\r\n        amount: parseFloat(formatUnits(ledgerAmount)),\r\n        position: ledger.position,\r\n        claimed: ledger.claimed,\r\n        claimedAt: null,\r\n        claimedHash: null,\r\n        claimedBNB: 0,\r\n        claimedNetBNB: 0,\r\n        createdAt: null,\r\n        updatedAt: null,\r\n        block: 0,\r\n        round: {\r\n          id: null,\r\n          epoch: round.epoch.toNumber(),\r\n          failed: false,\r\n          startBlock: null,\r\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\r\n          startHash: null,\r\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\r\n          lockBlock: null,\r\n          lockPrice,\r\n          lockHash: null,\r\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\r\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\r\n          closeHash: null,\r\n          closeAt: null,\r\n          closePrice,\r\n          closeBlock: null,\r\n          totalBets: 0,\r\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\r\n          bullBets: 0,\r\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\r\n          bearBets: 0,\r\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\r\n          position: getRoundPosition(),\r\n        },\r\n      },\r\n    ]\r\n  }, [])\r\n\r\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\r\n})\r\n\r\n// Leaderboard\r\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\r\n  'predictions/filterLeaderboard',\r\n  async ({ filters }) => {\r\n    const usersResponse = await getPredictionUsers({\r\n      skip: 0,\r\n      orderBy: filters.orderBy,\r\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\r\n    })\r\n\r\n    return { results: usersResponse.map(transformUserResponse) }\r\n  },\r\n)\r\n\r\nexport const fetchAddressResult = createAsyncThunk<\r\n  { account: string; data: PredictionUser },\r\n  string,\r\n  { rejectValue: string }\r\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\r\n  const userResponse = await getPredictionUser(account)\r\n\r\n  if (!userResponse) {\r\n    return rejectWithValue(account)\r\n  }\r\n\r\n  return { account, data: transformUserResponse(userResponse) }\r\n})\r\n\r\nexport const filterNextPageLeaderboard = createAsyncThunk<\r\n  { results: PredictionUser[]; skip: number },\r\n  number,\r\n  { state: State }\r\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\r\n  const state = getState()\r\n  const usersResponse = await getPredictionUsers({\r\n    skip,\r\n    orderBy: state.predictions.leaderboard.filters.orderBy,\r\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\r\n  })\r\n\r\n  return { results: usersResponse.map(transformUserResponse), skip }\r\n})\r\n\r\nexport const predictionsSlice = createSlice({\r\n  name: 'predictions',\r\n  initialState,\r\n  reducers: {\r\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\r\n      state.leaderboard.filters = {\r\n        ...state.leaderboard.filters,\r\n        ...action.payload,\r\n      }\r\n\r\n      // Anytime we filters change we need to reset back to page 1\r\n      state.leaderboard.skip = 0\r\n      state.leaderboard.hasMoreResults = true\r\n    },\r\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\r\n      state.status = action.payload\r\n    },\r\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isHistoryPaneOpen = action.payload\r\n      state.historyFilter = HistoryFilter.ALL\r\n    },\r\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isChartPaneOpen = action.payload\r\n    },\r\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\r\n      state.historyFilter = action.payload\r\n    },\r\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\r\n      state.currentEpoch = action.payload\r\n    },\r\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\r\n      state.lastOraclePrice = action.payload\r\n    },\r\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\r\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Leaderboard filter\r\n    builder.addCase(filterLeaderboard.pending, (state) => {\r\n      // Only mark as loading if we come from IDLE. This allows initialization.\r\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\r\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n      }\r\n    })\r\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\r\n      const { results } = action.payload\r\n\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.results = results\r\n\r\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\r\n        state.leaderboard.hasMoreResults = false\r\n      }\r\n\r\n      // Populate address results to reduce calls\r\n      state.leaderboard.addressResults = {\r\n        ...state.leaderboard.addressResults,\r\n        ...results.reduce((accum, result) => {\r\n          return {\r\n            ...accum,\r\n            [result.id]: result,\r\n          }\r\n        }, {}),\r\n      }\r\n    })\r\n\r\n    // Leaderboard account result\r\n    builder.addCase(fetchAddressResult.pending, (state) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n    })\r\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\r\n      const { account, data } = action.payload\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.addressResults[account] = data\r\n    })\r\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.addressResults[action.payload] = null\r\n    })\r\n\r\n    // Leaderboard next page\r\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\r\n    })\r\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\r\n      const { results, skip } = action.payload\r\n\r\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\r\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\r\n      state.leaderboard.skip = skip\r\n\r\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\r\n        state.leaderboard.hasMoreResults = false\r\n      }\r\n    })\r\n\r\n    // Claimable statuses\r\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\r\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\r\n    })\r\n\r\n    // Ledger (bet) records\r\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\r\n      state.ledgers = merge({}, state.ledgers, action.payload)\r\n    })\r\n\r\n    // Get static market data\r\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\r\n\r\n      // If the round has change add a new future round\r\n      if (state.currentEpoch !== currentEpoch) {\r\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\r\n        const futureRound = makeFutureRoundResponse(\r\n          newestRound.epoch + 1,\r\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\r\n        )\r\n\r\n        state.rounds[futureRound.epoch] = futureRound\r\n      }\r\n\r\n      state.status = status\r\n      state.currentEpoch = currentEpoch\r\n      state.intervalSeconds = intervalSeconds\r\n      state.minBetAmount = minBetAmount\r\n    })\r\n\r\n    // Initialize predictions\r\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\r\n        action.payload\r\n      const futureRounds: ReduxNodeRound[] = []\r\n      const currentRound = rounds[currentEpoch]\r\n\r\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\r\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        status,\r\n        currentEpoch,\r\n        intervalSeconds,\r\n        bufferSeconds,\r\n        claimableStatuses,\r\n        ledgers,\r\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\r\n      }\r\n    })\r\n\r\n    // Get single round\r\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, {\r\n        [action.payload.epoch.toString()]: action.payload,\r\n      })\r\n    })\r\n\r\n    // Get multiple rounds\r\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, action.payload)\r\n    })\r\n\r\n    // Show History\r\n    builder.addCase(fetchHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n    })\r\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.history[account] = merge([], state.history[account] ?? [], bets)\r\n    })\r\n\r\n    // History from the node\r\n    builder.addCase(fetchNodeHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n    })\r\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\r\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.history = page === 1 ? bets : [...state.history, ...bets]\r\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\r\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\r\n      state.totalHistory = totalHistory\r\n      state.currentHistoryPage = page\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  setChartPaneState,\r\n  setCurrentEpoch,\r\n  setHistoryFilter,\r\n  setHistoryPaneState,\r\n  setPredictionStatus,\r\n  setLastOraclePrice,\r\n  markAsCollected,\r\n  setLeaderboardFilter,\r\n} = predictionsSlice.actions\r\n\r\nexport default predictionsSlice.reducer\r\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\r\nimport { PairState, usePairs } from './usePairs'\r\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\r\n\r\nconst BUSD_MAINNET = mainnetTokens.busd\r\nconst { wbnb: WBNB } = tokens\r\n\r\n/**\r\n * Returns the price in BUSD of the input currency\r\n * @param currency currency to compute the BUSD price of\r\n */\r\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\r\n  const { chainId } = useActiveWeb3React()\r\n  const wrapped = wrappedCurrency(currency, chainId)\r\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\r\n    () => [\r\n      [chainId && wrapped && currencyEquals(WBNB, wrapped) ? undefined : currency, chainId ? WBNB : undefined],\r\n      [wrapped?.equals(BUSD_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n      [chainId ? WBNB : undefined, chainId === ChainId.MAINNET ? BUSD_MAINNET : undefined],\r\n    ],\r\n    [chainId, currency, wrapped],\r\n  )\r\n  const [[ethPairState, ethPair], [busdPairState, busdPair], [busdEthPairState, busdEthPair]] = usePairs(tokenPairs)\r\n\r\n  return useMemo(() => {\r\n    if (!currency || !wrapped || !chainId) {\r\n      return undefined\r\n    }\r\n    // handle weth/eth\r\n    if (wrapped.equals(WBNB)) {\r\n      if (busdPair) {\r\n        const price = busdPair.priceOf(WBNB)\r\n        return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n      }\r\n      return undefined\r\n    }\r\n    // handle busd\r\n    if (wrapped.equals(BUSD_MAINNET)) {\r\n      return new Price(BUSD_MAINNET, BUSD_MAINNET, '1', '1')\r\n    }\r\n\r\n    const ethPairETHAmount = ethPair?.reserveOf(WBNB)\r\n    const ethPairETHBUSDValue: JSBI =\r\n      ethPairETHAmount && busdEthPair ? busdEthPair.priceOf(WBNB).quote(ethPairETHAmount).raw : JSBI.BigInt(0)\r\n\r\n    // all other tokens\r\n    // first try the busd pair\r\n    if (\r\n      busdPairState === PairState.EXISTS &&\r\n      busdPair &&\r\n      busdPair.reserveOf(BUSD_MAINNET).greaterThan(ethPairETHBUSDValue)\r\n    ) {\r\n      const price = busdPair.priceOf(wrapped)\r\n      return new Price(currency, BUSD_MAINNET, price.denominator, price.numerator)\r\n    }\r\n    if (ethPairState === PairState.EXISTS && ethPair && busdEthPairState === PairState.EXISTS && busdEthPair) {\r\n      if (busdEthPair.reserveOf(BUSD_MAINNET).greaterThan('0') && ethPair.reserveOf(WBNB).greaterThan('0')) {\r\n        const ethBusdPrice = busdEthPair.priceOf(BUSD_MAINNET)\r\n        const currencyEthPrice = ethPair.priceOf(WBNB)\r\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\r\n        return new Price(currency, BUSD_MAINNET, busdPrice.denominator, busdPrice.numerator)\r\n      }\r\n    }\r\n\r\n    return undefined\r\n  }, [chainId, currency, ethPair, ethPairState, busdEthPair, busdEthPairState, busdPair, busdPairState, wrapped])\r\n}\r\n\r\nexport const useCakeBusdPrice = (): Price | undefined => {\r\n  const cakeBusdPrice = useBUSDPrice(tokens.cake)\r\n  return cakeBusdPrice\r\n}\r\n\r\nexport const useBNBBusdPrice = (): Price | undefined => {\r\n  const bnbBusdPrice = useBUSDPrice(tokens.wbnb)\r\n  return bnbBusdPrice\r\n}\r\n","import React, { useState } from 'react'\r\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\r\nimport {\r\n  Button,\r\n  Text,\r\n  ChevronUpIcon,\r\n  ChevronDownIcon,\r\n  Card,\r\n  CardBody,\r\n  Flex,\r\n  CardProps,\r\n  AddIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport useTotalSupply from '../../hooks/useTotalSupply'\r\n\r\nimport { useTokenBalance } from '../../state/wallet/hooks'\r\nimport { currencyId } from '../../utils/currencyId'\r\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\r\n\r\nimport { LightCard } from '../Card'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport CurrencyLogo from '../Logo/CurrencyLogo'\r\nimport { DoubleCurrencyLogo } from '../Logo'\r\nimport { RowBetween, RowFixed } from '../Layout/Row'\r\nimport { BIG_INT_ZERO } from '../../config/constants'\r\nimport Dots from '../Loader/Dots'\r\n\r\nconst FixedHeightRow = styled(RowBetween)`\r\n  height: 24px;\r\n`\r\n\r\ninterface PositionCardProps extends CardProps {\r\n  pair: Pair\r\n  showUnwrapped?: boolean\r\n}\r\n\r\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\r\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <>\r\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\r\n        <Card>\r\n          <CardBody>\r\n            <AutoColumn gap=\"16px\">\r\n              <FixedHeightRow>\r\n                <RowFixed>\r\n                  <Text color=\"secondary\" bold>\r\n                    {t('LP tokens in your wallet')}\r\n                  </Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\r\n                <RowFixed>\r\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\r\n                  <Text small color=\"textSubtle\">\r\n                    {currency0.symbol}-{currency1.symbol} LP\r\n                  </Text>\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\r\n                </RowFixed>\r\n              </FixedHeightRow>\r\n              <AutoColumn gap=\"4px\">\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Share of Pool')}:\r\n                  </Text>\r\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\r\n                  </Text>\r\n                  {token0Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n                <FixedHeightRow>\r\n                  <Text color=\"textSubtle\" small>\r\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\r\n                  </Text>\r\n                  {token1Deposited ? (\r\n                    <RowFixed>\r\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n                    </RowFixed>\r\n                  ) : (\r\n                    '-'\r\n                  )}\r\n                </FixedHeightRow>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </CardBody>\r\n        </Card>\r\n      ) : (\r\n        <LightCard>\r\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\r\n            <span role=\"img\" aria-label=\"pancake-icon\">\r\n              🥞\r\n            </span>{' '}\r\n            {t(\r\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\r\n            )}\r\n          </Text>\r\n        </LightCard>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\r\n  const { account } = useActiveWeb3React()\r\n\r\n  const currency0 = unwrappedToken(pair.token0)\r\n  const currency1 = unwrappedToken(pair.token1)\r\n\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\r\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\r\n\r\n  const poolTokenPercentage =\r\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\r\n      : undefined\r\n\r\n  const [token0Deposited, token1Deposited] =\r\n    !!pair &&\r\n    !!totalPoolTokens &&\r\n    !!userPoolBalance &&\r\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\r\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\r\n      ? [\r\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\r\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\r\n        ]\r\n      : [undefined, undefined]\r\n\r\n  return (\r\n    <Card style={{ borderRadius: '12px' }} {...props}>\r\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\r\n        <Flex flexDirection=\"column\">\r\n          <Flex alignItems=\"center\" mb=\"4px\">\r\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\r\n            <Text bold ml=\"8px\">\r\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\r\n            </Text>\r\n          </Flex>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {userPoolBalance?.toSignificant(4)}\r\n          </Text>\r\n        </Flex>\r\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n      </Flex>\r\n\r\n      {showMore && (\r\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency0} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency0.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token0Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <RowFixed>\r\n              <CurrencyLogo size=\"20px\" currency={currency1} />\r\n              <Text color=\"textSubtle\" ml=\"4px\">\r\n                Pooled {currency1.symbol}\r\n              </Text>\r\n            </RowFixed>\r\n            {token1Deposited ? (\r\n              <RowFixed>\r\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\r\n              </RowFixed>\r\n            ) : (\r\n              '-'\r\n            )}\r\n          </FixedHeightRow>\r\n\r\n          <FixedHeightRow>\r\n            <Text color=\"textSubtle\">Share of pool</Text>\r\n            <Text>\r\n              {poolTokenPercentage\r\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\r\n                : '-'}\r\n            </Text>\r\n          </FixedHeightRow>\r\n\r\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\r\n            <Flex flexDirection=\"column\">\r\n              <Button\r\n                as={Link}\r\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"primary\"\r\n                width=\"100%\"\r\n                mb=\"8px\"\r\n              >\r\n                Remove\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\r\n                variant=\"text\"\r\n                startIcon={<AddIcon color=\"primary\" />}\r\n                width=\"100%\"\r\n              >\r\n                Add liquidity instead\r\n              </Button>\r\n            </Flex>\r\n          )}\r\n        </AutoColumn>\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap/uikit'\r\nimport Page from '../Layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n  z-index: 20;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps extends BoxProps {\r\n  options: OptionProps[]\r\n  onOptionChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n\r\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setIsOpen(!isOpen)\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onOptionChange) {\r\n      onOptionChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = () => {\r\n      setIsOpen(false)\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} {...props}>\r\n      <DropDownHeader onClick={toggling}>\r\n        <Text>{options[selectedOptionIndex].label}</Text>\r\n      </DropDownHeader>\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import styled from 'styled-components'\r\n\r\nconst Loading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport { SUGGESTED_BASES } from '../../config/constants'\r\nimport { AutoColumn } from '../Layout/Column'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { AutoRow } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\n\r\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\r\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\r\n  border-radius: 10px;\r\n  display: flex;\r\n  padding: 6px;\r\n\r\n  align-items: center;\r\n  :hover {\r\n    cursor: ${({ disable }) => !disable && 'pointer'};\r\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\r\n  }\r\n\r\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\r\n  opacity: ${({ disable }) => disable && '0.4'};\r\n`\r\n\r\nexport default function CommonBases({\r\n  chainId,\r\n  onSelect,\r\n  selectedCurrency,\r\n}: {\r\n  chainId?: ChainId\r\n  selectedCurrency?: Currency | null\r\n  onSelect: (currency: Currency) => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <AutoRow>\r\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\r\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\r\n      </AutoRow>\r\n      <AutoRow gap=\"auto\">\r\n        <BaseWrapper\r\n          onClick={() => {\r\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\r\n              onSelect(ETHER)\r\n            }\r\n          }}\r\n          disable={selectedCurrency === ETHER}\r\n        >\r\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\r\n          <Text>BNB</Text>\r\n        </BaseWrapper>\r\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\r\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\r\n          return (\r\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\r\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\r\n              <Text>{token.symbol}</Text>\r\n            </BaseWrapper>\r\n          )\r\n        })}\r\n      </AutoRow>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { CSSProperties } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\r\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\r\nimport { ListLogo } from 'components/Logo'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedInactiveList } from 'state/lists/hooks'\r\nimport styled from 'styled-components'\r\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst TokenSection = styled.div<{ dim?: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) auto;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n\r\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\r\n`\r\n\r\nconst CheckIcon = styled(CheckmarkCircleIcon)`\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 6px;\r\n  stroke: ${({ theme }) => theme.colors.success};\r\n`\r\n\r\nconst NameOverflow = styled.div`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 140px;\r\n  font-size: 12px;\r\n`\r\n\r\nexport default function ImportRow({\r\n  token,\r\n  style,\r\n  dim,\r\n  showImportView,\r\n  setImportToken,\r\n}: {\r\n  token: Token\r\n  style?: CSSProperties\r\n  dim?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  // globals\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // check if token comes from list\r\n  const inactiveTokenList = useCombinedInactiveList()\r\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\r\n\r\n  // check if already active on list or local storage tokens\r\n  const isAdded = useIsUserAddedToken(token)\r\n  const isActive = useIsTokenActive(token)\r\n\r\n  return (\r\n    <TokenSection style={style}>\r\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\r\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\r\n        <AutoRow>\r\n          <Text>{token.symbol}</Text>\r\n          <Text color=\"textDisabled\" ml=\"8px\">\r\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\r\n          </Text>\r\n        </AutoRow>\r\n        {list && list.logoURI && (\r\n          <RowFixed>\r\n            <Text small mr=\"4px\" color=\"textSubtle\">\r\n              {t('via')} {list.name}\r\n            </Text>\r\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\r\n          </RowFixed>\r\n        )}\r\n      </AutoColumn>\r\n      {!isActive && !isAdded ? (\r\n        <Button\r\n          width=\"fit-content\"\r\n          onClick={() => {\r\n            if (setImportToken) {\r\n              setImportToken(token)\r\n            }\r\n            showImportView()\r\n          }}\r\n        >\r\n          {t('Import')}\r\n        </Button>\r\n      ) : (\r\n        <RowFixed style={{ minWidth: 'fit-content' }}>\r\n          <CheckIcon />\r\n          <Text color=\"success\">Active</Text>\r\n        </RowFixed>\r\n      )}\r\n    </TokenSection>\r\n  )\r\n}\r\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\r\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\r\nimport { LightGreyCard } from 'components/Card'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useCombinedActiveList } from '../../state/lists/hooks'\r\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\r\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\r\nimport Column from '../Layout/Column'\r\nimport { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyLogo } from '../Logo'\r\nimport CircleLoader from '../Loader/CircleLoader'\r\nimport { isTokenOnList } from '../../utils'\r\nimport ImportRow from './ImportRow'\r\n\r\nfunction currencyKey(currency: Currency): string {\r\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\r\n}\r\n\r\nconst StyledBalanceText = styled(Text)`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 5rem;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst FixedContentRow = styled.div`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-gap: 16px;\r\n  align-items: center;\r\n`\r\n\r\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\r\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\r\n}\r\n\r\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\r\n  padding: 4px 20px;\r\n  height: 56px;\r\n  display: grid;\r\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\r\n  grid-gap: 8px;\r\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n  :hover {\r\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\r\n  }\r\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\r\n`\r\n\r\nfunction CurrencyRow({\r\n  currency,\r\n  onSelect,\r\n  isSelected,\r\n  otherSelected,\r\n  style,\r\n}: {\r\n  currency: Currency\r\n  onSelect: () => void\r\n  isSelected: boolean\r\n  otherSelected: boolean\r\n  style: CSSProperties\r\n}) {\r\n  const { account } = useActiveWeb3React()\r\n  const key = currencyKey(currency)\r\n  const selectedTokenList = useCombinedActiveList()\r\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\r\n  const customAdded = useIsUserAddedToken(currency)\r\n  const balance = useCurrencyBalance(account ?? undefined, currency)\r\n\r\n  // only show add or remove buttons if not on selected list\r\n  return (\r\n    <MenuItem\r\n      style={style}\r\n      className={`token-item-${key}`}\r\n      onClick={() => (isSelected ? null : onSelect())}\r\n      disabled={isSelected}\r\n      selected={otherSelected}\r\n    >\r\n      <CurrencyLogo currency={currency} size=\"24px\" />\r\n      <Column>\r\n        <Text bold>{currency.symbol}</Text>\r\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\r\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\r\n        </Text>\r\n      </Column>\r\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\r\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\r\n      </RowFixed>\r\n    </MenuItem>\r\n  )\r\n}\r\n\r\nexport default function CurrencyList({\r\n  height,\r\n  currencies,\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherCurrency,\r\n  fixedListRef,\r\n  showETH,\r\n  showImportView,\r\n  setImportToken,\r\n  breakIndex,\r\n}: {\r\n  height: number\r\n  currencies: Currency[]\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherCurrency?: Currency | null\r\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\r\n  showETH: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n  breakIndex: number | undefined\r\n}) {\r\n  const itemData: (Currency | undefined)[] = useMemo(() => {\r\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\r\n    if (breakIndex !== undefined) {\r\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\r\n    }\r\n    return formatted\r\n  }, [breakIndex, currencies, showETH])\r\n\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const inactiveTokens: {\r\n    [address: string]: Token\r\n  } = useAllInactiveTokens()\r\n\r\n  const Row = useCallback(\r\n    ({ data, index, style }) => {\r\n      const currency: Currency = data[index]\r\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\r\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\r\n      const handleSelect = () => onCurrencySelect(currency)\r\n\r\n      const token = wrappedCurrency(currency, chainId)\r\n\r\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\r\n\r\n      if (index === breakIndex || !data) {\r\n        return (\r\n          <FixedContentRow style={style}>\r\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\r\n              <RowBetween>\r\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\r\n                <QuestionHelper\r\n                  text={t(\r\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\r\n                  )}\r\n                  ml=\"4px\"\r\n                />\r\n              </RowBetween>\r\n            </LightGreyCard>\r\n          </FixedContentRow>\r\n        )\r\n      }\r\n\r\n      if (showImport && token) {\r\n        return (\r\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\r\n        )\r\n      }\r\n      return (\r\n        <CurrencyRow\r\n          style={style}\r\n          currency={currency}\r\n          isSelected={isSelected}\r\n          onSelect={handleSelect}\r\n          otherSelected={otherSelected}\r\n        />\r\n      )\r\n    },\r\n    [\r\n      chainId,\r\n      inactiveTokens,\r\n      onCurrencySelect,\r\n      otherCurrency,\r\n      selectedCurrency,\r\n      setImportToken,\r\n      showImportView,\r\n      breakIndex,\r\n      t,\r\n    ],\r\n  )\r\n\r\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\r\n\r\n  return (\r\n    <FixedSizeList\r\n      height={height}\r\n      ref={fixedListRef as any}\r\n      width=\"100%\"\r\n      itemData={itemData}\r\n      itemCount={itemData.length}\r\n      itemSize={56}\r\n      itemKey={itemKey}\r\n    >\r\n      {Row}\r\n    </FixedSizeList>\r\n  )\r\n}\r\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\r\n\r\n// compare two token amounts with highest one coming first\r\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\r\n  if (balanceA && balanceB) {\r\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\r\n  }\r\n  if (balanceA && balanceA.greaterThan('0')) {\r\n    return -1\r\n  }\r\n  if (balanceB && balanceB.greaterThan('0')) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction getTokenComparator(balances: {\r\n  [tokenAddress: string]: TokenAmount | undefined\r\n}): (tokenA: Token, tokenB: Token) => number {\r\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\r\n    // -1 = a is first\r\n    // 1 = b is first\r\n\r\n    // sort by balances\r\n    const balanceA = balances[tokenA.address]\r\n    const balanceB = balances[tokenB.address]\r\n\r\n    const balanceComp = balanceComparator(balanceA, balanceB)\r\n    if (balanceComp !== 0) return balanceComp\r\n\r\n    if (tokenA.symbol && tokenB.symbol) {\r\n      // sort by symbol\r\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\r\n    }\r\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\r\n  }\r\n}\r\n\r\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\r\n  const balances = useAllTokenBalances()\r\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\r\n  return useMemo(() => {\r\n    if (inverted) {\r\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\r\n    }\r\n    return comparator\r\n  }, [inverted, comparator])\r\n}\r\n\r\nexport default useTokenComparator\r\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\r\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\r\nimport { Text, Input, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { FixedSizeList } from 'react-window'\r\nimport { useAudioModeManager } from 'state/user/hooks'\r\nimport useDebounce from 'hooks/useDebounce'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\r\nimport { isAddress } from '../../utils'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport Row from '../Layout/Row'\r\nimport CommonBases from './CommonBases'\r\nimport CurrencyList from './CurrencyList'\r\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\r\nimport useTokenComparator from './sorting'\r\n\r\nimport ImportRow from './ImportRow'\r\n\r\ninterface CurrencySearchProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n  showImportView: () => void\r\n  setImportToken: (token: Token) => void\r\n}\r\n\r\nconst swapSound = new Audio('swap.mp3')\r\n\r\nfunction CurrencySearch({\r\n  selectedCurrency,\r\n  onCurrencySelect,\r\n  otherSelectedCurrency,\r\n  showCommonBases,\r\n  showImportView,\r\n  setImportToken,\r\n}: CurrencySearchProps) {\r\n  const { t } = useTranslation()\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  // refs for fixed size lists\r\n  const fixedList = useRef<FixedSizeList>()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n  const debouncedQuery = useDebounce(searchQuery, 200)\r\n\r\n  const [invertSearchOrder] = useState<boolean>(false)\r\n\r\n  const allTokens = useAllTokens()\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(debouncedQuery)\r\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\r\n\r\n  const [audioPlay] = useAudioModeManager()\r\n\r\n  const showETH: boolean = useMemo(() => {\r\n    const s = debouncedQuery.toLowerCase().trim()\r\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\r\n  }, [debouncedQuery])\r\n\r\n  const tokenComparator = useTokenComparator(invertSearchOrder)\r\n\r\n  const filteredTokens: Token[] = useMemo(() => {\r\n    return filterTokens(Object.values(allTokens), debouncedQuery)\r\n  }, [allTokens, debouncedQuery])\r\n\r\n  const sortedTokens: Token[] = useMemo(() => {\r\n    return filteredTokens.sort(tokenComparator)\r\n  }, [filteredTokens, tokenComparator])\r\n\r\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onCurrencySelect(currency)\r\n      if (audioPlay) {\r\n        swapSound.play()\r\n      }\r\n    },\r\n    [audioPlay, onCurrencySelect],\r\n  )\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  }, [])\r\n\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n    fixedList.current?.scrollTo(0)\r\n  }, [])\r\n\r\n  const handleEnter = useCallback(\r\n    (e: KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === 'Enter') {\r\n        const s = debouncedQuery.toLowerCase().trim()\r\n        if (s === 'bnb') {\r\n          handleCurrencySelect(ETHER)\r\n        } else if (filteredSortedTokens.length > 0) {\r\n          if (\r\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\r\n            filteredSortedTokens.length === 1\r\n          ) {\r\n            handleCurrencySelect(filteredSortedTokens[0])\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\r\n  )\r\n\r\n  // if no results on main list, show option to expand into inactive\r\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\r\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <AutoColumn gap=\"16px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              placeholder={t('Search name or paste address')}\r\n              scale=\"lg\"\r\n              autoComplete=\"off\"\r\n              value={searchQuery}\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              onKeyDown={handleEnter}\r\n            />\r\n          </Row>\r\n          {showCommonBases && (\r\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\r\n          )}\r\n        </AutoColumn>\r\n        {searchToken && !searchTokenIsAdded ? (\r\n          <Column style={{ padding: '20px 0', height: '100%' }}>\r\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\r\n          </Column>\r\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\r\n          <Box margin=\"24px -24px\">\r\n            <CurrencyList\r\n              height={390}\r\n              showETH={showETH}\r\n              currencies={\r\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\r\n              }\r\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\r\n              onCurrencySelect={handleCurrencySelect}\r\n              otherCurrency={otherSelectedCurrency}\r\n              selectedCurrency={selectedCurrency}\r\n              fixedListRef={fixedList}\r\n              showImportView={showImportView}\r\n              setImportToken={setImportToken}\r\n            />\r\n          </Box>\r\n        ) : (\r\n          <Column style={{ padding: '20px', height: '100%' }}>\r\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\r\n              {t('No results found.')}\r\n            </Text>\r\n          </Column>\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrencySearch\r\n","export enum CurrencyModalView {\r\n  search,\r\n  manage,\r\n  importToken,\r\n  importList,\r\n}\r\n\r\nexport default CurrencyModalView\r\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\r\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\nimport { TokenList, Version } from '@uniswap/token-lists'\r\nimport Card from 'components/Card'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\r\n\r\nimport { AppDispatch, AppState } from '../../state'\r\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\r\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\r\nimport uriToHttp from '../../utils/uriToHttp'\r\n\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport { ListLogo } from '../Logo'\r\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\r\nimport { CurrencyModalView } from './types'\r\n\r\nfunction listVersionLabel(version: Version): string {\r\n  return `v${version.major}.${version.minor}.${version.patch}`\r\n}\r\n\r\nconst Wrapper = styled(Column)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst RowWrapper = styled(Row)<{ active: boolean }>`\r\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\r\n  border: solid 1px;\r\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\r\n  transition: 200ms;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  border-radius: 20px;\r\n`\r\n\r\nfunction listUrlRowHTMLId(listUrl: string) {\r\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\r\n}\r\n\r\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\r\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\r\n\r\n  const isActive = useIsListActive(listUrl)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const handleAcceptListUpdate = useCallback(() => {\r\n    if (!pending) return\r\n    dispatch(acceptListUpdate(listUrl))\r\n  }, [dispatch, listUrl, pending])\r\n\r\n  const handleRemoveList = useCallback(() => {\r\n    // eslint-disable-next-line no-alert\r\n    if (window.confirm('Please confirm you would like to remove this list')) {\r\n      dispatch(removeList(listUrl))\r\n    }\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleEnableList = useCallback(() => {\r\n    dispatch(enableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const handleDisableList = useCallback(() => {\r\n    dispatch(disableList(listUrl))\r\n  }, [dispatch, listUrl])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <div>\r\n      <Text>{list && listVersionLabel(list.version)}</Text>\r\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\r\n        {t('See')}\r\n      </LinkExternal>\r\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\r\n        {t('Remove')}\r\n      </Button>\r\n      {pending && (\r\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\r\n          {t('Update list')}\r\n        </Button>\r\n      )}\r\n    </div>,\r\n    { placement: 'right-end', trigger: 'click' },\r\n  )\r\n\r\n  if (!list) return null\r\n\r\n  return (\r\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\r\n      {tooltipVisible && tooltip}\r\n      {list.logoURI ? (\r\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\r\n      ) : (\r\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\r\n      )}\r\n      <Column style={{ flex: '1' }}>\r\n        <Row>\r\n          <Text bold>{list.name}</Text>\r\n        </Row>\r\n        <RowFixed mt=\"4px\">\r\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\r\n            {list.tokens.length} {t('Tokens')}\r\n          </Text>\r\n          <span ref={targetRef}>\r\n            <CogIcon color=\"text\" width=\"12px\" />\r\n          </span>\r\n        </RowFixed>\r\n      </Column>\r\n      <Toggle\r\n        checked={isActive}\r\n        onChange={() => {\r\n          if (isActive) {\r\n            handleDisableList()\r\n          } else {\r\n            handleEnableList()\r\n          }\r\n        }}\r\n      />\r\n    </RowWrapper>\r\n  )\r\n})\r\n\r\nconst ListContainer = styled.div`\r\n  padding: 1rem 0;\r\n  height: 100%;\r\n  overflow: auto;\r\n`\r\n\r\nfunction ManageLists({\r\n  setModalView,\r\n  setImportList,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [listUrlInput, setListUrlInput] = useState<string>('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const lists = useAllLists()\r\n\r\n  // sort by active but only if not visible\r\n  const activeListUrls = useActiveListUrls()\r\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\r\n  useEffect(() => {\r\n    if (!activeCopy && activeListUrls) {\r\n      setActiveCopy(activeListUrls)\r\n    }\r\n  }, [activeCopy, activeListUrls])\r\n\r\n  const handleInput = useCallback((e) => {\r\n    setListUrlInput(e.target.value)\r\n  }, [])\r\n\r\n  const fetchList = useFetchListCallback()\r\n\r\n  const validUrl: boolean = useMemo(() => {\r\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\r\n  }, [listUrlInput])\r\n\r\n  const sortedLists = useMemo(() => {\r\n    const listUrls = Object.keys(lists)\r\n    return listUrls\r\n      .filter((listUrl) => {\r\n        // only show loaded lists, hide unsupported lists\r\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\r\n      })\r\n      .sort((u1, u2) => {\r\n        const { current: l1 } = lists[u1]\r\n        const { current: l2 } = lists[u2]\r\n\r\n        // first filter on active lists\r\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\r\n          return -1\r\n        }\r\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\r\n          return 1\r\n        }\r\n\r\n        if (l1 && l2) {\r\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\r\n            ? -1\r\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\r\n            ? 0\r\n            : 1\r\n        }\r\n        if (l1) return -1\r\n        if (l2) return 1\r\n        return 0\r\n      })\r\n  }, [lists, activeCopy])\r\n\r\n  // temporary fetched list for import flow\r\n  const [tempList, setTempList] = useState<TokenList>()\r\n  const [addError, setAddError] = useState<string | undefined>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTempList() {\r\n      fetchList(listUrlInput, false)\r\n        .then((list) => setTempList(list))\r\n        .catch(() => setAddError('Error importing list'))\r\n    }\r\n    // if valid url, fetch details for card\r\n    if (validUrl) {\r\n      fetchTempList()\r\n    } else {\r\n      setTempList(undefined)\r\n      if (listUrlInput !== '') {\r\n        setAddError('Enter valid list location')\r\n      }\r\n    }\r\n\r\n    // reset error\r\n    if (listUrlInput === '') {\r\n      setAddError(undefined)\r\n    }\r\n  }, [fetchList, listUrlInput, validUrl])\r\n\r\n  // check if list is already imported\r\n  const isImported = Object.keys(lists).includes(listUrlInput)\r\n\r\n  // set list values and have parent modal switch to import list view\r\n  const handleImport = useCallback(() => {\r\n    if (!tempList) return\r\n    setImportList(tempList)\r\n    setModalView(CurrencyModalView.importList)\r\n    setListUrl(listUrlInput)\r\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"14px\">\r\n        <Row>\r\n          <Input\r\n            id=\"list-add-input\"\r\n            scale=\"lg\"\r\n            placeholder={t('https:// or ipfs:// or ENS name')}\r\n            value={listUrlInput}\r\n            onChange={handleInput}\r\n          />\r\n        </Row>\r\n        {addError ? (\r\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n            {addError}\r\n          </Text>\r\n        ) : null}\r\n      </AutoColumn>\r\n      {tempList && (\r\n        <AutoColumn style={{ paddingTop: 0 }}>\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\r\n                  <Text bold>{tempList.name}</Text>\r\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\r\n                    {tempList.tokens.length} {t('Tokens')}\r\n                  </Text>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n              {isImported ? (\r\n                <RowFixed>\r\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\r\n                  <Text>{t('Loaded')}</Text>\r\n                </RowFixed>\r\n              ) : (\r\n                <Button width=\"fit-content\" onClick={handleImport}>\r\n                  {t('Import')}\r\n                </Button>\r\n              )}\r\n            </RowBetween>\r\n          </Card>\r\n        </AutoColumn>\r\n      )}\r\n      <ListContainer>\r\n        <AutoColumn gap=\"md\">\r\n          {sortedLists.map((listUrl) => (\r\n            <ListRow key={listUrl} listUrl={listUrl} />\r\n          ))}\r\n        </AutoColumn>\r\n      </ListContainer>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ManageLists\r\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport { useToken } from 'hooks/Tokens'\r\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\r\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { getBscScanLink, isAddress } from 'utils'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Column, { AutoColumn } from '../Layout/Column'\r\nimport ImportRow from './ImportRow'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100% - 60px);\r\n  position: relative;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst Footer = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nexport default function ManageTokens({\r\n  setModalView,\r\n  setImportToken,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const [searchQuery, setSearchQuery] = useState<string>('')\r\n\r\n  // manage focus on modal show\r\n  const inputRef = useRef<HTMLInputElement>()\r\n  const handleInput = useCallback((event) => {\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setSearchQuery(checksummedInput || input)\r\n  }, [])\r\n\r\n  // if they input an address, use it\r\n  const searchToken = useToken(searchQuery)\r\n\r\n  // all tokens for local list\r\n  const userAddedTokens: Token[] = useUserAddedTokens()\r\n  const removeToken = useRemoveUserAddedToken()\r\n\r\n  const handleRemoveAll = useCallback(() => {\r\n    if (chainId && userAddedTokens) {\r\n      userAddedTokens.map((token) => {\r\n        return removeToken(chainId, token.address)\r\n      })\r\n    }\r\n  }, [removeToken, userAddedTokens, chainId])\r\n\r\n  const tokenList = useMemo(() => {\r\n    return (\r\n      chainId &&\r\n      userAddedTokens.map((token) => (\r\n        <RowBetween key={token.address} width=\"100%\">\r\n          <RowFixed>\r\n            <CurrencyLogo currency={token} size=\"20px\" />\r\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\r\n              {token.symbol}\r\n            </Link>\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\r\n          </RowFixed>\r\n        </RowBetween>\r\n      ))\r\n    )\r\n  }, [userAddedTokens, chainId, removeToken])\r\n\r\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Column style={{ width: '100%', flex: '1 1' }}>\r\n        <AutoColumn gap=\"14px\">\r\n          <Row>\r\n            <Input\r\n              id=\"token-search-input\"\r\n              scale=\"lg\"\r\n              placeholder=\"0x0000\"\r\n              value={searchQuery}\r\n              autoComplete=\"off\"\r\n              ref={inputRef as RefObject<HTMLInputElement>}\r\n              onChange={handleInput}\r\n              isWarning={!isAddressValid}\r\n            />\r\n          </Row>\r\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\r\n          {searchToken && (\r\n            <ImportRow\r\n              token={searchToken}\r\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n              setImportToken={setImportToken}\r\n              style={{ height: 'fit-content' }}\r\n            />\r\n          )}\r\n        </AutoColumn>\r\n        {tokenList}\r\n        <Footer>\r\n          <Text bold color=\"textSubtle\">\r\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\r\n          </Text>\r\n          {userAddedTokens.length > 0 && (\r\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\r\n              {t('Clear all')}\r\n            </Button>\r\n          )}\r\n        </Footer>\r\n      </Column>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ManageLists from './ManageLists'\r\nimport ManageTokens from './ManageTokens'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst StyledButtonMenu = styled(ButtonMenu)`\r\n  width: 100%;\r\n`\r\n\r\nexport default function Manage({\r\n  setModalView,\r\n  setImportList,\r\n  setImportToken,\r\n  setListUrl,\r\n}: {\r\n  setModalView: (view: CurrencyModalView) => void\r\n  setImportToken: (token: Token) => void\r\n  setImportList: (list: TokenList) => void\r\n  setListUrl: (url: string) => void\r\n}) {\r\n  const [showLists, setShowLists] = useState(true)\r\n\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalBody>\r\n      <StyledButtonMenu\r\n        activeIndex={showLists ? 0 : 1}\r\n        onItemClick={() => setShowLists((prev) => !prev)}\r\n        scale=\"sm\"\r\n        variant=\"subtle\"\r\n        mb=\"32px\"\r\n      >\r\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\r\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\r\n      </StyledButtonMenu>\r\n      {showLists ? (\r\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\r\n      ) : (\r\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\r\n      )}\r\n    </ModalBody>\r\n  )\r\n}\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\r\nimport Card from 'components/Card'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { ListLogo } from 'components/Logo'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from 'state'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport { removeList, enableList } from 'state/lists/actions'\r\nimport { useAllLists } from 'state/lists/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ImportProps {\r\n  listURL: string\r\n  list: TokenList\r\n  onImport: () => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst TextDot = styled.div`\r\n  height: 3px;\r\n  width: 3px;\r\n  background-color: ${({ theme }) => theme.colors.text};\r\n  border-radius: 50%;\r\n`\r\n\r\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\r\n  const { theme } = useTheme()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // user must accept\r\n  const [confirmed, setConfirmed] = useState(false)\r\n\r\n  const lists = useAllLists()\r\n  const fetchList = useFetchListCallback()\r\n\r\n  // monitor is list is loading\r\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\r\n  const [addError, setAddError] = useState<string | null>(null)\r\n\r\n  const handleAddList = useCallback(() => {\r\n    if (adding) return\r\n    setAddError(null)\r\n    fetchList(listURL)\r\n      .then(() => {\r\n        dispatch(enableList(listURL))\r\n        onImport()\r\n      })\r\n      .catch((error) => {\r\n        setAddError(error.message)\r\n        dispatch(removeList(listURL))\r\n      })\r\n  }, [adding, dispatch, fetchList, listURL, onImport])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <AutoColumn gap=\"md\">\r\n        <AutoColumn gap=\"md\">\r\n          <Card padding=\"12px 20px\">\r\n            <RowBetween>\r\n              <RowFixed>\r\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\r\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\r\n                  <RowFixed>\r\n                    <Text bold mr=\"6px\">\r\n                      {list.name}\r\n                    </Text>\r\n                    <TextDot />\r\n                    <Text small color=\"textSubtle\" ml=\"6px\">\r\n                      {list.tokens.length} tokens\r\n                    </Text>\r\n                  </RowFixed>\r\n                  <Link\r\n                    small\r\n                    external\r\n                    ellipsis\r\n                    maxWidth=\"90%\"\r\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\r\n                  >\r\n                    {listURL}\r\n                  </Link>\r\n                </AutoColumn>\r\n              </RowFixed>\r\n            </RowBetween>\r\n          </Card>\r\n\r\n          <Message variant=\"danger\">\r\n            <Flex flexDirection=\"column\">\r\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\r\n                {t('Import at your own risk')}\r\n              </Text>\r\n              <Text color={theme.colors.failure} mb=\"8px\">\r\n                {t(\r\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\r\n                )}\r\n              </Text>\r\n              <Text bold color={theme.colors.failure} mb=\"16px\">\r\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Checkbox\r\n                  name=\"confirmed\"\r\n                  type=\"checkbox\"\r\n                  checked={confirmed}\r\n                  onChange={() => setConfirmed(!confirmed)}\r\n                  scale=\"sm\"\r\n                />\r\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n                  {t('I understand')}\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Message>\r\n\r\n          <Button disabled={!confirmed} onClick={handleAddList}>\r\n            {t('Import')}\r\n          </Button>\r\n          {addError ? (\r\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\r\n              {addError}\r\n            </Text>\r\n          ) : null}\r\n        </AutoColumn>\r\n      </AutoColumn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ImportList\r\n","import React, { useCallback, useState } from 'react'\r\nimport { Currency, Token } from '@pancakeswap/sdk'\r\nimport {\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalTitle,\r\n  ModalBackButton,\r\n  ModalCloseButton,\r\n  ModalBody,\r\n  InjectedModalProps,\r\n  Heading,\r\n} from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport usePrevious from 'hooks/usePreviousValue'\r\nimport { TokenList } from '@uniswap/token-lists'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CurrencySearch from './CurrencySearch'\r\nimport ImportToken from './ImportToken'\r\nimport Manage from './Manage'\r\nimport ImportList from './ImportList'\r\nimport { CurrencyModalView } from './types'\r\n\r\nconst Footer = styled.div`\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  text-align: center;\r\n`\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 420px;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledModalBody = styled(ModalBody)`\r\n  padding: 24px;\r\n`\r\n\r\ninterface CurrencySearchModalProps extends InjectedModalProps {\r\n  selectedCurrency?: Currency | null\r\n  onCurrencySelect: (currency: Currency) => void\r\n  otherSelectedCurrency?: Currency | null\r\n  showCommonBases?: boolean\r\n}\r\n\r\nexport default function CurrencySearchModal({\r\n  onDismiss = () => null,\r\n  onCurrencySelect,\r\n  selectedCurrency,\r\n  otherSelectedCurrency,\r\n  showCommonBases = false,\r\n}: CurrencySearchModalProps) {\r\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\r\n\r\n  const handleCurrencySelect = useCallback(\r\n    (currency: Currency) => {\r\n      onDismiss()\r\n      onCurrencySelect(currency)\r\n    },\r\n    [onDismiss, onCurrencySelect],\r\n  )\r\n\r\n  // for token import view\r\n  const prevView = usePrevious(modalView)\r\n\r\n  // used for import token flow\r\n  const [importToken, setImportToken] = useState<Token | undefined>()\r\n\r\n  // used for import list\r\n  const [importList, setImportList] = useState<TokenList | undefined>()\r\n  const [listURL, setListUrl] = useState<string | undefined>()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const config = {\r\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\r\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\r\n    [CurrencyModalView.importToken]: {\r\n      title: t('Import Tokens'),\r\n      onBack: () =>\r\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\r\n    },\r\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\r\n  }\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"320px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\r\n          <Heading>{config[modalView].title}</Heading>\r\n        </ModalTitle>\r\n        <ModalCloseButton onDismiss={onDismiss} />\r\n      </ModalHeader>\r\n      <StyledModalBody>\r\n        {modalView === CurrencyModalView.search ? (\r\n          <CurrencySearch\r\n            onCurrencySelect={handleCurrencySelect}\r\n            selectedCurrency={selectedCurrency}\r\n            otherSelectedCurrency={otherSelectedCurrency}\r\n            showCommonBases={showCommonBases}\r\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\r\n            setImportToken={setImportToken}\r\n          />\r\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\r\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\r\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\r\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\r\n        ) : modalView === CurrencyModalView.manage ? (\r\n          <Manage\r\n            setModalView={setModalView}\r\n            setImportToken={setImportToken}\r\n            setImportList={setImportList}\r\n            setListUrl={setListUrl}\r\n          />\r\n        ) : (\r\n          ''\r\n        )}\r\n        {modalView === CurrencyModalView.search && (\r\n          <Footer />\r\n        )}\r\n      </StyledModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport Container from '../Layout/Container'\r\n\r\nconst Outer = styled(Box)<{ background?: string }>`\r\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Inner = styled(Container)`\r\n  padding-top: 32px;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\r\n  <Outer background={background} {...props}>\r\n    <Inner>{children}</Inner>\r\n  </Outer>\r\n)\r\n\r\nexport default PageHeader\r\n","import { useAllLists } from 'state/lists/hooks'\r\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\r\nimport { useCallback, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useAllInactiveTokens } from 'hooks/Tokens'\r\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\r\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\r\nimport useFetchListCallback from 'hooks/useFetchListCallback'\r\nimport useInterval from 'hooks/useInterval'\r\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\r\nimport { AppDispatch } from '../index'\r\nimport { acceptListUpdate } from './actions'\r\nimport { useActiveListUrls } from './hooks'\r\n\r\nexport default function Updater(): null {\r\n  const { library } = useWeb3Provider()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const isWindowVisible = useIsWindowVisible()\r\n\r\n  // get all loaded lists, and the active urls\r\n  const lists = useAllLists()\r\n  const activeListUrls = useActiveListUrls()\r\n\r\n  // initiate loading\r\n  useAllInactiveTokens()\r\n\r\n  const fetchList = useFetchListCallback()\r\n  const fetchAllListsCallback = useCallback(() => {\r\n    if (!isWindowVisible) return\r\n    Object.keys(lists).forEach((url) =>\r\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\r\n    )\r\n  }, [fetchList, isWindowVisible, lists])\r\n\r\n  // fetch all lists every 10 minutes, but only after we initialize library\r\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\r\n\r\n  // whenever a list is not loaded and not loading, try again to load it\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (!list.current && !list.loadingRequestId && !list.error) {\r\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\r\n  useEffect(() => {\r\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\r\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\r\n      }\r\n    })\r\n  }, [dispatch, fetchList, library, lists])\r\n\r\n  // automatically update lists if versions are minor/patch\r\n  useEffect(() => {\r\n    Object.keys(lists).forEach((listUrl) => {\r\n      const list = lists[listUrl]\r\n      if (list.current && list.pendingUpdate) {\r\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\r\n        // eslint-disable-next-line default-case\r\n        switch (bump) {\r\n          case VersionUpgrade.NONE:\r\n            throw new Error('unexpected no version bump')\r\n          // update any active or inactive lists\r\n          case VersionUpgrade.PATCH:\r\n          case VersionUpgrade.MINOR:\r\n          case VersionUpgrade.MAJOR:\r\n            dispatch(acceptListUpdate(listUrl))\r\n        }\r\n      }\r\n    })\r\n  }, [dispatch, lists, activeListUrls])\r\n\r\n  return null\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const { current } = savedCallback\r\n      if (current) {\r\n        current()\r\n      }\r\n    }\r\n\r\n    if (delay !== null) {\r\n      if (leading) tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return undefined\r\n  }, [delay, leading])\r\n}\r\n","/* eslint-disable */\r\n\r\nfunction wait(ms: number): Promise<void> {\r\n  return new Promise((resolve) => setTimeout(resolve, ms))\r\n}\r\n\r\nfunction waitRandom(min: number, max: number): Promise<void> {\r\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\r\n}\r\n\r\n/**\r\n * This error is thrown if the function is cancelled before completing\r\n */\r\nexport class CancelledError extends Error {\r\n  constructor() {\r\n    super('Cancelled')\r\n  }\r\n}\r\n\r\n/**\r\n * Throw this error if the function should retry\r\n */\r\nexport class RetryableError extends Error {}\r\n\r\n/**\r\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\r\n * @param fn function to retry\r\n * @param n how many times to retry\r\n * @param minWait min wait between retries in ms\r\n * @param maxWait max wait between retries in ms\r\n */\r\nexport function retry<T>(\r\n  fn: () => Promise<T>,\r\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\r\n): { promise: Promise<T>; cancel: () => void } {\r\n  let completed = false\r\n  let rejectCancelled: (error: Error) => void\r\n  const promise = new Promise<T>(async (resolve, reject) => {\r\n    rejectCancelled = reject\r\n    while (true) {\r\n      let result: T\r\n      try {\r\n        result = await fn()\r\n        if (!completed) {\r\n          resolve(result)\r\n          completed = true\r\n        }\r\n        break\r\n      } catch (error) {\r\n        if (completed) {\r\n          break\r\n        }\r\n        if (n <= 0 || !(error instanceof RetryableError)) {\r\n          reject(error)\r\n          completed = true\r\n          break\r\n        }\r\n        n--\r\n      }\r\n      await waitRandom(minWait, maxWait)\r\n    }\r\n  })\r\n  return {\r\n    promise,\r\n    cancel: () => {\r\n      if (completed) return\r\n      completed = true\r\n      rejectCancelled(new CancelledError())\r\n    },\r\n  }\r\n}\r\n\r\n/* eslint-enable */\r\n","import { Contract } from '@ethersproject/contracts'\r\nimport { useEffect, useMemo, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useMulticallContract } from '../../hooks/useContract'\r\nimport useDebounce from '../../hooks/useDebounce'\r\nimport { CancelledError, retry, RetryableError } from './retry'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport {\r\n  Call,\r\n  errorFetchingMulticallResults,\r\n  fetchingMulticallResults,\r\n  parseCallKey,\r\n  updateMulticallResults,\r\n} from './actions'\r\nimport chunkArray from './chunkArray'\r\n\r\n// chunk calls so we do not exceed the gas limit\r\nconst CALL_CHUNK_SIZE = 500\r\n\r\n/**\r\n * Fetches a chunk of calls, enforcing a minimum block number constraint\r\n * @param multicallContract multicall contract to fetch against\r\n * @param chunk chunk of calls to make\r\n * @param minBlockNumber minimum block number of the result set\r\n */\r\nasync function fetchChunk(\r\n  multicallContract: Contract,\r\n  chunk: Call[],\r\n  minBlockNumber: number,\r\n): Promise<{ results: string[]; blockNumber: number }> {\r\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\r\n  let resultsBlockNumber\r\n  let returnData\r\n  try {\r\n    // prettier-ignore\r\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\r\n      chunk.map((obj) => [obj.address, obj.callData])\r\n    )\r\n  } catch (error) {\r\n    console.debug('Failed to fetch chunk inside retry', error)\r\n    throw error\r\n  }\r\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\r\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\r\n    throw new RetryableError('Fetched for old block number')\r\n  }\r\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\r\n}\r\n\r\n/**\r\n * From the current all listeners state, return each call key mapped to the\r\n * minimum number of blocks per fetch. This is how often each key must be fetched.\r\n * @param allListeners the all listeners state\r\n * @param chainId the current chain id\r\n */\r\nexport function activeListeningKeys(\r\n  allListeners: AppState['multicall']['callListeners'],\r\n  chainId?: number,\r\n): { [callKey: string]: number } {\r\n  if (!allListeners || !chainId) return {}\r\n  const listeners = allListeners[chainId]\r\n  if (!listeners) return {}\r\n\r\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\r\n    const keyListeners = listeners[callKey]\r\n\r\n    memo[callKey] = Object.keys(keyListeners)\r\n      .filter((key) => {\r\n        const blocksPerFetch = parseInt(key)\r\n        if (blocksPerFetch <= 0) return false\r\n        return keyListeners[blocksPerFetch] > 0\r\n      })\r\n      .reduce((previousMin, current) => {\r\n        return Math.min(previousMin, parseInt(current))\r\n      }, Infinity)\r\n    return memo\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Return the keys that need to be refetched\r\n * @param callResults current call result state\r\n * @param listeningKeys each call key mapped to how old the data can be in blocks\r\n * @param chainId the current chain id\r\n * @param currentBlock the latest block number\r\n */\r\nexport function outdatedListeningKeys(\r\n  callResults: AppState['multicall']['callResults'],\r\n  listeningKeys: { [callKey: string]: number },\r\n  chainId: number | undefined,\r\n  currentBlock: number | undefined,\r\n): string[] {\r\n  if (!chainId || !currentBlock) return []\r\n  const results = callResults[chainId]\r\n  // no results at all, load everything\r\n  if (!results) return Object.keys(listeningKeys)\r\n\r\n  return Object.keys(listeningKeys).filter((callKey) => {\r\n    const blocksPerFetch = listeningKeys[callKey]\r\n\r\n    const data = callResults[chainId][callKey]\r\n    // no data, must fetch\r\n    if (!data) return true\r\n\r\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\r\n\r\n    // already fetching it for a recent enough block, don't refetch it\r\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\r\n\r\n    // if data is older than minDataBlockNumber, fetch it\r\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\r\n  })\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\r\n  // wait for listeners to settle before triggering updates\r\n  const debouncedListeners = useDebounce(state.callListeners, 100)\r\n  const { currentBlock } = useBlock()\r\n  const { chainId } = useActiveWeb3React()\r\n  const multicallContract = useMulticallContract()\r\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\r\n\r\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\r\n    return activeListeningKeys(debouncedListeners, chainId)\r\n  }, [debouncedListeners, chainId])\r\n\r\n  const unserializedOutdatedCallKeys = useMemo(() => {\r\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\r\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\r\n\r\n  const serializedOutdatedCallKeys = useMemo(\r\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\r\n    [unserializedOutdatedCallKeys],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!currentBlock || !chainId || !multicallContract) return\r\n\r\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\r\n    if (outdatedCallKeys.length === 0) return\r\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\r\n\r\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\r\n\r\n    if (cancellations.current?.blockNumber !== currentBlock) {\r\n      cancellations.current?.cancellations?.forEach((c) => c())\r\n    }\r\n\r\n    dispatch(\r\n      fetchingMulticallResults({\r\n        calls,\r\n        chainId,\r\n        fetchingBlockNumber: currentBlock,\r\n      }),\r\n    )\r\n\r\n    cancellations.current = {\r\n      blockNumber: currentBlock,\r\n      cancellations: chunkedCalls.map((chunk, index) => {\r\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\r\n          n: Infinity,\r\n          minWait: 2500,\r\n          maxWait: 3500,\r\n        })\r\n        promise\r\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\r\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\r\n\r\n            // accumulates the length of all previous indices\r\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\r\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\r\n\r\n            dispatch(\r\n              updateMulticallResults({\r\n                chainId,\r\n                results: outdatedCallKeys\r\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\r\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\r\n                    memo[callKey] = returnData[i] ?? null\r\n                    return memo\r\n                  }, {}),\r\n                blockNumber: fetchBlockNumber,\r\n              }),\r\n            )\r\n          })\r\n          .catch((error: any) => {\r\n            if (error instanceof CancelledError) {\r\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\r\n              return\r\n            }\r\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\r\n            dispatch(\r\n              errorFetchingMulticallResults({\r\n                calls: chunk,\r\n                chainId,\r\n                fetchingBlockNumber: currentBlock,\r\n              }),\r\n            )\r\n          })\r\n        return cancel\r\n      }),\r\n    }\r\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\r\n\r\n  return null\r\n}\r\n","// chunks array into chunks of maximum size\r\n// evenly distributes items among the chunks\r\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\r\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\r\n  if (items.length <= maxChunkSize) return [items]\r\n\r\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\r\n  const chunkSize = Math.ceil(items.length / numChunks)\r\n\r\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { AppDispatch, AppState } from '../index'\r\nimport { checkedTransaction, finalizeTransaction } from './actions'\r\n\r\nexport function shouldCheck(\r\n  currentBlock: number,\r\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\r\n): boolean {\r\n  if (tx.receipt) return false\r\n  if (!tx.lastCheckedBlockNumber) return true\r\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\r\n  if (blocksSinceCheck < 1) return false\r\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\r\n  if (minutesPending > 60) {\r\n    // every 10 blocks if pending for longer than an hour\r\n    return blocksSinceCheck > 9\r\n  }\r\n  if (minutesPending > 5) {\r\n    // every 3 blocks if pending more than 5 minutes\r\n    return blocksSinceCheck > 2\r\n  }\r\n  // otherwise every block\r\n  return true\r\n}\r\n\r\nexport default function Updater(): null {\r\n  const { library, chainId } = useActiveWeb3React()\r\n\r\n  const { currentBlock } = useBlock()\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\r\n\r\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\r\n\r\n  const { toastError, toastSuccess } = useToast()\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !library || !currentBlock) return\r\n\r\n    Object.keys(transactions)\r\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\r\n      .forEach((hash) => {\r\n        library\r\n          .getTransactionReceipt(hash)\r\n          .then((receipt) => {\r\n            if (receipt) {\r\n              dispatch(\r\n                finalizeTransaction({\r\n                  chainId,\r\n                  hash,\r\n                  receipt: {\r\n                    blockHash: receipt.blockHash,\r\n                    blockNumber: receipt.blockNumber,\r\n                    contractAddress: receipt.contractAddress,\r\n                    from: receipt.from,\r\n                    status: receipt.status,\r\n                    to: receipt.to,\r\n                    transactionHash: receipt.transactionHash,\r\n                    transactionIndex: receipt.transactionIndex,\r\n                  },\r\n                }),\r\n              )\r\n\r\n              const toast = receipt.status === 1 ? toastSuccess : toastError\r\n              toast(\r\n                'Transaction receipt',\r\n                <Flex flexDirection=\"column\">\r\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\r\n                  {chainId && (\r\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\r\n                      View on BscScan\r\n                    </Link>\r\n                  )}\r\n                </Flex>,\r\n              )\r\n            } else {\r\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(`failed to check transaction hash: ${hash}`, error)\r\n          })\r\n      })\r\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\r\n\r\n  return null\r\n}\r\n","import React, { useState } from 'react'\r\nimport {\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  CloseIcon,\r\n  Heading,\r\n  IconButton,\r\n  InjectedModalProps,\r\n  ModalBody,\r\n  ModalContainer,\r\n  ModalHeader as UIKitModalHeader,\r\n  ModalTitle,\r\n} from '@pancakeswap/uikit'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport WalletInfo from './WalletInfo'\r\nimport WalletTransactions from './WalletTransactions'\r\n\r\nexport enum WalletView {\r\n  WALLET_INFO,\r\n  TRANSACTIONS,\r\n}\r\n\r\ninterface WalletModalProps extends InjectedModalProps {\r\n  initialView?: WalletView\r\n}\r\n\r\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\r\n\r\nconst ModalHeader = styled(UIKitModalHeader)`\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst Tabs = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 16px 24px;\r\n`\r\n\r\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\r\n  const [view, setView] = useState(initialView)\r\n  const { t } = useTranslation()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\r\n\r\n  const handleClick = (newIndex: number) => {\r\n    setView(newIndex)\r\n  }\r\n\r\n  return (\r\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\r\n      <ModalHeader>\r\n        <ModalTitle>\r\n          <Heading>{t('Your Wallet')}</Heading>\r\n        </ModalTitle>\r\n        <IconButton variant=\"text\" onClick={onDismiss}>\r\n          <CloseIcon width=\"24px\" color=\"text\" />\r\n        </IconButton>\r\n      </ModalHeader>\r\n      <Tabs>\r\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\r\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\r\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\r\n        </ButtonMenu>\r\n      </Tabs>\r\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\r\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\r\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\r\n      </ModalBody>\r\n    </ModalContainer>\r\n  )\r\n}\r\n\r\nexport default WalletModal\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDatePickerPortal = styled.div`\r\n  .react-datepicker-wrapper,\r\n  .react-datepicker__input-container {\r\n    display: block;\r\n  }\r\n\r\n  .react-datepicker {\r\n    background: ${({ theme }) => theme.card.background};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n\r\n  .react-datepicker__header {\r\n    background: ${({ theme }) => theme.colors.input};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__current-month,\r\n  .react-datepicker-time__header,\r\n  .react-datepicker-year-header,\r\n  .react-datepicker__day-name,\r\n  .react-datepicker__day,\r\n  .react-datepicker__time-name {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n\r\n  .react-datepicker__day:hover,\r\n  .react-datepicker__month-text:hover,\r\n  .react-datepicker__quarter-text:hover,\r\n  .react-datepicker__year-text:hover {\r\n    background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\r\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__day--selected,\r\n  .react-datepicker__day--in-selecting-range,\r\n  .react-datepicker__day--in-range,\r\n  .react-datepicker__month-text--selected,\r\n  .react-datepicker__month-text--in-selecting-range,\r\n  .react-datepicker__month-text--in-range,\r\n  .react-datepicker__quarter-text--selected,\r\n  .react-datepicker__quarter-text--in-selecting-range,\r\n  .react-datepicker__quarter-text--in-range,\r\n  .react-datepicker__year-text--selected,\r\n  .react-datepicker__year-text--in-selecting-range,\r\n  .react-datepicker__year-text--in-range {\r\n    background-color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  .react-datepicker__day--selected:hover,\r\n  .react-datepicker__day--in-selecting-range:hover,\r\n  .react-datepicker__day--in-range:hover,\r\n  .react-datepicker__month-text--selected:hover,\r\n  .react-datepicker__month-text--in-selecting-range:hover,\r\n  .react-datepicker__month-text--in-range:hover,\r\n  .react-datepicker__quarter-text--selected:hover,\r\n  .react-datepicker__quarter-text--in-selecting-range:hover,\r\n  .react-datepicker__quarter-text--in-range:hover,\r\n  .react-datepicker__year-text--selected:hover,\r\n  .react-datepicker__year-text--in-selecting-range:hover,\r\n  .react-datepicker__year-text--in-range:hover {\r\n    background-color: ${({ theme }) => theme.colors.primaryBright};\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected,\r\n  .react-datepicker__month-text--keyboard-selected,\r\n  .react-datepicker__quarter-text--keyboard-selected,\r\n  .react-datepicker__year-text--keyboard-selected {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected:hover,\r\n  .react-datepicker__month-text--keyboard-selected:hover,\r\n  .react-datepicker__quarter-text--keyboard-selected:hover,\r\n  .react-datepicker__year-text--keyboard-selected:hover {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__time-container,\r\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\r\n    width: 120px;\r\n  }\r\n\r\n  .react-datepicker__header--time {\r\n    padding: 8px;\r\n  }\r\n\r\n  .react-datepicker__time-container\r\n    .react-datepicker__time\r\n    .react-datepicker__time-box\r\n    ul.react-datepicker__time-list\r\n    li.react-datepicker__time-list-item {\r\n    height: auto;\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst DatePickerPortal = () => {\r\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\r\n}\r\n\r\nexport default DatePickerPortal\r\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { MenuEntry } from '@pancakeswap/uikit'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\n\r\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\r\n  {\r\n    label: t('Home'),\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n  {\r\n    label: t('Trade'),\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: t('Exchange'),\r\n        href: '/swap',\r\n      },\r\n      {\r\n        label: t('Liquidity'),\r\n        href: '/liquidity',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('Prediction'),\r\n    icon: 'PredictionsIcon',\r\n    href: '/prediction',\r\n  },\r\n  {\r\n    label: t('Graphs'),\r\n    icon: 'InfoIcon',\r\n    items: [\r\n      {\r\n        label: t('DexScreener'),\r\n        href: 'https://dexscreener.com/',\r\n      },\r\n      {\r\n        label: t('Nomics'),\r\n        href: 'https://nomics.com/',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('Listings'),\r\n    icon: 'HamburgerIcon',\r\n    items: [\r\n      {\r\n        label: t('CoinMarketCap'),\r\n        href: 'https://coinmarketcap.com/',\r\n      },\r\n      {\r\n        label: t('CoinGecko'),\r\n        href: 'https://www.coingecko.com/',\r\n      },\r\n      {\r\n        label: t('Defi Llama'),\r\n        href: 'https://defillama.com/',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    label: t('Partner Application Form'),\r\n    icon: 'TicketIcon',\r\n    href: '#',\r\n  },\r\n  {\r\n    label: t('More'),\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: t('Contact'),\r\n        href: '#',\r\n      },\r\n      {\r\n        label: t('Github'),\r\n        href: 'https://github.com/',\r\n      },\r\n      {\r\n        label: t('Blog'),\r\n        href: 'https://pancakeswap.medium.com',\r\n      },\r\n      {\r\n        label: t('Documentation'),\r\n        href: '#',\r\n      },\r\n      {\r\n        label: t('Roadmap'),\r\n        href: '#',\r\n      },\r\n      {\r\n        label: t('Tokenomics'),\r\n        href: '#',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React, { useState } from 'react'\r\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface CopyAddressProps extends FlexProps {\r\n  account: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.colors.dropdown};\r\n  border-radius: 16px;\r\n  position: relative;\r\n`\r\n\r\nconst Address = styled.div`\r\n  flex: 1;\r\n  position: relative;\r\n  padding-left: 16px;\r\n\r\n  & > input {\r\n    background: transparent;\r\n    border: 0;\r\n    color: ${({ theme }) => theme.colors.text};\r\n    display: block;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    padding: 0;\r\n    width: 100%;\r\n\r\n    &:focus {\r\n      outline: 0;\r\n    }\r\n  }\r\n\r\n  &:after {\r\n    background: linear-gradient(\r\n      to right,\r\n      ${({ theme }) => theme.colors.background}00,\r\n      ${({ theme }) => theme.colors.background}E6\r\n    );\r\n    content: '';\r\n    height: 100%;\r\n    pointer-events: none;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 40px;\r\n  }\r\n`\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\r\n  position: absolute;\r\n  padding: 8px;\r\n  top: -38px;\r\n  right: 0;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.contrast};\r\n  color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n  width: 100px;\r\n`\r\n\r\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n  const { t } = useTranslation()\r\n\r\n  const copyAddress = () => {\r\n    if (navigator.clipboard && navigator.permissions) {\r\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\r\n    } else if (document.queryCommandSupported('copy')) {\r\n      const ele = document.createElement('textarea')\r\n      ele.value = account\r\n      document.body.appendChild(ele)\r\n      ele.select()\r\n      document.execCommand('copy')\r\n      document.body.removeChild(ele)\r\n      displayTooltip()\r\n    }\r\n  }\r\n\r\n  function displayTooltip() {\r\n    setIsTooltipDisplayed(true)\r\n    setTimeout(() => {\r\n      setIsTooltipDisplayed(false)\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\" {...props}>\r\n      <Wrapper>\r\n        <Address title={account}>\r\n          <input type=\"text\" readOnly value={account} />\r\n        </Address>\r\n        <IconButton variant=\"text\" onClick={copyAddress}>\r\n          <CopyIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n      </Wrapper>\r\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CopyAddress\r\n","import React from 'react'\r\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBscScanLink } from 'utils'\r\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\r\nimport tokens from 'config/constants/tokens'\r\nimport CopyAddress from './CopyAddress'\r\n\r\ninterface WalletInfoProps {\r\n  hasLowBnbBalance: boolean\r\n  onDismiss: InjectedModalProps['onDismiss']\r\n}\r\n\r\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.cake.address)\r\n  const { logout } = useAuth()\r\n\r\n  const handleLogout = () => {\r\n    onDismiss()\r\n    logout()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\r\n        {t('Your Address')}\r\n      </Text>\r\n      <CopyAddress account={account} mb=\"24px\" />\r\n      {hasLowBnbBalance && (\r\n        <Message variant=\"warning\" mb=\"24px\">\r\n          <Box>\r\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\r\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\r\n          </Box>\r\n        </Message>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\r\n        {fetchStatus !== FetchStatus.SUCCESS ? (\r\n          <Skeleton height=\"22px\" width=\"60px\" />\r\n        ) : (\r\n          <Text>{formatBigNumber(balance, 6)}</Text>\r\n        )}\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text color=\"textSubtle\">{t('CPF Balance')}</Text>\r\n        {cakeFetchStatus !== FetchStatus.SUCCESS ? (\r\n          <Skeleton height=\"22px\" width=\"60px\" />\r\n        ) : (\r\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\r\n        )}\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\r\n        <LinkExternal href={getBscScanLink(account, 'address')}>{t('View on BscScan')}</LinkExternal>\r\n      </Flex>\r\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\r\n        {t('Disconnect Wallet')}\r\n      </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WalletInfo\r\n","import React from 'react'\r\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { TransactionDetails } from 'state/transactions/reducer'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { getBscScanLink } from 'utils'\r\n\r\ninterface TransactionRowProps {\r\n  txn: TransactionDetails\r\n}\r\n\r\nconst TxnIcon = styled(Flex)`\r\n  align-items: center;\r\n  flex: none;\r\n  width: 24px;\r\n`\r\n\r\nconst Summary = styled.div`\r\n  flex: 1;\r\n  padding: 0 8px;\r\n`\r\n\r\nconst TxnLink = styled(Link)`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst renderIcon = (txn: TransactionDetails) => {\r\n  if (!txn.receipt) {\r\n    return <RefreshIcon spin width=\"24px\" />\r\n  }\r\n\r\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\r\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\r\n  ) : (\r\n    <BlockIcon color=\"failure\" width=\"24px\" />\r\n  )\r\n}\r\n\r\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  if (!txn) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\r\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\r\n      <Summary>{txn.summary ?? txn.hash}</Summary>\r\n      <TxnIcon>\r\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\r\n      </TxnIcon>\r\n    </TxnLink>\r\n  )\r\n}\r\n\r\nexport default TransactionRow\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\r\nimport { AppDispatch } from 'state'\r\nimport { useAllTransactions } from 'state/transactions/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { clearAllTransactions } from 'state/transactions/actions'\r\nimport { orderBy } from 'lodash'\r\nimport TransactionRow from './TransactionRow'\r\n\r\nconst WalletTransactions: React.FC = () => {\r\n  const { chainId } = useActiveWeb3React()\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { t } = useTranslation()\r\n  const allTransactions = useAllTransactions()\r\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\r\n\r\n  const handleClearAll = () => {\r\n    if (chainId) {\r\n      dispatch(clearAllTransactions({ chainId }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box minHeight=\"120px\">\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\r\n          {t('Recent Transactions')}\r\n        </Text>\r\n        {sortedTransactions.length > 0 && (\r\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\r\n            {t('Clear all')}\r\n          </Button>\r\n        )}\r\n      </Flex>\r\n      {sortedTransactions.length > 0 ? (\r\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\r\n      ) : (\r\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default WalletTransactions\r\n","import { useEffect, useReducer, useCallback } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\r\n\r\n/**\r\n * This hook is handling all the calculator state and calculations.\r\n * UI connected to it is merely representation of the data and buttons to trigger actions\r\n */\r\n\r\n// Mapping from the compounding frequency button index to actual compounding frequency\r\n// in number of compounds per day\r\nconst compoundingIndexToFrequency = {\r\n  0: 1,\r\n  1: 0.142857142,\r\n  2: 0.071428571, // once every 7 days\r\n  3: 0.033333333, // once every 30 days\r\n}\r\n\r\nconst TOKEN_PRECISION = 10\r\nconst USD_PRECISION = 2\r\n\r\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\r\nexport enum EditingCurrency {\r\n  TOKEN,\r\n  USD,\r\n}\r\n\r\n// Calculator works in 2 modes\r\nexport enum CalculatorMode {\r\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\r\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\r\n}\r\n\r\nexport interface RoiCalculatorReducerState {\r\n  controls: {\r\n    compounding: boolean // Compounding checkbox state\r\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\r\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\r\n    stakingDuration: number // index of active staking duration button in ButtonMenu\r\n    mode: CalculatorMode\r\n    editingCurrency: EditingCurrency\r\n  }\r\n  data: {\r\n    principalAsToken: string // Used as value for Inputs\r\n    principalAsUSD: string // Used as value for Inputs\r\n    roiUSD: number\r\n    roiTokens: number\r\n    roiPercentage: number // ROI expressed in percentage relative to principal\r\n  }\r\n}\r\n\r\nconst initialState: RoiCalculatorReducerState = {\r\n  controls: {\r\n    compounding: true,\r\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\r\n    activeCompoundingIndex: 0, // active compounding selected in\r\n    stakingDuration: 3,\r\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\r\n    editingCurrency: EditingCurrency.USD,\r\n  },\r\n  data: {\r\n    principalAsToken: '0.00',\r\n    principalAsUSD: '',\r\n    roiUSD: 0,\r\n    roiTokens: 0,\r\n    roiPercentage: 0,\r\n  },\r\n}\r\n\r\nconst roiCalculatorReducer = (\r\n  state: RoiCalculatorReducerState,\r\n  action: { type: string; payload?: any },\r\n): RoiCalculatorReducerState => {\r\n  switch (action.type) {\r\n    case 'setStakingDuration': {\r\n      const controls = { ...state.controls, stakingDuration: action.payload }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'toggleCompounding': {\r\n      const toggledCompounding = !state.controls.compounding\r\n      const controls = { ...state.controls, compounding: toggledCompounding }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'setCompoundingFrequency': {\r\n      const { index, autoCompoundFrequency } = action.payload\r\n      if (autoCompoundFrequency) {\r\n        return {\r\n          ...state,\r\n          controls: {\r\n            ...state.controls,\r\n            compoundingFrequency: autoCompoundFrequency,\r\n          },\r\n        }\r\n      }\r\n      const compoundingFrequency = compoundingIndexToFrequency[index]\r\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\r\n      return {\r\n        ...state,\r\n        controls,\r\n      }\r\n    }\r\n    case 'setPrincipal': {\r\n      const { principalAsUSD, principalAsToken } = action.payload\r\n      const data = { ...state.data, principalAsUSD, principalAsToken }\r\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\r\n      return {\r\n        controls,\r\n        data,\r\n      }\r\n    }\r\n    case 'setPrincipalForTargetRoi': {\r\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\r\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\r\n      return {\r\n        ...state,\r\n        data,\r\n      }\r\n    }\r\n    case 'setCalculatorMode': {\r\n      const mode = action.payload\r\n      const controls = { ...state.controls, mode }\r\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\r\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\r\n        const data = { ...state.data, roiUSD }\r\n        return { controls, data }\r\n      }\r\n      return { ...state, controls }\r\n    }\r\n    case 'setRoi': {\r\n      const data = { ...state.data, ...action.payload }\r\n      return { ...state, data }\r\n    }\r\n    case 'setTargetRoi': {\r\n      const { roiUSD, roiTokens } = action.payload\r\n      const data = { ...state.data, roiUSD, roiTokens }\r\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\r\n      return { controls, data }\r\n    }\r\n    case 'toggleEditingCurrency': {\r\n      const currencyAfterChange =\r\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\r\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\r\n      return { ...state, controls }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst useRoiCalculatorReducer = (\r\n  stakingTokenPrice: number,\r\n  earningTokenPrice: number,\r\n  apr: number,\r\n  autoCompoundFrequency: number,\r\n  performanceFee: number,\r\n) => {\r\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\r\n  const { principalAsUSD, roiUSD } = state.data\r\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\r\n\r\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\r\n  useEffect(() => {\r\n    if (autoCompoundFrequency > 0) {\r\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\r\n    }\r\n  }, [autoCompoundFrequency])\r\n\r\n  // Calculates and sets ROI whenever related values change\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\r\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\r\n      const compoundFrequency = compounding ? compoundingFrequency : 0\r\n      const interestBreakdown = getInterestBreakdown({\r\n        principalInUSD: principalInUSDAsNumber,\r\n        apr,\r\n        earningTokenPrice,\r\n        compoundFrequency,\r\n        performanceFee,\r\n      })\r\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\r\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\r\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\r\n      const roiPercentage = hasInterest\r\n        ? getRoi({\r\n            amountEarned: roiAsUSD,\r\n            amountInvested: principalInUSDAsNumber,\r\n          })\r\n        : 0\r\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\r\n    }\r\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\r\n\r\n  // Calculates and sets principal based on expected ROI value\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\r\n      const principalForExpectedRoi = getPrincipalForInterest(\r\n        roiUSD,\r\n        apr,\r\n        compounding ? compoundingFrequency : 0,\r\n        performanceFee,\r\n      )\r\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\r\n        ? principalForExpectedRoi[stakingDuration]\r\n        : 0\r\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\r\n      const roiPercentage = getRoi({\r\n        amountEarned: roiUSD,\r\n        amountInvested: principalUSD,\r\n      })\r\n      dispatch({\r\n        type: 'setPrincipalForTargetRoi',\r\n        payload: {\r\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\r\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\r\n          roiPercentage,\r\n        },\r\n      })\r\n    }\r\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\r\n\r\n  // Handler for compounding frequency buttons\r\n  const setCompoundingFrequency = (index: number) => {\r\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\r\n  }\r\n\r\n  // Handler for principal input when in USD mode\r\n  const setPrincipalFromUSDValue = (amount: string) => {\r\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\r\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\r\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\r\n  }\r\n\r\n  // Handler for principal input when in Token mode\r\n  const setPrincipalFromTokenValue = useCallback(\r\n    (amount: string) => {\r\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\r\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\r\n      dispatch({\r\n        type: 'setPrincipal',\r\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\r\n      })\r\n    },\r\n    [stakingTokenPrice],\r\n  )\r\n\r\n  // Handler for staking duration buttons\r\n  const setStakingDuration = (stakingDurationIndex: number) => {\r\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\r\n  }\r\n\r\n  // Handler for compounding checkbox\r\n  const toggleCompounding = () => {\r\n    dispatch({ type: 'toggleCompounding' })\r\n  }\r\n\r\n  // Handler for principal input mode switch\r\n  const toggleEditingCurrency = () => {\r\n    dispatch({ type: 'toggleEditingCurrency' })\r\n  }\r\n\r\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\r\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\r\n  }\r\n\r\n  // Handler for ROI input\r\n  const setTargetRoi = (amount: string) => {\r\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\r\n    dispatch({\r\n      type: 'setTargetRoi',\r\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\r\n    })\r\n  }\r\n\r\n  return {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  }\r\n}\r\n\r\nexport default useRoiCalculatorReducer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Skeleton, UserMenuItem } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport history from 'routerHistory'\r\n\r\ninterface ProfileUserMenuItemProps {\r\n  isLoading: boolean\r\n  hasProfile: boolean\r\n}\r\n\r\nconst Dot = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.failure};\r\n  border-radius: 50%;\r\n  height: 8px;\r\n  width: 8px;\r\n`\r\n\r\nconst ProfileUserMenuItem: React.FC<ProfileUserMenuItemProps> = ({ isLoading, hasProfile }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const handleClick = () => {\r\n    history.push('/swap')\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <UserMenuItem>\r\n        <Skeleton height=\"24px\" width=\"35%\" />\r\n      </UserMenuItem>\r\n    )\r\n  }\r\n\r\n  if (!hasProfile) {\r\n    return (\r\n      <UserMenuItem as=\"button\" onClick={handleClick}>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n          {t('Get your CPF')}\r\n          <Dot />\r\n        </Flex>\r\n      </UserMenuItem>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <UserMenuItem as=\"button\" onClick={handleClick}>\r\n      {t('Your Profile')}\r\n    </UserMenuItem>\r\n  )\r\n}\r\n\r\nexport default ProfileUserMenuItem\r\n","import React from 'react'\r\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface WalletUserMenuItemProps {\r\n  hasLowBnbBalance: boolean\r\n  onPresentWalletModal: () => void\r\n}\r\n\r\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n        {t('Wallet')}\r\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\r\n      </Flex>\r\n    </UserMenuItem>\r\n  )\r\n}\r\n\r\nexport default WalletUserMenuItem\r\n","import React from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport {\r\n  Flex,\r\n  LogoutIcon,\r\n  useModal,\r\n  UserMenu as UIKitUserMenu,\r\n  UserMenuDivider,\r\n  UserMenuItem,\r\n} from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\r\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\r\nimport WalletUserMenuItem from './WalletUserMenuItem'\r\n\r\nconst UserMenu = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { logout } = useAuth()\r\n  const { balance, fetchStatus } = useGetBnbBalance()\r\n  const { isInitialized, isLoading, profile } = useProfile()\r\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\r\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\r\n  const hasProfile = isInitialized && !!profile\r\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\r\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\r\n\r\n  if (!account) {\r\n    return <ConnectWalletButton scale=\"sm\" />\r\n  }\r\n\r\n  return (\r\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\r\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\r\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\r\n        {t('Transactions')}\r\n      </UserMenuItem>\r\n      <UserMenuDivider />\r\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} />\r\n      <UserMenuDivider />\r\n      <UserMenuItem as=\"button\" onClick={logout}>\r\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\r\n          {t('Disconnect')}\r\n          <LogoutIcon />\r\n        </Flex>\r\n      </UserMenuItem>\r\n    </UIKitUserMenu>\r\n  )\r\n}\r\n\r\nexport default UserMenu\r\n","import React from 'react'\r\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport config from './config'\r\nimport UserMenu from './UserMenu'\r\nimport GlobalSettings from './GlobalSettings'\r\n\r\nconst Menu = (props) => {\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { profile } = useProfile()\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n\r\n  return (\r\n    <UikitMenu\r\n      userMenu={<UserMenu />}\r\n      globalMenu={<GlobalSettings />}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config(t)}\r\n      profile={{\r\n        username: profile?.username,\r\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n        profileLink: '/profile',\r\n        noProfileLink: '/profile',\r\n        showPip: !profile?.username,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nconst useIntersectionObserver = () => {\r\n  const observerRef = useRef<HTMLDivElement>(null)\r\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const [isIntersecting, setIsIntersecting] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\r\n      setIsIntersecting(entry.isIntersecting)\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      intersectionObserverRef.current.observe(observerRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n\r\n    return () => {\r\n      if (intersectionObserverRef.current && observerIsSet) {\r\n        intersectionObserverRef.current.disconnect()\r\n      }\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  return { observerRef, isIntersecting }\r\n}\r\n\r\nexport default useIntersectionObserver\r\n","import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { useAppDispatch } from 'state'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  fetchPoolsStakingLimitsAsync,\r\n} from '.'\r\nimport { State, DeserializedPool } from '../types'\r\nimport { transformPool } from './helpers'\r\n\r\nexport const useFetchPublicPoolsData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n    }\r\n\r\n    fetchPoolsPublicData()\r\n    dispatch(fetchPoolsStakingLimitsAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useFetchUserPools = (account) => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n}\r\n\r\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\r\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  return { pools: pools.map(transformPool), userDataLoaded }\r\n}\r\n\r\nexport const useFetchCakeVault = () => {\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultPublicData())\r\n  }, [dispatch, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultUserData({ account }))\r\n  }, [dispatch, fastRefresh, account])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultFees())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useCakeVault = () => {\r\n  const {\r\n    totalShares: totalSharesAsString,\r\n    pricePerFullShare: pricePerFullShareAsString,\r\n    totalCakeInVault: totalCakeInVaultAsString,\r\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\r\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\r\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\r\n    userData: {\r\n      isLoading,\r\n      userShares: userSharesAsString,\r\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  } = useSelector((state: State) => state.pools.cakeVault)\r\n\r\n  const estimatedCakeBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyRewardAsString)\r\n  }, [estimatedCakeBountyRewardAsString])\r\n\r\n  const totalPendingCakeHarvest = useMemo(() => {\r\n    return new BigNumber(totalPendingCakeHarvestAsString)\r\n  }, [totalPendingCakeHarvestAsString])\r\n\r\n  const totalShares = useMemo(() => {\r\n    return new BigNumber(totalSharesAsString)\r\n  }, [totalSharesAsString])\r\n\r\n  const pricePerFullShare = useMemo(() => {\r\n    return new BigNumber(pricePerFullShareAsString)\r\n  }, [pricePerFullShareAsString])\r\n\r\n  const totalCakeInVault = useMemo(() => {\r\n    return new BigNumber(totalCakeInVaultAsString)\r\n  }, [totalCakeInVaultAsString])\r\n\r\n  const userShares = useMemo(() => {\r\n    return new BigNumber(userSharesAsString)\r\n  }, [userSharesAsString])\r\n\r\n  const cakeAtLastUserAction = useMemo(() => {\r\n    return new BigNumber(cakeAtLastUserActionAsString)\r\n  }, [cakeAtLastUserActionAsString])\r\n\r\n  return {\r\n    totalShares,\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: {\r\n      performanceFee,\r\n      callFee,\r\n      withdrawalFee,\r\n      withdrawalFeePeriod,\r\n    },\r\n    userData: {\r\n      isLoading,\r\n      userShares,\r\n      cakeAtLastUserAction,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  }\r\n}\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <InputWrapper>\r\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\r\n    </InputWrapper>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getApy } from 'utils/compoundApyHelpers'\r\n\r\nconst Footer = styled(Flex)`\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n`\r\n\r\nconst BulletList = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 16px;\r\n  padding: 0;\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  li::before {\r\n    content: '•';\r\n    margin-right: 4px;\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n  li::marker {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\ninterface RoiCalculatorFooterProps {\r\n  isFarm: boolean\r\n  apr: number\r\n  displayApr: string\r\n  autoCompoundFrequency: number\r\n  multiplier: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  performanceFee: number\r\n}\r\n\r\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\r\n  isFarm,\r\n  apr,\r\n  displayApr,\r\n  autoCompoundFrequency,\r\n  multiplier,\r\n  linkLabel,\r\n  linkHref,\r\n  performanceFee,\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n  const { t } = useTranslation()\r\n  const {\r\n    targetRef: multiplierRef,\r\n    tooltip: multiplierTooltip,\r\n    tooltipVisible: multiplierTooltipVisible,\r\n  } = useTooltip(\r\n    <>\r\n      <Text>\r\n        {t(\r\n          'The Multiplier represents the proportion of CAKE rewards each farm receives, as a proportion of the CAKE produced each block.',\r\n        )}\r\n      </Text>\r\n      <Text my=\"24px\">\r\n        {t('For example, if a 1x farm received 1 CAKE per block, a 40x farm would receive 40 CAKE per block.')}\r\n      </Text>\r\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\r\n    </>,\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const gridRowCount = isFarm ? 4 : 2\r\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\r\n\r\n  return (\r\n    <Footer p=\"16px\" flexDirection=\"column\">\r\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\r\n        {isExpanded ? t('Hide') : t('Details')}\r\n      </ExpandableLabel>\r\n      {isExpanded && (\r\n        <Box px=\"8px\">\r\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\r\n            {isFarm && (\r\n              <>\r\n                <Text color=\"textSubtle\" small>\r\n                  {t('APR (incl. LP rewards)')}\r\n                </Text>\r\n                <Text small textAlign=\"right\">\r\n                  {displayApr}%\r\n                </Text>\r\n              </>\r\n            )}\r\n            <Text color=\"textSubtle\" small>\r\n              {isFarm ? t('Base APR (CAKE yield only)') : t('APR')}\r\n            </Text>\r\n            <Text small textAlign=\"right\">\r\n              {apr.toFixed(2)}%\r\n            </Text>\r\n            <Text color=\"textSubtle\" small>\r\n              {t('APY (%compoundTimes%x daily compound)', {\r\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\r\n              })}\r\n            </Text>\r\n            <Text small textAlign=\"right\">\r\n              {apy}%\r\n            </Text>\r\n            {isFarm && (\r\n              <>\r\n                <Text color=\"textSubtle\" small>\r\n                  {t('Farm Multiplier')}\r\n                </Text>\r\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\r\n                  <Text small textAlign=\"right\" mr=\"4px\">\r\n                    {multiplier}\r\n                  </Text>\r\n                  <span ref={multiplierRef}>\r\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\r\n                  </span>\r\n                  {multiplierTooltipVisible && multiplierTooltip}\r\n                </Flex>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <BulletList>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Calculated based on current rates.')}\r\n              </Text>\r\n            </li>\r\n            {isFarm && (\r\n              <li>\r\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\r\n                </Text>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t(\r\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n                )}\r\n              </Text>\r\n            </li>\r\n            {performanceFee > 0 && (\r\n              <li>\r\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\r\n                    fee: performanceFee,\r\n                  })}\r\n                </Text>\r\n              </li>\r\n            )}\r\n          </BulletList>\r\n          <Flex justifyContent=\"center\" mt=\"24px\">\r\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n    </Footer>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorFooter\r\n","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\r\n\r\nconst MILLION = 1000000\r\nconst TRILLION = 1000000000000\r\n\r\nconst RoiCardWrapper = styled(Box)`\r\n  background: linear-gradient(180deg, #53dee9, #0b4879);\r\n  padding: 1px;\r\n  width: 100%;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n`\r\n\r\nconst RoiCardInner = styled(Box)`\r\n  height: 120px;\r\n  padding: 24px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n`\r\n\r\nconst RoiInputContainer = styled(Box)`\r\n  position: relative;\r\n  & > input {\r\n    padding-left: 28px;\r\n    max-width: 70%;\r\n  }\r\n  &:before {\r\n    position: absolute;\r\n    content: '$';\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n    left: 16px;\r\n    top: 8px;\r\n  }\r\n`\r\n\r\nconst RoiDisplayContainer = styled(Flex)`\r\n  max-width: 82%;\r\n  margin-right: 8px;\r\n`\r\n\r\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\r\n  position: relative;\r\n  overflow-x: auto;\r\n  &::-webkit-scrollbar {\r\n    height: 0px;\r\n  }\r\n\r\n  ${({ fadeOut, theme }) =>\r\n    fadeOut &&\r\n    `\r\n      &:after {\r\n        background: linear-gradient(\r\n          to right,\r\n          ${theme.colors.background}00,\r\n          ${theme.colors.background}E6\r\n        );\r\n        content: '';\r\n        height: 100%;\r\n        pointer-events: none;\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        width: 40px;\r\n      }\r\n  `}\r\n`\r\n\r\ninterface RoiCardProps {\r\n  earningTokenSymbol: string\r\n  calculatorState: RoiCalculatorReducerState\r\n  setTargetRoi: (amount: string) => void\r\n  setCalculatorMode: (mode: CalculatorMode) => void\r\n}\r\n\r\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\r\n  const inputRef = useRef<HTMLInputElement | null>(null)\r\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\r\n  const { mode } = calculatorState.controls\r\n\r\n  const { t } = useTranslation()\r\n\r\n  useEffect(() => {\r\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\r\n      inputRef.current.focus()\r\n    }\r\n  }, [mode])\r\n\r\n  const onEnterEditing = () => {\r\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\r\n  }\r\n\r\n  const onExitRoiEditing = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTargetRoi(event.currentTarget.value)\r\n  }\r\n  return (\r\n    <RoiCardWrapper>\r\n      <RoiCardInner>\r\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\r\n          {t('ROI at current rates')}\r\n        </Text>\r\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\r\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\r\n            <>\r\n              <RoiInputContainer>\r\n                <Input\r\n                  ref={inputRef}\r\n                  type=\"number\"\r\n                  inputMode=\"decimal\"\r\n                  pattern=\"\\d*\"\r\n                  scale=\"sm\"\r\n                  value={roiUSD}\r\n                  placeholder=\"0.0\"\r\n                  onChange={handleExpectedRoiChange}\r\n                />\r\n              </RoiInputContainer>\r\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\r\n                <CheckmarkIcon color=\"primary\" />\r\n              </IconButton>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <RoiDisplayContainer onClick={onEnterEditing}>\r\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\r\n                <Text fontSize=\"24px\" bold>\r\n                  $\r\n                </Text>\r\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\r\n                  {roiUSD.toLocaleString('en', {\r\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\r\n                  })}\r\n                </RoiDollarAmount>\r\n              </RoiDisplayContainer>\r\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\r\n                <PencilIcon color=\"primary\" />\r\n              </IconButton>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          ~ {roiTokens} {earningTokenSymbol} (\r\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\r\n          %)\r\n        </Text>\r\n      </RoiCardInner>\r\n    </RoiCardWrapper>\r\n  )\r\n}\r\n\r\nexport default RoiCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from '@pancakeswap/uikit'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\r\n\r\nconst rotate = keyframes`\r\n  0% {\r\n    transform: scale(1);\r\n    stroke-width: 0;\r\n  }\r\n  50% {\r\n    transform: scale(1.3);\r\n    stroke-width: 2;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    stroke-width: 0;\r\n  }\r\n`\r\n\r\nconst ArrowContainer = styled(Flex)`\r\n  & > svg {\r\n    animation: 0.2s ${rotate} linear;\r\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\r\n    stroke-width: 0;\r\n  }\r\n`\r\n\r\ninterface AnimatedArrowProps {\r\n  calculatorState: RoiCalculatorReducerState\r\n}\r\n\r\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\r\n  const [key, setKey] = useState('roiArrow-0')\r\n  const { mode } = calculatorState.controls\r\n\r\n  // Trigger animation on state change\r\n  useEffect(() => {\r\n    setKey((prevKey) => {\r\n      const prevId = parseInt(prevKey.split('-')[1], 10)\r\n      return `roiArrow-${prevId + 1}`\r\n    })\r\n  }, [calculatorState])\r\n\r\n  return (\r\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\r\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\r\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\r\n      ) : (\r\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\r\n      )}\r\n    </ArrowContainer>\r\n  )\r\n}\r\n\r\nexport default AnimatedArrow\r\n","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Flex,\r\n  ButtonMenu,\r\n  Checkbox,\r\n  BalanceInput,\r\n  HelpIcon,\r\n  ButtonMenuItem,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\r\nimport RoiCard from './RoiCard'\r\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\r\nimport AnimatedArrow from './AnimatedArrow'\r\n\r\ninterface RoiCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  onBack?: () => void\r\n  earningTokenPrice: number\r\n  apr: number\r\n  displayApr?: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenSymbol: string\r\n  stakingTokenPrice: number\r\n  earningTokenSymbol?: string\r\n  multiplier?: string\r\n  autoCompoundFrequency?: number\r\n  performanceFee?: number\r\n  isFarm?: boolean\r\n  initialValue?: string\r\n}\r\n\r\nconst StyledModal = styled(Modal)`\r\n  width: 345px;\r\n  & > :nth-child(2) {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ScrollableContainer = styled.div`\r\n  padding: 24px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-height: none;\r\n  }\r\n`\r\n\r\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\r\n  width: 100%;\r\n\r\n  & > button {\r\n    width: 100%;\r\n  }\r\n\r\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\r\n`\r\n\r\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\r\n  onDismiss,\r\n  onBack,\r\n  earningTokenPrice,\r\n  apr,\r\n  displayApr,\r\n  linkLabel,\r\n  linkHref,\r\n  stakingTokenBalance,\r\n  stakingTokenSymbol,\r\n  stakingTokenPrice,\r\n  multiplier,\r\n  initialValue,\r\n  earningTokenSymbol = 'CAKE',\r\n  autoCompoundFrequency = 0,\r\n  performanceFee = 0,\r\n  isFarm = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useActiveWeb3React()\r\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n  const {\r\n    state,\r\n    setPrincipalFromUSDValue,\r\n    setPrincipalFromTokenValue,\r\n    setStakingDuration,\r\n    toggleCompounding,\r\n    toggleEditingCurrency,\r\n    setCompoundingFrequency,\r\n    setCalculatorMode,\r\n    setTargetRoi,\r\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\r\n\r\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\r\n  const { principalAsUSD, principalAsToken } = state.data\r\n\r\n  // Auto-focus input on opening modal\r\n  useEffect(() => {\r\n    if (balanceInputRef.current) {\r\n      balanceInputRef.current.focus()\r\n    }\r\n  }, [])\r\n\r\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\r\n  useEffect(() => {\r\n    if (initialValue) {\r\n      setPrincipalFromTokenValue(initialValue)\r\n    }\r\n  }, [initialValue, setPrincipalFromTokenValue])\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    isFarm\r\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\r\n      : t(\r\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\r\n          { assetSymbol: stakingTokenSymbol },\r\n        ),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const onBalanceFocus = () => {\r\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\r\n  }\r\n\r\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\r\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\r\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\r\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\r\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\r\n\r\n  return (\r\n    <StyledModal\r\n      title={t('ROI Calculator')}\r\n      onDismiss={onBack || onDismiss}\r\n      onBack={onBack ?? null}\r\n      headerBackground=\"gradients.cardHeader\"\r\n    >\r\n      <ScrollableContainer>\r\n        <Flex flexDirection=\"column\" mb=\"8px\">\r\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\r\n          </Text>\r\n          <BalanceInput\r\n            currencyValue={`${conversionValue} ${conversionUnit}`}\r\n            innerRef={balanceInputRef}\r\n            placeholder=\"0.00\"\r\n            value={editingValue}\r\n            unit={editingUnit}\r\n            onUserInput={onUserInput}\r\n            switchEditingUnits={toggleEditingCurrency}\r\n            onFocus={onBalanceFocus}\r\n          />\r\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('100')}\r\n            >\r\n              $100\r\n            </Button>\r\n            <Button\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"68px\"\r\n              variant=\"tertiary\"\r\n              onClick={() => setPrincipalFromUSDValue('1000')}\r\n            >\r\n              $1000\r\n            </Button>\r\n            <Button\r\n              disabled={stakingTokenBalance.lte(0) || !account}\r\n              scale=\"xs\"\r\n              p=\"4px 16px\"\r\n              width=\"128px\"\r\n              variant=\"tertiary\"\r\n              onClick={() =>\r\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\r\n              }\r\n            >\r\n              {t('My Balance').toLocaleUpperCase()}\r\n            </Button>\r\n            <span ref={targetRef}>\r\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\r\n            </span>\r\n            {tooltipVisible && tooltip}\r\n          </Flex>\r\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n            {t('Staked for')}\r\n          </Text>\r\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\r\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\r\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\r\n          </FullWidthButtonMenu>\r\n          {autoCompoundFrequency === 0 && (\r\n            <>\r\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\r\n                {t('Compounding every')}\r\n              </Text>\r\n              <Flex alignItems=\"center\">\r\n                <Flex flex=\"1\">\r\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\r\n                </Flex>\r\n                <Flex flex=\"6\">\r\n                  <FullWidthButtonMenu\r\n                    disabled={!compounding}\r\n                    activeIndex={activeCompoundingIndex}\r\n                    onItemClick={setCompoundingFrequency}\r\n                    scale=\"sm\"\r\n                  >\r\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\r\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\r\n                  </FullWidthButtonMenu>\r\n                </Flex>\r\n              </Flex>\r\n            </>\r\n          )}\r\n        </Flex>\r\n        <AnimatedArrow calculatorState={state} />\r\n        <Flex>\r\n          <RoiCard\r\n            earningTokenSymbol={earningTokenSymbol}\r\n            calculatorState={state}\r\n            setTargetRoi={setTargetRoi}\r\n            setCalculatorMode={setCalculatorMode}\r\n          />\r\n        </Flex>\r\n      </ScrollableContainer>\r\n      <RoiCalculatorFooter\r\n        isFarm={isFarm}\r\n        apr={apr}\r\n        displayApr={displayApr}\r\n        autoCompoundFrequency={autoCompoundFrequency}\r\n        multiplier={multiplier}\r\n        linkLabel={linkLabel}\r\n        linkHref={linkHref}\r\n        performanceFee={performanceFee}\r\n      />\r\n    </StyledModal>\r\n  )\r\n}\r\n\r\nexport default RoiCalculatorModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nconst ApyLabelContainer = styled(Flex)`\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\ninterface AprRowProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\r\n    pool\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <RoiCalculatorModal\r\n      earningTokenPrice={earningTokenPrice}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\r\n      stakingTokenSymbol={stakingToken.symbol}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      autoCompoundFrequency={autoCompoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            onClick={onPresentApyModal}\r\n          />\r\n          <IconButton variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </ApyLabelContainer>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n","import styled from 'styled-components'\r\nimport { Card } from '@pancakeswap/uikit'\r\n\r\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\r\n  max-width: 352px;\r\n  margin: 0 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport default StyledCard\r\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TagProps,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Vote Now')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Soon')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\r\n      {t('Closed')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport {\r\n  Flex,\r\n  MetamaskIcon,\r\n  Text,\r\n  TooltipText,\r\n  LinkExternal,\r\n  TimerIcon,\r\n  Skeleton,\r\n  useTooltip,\r\n  Button,\r\n  Link,\r\n  HelpIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBscScanLink } from 'utils'\r\nimport Balance from 'components/Balance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\n\r\ninterface ExpandedFooterProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n}\r\n\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const {\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    sousId,\r\n    isAutoVault,\r\n  } = pool\r\n\r\n  const tokenAddress = earningToken.address || ''\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <ExpandedWrapper flexDirection=\"column\">\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total staked')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked && totalStaked.gte(0) ? (\r\n            <>\r\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n              <span ref={totalStakedTargetRef}>\r\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n          {totalStakedTooltipVisible && totalStakedTooltip}\r\n        </Flex>\r\n      </Flex>\r\n      {stakingLimit && stakingLimit.gt(0) && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\r\n          <Text small>{t('Max. stake per user')}:</Text>\r\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n        </Flex>\r\n      )}\r\n      {shouldShowBlockCountdown && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n          {blocksRemaining || blocksUntilStart ? (\r\n            <Flex alignItems=\"center\">\r\n              <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n                  {t('Blocks')}\r\n                </Text>\r\n                <TimerIcon ml=\"4px\" color=\"primary\" />\r\n              </Link>\r\n            </Flex>\r\n          ) : (\r\n            <Skeleton width=\"54px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      )}\r\n      {isAutoVault && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {tooltipVisible && tooltip}\r\n          <TooltipText ref={targetRef} small>\r\n            {t('Performance Fee')}\r\n          </TooltipText>\r\n          <Flex alignItems=\"center\">\r\n            {performanceFee ? (\r\n              <Text ml=\"4px\" small>\r\n                {performanceFee / 100}%\r\n              </Text>\r\n            ) : (\r\n              <Skeleton width=\"90px\" height=\"21px\" />\r\n            )}\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\r\n          {t('See Token Info')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\r\n          {t('View Project Site')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      {poolContractAddress && (\r\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n          <LinkExternal\r\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n            bold={false}\r\n            small\r\n          >\r\n            {t('View Contract')}\r\n          </LinkExternal>\r\n        </Flex>\r\n      )}\r\n      {account && isMetaMaskInScope && tokenAddress && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"text\"\r\n            p=\"0\"\r\n            height=\"auto\"\r\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n          >\r\n            <Text color=\"primary\" fontSize=\"14px\">\r\n              {t('Add to Metamask')}\r\n            </Text>\r\n            <MetamaskIcon ml=\"4px\" />\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n    </ExpandedWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(ExpandedFooter)\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport {\r\n  TokenPairImage as UIKitTokenPairImage,\r\n  TokenPairImageProps as UIKitTokenPairImageProps,\r\n  TokenImage as UIKitTokenImage,\r\n  ImageProps,\r\n} from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Token } from '@pancakeswap/sdk'\r\n\r\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\r\n  primaryToken: Token\r\n  secondaryToken: Token\r\n}\r\n\r\nconst getImageUrlFromToken = (token: Token) => {\r\n  const address = token.symbol === 'BNB' ? tokens.wbnb.address : token.address\r\n  return `/images/tokens/${address}.svg`\r\n}\r\n\r\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\r\n  return (\r\n    <UIKitTokenPairImage\r\n      primarySrc={getImageUrlFromToken(primaryToken)}\r\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\ninterface TokenImageProps extends ImageProps {\r\n  token: Token\r\n}\r\n\r\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\r\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\r\n}\r\n","import React from 'react'\r\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\r\nimport { mainnetTokens } from 'config/constants/tokens'\r\n\r\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\r\n  const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\r\n\r\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\r\n}\r\n\r\nexport default CakeVaultTokenPairImage\r\n","import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t('Earn CAKE, stake CAKE')\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\">\r\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\r\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\r\n          </Heading>\r\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <CakeVaultTokenPairImage width={64} height={64} />\r\n        ) : (\r\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\r\n        )}\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport useLastUpdated from 'hooks/useLastUpdated'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\n\r\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\r\n      const receipt = await tx.wait()\r\n\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\r\n          </ToastDescriptionWithTx>,\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }, [\r\n    account,\r\n    dispatch,\r\n    lpContract,\r\n    sousChefContract,\r\n    sousId,\r\n    earningTokenSymbol,\r\n    t,\r\n    toastError,\r\n    toastSuccess,\r\n    callWithGasPrice,\r\n  ])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\n// Approve CAKE auto pool\r\nexport const useVaultApprove = (setLastUpdated: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const cakeContract = useCake()\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\r\n    setRequestedApproval(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(\r\n        t('Contract Enabled'),\r\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n          {t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' })}\r\n        </ToastDescriptionWithTx>,\r\n      )\r\n      setLastUpdated()\r\n      setRequestedApproval(false)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setRequestedApproval(false)\r\n    }\r\n  }\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useCheckVaultApprovalStatus = () => {\r\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\r\n        setIsVaultApproved(currentAllowance.gt(0))\r\n      } catch (error) {\r\n        setIsVaultApproved(false)\r\n      }\r\n    }\r\n\r\n    checkApprovalStatus()\r\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\r\n\r\n  return { isVaultApproved, setLastUpdated }\r\n}\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useApprovePool } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  pool: DeserializedPool\r\n  isLoading?: boolean\r\n}\r\n\r\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\r\n  const { sousId, stakingToken, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenContract = useERC20(stakingToken.address || '')\r\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalAction\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap/uikit'\r\n\r\ninterface PercentageButtonProps {\r\n  onClick: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default PercentageButton\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stakeFarm } from 'utils/calls'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\r\n    ...options,\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousStakeBnb = async (sousChefContract, amount) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\r\n    ...options,\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await stakeFarm(masterChefContract, 0, amount)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, decimals)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakePool\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { parseUnits } from 'ethers/lib/utils'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport getGasPrice from 'utils/getGasPrice'\r\n\r\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\r\n  const gasPrice = getGasPrice()\r\n  const units = parseUnits(amount, decimals)\r\n\r\n  const tx = await sousChefContract.withdraw(units.toString(), {\r\n    gasPrice,\r\n  })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await unstakeFarm(masterChefContract, 0, amount)\r\n      } else if (enableEmergencyWithdraw) {\r\n        await sousEmergencyUnstake(sousChefContract)\r\n      } else {\r\n        await sousUnstake(sousChefContract, amount, decimals)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakePool\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n  Slider,\r\n  BalanceInput,\r\n  AutoRenewIcon,\r\n  Link,\r\n  CalculateIcon,\r\n  IconButton,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\r\nimport PercentageButton from './PercentageButton'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\nimport useUnstakePool from '../../../hooks/useUnstakePool'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst AnnualRoiContainer = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst AnnualRoiDisplay = styled(Text)`\r\n  width: 72px;\r\n  max-width: 72px;\r\n  overflow: hidden;\r\n  text-align: right;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\r\n  }\r\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n  const userNotEnoughToken = isRemovingStake\r\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\r\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\r\n\r\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\r\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\r\n\r\n  const interestBreakdown = getInterestBreakdown({\r\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\r\n    apr,\r\n    earningTokenPrice,\r\n  })\r\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\r\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\r\n\r\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n  }, [\r\n    stakeAmount,\r\n    stakingLimit,\r\n    userData,\r\n    stakingToken,\r\n    isRemovingStake,\r\n    setHasReachedStakedLimit,\r\n    fullDecimalStakeAmount,\r\n  ])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      if (isRemovingStake) {\r\n        // unstaking\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n      } else {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n      }\r\n      setPendingTx(false)\r\n      onDismiss()\r\n    } catch (e) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  if (showRoiCalculator) {\r\n    return (\r\n      <RoiCalculatorModal\r\n        earningTokenPrice={earningTokenPrice}\r\n        stakingTokenPrice={stakingTokenPrice}\r\n        apr={apr}\r\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        linkHref={getTokenLink}\r\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\r\n        stakingTokenSymbol={stakingToken.symbol}\r\n        earningTokenSymbol={earningToken.symbol}\r\n        onBack={() => setShowRoiCalculator(false)}\r\n        initialValue={stakeAmount}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      minWidth=\"346px\"\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {stakingLimit.gt(0) && !isRemovingStake && (\r\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n          {t('Max stake for this pool: %amount% %token%', {\r\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\r\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      {hasReachedStakeLimit && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Maximum total stake: %amount% %token%', {\r\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      {userNotEnoughToken && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Insufficient %symbol% balance', {\r\n            symbol: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', {\r\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n        })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n      </Flex>\r\n      {!isRemovingStake && (\r\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Text mr=\"8px\" color=\"textSubtle\">\r\n            {t('Annual ROI at current rates')}:\r\n          </Text>\r\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\r\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\r\n            <IconButton variant=\"text\" scale=\"sm\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n            </IconButton>\r\n          </AnnualRoiContainer>\r\n        </Flex>\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <StyledLink external href={getTokenLink}>\r\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\r\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n          </Button>\r\n        </StyledLink>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport getGasPrice from 'utils/getGasPrice'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { DEFAULT_GAS_LIMIT } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst harvestPool = async (sousChefContract) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst harvestPoolBnb = async (sousChefContract) => {\r\n  const gasPrice = getGasPrice()\r\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvestFarm(masterChefContract, 0)\r\n    } else if (isUsingBnb) {\r\n      await harvestPoolBnb(sousChefContract)\r\n    } else {\r\n      await harvestPool(sousChefContract)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestPool\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  HelpIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport useHarvestPool from '../../../hooks/useHarvestPool'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\n\r\ninterface CollectModalProps {\r\n  formattedBalance: string\r\n  fullBalance: string\r\n  earningToken: Token\r\n  earningsDollarValue: number\r\n  sousId: number\r\n  isBnbPool: boolean\r\n  isCompoundPool?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst CollectModal: React.FC<CollectModalProps> = ({\r\n  formattedBalance,\r\n  fullBalance,\r\n  earningToken,\r\n  earningsDollarValue,\r\n  sousId,\r\n  isBnbPool,\r\n  isCompoundPool = false,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\r\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\r\n    </>,\r\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n    // compounding\r\n    if (shouldCompound) {\r\n      try {\r\n        await onStake(fullBalance, earningToken.decimals)\r\n        toastSuccess(\r\n          `${t('Compounded')}!`,\r\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {isCompoundPool && (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\r\n          <ButtonMenu\r\n            activeIndex={shouldCompound ? 0 : 1}\r\n            scale=\"sm\"\r\n            variant=\"subtle\"\r\n            onItemClick={(index) => setShouldCompound(!index)}\r\n          >\r\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\r\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n          <Flex ml=\"10px\" ref={targetRef}>\r\n            <HelpIcon color=\"textSubtle\" />\r\n          </Flex>\r\n          {tooltipVisible && tooltip}\r\n        </Flex>\r\n      )}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Heading>\r\n            {formattedBalance} {earningToken.symbol}\r\n          </Heading>\r\n          {earningsDollarValue > 0 && (\r\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Button\r\n        mt=\"8px\"\r\n        onClick={handleHarvestConfirm}\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CollectModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport CollectModal from '../Modals/CollectModal'\r\n\r\ninterface HarvestActionsProps {\r\n  earnings: BigNumber\r\n  earningToken: Token\r\n  sousId: number\r\n  earningTokenPrice: number\r\n  isBnbPool: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\r\n  earnings,\r\n  earningToken,\r\n  sousId,\r\n  isBnbPool,\r\n  earningTokenPrice,\r\n  isLoading = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const hasEarnings = earnings.toNumber() > 0\r\n  const isCompoundPool = sousId === 0\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\r\n      <Flex flexDirection=\"column\">\r\n        {isLoading ? (\r\n          <Skeleton width=\"80px\" height=\"48px\" />\r\n        ) : (\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Flex>\r\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n        {isCompoundPool ? t('Collect') : t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { DeserializedPool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { DeserializedPool } from 'state/types'\r\nimport AprRow from './AprRow'\r\nimport { StyledCard } from './StyledCard'\r\nimport CardFooter from './CardFooter'\r\nimport StyledCardHeader from './StyledCardHeader'\r\nimport CardActions from './CardActions'\r\n\r\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\r\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const accountHasStakedBalance = stakedBalance.gt(0)\r\n\r\n  return (\r\n    <StyledCard\r\n      isFinished={isFinished && sousId !== 0}\r\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\r\n    >\r\n      <StyledCardHeader\r\n        isStaking={accountHasStakedBalance}\r\n        earningToken={earningToken}\r\n        stakingToken={stakingToken}\r\n        isFinished={isFinished && sousId !== 0}\r\n      />\r\n      <CardBody>\r\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\r\n        <Flex mt=\"24px\" flexDirection=\"column\">\r\n          {account ? (\r\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\r\n          ) : (\r\n            <>\r\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                {t('Start earning')}\r\n              </Text>\r\n              <ConnectWalletButton />\r\n            </>\r\n          )}\r\n        </Flex>\r\n      </CardBody>\r\n      <CardFooter pool={pool} account={account} />\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApprove } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  setLastUpdated: () => void\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VaultApprovalAction\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\r\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\r\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\r\n\r\n  useEffect(() => {\r\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\r\n    const secondsRemainingCalc = feeEndTime - currentSeconds\r\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\r\n\r\n    const tick = () => {\r\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\r\n    }\r\n    const timerInterval = setInterval(() => tick(), 1000)\r\n    if (doesUnstakingFeeApply) {\r\n      setSecondsRemaining(secondsRemainingCalc)\r\n      setHasUnstakingFee(true)\r\n    } else {\r\n      setHasUnstakingFee(false)\r\n      clearInterval(timerInterval)\r\n    }\r\n\r\n    return () => clearInterval(timerInterval)\r\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\r\n\r\n  return { hasUnstakingFee, secondsRemaining }\r\n}\r\n\r\nexport default useWithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\r\n  const { t } = useTranslation()\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\r\n}\r\n\r\nexport default WithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\r\n\r\ninterface UnstakingFeeCountdownRowProps {\r\n  isTableVariant?: boolean\r\n}\r\n\r\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    fees: { withdrawalFee, withdrawalFeePeriod },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100 || '-'\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\r\n    parseInt(lastDepositedTime, 10),\r\n    userShares,\r\n    withdrawalFeePeriod,\r\n  )\r\n\r\n  // The user has made a deposit, but has no fee\r\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\r\n\r\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\r\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\r\n\r\n  const getRowText = () => {\r\n    if (noFeeToPay) {\r\n      return t('Unstaking Fee').toLowerCase()\r\n    }\r\n    if (shouldShowTimer) {\r\n      return t('unstaking fee until')\r\n    }\r\n    return t('unstaking fee if withdrawn within 72h')\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\r\n      justifyContent=\"space-between\"\r\n      flexDirection={isTableVariant ? 'column' : 'row'}\r\n    >\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\r\n      </TooltipText>\r\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default UnstakingFeeCountdownRow\r\n","import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FeeSummary\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Flex,\r\n  Image,\r\n  Button,\r\n  Slider,\r\n  BalanceInput,\r\n  AutoRenewIcon,\r\n  CalculateIcon,\r\n  IconButton,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchCakeVaultUserData } from 'state/pools'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\r\nimport FeeSummary from './FeeSummary'\r\n\r\ninterface VaultStakeModalProps {\r\n  pool: DeserializedPool\r\n  stakingMax: BigNumber\r\n  performanceFee?: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst AnnualRoiContainer = styled(Flex)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst AnnualRoiDisplay = styled(Text)`\r\n  width: 72px;\r\n  max-width: 72px;\r\n  overflow: hidden;\r\n  text-align: right;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst callOptions = {\r\n  gasLimit: 380000,\r\n}\r\n\r\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\r\n  pool,\r\n  stakingMax,\r\n  performanceFee,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\r\n  const { account } = useWeb3React()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [percent, setPercent] = useState(0)\r\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\r\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\r\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n\r\n  const interestBreakdown = getInterestBreakdown({\r\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\r\n    apr,\r\n    earningTokenPrice,\r\n    performanceFee,\r\n  })\r\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\r\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\r\n\r\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\r\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\r\n      setPercent(percentage > 100 ? 100 : percentage)\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\r\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\r\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\r\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\r\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\r\n\r\n    if (isWithdrawingAll) {\r\n      try {\r\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(\r\n            t('Unstaked!'),\r\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n              {t('Your earnings have also been harvested to your wallet')}\r\n            </ToastDescriptionWithTx>,\r\n          )\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      try {\r\n        const tx = await callWithGasPrice(\r\n          cakeVaultContract,\r\n          'withdraw',\r\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\r\n          callOptions,\r\n        )\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(\r\n            t('Unstaked!'),\r\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n              {t('Your earnings have also been harvested to your wallet')}\r\n            </ToastDescriptionWithTx>,\r\n          )\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    try {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Staked!'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n            {t('Your funds have been staked in the pool')}\r\n          </ToastDescriptionWithTx>,\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n        dispatch(fetchCakeVaultUserData({ account }))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      handleWithdrawal(convertedStakeAmount)\r\n    } else {\r\n      // staking\r\n      handleDeposit(convertedStakeAmount)\r\n    }\r\n  }\r\n\r\n  if (showRoiCalculator) {\r\n    return (\r\n      <RoiCalculatorModal\r\n        earningTokenPrice={earningTokenPrice}\r\n        stakingTokenPrice={stakingTokenPrice}\r\n        apr={apr}\r\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        linkHref={getTokenLink}\r\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\r\n        stakingTokenSymbol={stakingToken.symbol}\r\n        earningTokenSymbol={earningToken.symbol}\r\n        onBack={() => setShowRoiCalculator(false)}\r\n        initialValue={stakeAmount}\r\n        performanceFee={performanceFee}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image src={`/images/tokens/${stakingToken.address}.png`} width={24} height={24} alt={stakingToken.symbol} />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\r\n          25%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\r\n          50%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\r\n          75%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\r\n          {t('Max')}\r\n        </StyledButton>\r\n      </Flex>\r\n      {isRemovingStake && hasUnstakingFee && (\r\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\r\n      )}\r\n      {!isRemovingStake && (\r\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Text mr=\"8px\" color=\"textSubtle\">\r\n            {t('Annual ROI at current rates')}:\r\n          </Text>\r\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\r\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\r\n            <IconButton variant=\"text\" scale=\"sm\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n            </IconButton>\r\n          </AnnualRoiContainer>\r\n        </Flex>\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\r\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        </Button>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VaultStakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { convertSharesToCake } from '../../../helpers'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  performanceFee: number\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { stakingToken } = pool\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(\r\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\r\n  )\r\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\">\r\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\r\n          ) : (\r\n            <Skeleton mt=\"1px\" height={16} width={64} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n","import React from 'react'\r\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: DeserializedPool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  performanceFee: number\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  performanceFee,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken } = pool\r\n  const { t } = useTranslation()\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(\r\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\r\n  )\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\r\n    ) : (\r\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default VaultStakeActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport VaultApprovalAction from './VaultApprovalAction'\r\nimport VaultStakeActions from './VaultStakeActions'\r\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst CakeVaultCardActions: React.FC<{\r\n  pool: DeserializedPool\r\n  accountHasSharesStaked: boolean\r\n  isLoading: boolean\r\n  performanceFee: number\r\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\r\n  const { stakingToken, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        <Box display=\"inline\">\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {isVaultApproved ? (\r\n          <VaultStakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            accountHasSharesStaked={accountHasSharesStaked}\r\n            performanceFee={performanceFee}\r\n          />\r\n        ) : (\r\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCardActions\r\n","import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n","import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: DeserializedPool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isActive>\r\n      <StyledCardHeader\r\n        isStaking={accountHasSharesStaked}\r\n        isAutoVault\r\n        earningToken={tokens.cake}\r\n        stakingToken={tokens.cake}\r\n      />\r\n      <StyledCardBody isLoading={isLoading}>\r\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\r\n        <Box mt=\"24px\">\r\n          <RecentCakeProfitRow />\r\n        </Box>\r\n        <Box mt=\"8px\">\r\n          <UnstakingFeeCountdownRow />\r\n        </Box>\r\n        <Flex mt=\"32px\" flexDirection=\"column\">\r\n          {account ? (\r\n            <VaultCardActions\r\n              pool={pool}\r\n              accountHasSharesStaked={accountHasSharesStaked}\r\n              isLoading={isLoading}\r\n              performanceFee={performanceFeeAsDecimal}\r\n            />\r\n          ) : (\r\n            <>\r\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                {t('Start earning')}\r\n              </Text>\r\n              <ConnectWalletButton />\r\n            </>\r\n          )}\r\n        </Flex>\r\n      </StyledCardBody>\r\n      <CardFooter pool={pool} account={account} />\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { ViewMode } from 'state/user/actions'\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-right: 0px;\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React from 'react'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ViewMode } from 'state/user/actions'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ToggleView from './ToggleView/ToggleView'\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n\r\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { t } = useTranslation()\r\n\r\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n\r\n  const liveOrFinishedSwitch = (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <NotificationDot show={hasStakeInFinishedPools}>\r\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\r\n            {t('Finished')}\r\n          </ButtonMenuItem>\r\n        </NotificationDot>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n\r\n  const stakedOnlySwitch = (\r\n    <ToggleWrapper>\r\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n      <Text> {t('Staked only')}</Text>\r\n    </ToggleWrapper>\r\n  )\r\n\r\n  return (\r\n    <ViewControls>\r\n      {viewModeToggle}\r\n      {stakedOnlySwitch}\r\n      {liveOrFinishedSwitch}\r\n    </ViewControls>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { ToastDescriptionWithTx } from 'components/Toast'\r\nimport Balance from 'components/Balance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\r\n\r\ninterface BountyModalProps {\r\n  onDismiss?: () => void\r\n  TooltipComponent: React.ElementType\r\n}\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const callFeeAsDecimal = callFee / 100\r\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\r\n    placement: 'bottom',\r\n    tooltipPadding: { right: 15 },\r\n  })\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 300000 })\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Bounty collected!'),\r\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\r\n            {t('CAKE bounty has been sent to your wallet.')}\r\n          </ToastDescriptionWithTx>,\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      {tooltipVisible && tooltip}\r\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\r\n        <Text>{t('You’ll claim')}</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              color=\"textSubtle\"\r\n              value={dollarBountyToDisplay}\r\n              decimals={2}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <Divider />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Pool total pending yield')}\r\n        </Text>\r\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Bounty')}\r\n        </Text>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {callFeeAsDecimal}%\r\n        </Text>\r\n      </Flex>\r\n      {account ? (\r\n        <Button\r\n          isLoading={pendingTx}\r\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\r\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          onClick={handleConfirmClick}\r\n          mb=\"28px\"\r\n          id=\"autoCakeConfirmBounty\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      ) : (\r\n        <ConnectWalletButton mb=\"28px\" />\r\n      )}\r\n      <Flex justifyContent=\"center\" alignItems=\"center\">\r\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n          {t('What’s this?')}\r\n        </Text>\r\n        <span ref={targetRef}>\r\n          <HelpIcon color=\"textSubtle\" />\r\n        </span>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BountyModal\r\n","import React, { useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Text,\r\n  Flex,\r\n  HelpIcon,\r\n  Button,\r\n  Heading,\r\n  Skeleton,\r\n  useModal,\r\n  Box,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport Balance from 'components/Balance'\r\nimport BountyModal from './BountyModal'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  flex: 1;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 240px;\r\n  }\r\n`\r\n\r\nconst BountyCard = () => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n  const TooltipComponent = ({ fee }: { fee: number }) => (\r\n    <>\r\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\r\n      <Text mb=\"16px\">\r\n        {t(\r\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\r\n        )}\r\n      </Text>\r\n      <Text style={{ fontWeight: 'bold' }}>\r\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\r\n    placement: 'bottom-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <StyledCard>\r\n        <CardBody>\r\n          <Flex flexDirection=\"column\">\r\n            <Flex alignItems=\"center\" mb=\"12px\">\r\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n                {t('Auto CAKE Bounty')}\r\n              </Text>\r\n              <Box ref={targetRef}>\r\n                <HelpIcon color=\"textSubtle\" />\r\n              </Box>\r\n            </Flex>\r\n          </Flex>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Flex flexDirection=\"column\" mr=\"12px\">\r\n              <Heading>\r\n                {hasFetchedCakeBounty ? (\r\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\r\n                ) : (\r\n                  <Skeleton height={20} width={96} mb=\"2px\" />\r\n                )}\r\n              </Heading>\r\n              {hasFetchedDollarBounty ? (\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  value={dollarBountyToDisplay}\r\n                  decimals={2}\r\n                  unit=\" USD\"\r\n                  prefix=\"~\"\r\n                />\r\n              ) : (\r\n                <Skeleton height={16} width={62} />\r\n              )}\r\n            </Flex>\r\n            <Button\r\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\r\n              onClick={onPresentBountyModal}\r\n              scale=\"sm\"\r\n              id=\"clickClaimVaultBounty\"\r\n            >\r\n              {t('Claim')}\r\n            </Button>\r\n          </Flex>\r\n        </CardBody>\r\n      </StyledCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BountyCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ButtonText = styled(Text)`\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin-right: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst HelpButton = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\r\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\r\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\r\n          {t('Help')}\r\n        </ButtonText>\r\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\r\n      </Button>\r\n    </StyledLink>\r\n  )\r\n}\r\n\r\nexport default HelpButton\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseCell = styled.div`\r\n  color: black;\r\n\r\n  padding: 24px 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const CellContent = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-height: 40px;\r\n  ${Text} {\r\n    line-height: 1;\r\n  }\r\n`\r\n\r\nexport default BaseCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { TokenPairImage } from 'components/TokenImage'\r\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\r\n  const {\r\n    userData: { userShares },\r\n  } = useCakeVault()\r\n  const hasVaultShares = userShares && userShares.gt(0)\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\r\n\r\n  if (isAutoVault) {\r\n    title = t('Auto CAKE')\r\n    subtitle = t('Automatic restaking')\r\n  } else if (isManualCakePool) {\r\n    title = t('Manual CAKE')\r\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isAutoVault ? (\r\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\r\n      ) : (\r\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\r\n      )}\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isMobile} small={isMobile}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface EarningsCellProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const hasEarnings = account && earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isManualCakePool}\r\n    />,\r\n  )\r\n\r\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentCollect()\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isMobile}\r\n                  fontSize={isMobile ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <>\r\n                    {earningTokenPrice > 0 && (\r\n                      <Balance\r\n                        display=\"inline\"\r\n                        fontSize=\"12px\"\r\n                        color=\"textSubtle\"\r\n                        decimals={2}\r\n                        prefix=\"~\"\r\n                        value={earningTokenDollarBalance}\r\n                        unit=\" USD\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EarningsCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\r\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\r\nimport Balance from 'components/Balance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nconst AprLabelContainer = styled(Flex)`\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\ninterface AprProps extends FlexProps {\r\n  pool: DeserializedPool\r\n  stakedBalance: BigNumber\r\n  showIcon: boolean\r\n  performanceFee?: number\r\n}\r\n\r\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\r\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\r\n  const { t } = useTranslation()\r\n\r\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <RoiCalculatorModal\r\n      earningTokenPrice={earningTokenPrice}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\r\n      apr={apr}\r\n      stakingTokenSymbol={stakingToken.symbol}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      autoCompoundFrequency={autoCompoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\r\n      {earningsPercentageToDisplay || isFinished ? (\r\n        <>\r\n          <Balance\r\n            onClick={openRoiModal}\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={isFinished ? 0 : earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n          />\r\n          {!isFinished && showIcon && (\r\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n            </Button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Skeleton width=\"80px\" height=\"16px\" />\r\n      )}\r\n    </AprLabelContainer>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { userData } = pool\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('APR')}\r\n        </Text>\r\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n","import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\r\n  const { totalCakeInVault } = useCakeVault()\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <Flex height=\"20px\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\r\nimport { getBscScanLink } from 'utils'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface FinishCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\r\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\r\n  const { currentBlock } = useBlock()\r\n  const { t } = useTranslation()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isCakePool = sousId === 0\r\n\r\n  const renderBlocks = shouldShowBlockCountdown ? (\r\n    <Flex alignItems=\"center\">\r\n      <Flex flex=\"1.3\">\r\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\r\n        <Text ml=\"4px\" textTransform=\"lowercase\">\r\n          {t('Blocks')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Link\r\n          external\r\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <TimerIcon ml=\"4px\" />\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  ) : (\r\n    <Text>-</Text>\r\n  )\r\n\r\n  // A bit hacky way to determine if public data is loading relying on totalStaked\r\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\r\n  // anywhere else\r\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\r\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\r\n        </Text>\r\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EndsInCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 24px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n      <ArrowIcon color=\"primary\" toggled={expanded} />\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\r\n  }\r\n}\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 32px;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React from 'react'\r\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { DeserializedPool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface HarvestActionProps extends DeserializedPool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\r\n  sousId,\r\n  poolCategory,\r\n  earningToken,\r\n  userData,\r\n  userDataLoaded,\r\n  earningTokenPrice,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  const hasEarnings = earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isCompoundPool = sousId === 0\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  const actionTitle = (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n        {earningToken.symbol}{' '}\r\n      </Text>\r\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n        {t('Earned')}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Heading>0</Heading>\r\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n          {isCompoundPool ? t('Collect') : t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: DeserializedPool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address || '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <ConnectWalletButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer isAutoVault={isAutoVault}>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { DeserializedPool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\r\n\r\ninterface AutoHarvestActionProps extends DeserializedPool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    pricePerFullShare,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const earningTokenBalance = autoCakeToDisplay\r\n  const earningTokenDollarBalance = autoUsdToDisplay\r\n  const hasEarnings = hasAutoEarnings\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const actionTitle = (\r\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n      {t('Recent CAKE profit')}\r\n    </Text>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Heading>0</Heading>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer isAutoVault>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\r\n          <UnstakingFeeCountdownRow isTableVariant />\r\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            {tooltipVisible && tooltip}\r\n            <TooltipText ref={targetRef} small>\r\n              {t('Performance Fee')}\r\n            </TooltipText>\r\n            <Flex alignItems=\"center\">\r\n              <Text ml=\"4px\" small>\r\n                {performanceFee / 100}%\r\n              </Text>\r\n            </Flex>\r\n          </Flex>\r\n        </Flex>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default AutoHarvestAction\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { getBscScanLink } from 'utils'\r\nimport { useBlock } from 'state/block/hooks'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\nimport AutoHarvest from './AutoHarvest'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n  isXxl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: DeserializedPool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    userData,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address || ''\r\n\r\n  const {\r\n    totalCakeInVault,\r\n    userData: { userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const poolStakingTokenBalance = isAutoVault\r\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\r\n    : stakedBalance.plus(stakingTokenBalance)\r\n\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\r\n      <Apr\r\n        pool={pool}\r\n        showIcon\r\n        stakedBalance={poolStakingTokenBalance}\r\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\r\n      />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\r\n            {t('See Token Info')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('View Project Site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {poolContractAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <LinkExternal\r\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n              bold={false}\r\n            >\r\n              {t('View Contract')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        )}\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\r\n          </Text>\r\n        )}\r\n        {pool.isAutoVault ? (\r\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\r\n        ) : (\r\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\r\n        )}\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface AutoEarningsCellProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst HelpIconWrapper = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n  const { earningTokenPrice } = pool\r\n\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const labelText = t('Recent CAKE profit')\r\n  const earningTokenBalance = autoCakeToDisplay\r\n  const hasEarnings = hasAutoEarnings\r\n  const earningTokenDollarBalance = autoUsdToDisplay\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\r\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            {tooltipVisible && tooltip}\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\">\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isMobile}\r\n                  fontSize={isMobile ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <>\r\n                    {earningTokenPrice > 0 && (\r\n                      <Balance\r\n                        display=\"inline\"\r\n                        fontSize=\"12px\"\r\n                        color=\"textSubtle\"\r\n                        decimals={2}\r\n                        prefix=\"~\"\r\n                        value={earningTokenDollarBalance}\r\n                        unit=\" USD\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n              {hasEarnings && !isMobile && (\r\n                <HelpIconWrapper ref={targetRef}>\r\n                  <HelpIcon color=\"textSubtle\" />\r\n                </HelpIconWrapper>\r\n              )}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AutoEarningsCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\nimport { convertSharesToCake } from '../../../helpers'\r\n\r\ninterface AprCellProps {\r\n  pool: DeserializedPool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isMobile } = useMatchBreakpoints()\r\n\r\n  const {\r\n    userData: { userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('APY')}\r\n        </Text>\r\n        <Apr\r\n          pool={pool}\r\n          stakedBalance={cakeAsBigNumber}\r\n          performanceFee={performanceFeeAsDecimal}\r\n          showIcon={!isMobile}\r\n        />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AutoAprCell\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { DeserializedPool } from 'state/types'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\r\nimport AutoAprCell from './Cells/AutoAprCell'\r\n\r\ninterface PoolRowProps {\r\n  pool: DeserializedPool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\r\n  const isLargerScreen = isLg || isXl || isXxl\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        {pool.isAutoVault ? (\r\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        ) : (\r\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        )}\r\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\r\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\r\n        {isDesktop && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DeserializedPool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: DeserializedPool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport {\r\n  useFetchPublicPoolsData,\r\n  usePools,\r\n  useFetchUserPools,\r\n  useFetchCakeVault,\r\n  useCakeVault,\r\n} from 'state/pools/hooks'\r\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { DeserializedPool } from 'state/types'\r\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\r\nimport { ViewMode } from 'state/user/actions'\r\nimport Loading from 'components/Loading'\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\n\r\nconst PoolControls = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\r\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\r\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const chosenPoolsLength = useRef(0)\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsPublicData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n  useFetchUserPools(account)\r\n\r\n  useEffect(() => {\r\n    if (isIntersecting) {\r\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\r\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\r\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\r\n        }\r\n        return poolsCurrentlyVisible\r\n      })\r\n    }\r\n  }, [isIntersecting])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                  account,\r\n                  cakeAtLastUserAction,\r\n                  userShares,\r\n                  pricePerFullShare,\r\n                  pool.earningTokenPrice,\r\n                ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: DeserializedPool) => {\r\n            let totalStaked = Number.NaN\r\n            if (pool.isAutoVault) {\r\n              if (totalCakeInVault.isFinite()) {\r\n                totalStaked = +formatUnits(\r\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\r\n                  pool.stakingToken.decimals,\r\n                )\r\n              }\r\n            } else if (pool.sousId === 0) {\r\n              if (pool.totalStaked?.isFinite() && totalCakeInVault.isFinite()) {\r\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\r\n                  totalCakeInVault.toString(),\r\n                )\r\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\r\n              }\r\n            } else if (pool.totalStaked?.isFinite()) {\r\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\r\n            }\r\n            return Number.isFinite(totalStaked) ? totalStaked : 0\r\n          },\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  let chosenPools\r\n  if (showFinishedPools) {\r\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n  } else {\r\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n  }\r\n\r\n  if (searchQuery) {\r\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n    chosenPools = chosenPools.filter((pool) =>\r\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n    )\r\n  }\r\n\r\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\r\n  chosenPoolsLength.current = chosenPools.length\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {chosenPools.map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {t('Syrup Pools')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('Just stake some tokens to earn.')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\">\r\n              {t('High APR, low risk.')}\r\n            </Heading>\r\n          </Flex>\r\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\r\n            <HelpButton />\r\n            <BountyCard />\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        <PoolControls>\r\n          <PoolTabButtons\r\n            stakedOnly={stakedOnly}\r\n            setStakedOnly={setStakedOnly}\r\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n            viewMode={viewMode}\r\n            setViewMode={setViewMode}\r\n          />\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onOptionChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Search')}\r\n              </Text>\r\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </PoolControls>\r\n        {showFinishedPools && (\r\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n          </Text>\r\n        )}\r\n        {account && !userDataLoaded && stakedOnly && (\r\n          <Flex justifyContent=\"center\" mb=\"4px\">\r\n            <Loading />\r\n          </Flex>\r\n        )}\r\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n        <div ref={observerRef} />\r\n        <Image\r\n          mx=\"auto\"\r\n          mt=\"12px\"\r\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\r\n          alt=\"Pancake illustration\"\r\n          width={192}\r\n          height={184.5}\r\n        />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n","import { Token } from '@pancakeswap/sdk'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst { bondly, safemoon } = tokens\r\n\r\ninterface WarningTokenList {\r\n  [key: string]: Token\r\n}\r\n\r\nconst SwapWarningTokens = <WarningTokenList>{\r\n  safemoon,\r\n  bondly,\r\n}\r\n\r\nexport default SwapWarningTokens\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useENS from '../../../hooks/ENS/useENS'\r\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\r\nimport { AutoColumn } from '../../../components/Layout/Column'\r\nimport { RowBetween } from '../../../components/Layout/Row'\r\nimport { getBscScanLink } from '../../../utils'\r\n\r\nconst InputPanel = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  z-index: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst ContainerRow = styled.div<{ error: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\r\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\r\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n  padding: 1rem;\r\n`\r\n\r\nconst Input = styled.input<{ error?: boolean }>`\r\n  font-size: 1.25rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\r\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textDisabled};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({\r\n  id,\r\n  value,\r\n  onChange,\r\n}: {\r\n  id?: string\r\n  // the typed string value\r\n  value: string\r\n  // triggers whenever the typed value changes\r\n  onChange: (value: string) => void\r\n}) {\r\n  const { chainId } = useActiveWeb3React()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const { address, loading, name } = useENS(value)\r\n\r\n  const handleInput = useCallback(\r\n    (event) => {\r\n      const input = event.target.value\r\n      const withoutSpaces = input.replace(/\\s+/g, '')\r\n      onChange(withoutSpaces)\r\n    },\r\n    [onChange],\r\n  )\r\n\r\n  const error = Boolean(value.length > 0 && !loading && !address)\r\n\r\n  return (\r\n    <InputPanel id={id}>\r\n      <ContainerRow error={error}>\r\n        <InputContainer>\r\n          <AutoColumn gap=\"md\">\r\n            <RowBetween>\r\n              <Text>{t('Recipient')}</Text>\r\n              {address && chainId && (\r\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\r\n                  ({t('View on BscScan')})\r\n                </Link>\r\n              )}\r\n            </RowBetween>\r\n            <Input\r\n              className=\"recipient-address-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder={t('Wallet Address or ENS name')}\r\n              error={error}\r\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\r\n              onChange={handleInput}\r\n              value={value}\r\n            />\r\n          </AutoColumn>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\r\nimport styled, { css } from 'styled-components'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  padding: 1rem;\r\n`\r\n\r\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\r\n  padding: 2px;\r\n\r\n  ${({ clickable }) =>\r\n    clickable\r\n      ? css`\r\n          :hover {\r\n            cursor: pointer;\r\n            opacity: 0.8;\r\n          }\r\n        `\r\n      : null}\r\n`\r\n\r\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\r\n  color: ${({ theme, severity }) =>\r\n    severity === 3 || severity === 4\r\n      ? theme.colors.failure\r\n      : severity === 2\r\n      ? theme.colors.warning\r\n      : severity === 1\r\n      ? theme.colors.text\r\n      : theme.colors.success};\r\n`\r\n\r\nexport const StyledBalanceMaxMini = styled.button`\r\n  height: 22px;\r\n  width: 22px;\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 0.2rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  margin-left: 0.4rem;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  float: right;\r\n\r\n  :hover {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n  }\r\n  :focus {\r\n    background-color: ${({ theme }) => theme.colors.dropdown};\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\r\n  width: 220px;\r\n`\r\n\r\nconst SwapCallbackErrorInner = styled.div`\r\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\r\n  border-radius: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 0.825rem;\r\n  width: 100%;\r\n  padding: 3rem 1.25rem 1rem 1rem;\r\n  margin-top: -2rem;\r\n  color: ${({ theme }) => theme.colors.failure};\r\n  z-index: -1;\r\n  p {\r\n    padding: 0;\r\n    margin: 0;\r\n    font-weight: 500;\r\n  }\r\n`\r\n\r\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\r\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 12px;\r\n  border-radius: 12px;\r\n  min-width: 48px;\r\n  height: 48px;\r\n`\r\n\r\nexport function SwapCallbackError({ error }: { error: string }) {\r\n  return (\r\n    <SwapCallbackErrorInner>\r\n      <SwapCallbackErrorInnerAlertTriangle>\r\n        <ErrorIcon width=\"24px\" />\r\n      </SwapCallbackErrorInnerAlertTriangle>\r\n      <p>{error}</p>\r\n    </SwapCallbackErrorInner>\r\n  )\r\n}\r\n\r\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\r\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\r\n  padding: 0.5rem;\r\n  border-radius: 12px;\r\n  margin-top: 8px;\r\n`\r\n","import { Percent } from '@pancakeswap/sdk'\r\nimport React from 'react'\r\nimport { warningSeverity } from 'utils/prices'\r\nimport { ONE_BIPS } from '../../../config/constants'\r\nimport { ErrorText } from './styleds'\r\n\r\n/**\r\n * Formatted version of price impact text with warning colors\r\n */\r\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\r\n  return (\r\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\r\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\r\n    </ErrorText>\r\n  )\r\n}\r\n","import React, { useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Field } from 'state/swap/actions'\r\nimport {\r\n  computeSlippageAdjustedAmounts,\r\n  computeTradePriceBreakdown,\r\n  formatExecutionPrice,\r\n  warningSeverity,\r\n} from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\r\n\r\nconst SwapModalFooterContainer = styled(AutoColumn)`\r\n  margin-top: 24px;\r\n  padding: 16px;\r\n  border-radius: ${({ theme }) => theme.radii.default};\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  background-color: ${({ theme }) => theme.colors.background};\r\n`\r\n\r\nexport default function SwapModalFooter({\r\n  trade,\r\n  onConfirm,\r\n  allowedSlippage,\r\n  swapErrorMessage,\r\n  disabledConfirm,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  onConfirm: () => void\r\n  swapErrorMessage: string | undefined\r\n  disabledConfirm: boolean\r\n}) {\r\n  const { t } = useTranslation()\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [allowedSlippage, trade],\r\n  )\r\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const severity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  return (\r\n    <>\r\n      <SwapModalFooterContainer>\r\n        <RowBetween align=\"center\">\r\n          <Text fontSize=\"14px\">{t('Price')}</Text>\r\n          <Text\r\n            fontSize=\"14px\"\r\n            style={{\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              display: 'flex',\r\n              textAlign: 'right',\r\n              paddingLeft: '10px',\r\n            }}\r\n          >\r\n            {formatExecutionPrice(trade, showInverted)}\r\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n              <AutoRenewIcon width=\"14px\" />\r\n            </StyledBalanceMaxMini>\r\n          </Text>\r\n        </RowBetween>\r\n\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT ? t('Minimum received') : t('Maximum sold')}\r\n            </Text>\r\n            <QuestionHelper\r\n              text={t(\r\n                'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\r\n              )}\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\r\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\r\n            </Text>\r\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\r\n              {trade.tradeType === TradeType.EXACT_INPUT\r\n                ? trade.outputAmount.currency.symbol\r\n                : trade.inputAmount.currency.symbol}\r\n            </Text>\r\n          </RowFixed>\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Price Impact')}</Text>\r\n            <QuestionHelper\r\n              text={t('The difference between the market price and your price due to trade size.')}\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n        </RowBetween>\r\n        <RowBetween>\r\n          <RowFixed>\r\n            <Text fontSize=\"14px\">{t('Liquidity Provider Fee')}</Text>\r\n            <QuestionHelper\r\n              text={\r\n                <>\r\n                  <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\r\n                  <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\r\n                  <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\r\n                  <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\r\n                </>\r\n              }\r\n              ml=\"4px\"\r\n            />\r\n          </RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n          </Text>\r\n        </RowBetween>\r\n      </SwapModalFooterContainer>\r\n\r\n      <AutoRow>\r\n        <Button\r\n          variant={severity > 2 ? 'danger' : 'primary'}\r\n          onClick={onConfirm}\r\n          disabled={disabledConfirm}\r\n          mt=\"12px\"\r\n          id=\"confirm-swap-or-send\"\r\n          width=\"100%\"\r\n        >\r\n          {severity > 2 ? t('Swap Anyway') : t('Confirm Swap')}\r\n        </Button>\r\n\r\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n      </AutoRow>\r\n    </>\r\n  )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport { CurrencyLogo } from 'components/Logo'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\r\n\r\nexport default function SwapModalHeader({\r\n  trade,\r\n  allowedSlippage,\r\n  recipient,\r\n  showAcceptChanges,\r\n  onAcceptChanges,\r\n}: {\r\n  trade: Trade\r\n  allowedSlippage: number\r\n  recipient: string | null\r\n  showAcceptChanges: boolean\r\n  onAcceptChanges: () => void\r\n}) {\r\n  const { t } = useTranslation()\r\n  const slippageAdjustedAmounts = useMemo(\r\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\r\n    [trade, allowedSlippage],\r\n  )\r\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  const amount =\r\n    trade.tradeType === TradeType.EXACT_INPUT\r\n      ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)\r\n      : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)\r\n  const symbol =\r\n    trade.tradeType === TradeType.EXACT_INPUT ? trade.outputAmount.currency.symbol : trade.inputAmount.currency.symbol\r\n\r\n  const tradeInfoText =\r\n    trade.tradeType === TradeType.EXACT_INPUT\r\n      ? t('Output is estimated. You will receive at least %amount% %symbol% or the transaction will revert.', {\r\n          amount,\r\n          symbol,\r\n        })\r\n      : t('Input is estimated. You will sell at most %amount% %symbol% or the transaction will revert.', {\r\n          amount,\r\n          symbol,\r\n        })\r\n\r\n  const [estimatedText, transactionRevertText] = tradeInfoText.split(`${amount} ${symbol}`)\r\n\r\n  const truncatedRecipient = recipient ? truncateHash(recipient) : ''\r\n\r\n  const recipientInfoText = t('Output will be sent to %recipient%', {\r\n    recipient: truncatedRecipient,\r\n  })\r\n\r\n  const [recipientSentToText, postSentToText] = recipientInfoText.split(truncatedRecipient)\r\n\r\n  return (\r\n    <AutoColumn gap=\"md\">\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize=\"24px\"\r\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\r\n          >\r\n            {trade.inputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" ml=\"10px\">\r\n            {trade.inputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowFixed>\r\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\r\n      </RowFixed>\r\n      <RowBetween align=\"flex-end\">\r\n        <RowFixed gap=\"0px\">\r\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\r\n          <TruncatedText\r\n            fontSize=\"24px\"\r\n            color={\r\n              priceImpactSeverity > 2\r\n                ? 'failure'\r\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\r\n                ? 'primary'\r\n                : 'text'\r\n            }\r\n          >\r\n            {trade.outputAmount.toSignificant(6)}\r\n          </TruncatedText>\r\n        </RowFixed>\r\n        <RowFixed gap=\"0px\">\r\n          <Text fontSize=\"24px\" ml=\"10px\">\r\n            {trade.outputAmount.currency.symbol}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      {showAcceptChanges ? (\r\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\r\n          <RowBetween>\r\n            <RowFixed>\r\n              <ErrorIcon mr=\"8px\" />\r\n              <Text bold> {t('Price Updated')}</Text>\r\n            </RowFixed>\r\n            <Button onClick={onAcceptChanges}>{t('Accept')}</Button>\r\n          </RowBetween>\r\n        </SwapShowAcceptChanges>\r\n      ) : null}\r\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\r\n        <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\r\n          {estimatedText}\r\n          <b>\r\n            {amount} {symbol}\r\n          </b>\r\n          {transactionRevertText}\r\n        </Text>\r\n      </AutoColumn>\r\n      {recipient !== null ? (\r\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\r\n          <Text color=\"textSubtle\">\r\n            {recipientSentToText}\r\n            <b title={recipient}>{truncatedRecipient}</b>\r\n            {postSentToText}\r\n          </Text>\r\n        </AutoColumn>\r\n      ) : null}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React, { useCallback, useMemo } from 'react'\r\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\r\nimport { InjectedModalProps } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport TransactionConfirmationModal, {\r\n  ConfirmationModalContent,\r\n  TransactionErrorContent,\r\n} from 'components/TransactionConfirmationModal'\r\nimport SwapModalFooter from './SwapModalFooter'\r\nimport SwapModalHeader from './SwapModalHeader'\r\n\r\n/**\r\n * Returns true if the trade requires a confirmation of details before we can submit it\r\n * @param tradeA trade A\r\n * @param tradeB trade B\r\n */\r\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\r\n  return (\r\n    tradeA.tradeType !== tradeB.tradeType ||\r\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\r\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\r\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\r\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\r\n  )\r\n}\r\ninterface ConfirmSwapModalProps {\r\n  trade?: Trade\r\n  originalTrade?: Trade\r\n  attemptingTxn: boolean\r\n  txHash?: string\r\n  recipient: string | null\r\n  allowedSlippage: number\r\n  onAcceptChanges: () => void\r\n  onConfirm: () => void\r\n  swapErrorMessage?: string\r\n  customOnDismiss?: () => void\r\n}\r\n\r\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\r\n  trade,\r\n  originalTrade,\r\n  onAcceptChanges,\r\n  allowedSlippage,\r\n  onConfirm,\r\n  onDismiss,\r\n  customOnDismiss,\r\n  recipient,\r\n  swapErrorMessage,\r\n  attemptingTxn,\r\n  txHash,\r\n}) => {\r\n  const showAcceptChanges = useMemo(\r\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\r\n    [originalTrade, trade],\r\n  )\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const modalHeader = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalHeader\r\n        trade={trade}\r\n        allowedSlippage={allowedSlippage}\r\n        recipient={recipient}\r\n        showAcceptChanges={showAcceptChanges}\r\n        onAcceptChanges={onAcceptChanges}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\r\n\r\n  const modalBottom = useCallback(() => {\r\n    return trade ? (\r\n      <SwapModalFooter\r\n        onConfirm={onConfirm}\r\n        trade={trade}\r\n        disabledConfirm={showAcceptChanges}\r\n        swapErrorMessage={swapErrorMessage}\r\n        allowedSlippage={allowedSlippage}\r\n      />\r\n    ) : null\r\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\r\n\r\n  // text to show while loading\r\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\r\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\r\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\r\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\r\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\r\n  })\r\n\r\n  const confirmationContent = useCallback(\r\n    () =>\r\n      swapErrorMessage ? (\r\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\r\n      ) : (\r\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\r\n      ),\r\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\r\n  )\r\n\r\n  return (\r\n    <TransactionConfirmationModal\r\n      title={t('Confirm Swap')}\r\n      onDismiss={onDismiss}\r\n      customOnDismiss={customOnDismiss}\r\n      attemptingTxn={attemptingTxn}\r\n      hash={txHash}\r\n      content={confirmationContent}\r\n      pendingText={pendingText}\r\n      currencyToAdd={trade?.outputAmount.currency}\r\n    />\r\n  )\r\n}\r\n\r\nexport default ConfirmSwapModal\r\n","import { useEffect, useState } from 'react'\r\n\r\n/**\r\n * Returns the last value of type T that passes a filter function\r\n * @param value changing value\r\n * @param filterFn function that determines whether a given value should be considered for the last value\r\n */\r\nfunction useLast<T>(\r\n  value: T | undefined | null,\r\n  filterFn?: (value: T | null | undefined) => boolean,\r\n): T | null | undefined {\r\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\r\n  useEffect(() => {\r\n    setLast((prev) => {\r\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\r\n      if (shouldUse) return value\r\n      return prev\r\n    })\r\n  }, [filterFn, value])\r\n  return last\r\n}\r\n\r\nfunction isDefined<T>(x: T | null | undefined): x is T {\r\n  return x !== null && x !== undefined\r\n}\r\n\r\n/**\r\n * Returns the last truthy value of type T\r\n * @param value changing value\r\n */\r\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\r\n  return useLast(value, isDefined)\r\n}\r\n\r\nexport default useLastTruthy\r\n","import React, { Fragment, memo } from 'react'\r\nimport { Trade } from '@pancakeswap/sdk'\r\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\r\nimport { unwrappedToken } from 'utils/wrappedCurrency'\r\n\r\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\r\n  return (\r\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n      {trade.route.path.map((token, i, path) => {\r\n        const isLastItem: boolean = i === path.length - 1\r\n        const currency = unwrappedToken(token)\r\n        return (\r\n          // eslint-disable-next-line react/no-array-index-key\r\n          <Fragment key={i}>\r\n            <Flex alignItems=\"end\">\r\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\r\n                {currency.symbol}\r\n              </Text>\r\n            </Flex>\r\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n})\r\n","import React from 'react'\r\nimport { Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { Field } from 'state/swap/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useUserSlippageTolerance } from 'state/user/hooks'\r\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\nimport QuestionHelper from 'components/QuestionHelper'\r\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\r\nimport FormattedPriceImpact from './FormattedPriceImpact'\r\nimport SwapRoute from './SwapRoute'\r\n\r\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\r\n  const { t } = useTranslation()\r\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\r\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\r\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\r\n\r\n  return (\r\n    <AutoColumn style={{ padding: '0 16px' }}>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {isExactIn ? t('Minimum received') : t('Maximum sold')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={t(\r\n              'Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.',\r\n            )}\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\">\r\n            {isExactIn\r\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\r\n                '-'\r\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\r\n          </Text>\r\n        </RowFixed>\r\n      </RowBetween>\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Price Impact')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={t('The difference between the market price and estimated price due to trade size.')}\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\r\n      </RowBetween>\r\n\r\n      <RowBetween>\r\n        <RowFixed>\r\n          <Text fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Liquidity Provider Fee')}\r\n          </Text>\r\n          <QuestionHelper\r\n            text={\r\n              <>\r\n                <Text mb=\"12px\">{t('For each trade a %amount% fee is paid', { amount: '0.25%' })}</Text>\r\n                <Text>- {t('%amount% to LP token holders', { amount: '0.17%' })}</Text>\r\n                <Text>- {t('%amount% to the Treasury', { amount: '0.03%' })}</Text>\r\n                <Text>- {t('%amount% towards CAKE buyback and burn', { amount: '0.05%' })}</Text>\r\n              </>\r\n            }\r\n            ml=\"4px\"\r\n          />\r\n        </RowFixed>\r\n        <Text fontSize=\"14px\">\r\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\r\n        </Text>\r\n      </RowBetween>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport interface AdvancedSwapDetailsProps {\r\n  trade?: Trade\r\n}\r\n\r\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\r\n  const { t } = useTranslation()\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\r\n\r\n  return (\r\n    <AutoColumn gap=\"0px\">\r\n      {trade && (\r\n        <>\r\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\r\n          {showRoute && (\r\n            <>\r\n              <RowBetween style={{ padding: '0 16px' }}>\r\n                <span style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                    {t('Route')}\r\n                  </Text>\r\n                  <QuestionHelper\r\n                    text={t('Routing through these tokens resulted in the best price for your trade.')}\r\n                    ml=\"4px\"\r\n                  />\r\n                </span>\r\n                <SwapRoute trade={trade} />\r\n              </RowBetween>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useLastTruthy from 'hooks/useLast'\r\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\r\n\r\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\r\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  border-radius: 20px;\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n\r\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\r\n  transition: transform 300ms ease-in-out;\r\n`\r\n\r\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\r\n  const lastTrade = useLastTruthy(trade)\r\n\r\n  return (\r\n    <AdvancedDetailsFooter show={Boolean(trade)}>\r\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\r\n    </AdvancedDetailsFooter>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Price } from '@pancakeswap/sdk'\r\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { StyledBalanceMaxMini } from './styleds'\r\n\r\ninterface TradePriceProps {\r\n  price?: Price\r\n  showInverted: boolean\r\n  setShowInverted: (showInverted: boolean) => void\r\n}\r\n\r\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\r\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\r\n\r\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\r\n  const label = showInverted\r\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\r\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\r\n\r\n  return (\r\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\r\n      {show ? (\r\n        <>\r\n          {formattedPrice ?? '-'} {label}\r\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\r\n            <AutoRenewIcon width=\"14px\" />\r\n          </StyledBalanceMaxMini>\r\n        </>\r\n      ) : (\r\n        '-'\r\n      )}\r\n    </Text>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Token } from '@pancakeswap/sdk'\r\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\r\nimport ImportToken from 'components/SearchModal/ImportToken'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface Props extends InjectedModalProps {\r\n  tokens: Token[]\r\n  onCancel: () => void\r\n}\r\n\r\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Modal\r\n      title={t('Import Token')}\r\n      onDismiss={() => {\r\n        if (onDismiss) {\r\n          onDismiss()\r\n        }\r\n        onCancel()\r\n      }}\r\n      style={{ maxWidth: '420px' }}\r\n    >\r\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ImportTokenWarningModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowBetween } from 'components/Layout/Row'\r\nimport { AutoColumn } from 'components/Layout/Column'\r\n\r\nconst Grouping = styled(RowBetween)`\r\n  width: 50%;\r\n`\r\n\r\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  background-color: ${({ theme, confirmed, disabled }) =>\r\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\r\n  border-radius: 50%;\r\n  color: #ffffff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 8px;\r\n  font-size: 12px;\r\n`\r\n\r\nconst CircleRow = styled.div`\r\n  width: calc(100% - 20px);\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\r\n  width: 100%;\r\n  height: 2px;\r\n  background: linear-gradient(\r\n    90deg,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\r\n      0%,\r\n    ${({ theme, prevConfirmed, disabled }) =>\r\n        disabled\r\n          ? theme.colors.backgroundDisabled\r\n          : prevConfirmed\r\n          ? theme.colors.primary\r\n          : theme.colors.backgroundDisabled}\r\n      80%\r\n  );\r\n  opacity: 0.6;\r\n`\r\n\r\ninterface ProgressCirclesProps {\r\n  steps: boolean[]\r\n  disabled?: boolean\r\n}\r\n\r\n/**\r\n * Based on array of steps, create a step counter of circles.\r\n * A circle can be enabled, disabled, or confirmed. States are derived\r\n * from previous step.\r\n *\r\n * An extra circle is added to represent the ability to swap, add, or remove.\r\n * This step will never be marked as complete (because no 'txn done' state in body ui).\r\n *\r\n * @param steps  array of booleans where true means step is complete\r\n */\r\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\r\n  return (\r\n    <AutoColumn justify=\"center\" {...rest}>\r\n      <Grouping>\r\n        {steps.map((step, i) => {\r\n          return (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <CircleRow key={i}>\r\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\r\n                {step ? '✓' : i + 1}\r\n              </Circle>\r\n              <Connector prevConfirmed={step} disabled={disabled} />\r\n            </CircleRow>\r\n          )\r\n        })}\r\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\r\n      </Grouping>\r\n    </AutoColumn>\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { useGasPrice } from 'state/user/hooks'\r\nimport truncateHash from 'utils/truncateHash'\r\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\r\nimport isZero from '../utils/isZero'\r\nimport useTransactionDeadline from './useTransactionDeadline'\r\nimport useENS from './ENS/useENS'\r\n\r\nexport enum SwapCallbackState {\r\n  INVALID,\r\n  LOADING,\r\n  VALID,\r\n}\r\n\r\ninterface SwapCall {\r\n  contract: Contract\r\n  parameters: SwapParameters\r\n}\r\n\r\ninterface SuccessfulCall {\r\n  call: SwapCall\r\n  gasEstimate: BigNumber\r\n}\r\n\r\ninterface FailedCall {\r\n  call: SwapCall\r\n  error: Error\r\n}\r\n\r\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\r\n\r\n/**\r\n * Returns the swap calls that can be used to make the trade\r\n * @param trade trade to execute\r\n * @param allowedSlippage user allowed slippage\r\n * @param recipientAddressOrName\r\n */\r\nfunction useSwapCallArguments(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): SwapCall[] {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n  const deadline = useTransactionDeadline()\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\r\n\r\n    const contract: Contract | null = getRouterContract(chainId, library, account)\r\n    if (!contract) {\r\n      return []\r\n    }\r\n\r\n    const swapMethods = []\r\n\r\n    swapMethods.push(\r\n      Router.swapCallParameters(trade, {\r\n        feeOnTransfer: false,\r\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n        recipient,\r\n        deadline: deadline.toNumber(),\r\n      }),\r\n    )\r\n\r\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\r\n      swapMethods.push(\r\n        Router.swapCallParameters(trade, {\r\n          feeOnTransfer: true,\r\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\r\n          recipient,\r\n          deadline: deadline.toNumber(),\r\n        }),\r\n      )\r\n    }\r\n\r\n    return swapMethods.map((parameters) => ({ parameters, contract }))\r\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\r\n}\r\n\r\n// returns a function that will execute a swap, if the parameters are all valid\r\n// and the user has approved the slippage adjusted input amount for the trade\r\nexport function useSwapCallback(\r\n  trade: Trade | undefined, // trade to execute, required\r\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\r\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\r\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\r\n  const { account, chainId, library } = useActiveWeb3React()\r\n  const gasPrice = useGasPrice()\r\n\r\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\r\n\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\r\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\r\n\r\n  return useMemo(() => {\r\n    if (!trade || !library || !account || !chainId) {\r\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\r\n    }\r\n    if (!recipient) {\r\n      if (recipientAddressOrName !== null) {\r\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\r\n      }\r\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\r\n    }\r\n\r\n    return {\r\n      state: SwapCallbackState.VALID,\r\n      callback: async function onSwap(): Promise<string> {\r\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\r\n          swapCalls.map((call) => {\r\n            const {\r\n              parameters: { methodName, args, value },\r\n              contract,\r\n            } = call\r\n            const options = !value || isZero(value) ? {} : { value }\r\n\r\n            return contract.estimateGas[methodName](...args, options)\r\n              .then((gasEstimate) => {\r\n                return {\r\n                  call,\r\n                  gasEstimate,\r\n                }\r\n              })\r\n              .catch((gasError) => {\r\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\r\n\r\n                return contract.callStatic[methodName](...args, options)\r\n                  .then((result) => {\r\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\r\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\r\n                  })\r\n                  .catch((callError) => {\r\n                    console.error('Call threw error', call, callError)\r\n                    const reason: string = callError.reason || callError.data?.message || callError.message\r\n                    const errorMessage = `The transaction cannot succeed due to error: ${\r\n                      reason ?? 'Unknown error, check the logs'\r\n                    }.`\r\n\r\n                    return { call, error: new Error(errorMessage) }\r\n                  })\r\n              })\r\n          }),\r\n        )\r\n\r\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\r\n        const successfulEstimation = estimatedCalls.find(\r\n          (el, ix, list): el is SuccessfulCall =>\r\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\r\n        )\r\n\r\n        if (!successfulEstimation) {\r\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\r\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\r\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\r\n        }\r\n\r\n        const {\r\n          call: {\r\n            contract,\r\n            parameters: { methodName, args, value },\r\n          },\r\n          gasEstimate,\r\n        } = successfulEstimation\r\n\r\n        return contract[methodName](...args, {\r\n          gasLimit: calculateGasMargin(gasEstimate),\r\n          gasPrice,\r\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\r\n        })\r\n          .then((response: any) => {\r\n            const inputSymbol = trade.inputAmount.currency.symbol\r\n            const outputSymbol = trade.outputAmount.currency.symbol\r\n            const inputAmount = trade.inputAmount.toSignificant(3)\r\n            const outputAmount = trade.outputAmount.toSignificant(3)\r\n\r\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\r\n            const withRecipient =\r\n              recipient === account\r\n                ? base\r\n                : `${base} to ${\r\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\r\n                      ? truncateHash(recipientAddressOrName)\r\n                      : recipientAddressOrName\r\n                  }`\r\n\r\n            addTransaction(response, {\r\n              summary: withRecipient,\r\n            })\r\n\r\n            return response.hash\r\n          })\r\n          .catch((error: any) => {\r\n            // if the user rejected the tx, pass this along\r\n            if (error?.code === 4001) {\r\n              throw new Error('Transaction rejected.')\r\n            } else {\r\n              // otherwise, the error was unexpected and we need to convey that\r\n              console.error(`Swap failed`, error, methodName, args, value)\r\n              throw new Error(`Swap failed: ${error.message}`)\r\n            }\r\n          })\r\n      },\r\n      error: null,\r\n    }\r\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\r\n}\r\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\r\nimport { useMemo } from 'react'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { tryParseAmount } from '../state/swap/hooks'\r\nimport { useTransactionAdder } from '../state/transactions/hooks'\r\nimport { useCurrencyBalance } from '../state/wallet/hooks'\r\nimport { useWETHContract } from './useContract'\r\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\r\n\r\nexport enum WrapType {\r\n  NOT_APPLICABLE,\r\n  WRAP,\r\n  UNWRAP,\r\n}\r\n\r\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\r\n/**\r\n * Given the selected input and output currency, return a wrap callback\r\n * @param inputCurrency the selected input currency\r\n * @param outputCurrency the selected output currency\r\n * @param typedValue the user input value\r\n */\r\nexport default function useWrapCallback(\r\n  inputCurrency: Currency | undefined,\r\n  outputCurrency: Currency | undefined,\r\n  typedValue: string | undefined,\r\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\r\n  const { chainId, account } = useActiveWeb3React()\r\n  const { callWithGasPrice } = useCallWithGasPrice()\r\n  const wethContract = useWETHContract()\r\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\r\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\r\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  return useMemo(() => {\r\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\r\n\r\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\r\n\r\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\r\n      return {\r\n        wrapType: WrapType.WRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\r\n                    value: `0x${inputAmount.raw.toString(16)}`,\r\n                  })\r\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\r\n                } catch (error) {\r\n                  console.error('Could not deposit', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\r\n      }\r\n    }\r\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\r\n      return {\r\n        wrapType: WrapType.UNWRAP,\r\n        execute:\r\n          sufficientBalance && inputAmount\r\n            ? async () => {\r\n                try {\r\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\r\n                    `0x${inputAmount.raw.toString(16)}`,\r\n                  ])\r\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\r\n                } catch (error) {\r\n                  console.error('Could not withdraw', error)\r\n                }\r\n              }\r\n            : undefined,\r\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\r\n      }\r\n    }\r\n    return NOT_APPLICABLE\r\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\r\n}\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text } from '@pancakeswap/uikit'\r\n\r\nconst SafemoonWarning = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <>\r\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\r\n      <Text>• {t('Click on the settings icon')}</Text>\r\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\r\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\r\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\r\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SafemoonWarning\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst BondlyWarning = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\r\n}\r\n\r\nexport default BondlyWarning\r\n","import React, { useState } from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\r\n\r\ninterface AcknowledgementProps {\r\n  handleContinueClick: () => void\r\n}\r\n\r\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\r\n  const { t } = useTranslation()\r\n  const [isConfirmed, setIsConfirmed] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Flex alignItems=\"center\">\r\n          <Checkbox\r\n            name=\"confirmed\"\r\n            type=\"checkbox\"\r\n            checked={isConfirmed}\r\n            onChange={() => setIsConfirmed(!isConfirmed)}\r\n            scale=\"sm\"\r\n          />\r\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\r\n            {t('I understand')}\r\n          </Text>\r\n        </Flex>\r\n\r\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\r\n          {t('Continue')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Acknowledgement\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { WrappedTokenInfo } from 'state/lists/hooks'\r\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\r\nimport SafemoonWarning from './SafemoonWarning'\r\nimport BondlyWarning from './BondlyWarning'\r\nimport Acknowledgement from './Acknowledgement'\r\n\r\nconst StyledModalContainer = styled(ModalContainer)`\r\n  max-width: 440px;\r\n`\r\n\r\nconst MessageContainer = styled(Message)`\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n`\r\n\r\ninterface SwapWarningModalProps {\r\n  swapCurrency: WrappedTokenInfo\r\n  onDismiss?: () => void\r\n}\r\n\r\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\r\nconst usePreventModalOverlayClick = () => {\r\n  useEffect(() => {\r\n    const preventClickHandler = (e) => {\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n      return false\r\n    }\r\n\r\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\r\n      el.addEventListener('click', preventClickHandler, true)\r\n    })\r\n\r\n    return () => {\r\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\r\n        el.removeEventListener('click', preventClickHandler, true)\r\n      })\r\n    }\r\n  }, [])\r\n}\r\n\r\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  usePreventModalOverlayClick()\r\n\r\n  const TOKEN_WARNINGS = {\r\n    [SwapWarningTokensConfig.safemoon.address]: {\r\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\r\n      component: <SafemoonWarning />,\r\n    },\r\n    [SwapWarningTokensConfig.bondly.address]: {\r\n      symbol: SwapWarningTokensConfig.bondly.symbol,\r\n      component: <BondlyWarning />,\r\n    },\r\n  }\r\n\r\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\r\n\r\n  return (\r\n    <StyledModalContainer minWidth=\"280px\">\r\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\r\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\r\n      </ModalHeader>\r\n      <ModalBody p=\"24px\">\r\n        <MessageContainer variant=\"warning\" mb=\"24px\">\r\n          <Box>{SWAP_WARNING.component}</Box>\r\n        </MessageContainer>\r\n        <Acknowledgement handleContinueClick={onDismiss} />\r\n      </ModalBody>\r\n    </StyledModalContainer>\r\n  )\r\n}\r\n\r\nexport default SwapWarningModal\r\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\r\nimport { Button, Text, ArrowDownIcon, Box, useModal } from '@pancakeswap/uikit'\r\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\r\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\r\nimport AddressInputPanel from './components/AddressInputPanel'\r\nimport { GreyCard } from '../../components/Card'\r\nimport Column, { AutoColumn } from '../../components/Layout/Column'\r\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\r\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\r\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\r\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\r\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\r\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\r\nimport TradePrice from './components/TradePrice'\r\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\r\nimport ProgressSteps from './components/ProgressSteps'\r\nimport { AppHeader, AppBody } from '../../components/App'\r\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\r\n\r\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\r\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\r\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\r\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\r\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\r\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\r\nimport { Field } from '../../state/swap/actions'\r\nimport {\r\n  useDefaultsFromURLSearch,\r\n  useDerivedSwapInfo,\r\n  useSwapActionHandlers,\r\n  useSwapState,\r\n} from '../../state/swap/hooks'\r\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\r\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\r\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\r\nimport CircleLoader from '../../components/Loader/CircleLoader'\r\nimport Page from '../Page'\r\nimport SwapWarningModal from './components/SwapWarningModal'\r\n\r\nconst Label = styled(Text)`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport default function Swap({ history }: RouteComponentProps) {\r\n  const loadedUrlParams = useDefaultsFromURLSearch()\r\n\r\n  const { t } = useTranslation()\r\n\r\n  // token warning stuff\r\n  const [loadedInputCurrency, loadedOutputCurrency] = [\r\n    useCurrency(loadedUrlParams?.inputCurrencyId),\r\n    useCurrency(loadedUrlParams?.outputCurrencyId),\r\n  ]\r\n  const urlLoadedTokens: Token[] = useMemo(\r\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\r\n    [loadedInputCurrency, loadedOutputCurrency],\r\n  )\r\n\r\n  // dismiss warning if all imported tokens are in active lists\r\n  const defaultTokens = useAllTokens()\r\n  const importTokensNotInDefault =\r\n    urlLoadedTokens &&\r\n    urlLoadedTokens.filter((token: Token) => {\r\n      return !(token.address in defaultTokens)\r\n    })\r\n\r\n  const { account } = useActiveWeb3React()\r\n\r\n  // for expert mode\r\n  const [isExpertMode] = useExpertModeManager()\r\n\r\n  // get custom setting values for user\r\n  const [allowedSlippage] = useUserSlippageTolerance()\r\n\r\n  // swap state\r\n  const { independentField, typedValue, recipient } = useSwapState()\r\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\r\n\r\n  const {\r\n    wrapType,\r\n    execute: onWrap,\r\n    inputError: wrapInputError,\r\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\r\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\r\n  const trade = showWrap ? undefined : v2Trade\r\n\r\n  const parsedAmounts = showWrap\r\n    ? {\r\n        [Field.INPUT]: parsedAmount,\r\n        [Field.OUTPUT]: parsedAmount,\r\n      }\r\n    : {\r\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\r\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\r\n      }\r\n\r\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\r\n  const isValid = !swapInputError\r\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\r\n\r\n  const handleTypeInput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.INPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n  const handleTypeOutput = useCallback(\r\n    (value: string) => {\r\n      onUserInput(Field.OUTPUT, value)\r\n    },\r\n    [onUserInput],\r\n  )\r\n\r\n  // modal and loading\r\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\r\n    tradeToConfirm: Trade | undefined\r\n    attemptingTxn: boolean\r\n    swapErrorMessage: string | undefined\r\n    txHash: string | undefined\r\n  }>({\r\n    tradeToConfirm: undefined,\r\n    attemptingTxn: false,\r\n    swapErrorMessage: undefined,\r\n    txHash: undefined,\r\n  })\r\n\r\n  const formattedAmounts = {\r\n    [independentField]: typedValue,\r\n    [dependentField]: showWrap\r\n      ? parsedAmounts[independentField]?.toExact() ?? ''\r\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\r\n  }\r\n\r\n  const route = trade?.route\r\n  const userHasSpecifiedInputOutput = Boolean(\r\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\r\n  )\r\n  const noRoute = !route\r\n\r\n  // check whether the user has approved the router on the input token\r\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\r\n\r\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\r\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\r\n\r\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\r\n  useEffect(() => {\r\n    if (approval === ApprovalState.PENDING) {\r\n      setApprovalSubmitted(true)\r\n    }\r\n  }, [approval, approvalSubmitted])\r\n\r\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\r\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\r\n\r\n  // the callback to execute the swap\r\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\r\n\r\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\r\n\r\n  const [singleHopOnly] = useUserSingleHopOnly()\r\n\r\n  const handleSwap = useCallback(() => {\r\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee, t)) {\r\n      return\r\n    }\r\n    if (!swapCallback) {\r\n      return\r\n    }\r\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\r\n    swapCallback()\r\n      .then((hash) => {\r\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\r\n      })\r\n      .catch((error) => {\r\n        setSwapState({\r\n          attemptingTxn: false,\r\n          tradeToConfirm,\r\n          swapErrorMessage: error.message,\r\n          txHash: undefined,\r\n        })\r\n      })\r\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm, t])\r\n\r\n  // errors\r\n  const [showInverted, setShowInverted] = useState<boolean>(false)\r\n\r\n  // warnings on slippage\r\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\r\n\r\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\r\n  // never show if price impact is above threshold in non expert mode\r\n  const showApproveFlow =\r\n    !swapInputError &&\r\n    (approval === ApprovalState.NOT_APPROVED ||\r\n      approval === ApprovalState.PENDING ||\r\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\r\n    !(priceImpactSeverity > 3 && !isExpertMode)\r\n\r\n  const handleConfirmDismiss = useCallback(() => {\r\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\r\n    // if there was a tx hash, we want to clear the input\r\n    if (txHash) {\r\n      onUserInput(Field.INPUT, '')\r\n    }\r\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\r\n\r\n  const handleAcceptChanges = useCallback(() => {\r\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\r\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\r\n\r\n  // swap warning state\r\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\r\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\r\n\r\n  const shouldShowSwapWarning = (swapCurrency) => {\r\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\r\n      const warningTokenData = warningTokenConfig[1]\r\n      return swapCurrency.address === warningTokenData.address\r\n    })\r\n    return Boolean(isWarningToken)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (swapWarningCurrency) {\r\n      onPresentSwapWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [swapWarningCurrency])\r\n\r\n  const handleInputSelect = useCallback(\r\n    (inputCurrency) => {\r\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n      onCurrencySelection(Field.INPUT, inputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(inputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const handleMaxInput = useCallback(() => {\r\n    if (maxAmountInput) {\r\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\r\n    }\r\n  }, [maxAmountInput, onUserInput])\r\n\r\n  const handleOutputSelect = useCallback(\r\n    (outputCurrency) => {\r\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\r\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\r\n      if (showSwapWarning) {\r\n        setSwapWarningCurrency(outputCurrency)\r\n      } else {\r\n        setSwapWarningCurrency(null)\r\n      }\r\n    },\r\n\r\n    [onCurrencySelection],\r\n  )\r\n\r\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\r\n\r\n  const [onPresentImportTokenWarningModal] = useModal(\r\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap/')} />,\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (importTokensNotInDefault.length > 0) {\r\n      onPresentImportTokenWarningModal()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [importTokensNotInDefault.length])\r\n\r\n  const [onPresentConfirmModal] = useModal(\r\n    <ConfirmSwapModal\r\n      trade={trade}\r\n      originalTrade={tradeToConfirm}\r\n      onAcceptChanges={handleAcceptChanges}\r\n      attemptingTxn={attemptingTxn}\r\n      txHash={txHash}\r\n      recipient={recipient}\r\n      allowedSlippage={allowedSlippage}\r\n      onConfirm={handleSwap}\r\n      swapErrorMessage={swapErrorMessage}\r\n      customOnDismiss={handleConfirmDismiss}\r\n    />,\r\n    true,\r\n    true,\r\n    'confirmSwapModal',\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <AppBody>\r\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\r\n        <Wrapper id=\"swap-page\">\r\n          <AutoColumn gap=\"md\">\r\n            <CurrencyInputPanel\r\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\r\n              value={formattedAmounts[Field.INPUT]}\r\n              showMaxButton={!atMaxAmountInput}\r\n              currency={currencies[Field.INPUT]}\r\n              onUserInput={handleTypeInput}\r\n              onMax={handleMaxInput}\r\n              onCurrencySelect={handleInputSelect}\r\n              otherCurrency={currencies[Field.OUTPUT]}\r\n              id=\"swap-currency-input\"\r\n            />\r\n            <AutoColumn justify=\"space-between\">\r\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\r\n                <ArrowWrapper clickable>\r\n                  <ArrowDownIcon\r\n                    width=\"16px\"\r\n                    onClick={() => {\r\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\r\n                      onSwitchTokens()\r\n                    }}\r\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\r\n                  />\r\n                </ArrowWrapper>\r\n                {recipient === null && !showWrap && isExpertMode ? (\r\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\r\n                    {t('+ Add a send (optional)')}\r\n                  </Button>\r\n                ) : null}\r\n              </AutoRow>\r\n            </AutoColumn>\r\n            <CurrencyInputPanel\r\n              value={formattedAmounts[Field.OUTPUT]}\r\n              onUserInput={handleTypeOutput}\r\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\r\n              showMaxButton={false}\r\n              currency={currencies[Field.OUTPUT]}\r\n              onCurrencySelect={handleOutputSelect}\r\n              otherCurrency={currencies[Field.INPUT]}\r\n              id=\"swap-currency-output\"\r\n            />\r\n\r\n            {isExpertMode && recipient !== null && !showWrap ? (\r\n              <>\r\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\r\n                  <ArrowWrapper clickable={false}>\r\n                    <ArrowDownIcon width=\"16px\" />\r\n                  </ArrowWrapper>\r\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\r\n                    {t('- Remove send')}\r\n                  </Button>\r\n                </AutoRow>\r\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\r\n              </>\r\n            ) : null}\r\n\r\n            {showWrap ? null : (\r\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\r\n                {Boolean(trade) && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Price')}</Label>\r\n                    <TradePrice\r\n                      price={trade?.executionPrice}\r\n                      showInverted={showInverted}\r\n                      setShowInverted={setShowInverted}\r\n                    />\r\n                  </RowBetween>\r\n                )}\r\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\r\n                  <RowBetween align=\"center\">\r\n                    <Label>{t('Slippage Tolerance')}</Label>\r\n                    <Text bold color=\"primary\">\r\n                      {allowedSlippage / 100}%\r\n                    </Text>\r\n                  </RowBetween>\r\n                )}\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n          <Box mt=\"1rem\">\r\n            {swapIsUnsupported ? (\r\n              <Button width=\"100%\" disabled mb=\"4px\">\r\n                {t('Unsupported Asset')}\r\n              </Button>\r\n            ) : !account ? (\r\n              <ConnectWalletButton width=\"100%\" />\r\n            ) : showWrap ? (\r\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\r\n                {wrapInputError ??\r\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\r\n              </Button>\r\n            ) : noRoute && userHasSpecifiedInputOutput ? (\r\n              <GreyCard style={{ textAlign: 'center' }}>\r\n                <Text color=\"textSubtle\" mb=\"4px\">\r\n                  {t('Insufficient liquidity for this trade.')}\r\n                </Text>\r\n                {singleHopOnly && (\r\n                  <Text color=\"textSubtle\" mb=\"4px\">\r\n                    {t('Try enabling multi-hop trades.')}\r\n                  </Text>\r\n                )}\r\n              </GreyCard>\r\n            ) : showApproveFlow ? (\r\n              <RowBetween>\r\n                <Button\r\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\r\n                  onClick={approveCallback}\r\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\r\n                  width=\"48%\"\r\n                >\r\n                  {approval === ApprovalState.PENDING ? (\r\n                    <AutoRow gap=\"6px\" justify=\"center\">\r\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\r\n                    </AutoRow>\r\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\r\n                    t('Enabled')\r\n                  ) : (\r\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\r\n                  )}\r\n                </Button>\r\n                <Button\r\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\r\n                  onClick={() => {\r\n                    if (isExpertMode) {\r\n                      handleSwap()\r\n                    } else {\r\n                      setSwapState({\r\n                        tradeToConfirm: trade,\r\n                        attemptingTxn: false,\r\n                        swapErrorMessage: undefined,\r\n                        txHash: undefined,\r\n                      })\r\n                      onPresentConfirmModal()\r\n                    }\r\n                  }}\r\n                  width=\"48%\"\r\n                  id=\"swap-button\"\r\n                  disabled={\r\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\r\n                  }\r\n                >\r\n                  {priceImpactSeverity > 3 && !isExpertMode\r\n                    ? t('Price Impact High')\r\n                    : priceImpactSeverity > 2\r\n                    ? t('Swap Anyway')\r\n                    : t('Swap')}\r\n                </Button>\r\n              </RowBetween>\r\n            ) : (\r\n              <Button\r\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\r\n                onClick={() => {\r\n                  if (isExpertMode) {\r\n                    handleSwap()\r\n                  } else {\r\n                    setSwapState({\r\n                      tradeToConfirm: trade,\r\n                      attemptingTxn: false,\r\n                      swapErrorMessage: undefined,\r\n                      txHash: undefined,\r\n                    })\r\n                    onPresentConfirmModal()\r\n                  }\r\n                }}\r\n                id=\"swap-button\"\r\n                width=\"100%\"\r\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\r\n              >\r\n                {swapInputError ||\r\n                  (priceImpactSeverity > 3 && !isExpertMode\r\n                    ? `Price Impact Too High`\r\n                    : priceImpactSeverity > 2\r\n                    ? t('Swap Anyway')\r\n                    : t('Swap'))}\r\n              </Button>\r\n            )}\r\n            {showApproveFlow && (\r\n              <Column style={{ marginTop: '1rem' }}>\r\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\r\n              </Column>\r\n            )}\r\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\r\n          </Box>\r\n        </Wrapper>\r\n      </AppBody>\r\n      {!swapIsUnsupported ? (\r\n        <AdvancedSwapDetailsDropdown trade={trade} />\r\n      ) : (\r\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\r\n      )}\r\n    </Page>\r\n  )\r\n}\r\n","import { Percent } from '@pancakeswap/sdk'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\r\n\r\n/**\r\n * Given the price impact, get user confirmation.\r\n *\r\n * @param priceImpactWithoutFee price impact of the trade without the fee.\r\n * @param t Translation\r\n */\r\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent, t: ContextApi['t']): boolean {\r\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\r\n    const confirmWord = 'confirm'\r\n    return (\r\n      // eslint-disable-next-line no-alert\r\n      window.prompt(\r\n        t(\r\n          'This swap has a price impact of at least %amount%%. Please type the word \"%word%\" to continue with this swap.',\r\n          {\r\n            amount: PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(0),\r\n            word: confirmWord,\r\n          },\r\n        ),\r\n      ) === confirmWord\r\n    )\r\n  }\r\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\r\n    // eslint-disable-next-line no-alert\r\n    return window.confirm(\r\n      t(\r\n        'This swap has a price impact of at least %amount%%. Please confirm that you would like to continue with this swap.',\r\n        {\r\n          amount: ALLOWED_PRICE_IMPACT_HIGH.toFixed(0),\r\n        },\r\n      ),\r\n    )\r\n  }\r\n  return true\r\n}\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\nimport AddLiquidity from './index'\r\n\r\nexport function RedirectToAddLiquidity() {\r\n  return <Redirect to=\"/add/\" />\r\n}\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\r\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA },\r\n    },\r\n  } = props\r\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\r\n  if (match?.length) {\r\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\r\n  }\r\n\r\n  return <AddLiquidity {...props} />\r\n}\r\n\r\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\r\n  const {\r\n    match: {\r\n      params: { currencyIdA, currencyIdB },\r\n    },\r\n  } = props\r\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\r\n    return <Redirect to={`/add/${currencyIdA}`} />\r\n  }\r\n  return <AddLiquidity {...props} />\r\n}\r\n","import React from 'react'\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\r\n\r\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\r\n\r\nfunction RedirectOldRemoveLiquidityPathStructure({\r\n  match: {\r\n    params: { tokens },\r\n  },\r\n}: RouteComponentProps<{ tokens: string }>) {\r\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\r\n    return <Redirect to=\"/pool\" />\r\n  }\r\n  const [currency0, currency1] = tokens.split('-')\r\n\r\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\r\n}\r\nexport default RedirectOldRemoveLiquidityPathStructure\r\n","import React from 'react'\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\r\n\r\n// Redirects to swap but only replace the pathname\r\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\r\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\r\n}\r\n\r\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\r\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\r\n  const {\r\n    location,\r\n    location: { search },\r\n    match: {\r\n      params: { outputCurrency },\r\n    },\r\n  } = props\r\n\r\n  return (\r\n    <Redirect\r\n      to={{\r\n        ...location,\r\n        pathname: '/swap',\r\n        search:\r\n          search && search.length > 1\r\n            ? `${search}&outputCurrency=${outputCurrency}`\r\n            : `?outputCurrency=${outputCurrency}`,\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { usePollBlockNumber } from 'state/block/hooks'\r\nimport { usePollCoreFarmData } from 'state/farms/hooks'\r\nimport { useFetchProfile } from 'state/profile/hooks'\r\nimport { DatePickerPortal } from 'components/DatePicker'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport { ToastListener } from './contexts/ToastsContext'\r\nimport PageLoader from './components/Loader/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport history from './routerHistory'\r\n// Views included in the main bundle\r\nimport Pools from './views/Pools'\r\nimport Swap from './views/Swap'\r\nimport {\r\n  RedirectDuplicateTokenIds,\r\n  RedirectOldAddLiquidityPathStructure,\r\n  RedirectToAddLiquidity,\r\n} from './views/AddLiquidity/redirects'\r\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\r\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\r\nconst Predictions = lazy(() => import('./views/Predictions'))\r\nconst PredictionsLeaderboard = lazy(() => import('./views/Predictions/Leaderboard'))\r\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\r\nconst Liquidity = lazy(() => import('./views/Pool'))\r\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\r\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  usePollBlockNumber()\r\n  useEagerConnect()\r\n  useFetchProfile()\r\n  usePollCoreFarmData()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n            <Route path=\"/competition\">\r\n              <TradingCompetition />\r\n            </Route>\r\n            <Route exact path=\"/prediction\">\r\n              <Predictions />\r\n            </Route>\r\n            <Route path=\"/prediction/leaderboard\">\r\n              <PredictionsLeaderboard />\r\n            </Route>\r\n\r\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\r\n            <Route exact strict path=\"/swap\" component={Swap} />\r\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\r\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\r\n            <Route exact strict path=\"/find\" component={PoolFinder} />\r\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\r\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\r\n            <Route exact path=\"/add\" component={AddLiquidity} />\r\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n            <Route exact path=\"/create\" component={AddLiquidity} />\r\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\r\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\r\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\r\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\r\n\r\n            {/* Redirect */}\r\n            <Route path=\"/pool\">\r\n              <Redirect to=\"/liquidity\" />\r\n            </Route>\r\n            <Route path=\"/staking\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/syrup\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n      <DatePickerPortal />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { useThemeManager } from 'state/user/hooks'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst ThemeProviderWrapper = (props) => {\r\n  const [isDark] = useThemeManager()\r\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\r\n}\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeProviderWrapper>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeProviderWrapper>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React, { useMemo, ReactNode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\r\nimport { BLOCKED_ADDRESSES } from './config/constants'\r\nimport ListsUpdater from './state/lists/updater'\r\nimport MulticallUpdater from './state/multicall/updater'\r\nimport TransactionUpdater from './state/transactions/updater'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <ListsUpdater />\r\n      <TransactionUpdater />\r\n      <MulticallUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Blocklist({ children }: { children: ReactNode }) {\r\n  const { account } = useActiveWeb3React()\r\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\r\n  if (blocked) {\r\n    return <div>Blocked address</div>\r\n  }\r\n  return <>{children}</>\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Blocklist>\r\n      <Providers>\r\n        <Updaters />\r\n        <App />\r\n      </Providers>\r\n    </Blocklist>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}